cscope 15 $HOME/Workspace/Tax_Printer/GitHub/Tax_Print/src               0000744014
	@command/cmd_comm_manage.c

9 
	~<°dlib.h
>

10 
	~<uni°d.h
>

11 
	~<°dio.h
>

12 
	~<°rög.h
>

13 
	~<f˙é.h
>

14 
	~<˘y≥.h
>

16 
	~"c⁄fig.h
"

17 
	~"comm⁄.h
"

18 
	~"îr‹.h
"

19 
	~"èx_fûe_›.h
"

20 
	~"ui_≠i.h
"

21 
	~"èx_sy°em.h
"

22 
	~"∂u.h
"

23 
	~"öput.h
"

24 
	~"comm⁄.h
"

25 
	~"c⁄fig.h
"

28 
	$show_∂u_ôem
(
ty≥
, * 
tôÀ
, 
∂u_ôem
 *Ölu_item)

30 
sim∂e_‰ame
 
‰ame
;

31 
	`mem£t
(&
‰ame
, 0, (frame));

33 
‰ame
.
ôem_num
 = 5;

35 
‰ame
.
ôems
[0].
pos
.
row
 = 1;

36 
‰ame
.
ôems
[0].
pos
.
cﬁ
 = 5;

37 
	`¢¥ötf
(
‰ame
.
ôems
[0].
tôÀ
, 
MAX_TITLE_LEN
, "%s",Åitle);

39 
‰ame
.
ôems
[1].
pos
.
row
 = 2;

40 
‰ame
.
ôems
[1].
pos
.
cﬁ
 = 1;

41 i‡(
ty≥
 =
BY_PLU_NUM
)

42 
	`¢¥ötf
(
‰ame
.
ôems
[1].
tôÀ
, 
MAX_TITLE_LEN
, "%s%d", "ÁºñÂè∑Ôºö ", 
∂u_ôem
->
∂u_num
);

44 
	`¢¥ötf
(
‰ame
.
ôems
[1].
tôÀ
, 
MAX_TITLE_LEN
, "%s%s", "Êù°ÂΩ¢Á†ÅÔºö ", 
∂u_ôem
->
b¨code
);

46 
‰ame
.
ôems
[2].
pos
.
row
 = 3;

47 
‰ame
.
ôems
[2].
pos
.
cﬁ
 = 1;

48 
	`¢¥ötf
(
‰ame
.
ôems
[2].
tôÀ
, 
MAX_TITLE_LEN
, "%s%s", "ÂêçÁß∞Ôºö ", 
∂u_ôem
->
«me
);

50 
‰ame
.
ôems
[3].
pos
.
row
 = 4;

51 
‰ame
.
ôems
[3].
pos
.
cﬁ
 = 1;

52 
	`¢¥ötf
(
‰ame
.
ôems
[3].
tôÀ
, 
MAX_TITLE_LEN
, "%s%.2f", "Âçï‰ª∑Ôºö ", ()
∂u_ôem
->
¥i˚
);

54 
‰ame
.
ôems
[4].
pos
.
row
 = 4;

55 
‰ame
.
ôems
[4].
pos
.
cﬁ
 = 7;

56 
	`¢¥ötf
(
‰ame
.
ôems
[4].
tôÀ
, 
MAX_TITLE_LEN
, "%s%d", "Â∫ìÂ≠ò: ", 
∂u_ôem
->
°ock
);

58 
	`show_sim∂e_‰ame
(&
‰ame
);

60  
SUCCESS
;

61 
	}
}

68 
	$gë_fis_ty≥
()

70 
i
, 
key_code
, 
∑ge
, 
pos
;

71 
fis_ty≥_num
, 
∑ge_ôem
 = 0;

73 
sim∂e_‰ame
 
‰ame
;

74 
èx_sys_≠p_öfo
 * 
≠p_öfo
 = 
	`gë_sys_≠p_öfo
();

76 
	`mem£t
(&
‰ame
, 0, (frame));

78 
‰ame
.
ôem_num
 = 4;

79 
‰ame
.
ôems
[0].
pos
.
row
 = 1;

80 
‰ame
.
ôems
[0].
pos
.
cﬁ
 = 3;

81 
‰ame
.
ôems
[1].
pos
.
row
 = 2;

82 
‰ame
.
ôems
[1].
pos
.
cﬁ
 = 1;

83 
‰ame
.
ôems
[2].
pos
.
row
 = 3;

84 
‰ame
.
ôems
[2].
pos
.
cﬁ
 = 1;

85 
‰ame
.
ôems
[3].
pos
.
row
 = 4;

86 
‰ame
.
ôems
[3].
pos
.
cﬁ
 = 1;

88 
	`¢¥ötf
(
‰ame
.
ôems
[0].
tôÀ
, 
MAX_TITLE_LEN
, "%s", "ËØ∑ÈÄâÊã©Á®éÁßçÁ®éÁéá");

90 
fis_ty≥_num
 = 
≠p_öfo
->fis_type_num;

91 i‡(
fis_ty≥_num
 == 0) {

92 
	`di•œy_w¨n
("Âç°‰∏≠Êú™Ê∑ªÂä†Á®éÁõÆÁ®éÁßç‰ø°ÊÅØÔºÅ");

93  
FAIL
;

96 
i
 = 1;

97 
pos
 = 1;

98 
∑ge
 = 0;

99 
	`˛ór_ˇche
();

101 i‡(
fis_ty≥_num
 - 
i
 >= 0 ) {

102 
	`¢¥ötf
(
‰ame
.
ôems
[1].
tôÀ
, 
MAX_TITLE_LEN
, "%d-%s(%d)", 
i
,

103 
≠p_öfo
->
fis_ty≥
[
i
 - 1].
ôem_˙_«me
,

104 
≠p_öfo
->
fis_ty≥
[
i
 - 1].
ödex
);

105 
∑ge_ôem
 = 1;

107 
	`mem£t
(
‰ame
.
ôems
[1].
tôÀ
, 0, 
MAX_TITLE_LEN
);

110 i‡(
fis_ty≥_num
 - 
i
 >= 1) {

111 
	`¢¥ötf
(
‰ame
.
ôems
[2].
tôÀ
, 
MAX_TITLE_LEN
, "%d-%s(%d)", 
i
,

112 
≠p_öfo
->
fis_ty≥
[
i
].
ôem_˙_«me
,

113 
≠p_öfo
->
fis_ty≥
[
i
].
ödex
);

114 
∑ge_ôem
 = 2;

116 
	`mem£t
(
‰ame
.
ôems
[2].
tôÀ
, 0, 
MAX_TITLE_LEN
);

119 i‡(
fis_ty≥_num
 - 
i
 >= 2) {

120 
	`¢¥ötf
(
‰ame
.
ôems
[3].
tôÀ
, 
MAX_TITLE_LEN
, "%d-%s(%d)", 
i
,

121 
≠p_öfo
->
fis_ty≥
[
i
 + 1].
ôem_˙_«me
,

122 
≠p_öfo
->
fis_ty≥
[
i
 + 1].
ödex
);

123 
∑ge_ôem
 = 3;

125 
	`mem£t
(
‰ame
.
ôems
[3].
tôÀ
, 0, 
MAX_TITLE_LEN
);

128 
	`show_sim∂e_‰ame
(&
‰ame
);

129 
	`highlight_⁄
(1 + 
pos
);

131 
key_code
 = 
	`gë_keycode
();

132 
key_code
) {

133 
BACK
:

134  -
EUI_BACK
;

137 
ESC
:

138  -
EUI_ESC
;

141 
ENTER
:

142  
≠p_öfo
->
fis_ty≥
[
i
 + 
pos
 - 2].
ödex
;

145 
UP
:

146 i‡(
pos
 > 1) {

147 
	`highlight_off
(1 + 
pos
--);

148 
	`highlight_⁄
(1 + 
pos
);

150 i‡(
∑ge
 > 0) {

151 
∑ge
 --;

152 
i
 -= 3;

153 
	`highlight_off
(1 + 
pos
);

154 
pos
 = 3;

155 
	`highlight_⁄
(1 + 
pos
);

161 
DOWN
:

162 i‡(
pos
 < 2) {

163 
	`highlight_off
(1 + 
pos
++);

164 
	`highlight_⁄
(1 + 
pos
);

166 i‡(
fis_ty≥_num
 - 
i
 >= 3) {

167 
∑ge
 ++;

168 
i
 += 3;

169 
	`highlight_off
(1 + 
pos
);

170 
pos
 = 1;

171 
	`highlight_⁄
(1 + 
pos
);

177 i‡(
	`isdigô
(
key_code
)) {

178 i‡(
key_code
 >'1' && (key_codê- '0'Ë< 
∑ge_ôem
) {

179  
≠p_öfo
->
fis_ty≥
[
i
 + (
key_code
 - '0'Ë- 2].
ödex
;

185 
	}
}

187 * 
	$gë_fis_ty≥_«me
(
ödex
)

189 
øã_nb
;

190 
èx_sys_≠p_öfo
 * 
gp_≠p_öfo
 = 
	`gë_sys_≠p_öfo
();

192 
øã_nb
 = 0;Ñ©e_nb < 
MAX_USER_TAXRATE
;Ñate_nb ++) {

193 i‡(
ödex
 =
gp_≠p_öfo
->
èx_ödex
[
øã_nb
])

197 i‡(
øã_nb
 =
MAX_USER_TAXRATE
)

198  
NULL
;

200  
gp_≠p_öfo
->
fis_ty≥
[
øã_nb
].
ôem_˙_«me
;

201 
	}
}

207 
	$do_võw_d±
(*
tôÀ
)

209 
ªt
;

210 
key_code
;

211 
i
, 
cou¡
 = 0, 
pos
 = 0;

212 
sim∂e_‰ame
 
‰ame
;

213 
d±_ôem
 
d±_ôems
[20];

214 
∂u_›î©e
 *
∂u_›s
 = 
	`gë_∂u_›s
();

216 
	`mem£t
(&
‰ame
, 0, (frame));

217 
	`mem£t
(
d±_ôems
, 0, (
d±_ôem
) * 20);

219 
i
 = 1; i <= 20; i++) {

220 
ªt
 = 
∂u_›s
->
	`is_‰ì_d±
(
i
);

221 i‡(
ªt
 =
POSITIVE
)

224 
ªt
 = 
∂u_›s
->
	`ªad_d±
(
i
, &
d±_ôems
[
cou¡
++]);

225 i‡(
ªt
 !
SUCCESS
)

226  
FAIL
;

229 i‡(
cou¡
 == 0) {

230 
	`di•œy_w¨n
("Êó†ÈÉ®Á±ª‰ø°ÊÅØÔºåËØ∑ÂÖàÊ∑ªÂä†ÈÉ®Á±ªÔºÅ");

231  -
EUI_ESC
;

234 
‰ame
.
ôem_num
 = 4;

235 
‰ame
.
ôems
[0].
pos
.
row
 = 1;

236 
‰ame
.
ôems
[0].
pos
.
cﬁ
 = 6 - 
	`°æí
(
tôÀ
)/4;

237 
‰ame
.
ôems
[1].
pos
.
row
 = 2;

238 
‰ame
.
ôems
[1].
pos
.
cﬁ
 = 1;

239 
‰ame
.
ôems
[2].
pos
.
row
 = 3;

240 
‰ame
.
ôems
[2].
pos
.
cﬁ
 = 1;

241 
‰ame
.
ôems
[3].
pos
.
row
 = 4;

242 
‰ame
.
ôems
[3].
pos
.
cﬁ
 = 1;

244 
	`°r˝y
(
‰ame
.
ôems
[0].
tôÀ
,Åitle);

246 
i
 = 0;

247 
pos
 = 1;

248 
	`˛ór_ˇche
();

250 i‡(
cou¡
 - 
i
 >= 3) {

251 
	`¢¥ötf
(
‰ame
.
ôems
[1].
tôÀ
, 
MAX_TITLE_LEN
, "%s%d %s", "ÈÉ®Á±ª", 
i
 + 1, 
d±_ôems
[i].
«me
);

252 
	`¢¥ötf
(
‰ame
.
ôems
[2].
tôÀ
, 
MAX_TITLE_LEN
, "%s%d %s", "ÈÉ®Á±ª", 
i
 + 2, 
d±_ôems
[ò+ 1].
«me
);

253 
	`¢¥ötf
(
‰ame
.
ôems
[3].
tôÀ
, 
MAX_TITLE_LEN
, "%s%d %s", "ÈÉ®Á±ª", 
i
 + 3, 
d±_ôems
[ò+ 2].
«me
);

254 } i‡(
cou¡
 - 
i
 == 2) {

255 
	`¢¥ötf
(
‰ame
.
ôems
[1].
tôÀ
, 
MAX_TITLE_LEN
, "%s%d %s", "ÈÉ®Á±ª", 
i
 + 1, 
d±_ôems
[i].
«me
);

256 
	`¢¥ötf
(
‰ame
.
ôems
[2].
tôÀ
, 
MAX_TITLE_LEN
, "%s%d %s", "ÈÉ®Á±ª", 
i
 + 2, 
d±_ôems
[ò+ 1].
«me
);

257 
	`mem£t
(
‰ame
.
ôems
[3].
tôÀ
, 0, 
MAX_TITLE_LEN
);

258 } i‡(
cou¡
 - 
i
 == 1) {

259 
	`¢¥ötf
(
‰ame
.
ôems
[1].
tôÀ
, 
MAX_TITLE_LEN
, "%s%d %s", "ÈÉ®Á±ª", 
i
 + 1, 
d±_ôems
[i].
«me
);

260 
	`mem£t
(
‰ame
.
ôems
[2].
tôÀ
, 0, 
MAX_TITLE_LEN
);

261 
	`mem£t
(
‰ame
.
ôems
[3].
tôÀ
, 0, 
MAX_TITLE_LEN
);

264 
	`show_sim∂e_‰ame
(&
‰ame
);

265 
	`highlight_⁄
(1 + 
pos
);

267 
key_code
 = 
	`gë_keycode
();

268 
key_code
) {

269 
UP
:

270 i‡(
pos
 > 1) {

271 
	`highlight_off
(1 + 
pos
--);

272 
	`highlight_⁄
(1 + 
pos
);

274 i‡(
i
 > 0) {

275 
i
 -= 3;

276 
	`highlight_off
(1 + 
pos
);

277 
pos
 = 3;

278 
	`highlight_⁄
(1 + 
pos
);

283 
DOWN
:

284 i‡(
cou¡
 > 
i
 + 
pos
) {

285 i‡(
pos
 < 3) {

286 
	`highlight_off
(1 + 
pos
++);

287 
	`highlight_⁄
(1 + 
pos
);

289 i‡(
cou¡
 - 
i
 > 3) {

290 
i
 += 3;

291 
	`highlight_off
(1 + 
pos
);

292 
pos
 = 1;

293 
	`highlight_⁄
(1 + 
pos
);

299 
ENTER
:

300 
	`˛ór_s¸ìn
();

301  
d±_ôems
[
i
 + 
pos
 - 1].
d±_num
;

304 
BACK
:

305 
	`˛ór_s¸ìn
();

306  -
EUI_BACK
;

309 
ESC
:

310  -
EUI_ESC
;

317 
	}
}

324 
	$do_võw_∂u_by_num
(
∂u_ôem
 *
ôem
)

326 
ªt
;

327 
∂u_num
;

328 
∂u_ôem
Ölu_item;

329 
∂u_›î©e
 * 
∂u_›s
 = 
	`gë_∂u_›s
();

331 
öput_num
:

332 
	`˛ór_s¸ìn
();

333 
	`show_°r
(1, 1, "ËØ∑ËæìÂÖ•ÂïÜÂìÅÁºñÂè∑Ôºö");

334 
ªt
 = 
	`gë_öãr_num
(2, 1, &
∂u_num
);

335 i‡(
ªt
 =
EUI_ESC
) {

336 
ªt
 = 
	`que°i⁄_u£r
("Á°ÆËÆ§ÂèñÊ∂àÊú¨Ê¨°Êìç‰ΩúÔºü");

337 i‡(
ªt
 =
POSITIVE
)

338  
FAIL
;

340 
öput_num
;

343 
ªt
 = 
∂u_›s
->
	`ªad_∂u
(
∂u_num
, &
∂u_ôem
);

344 i‡(
ªt
 !
SUCCESS
) {

345 i‡(
ªt
 !-
EFILE_OPEN_FAIL
) {

346 
	`di•œy_w¨n
("Êó†ËØ•ÂïÜÂìÅÁºñÂè∑ËÆ∞ÂΩïÔºÅ");

347 
öput_num
;

350 
	`di•œy_w¨n
("Êü•ËØ¢ÂïÜÂìÅÂ§±Ë¥•ÔºÅ");

351 
	`di•œy_îr_msg
(
ªt
);

352  
FAIL
;

355 *
ôem
 = 
∂u_ôem
;

356  
SUCCESS
;

357 
	}
}

359 
	$do_võw_∂u_by_b¨code
(
∂u_ôem
 *
ôem
)

361 
ªt
;

362 
b¨code
[14] = {0};

363 
∂u_ôem
Ölu_item;

364 
∂u_›î©e
 * 
∂u_›s
 = 
	`gë_∂u_›s
();

366 #i‚de‡
CONFIG_HPP


367 
∂u_ôem
 =Ölu_item;

368 
∂u_›s
 =Ölu_ops;

369 
b¨code
[0] = barcode[1];

371 
	`di•œy_w¨n
("Â∞öÊú™ÈÖçÁΩÆÊù°Á†ÅÊû™ÔºåÊó†Ê≥ïËøõË°åÊìç‰Ωú");

372 
ªt
 = 
FAIL
;

374 
gë_bc
:

375 
	`˛ór_s¸ìn
();

376 
	`show_°r
(1, 1, "ËØ∑Êâ´ÊèèÊù°ÂΩ¢Á†ÅÔºö");

378 
ªt
 = 
	`gë_b¨code
(2, 1, 
b¨code
);

379 i‡(
ªt
 !
SUCCESS
)

380  
FAIL
;

382 
ªt
 = 
∂u_›s
->
	`ödex_by_bc
(
b¨code
, &
∂u_ôem
);

383 i‡(
ªt
 !
SUCCESS
) {

384 i‡(
ªt
 =-
EPLU_NO_BARCODE
) {

385 
	`di•œy_w¨n
("Êó†ËØ•Êù°ÂΩ¢Á†ÅËÆ∞ÂΩïÔºÅ");

386 
gë_bc
;

389 
	`di•œy_w¨n
("Êü•ËØ¢ÂïÜÂìÅÂ§±Ë¥•ÔºåËØ∑ËÅîÁ≥ªÂéÇÂïÜÔºÅ");

390 
	`di•œy_îr_msg
(
ªt
);

391  
FAIL
;

394 *
ôem
 = 
∂u_ôem
;

395 
ªt
 = 
SUCCESS
;

398  
ªt
;

399 
	}
}

401 
	$do_võw_∂u_by_«me
(
∂u_ôem
 * 
ôem
)

403 
ªt
;

404 
«me
[24] = {0};

405 
∂u_ôem
Ölu_item;

406 
∂u_›î©e
 * 
∂u_›s
 = 
	`gë_∂u_›s
();

408 
öput_«me
:

409 
	`˛ór_s¸ìn
();

410 
	`show_°r
(1, 1, "ËØ∑ËæìÂÖ•ÂïÜÂìÅÂêçÁß∞");

411 
ªt
 = 
	`gë_chn_°r
(2, 1, 
«me
);

412 i‡(
ªt
 =-
EUI_ESC
) {

413 
ªt
 = 
	`que°i⁄_u£r
("Á°ÆËÆ§ÂèñÊ∂àÊú¨Ê¨°Êìç‰ΩúÔºü");

414 i‡(
ªt
 =
POSITIVE
)

415  
FAIL
;

417 
öput_«me
;

420 
ªt
 =
∂u_›s
->
	`ödex_by_«me
(
«me
, &
∂u_ôem
);

421 i‡(
ªt
 !
SUCCESS
) {

422 i‡(
ªt
 =-
EPLU_NO_NAME
) {

423 
	`di•œy_w¨n
("Êó†ËØ•ÂïÜÂìÅÂêçËÆ∞ÂΩïÔºÅ");

424 
öput_«me
;

427 
	`di•œy_w¨n
("Êü•ËØ¢ÂïÜÂìÅÂ§±Ë¥•ÔºåËØ∑ËÅîÁ≥ªÂéÇÂïÜÔºÅ");

428 
	`di•œy_îr_msg
(
ªt
);

429  
FAIL
;

432 *
ôem
 = 
∂u_ôem
;

433  
SUCCESS
;

434 
	}
}

436 
	$do_dñëe_∂u
()

439 
	}
}

441 
	$do_modify_∂u
()

444 
	}
}

450 
	$cmd_add_d±
()

452 
ªt
;

453 
d±_num
;

454 
d±_«me
[
DPT_NAME_LEN
 + 1] = {0};

456 
d±_ôem
 dpt_item;

457 
sim∂e_‰ame
 
‰ame
;

458 
èx_sy°em
 *Åax_sy°em = 
	`gë_èx_sy°em
();

459 
∂u_›î©e
 * 
∂u_›s
 = 
	`gë_∂u_›s
();

461 
ªt
 = 
èx_sy°em
->
	`is_fisˇl_öô
();

462 i‡(
ªt
 !
POSITIVE
) {

463 
	`di•œy_w¨n
("Á®éÊéßÂäüËÉΩÊú™ÂàùÂßãÂåñÔºåÊó†Ê≥ïËøõË°åÊìç‰ΩúÔºÅ");

464  
FAIL
;

467 
d±_num
 = 
∂u_›s
->
	`gë_‰ì_d±
();

468 
	`mem£t
(&
d±_ôem
, 0, (dpt_item));

469 
	`mem£t
(&
‰ame
, 0, (frame));

471 
‰ame
.
ôem_num
 = 3;

472 
‰ame
.
ôems
[0].
pos
.
row
 = 1;

473 
‰ame
.
ôems
[0].
pos
.
cﬁ
 = 5;

474 
	`¢¥ötf
(
‰ame
.
ôems
[0].
tôÀ
, 
MAX_TITLE_LEN
, "%s", "ÈÉ®Á±ªÊ∑ªÂä†");

476 
‰ame
.
ôems
[1].
pos
.
row
 = 2;

477 
‰ame
.
ôems
[1].
pos
.
cﬁ
 = 1;

478 
	`¢¥ötf
(
‰ame
.
ôems
[1].
tôÀ
, 
MAX_TITLE_LEN
, "%s%d", "ÁºñÂè∑Ôºö", 
d±_num
);

480 
‰ame
.
ôems
[2].
pos
.
row
 = 3;

481 
‰ame
.
ôems
[2].
pos
.
cﬁ
 = 1;

482 
	`¢¥ötf
(
‰ame
.
ôems
[2].
tôÀ
, 
MAX_TITLE_LEN
, "%s", "ÂêçÁß∞Ôºö");

484 
add_d±
:

485 
	`show_sim∂e_‰ame
(&
‰ame
);

487 
ªt
 = 
	`gë_chn_°r
(3, 4, 
d±_«me
);

488 i‡(
ªt
 =-
EUI_ESC
) {

489 
ªt
 = 
	`que°i⁄_u£r
("Á°ÆËÆ§ÂèñÊ∂àÊú¨Ê¨°Êìç‰ΩúÔºü");

490 i‡(
ªt
 =
POSITIVE
)

491  
FAIL
;

493 
add_d±
;

494 } i‡(
ªt
 =-
EUI_BACK
)

495  
FAIL
;

499 i‡(
	`°æí
(
d±_«me
) == 0) {

500 
	`di•œy_w¨n
("ÈÉ®Á±ªÂêçÁß∞‰∏çËÉΩ‰∏∫Á©∫ÔºÅ");

501 
add_d±
;

504 
d±_ôem
.
d±_num
 = dpt_num;

505 
	`mem˝y
(
d±_ôem
.
«me
, 
d±_«me
, 
DPT_NAME_LEN
 + 1);

507 
	`di•œy_öfo
("Ê≠£Âú®Ê∑ªÂä†ÈÉ®Á±ª...");

509 
ªt
 = 
∂u_›s
->
	`≠≥nd_d±
(
d±_num
, &
d±_ôem
);

510 i‡(
ªt
 !
SUCCESS
) {

511 
	`di•œy_w¨n
("Ê∑ªÂä†ÈÉ®Á±ªÈîôËØØÔºÅ");

512  
FAIL
;

515 
	`di•œy_w¨n
("Ê∑ªÂä†ÊàêÂäüÈÉ®Á±ªÊàêÂäüÔºÅ");

517  
SUCCESS
;

518 
	}
}

524 
	$cmd_dñ_d±
()

526 
ªt
;

527 
d±_num
;

528 
èx_sy°em
 *Åax_sy°em = 
	`gë_èx_sy°em
();

529 
∂u_›î©e
 * 
∂u_›s
 = 
	`gë_∂u_›s
();

531 
ªt
 = 
èx_sy°em
->
	`is_fisˇl_öô
();

532 i‡(
ªt
 !
POSITIVE
) {

533 
	`di•œy_w¨n
("Á®éÊéßÂäüËÉΩÊú™ÂàùÂßãÂåñÔºåÊó†Ê≥ïËøõË°åÊìç‰ΩúÔºÅ");

534  
FAIL
;

537 
võw_d±
:

538 
d±_num
 = 
	`do_võw_d±
("ËØ∑ÈÄâÊã©Âà†Èô§ÁöÑÈÉ®Á±ª");

539 
d±_num
) {

540 -
EUI_BACK
:

541  
FAIL
;

544 -
EUI_ESC
:

545  
FAIL
;

549 i‡(
d±_num
 >= 1 && dpt_num <= 20) {

550 
ªt
 = 
	`que°i⁄_u£r
("Á°ÆËÆ§Âà†Èô§ËØ•ÈÉ®Á±ªÔºü");

551 i‡(
ªt
 !
POSITIVE
)

552 
võw_d±
;

554 
ªt
 = 
∂u_›s
->
	`dñëe_d±
(
d±_num
);

555 i‡(
ªt
 !
SUCCESS
) {

556 i‡(
ªt
 =-
EPLU_DPT_NOT_EMPTY
) {

557 
	`di•œy_w¨n
("ÈÉ®Á±ªÈùûÁ©∫,Êó†Ê≥ïÂà†Èô§!");

559 
	`di•œy_w¨n
("Âà†Èô§ÈÉ®Á±ªÂ§±Ë¥•ÔºåËØ∑ËÅîÁ≥ªÂéÇÂïÜÔºÅ");

562  
FAIL
;

565 
	`di•œy_w¨n
("Êú™Áü•ÈîôËØØÔºåËØ∑ËÅîÁ≥ªÂéÇÂïÜÔºÅ");

566  
FAIL
;

571  
SUCCESS
;

572 
	}
}

578 
	$cmd_modify_d±
()

580 
ªt
;

581 
d±_num
;

582 
d±_«me
[
DPT_NAME_LEN
 + 1];

583 
d±_ôem
 dpt_item;

584 
sim∂e_‰ame
 
‰ame
;

585 
èx_sy°em
 *Åax_sy°em = 
	`gë_èx_sy°em
();

586 
∂u_›î©e
 * 
∂u_›s
 = 
	`gë_∂u_›s
();

588 
	`mem£t
(&
d±_ôem
, 0, (dpt_item));

589 
	`mem£t
(&
‰ame
, 0, (frame));

591 
ªt
 = 
èx_sy°em
->
	`is_fisˇl_öô
();

592 i‡(
ªt
 !
POSITIVE
) {

593 
	`di•œy_w¨n
("Á®éÊéßÂäüËÉΩÊú™ÂàùÂßãÂåñÔºåÊó†Ê≥ïËøõË°åÊìç‰ΩúÔºÅ");

594  
FAIL
;

597 
võw_d±
:

598 
d±_num
 = 
	`do_võw_d±
("ËØ∑ÈÄâÊã©‰øÆÊîπÁöÑÈÉ®Á±ª");

599 
d±_num
) {

600 -
EUI_BACK
:

601  
FAIL
;

604 -
EUI_ESC
:

605  
FAIL
;

609 i‡(
d±_num
 >= 1 && dpt_num <= 20) {

610 
ªt
 = 
	`que°i⁄_u£r
("Á°ÆËÆ§‰øÆÊîπËØ•ÈÉ®Á±ªÔºü");

611 i‡(
ªt
 !
POSITIVE
)

612 
võw_d±
;

615 
	`di•œy_w¨n
("Êú™Áü•ÈîôËØØÔºåËØ∑ËÅîÁ≥ªÂéÇÂïÜÔºÅ");

616  
FAIL
;

620 
ªt
 = 
∂u_›s
->
	`ªad_d±
(
d±_num
, &
d±_ôem
);

621 i‡(
ªt
 !
SUCCESS
) {

622 
	`di•œy_w¨n
("Êú™Áü•ÈîôËØØÔºåËØ∑ËÅîÁ≥ªÂéÇÂïÜÔºÅ");

623  
FAIL
;

626 
‰ame
.
ôem_num
 = 3;

627 
‰ame
.
ôems
[0].
pos
.
row
 = 1;

628 
‰ame
.
ôems
[0].
pos
.
cﬁ
 = 5;

629 
	`¢¥ötf
(
‰ame
.
ôems
[0].
tôÀ
, 
MAX_TITLE_LEN
, "%s", "ÈÉ®Á±ª‰øÆÊîπ");

631 
‰ame
.
ôems
[1].
pos
.
row
 = 2;

632 
‰ame
.
ôems
[1].
pos
.
cﬁ
 = 1;

633 
	`¢¥ötf
(
‰ame
.
ôems
[1].
tôÀ
, 
MAX_TITLE_LEN
, "%s%d", "ÁºñÂè∑Ôºö", 
d±_num
);

635 
‰ame
.
ôems
[2].
pos
.
row
 = 3;

636 
‰ame
.
ôems
[2].
pos
.
cﬁ
 = 1;

637 
	`¢¥ötf
(
‰ame
.
ôems
[2].
tôÀ
, 
MAX_TITLE_LEN
, "%s", "ÂêçÁß∞Ôºö");

639 
d±_«me
:

640 
	`show_sim∂e_‰ame
(&
‰ame
);

642 
ªt
 = 
	`gë_chn_°r
(3, 4, 
d±_«me
);

643 i‡(
ªt
 =-
EUI_ESC
) {

644 
ªt
 = 
	`que°i⁄_u£r
("Á°ÆÂÆöÂèñÊ∂àÊú¨Ê¨°Êìç‰ΩúÔºü");

645 i‡(
ªt
 =
POSITIVE
) {

646  
FAIL
;

648 
d±_«me
;

649 } i‡(
ªt
 =-
EUI_BACK
) {

650 
võw_d±
;

654 i‡(
	`°æí
(
d±_«me
) == 0) {

655 
	`di•œy_öfo
("ÈÉ®Á±ªÂêçÂ≠ó‰∏çËÉΩ‰∏∫Á©∫ÔºÅ");

656 
d±_«me
;

659 
	`di•œy_öfo
("Ê≠£Âú®‰øÆÊîπÈÉ®Á±ª...");

661 
ªt
 = 
∂u_›s
->
	`modify_d±
(
d±_num
, &
d±_ôem
);

662 i‡(
ªt
 !
SUCCESS
) {

663 
	`di•œy_w¨n
("‰øÆÊîπÈÉ®Á±ªÈîôËØØÔºÅ");

664  
FAIL
;

667 
	`di•œy_w¨n
("‰øÆÊîπÊàêÂäüÈÉ®Á±ªÊàêÂäüÔºÅ");

668  
SUCCESS
;

669 
	}
}

674 
	$cmd_võw_d±
()

676 
ªt
;

677 
d±_num
;

678 
d±_ôem
 dpt_item;

679 
sim∂e_‰ame
 
‰ame
;

680 
èx_sy°em
 *Åax_sy°em = 
	`gë_èx_sy°em
();

681 
∂u_›î©e
 * 
∂u_›s
 = 
	`gë_∂u_›s
();

683 
	`mem£t
(&
d±_ôem
, 0, (dpt_item));

684 
	`mem£t
(&
‰ame
, 0, (frame));

686 
ªt
 = 
èx_sy°em
->
	`is_fisˇl_öô
();

687 i‡(
ªt
 !
POSITIVE
) {

688 
	`di•œy_w¨n
("Á®éÊéßÂäüËÉΩÊú™ÂàùÂßãÂåñÔºåÊó†Ê≥ïËøõË°åÊìç‰ΩúÔºÅ");

689  
FAIL
;

692 
d±_num
 = 
	`do_võw_d±
("ËØ∑ÈÄâÊã©Êü•ËØ¢ÁöÑÈÉ®Á±ª");

693 
d±_num
) {

694 -
EUI_BACK
:

695  
FAIL
;

698 -
EUI_ESC
:

699  
FAIL
;

703 i‡(!(
d±_num
 >= 1 && dpt_num <= 20)) {

704 
	`di•œy_w¨n
("Êú™Áü•ÈîôËØØÔºåËØ∑ËÅîÁ≥ªÂéÇÂïÜÔºÅ");

705  
FAIL
;

710 
ªt
 = 
∂u_›s
->
	`ªad_d±
(
d±_num
, &
d±_ôem
);

711 i‡(
ªt
 !
SUCCESS
) {

712 
	`di•œy_w¨n
("Êü•ËØ¢ÈÉ®Á±ªÂ§±Ë¥•ÔºÅ");

713  
FAIL
;

716 
‰ame
.
ôem_num
 = 3;

717 
‰ame
.
ôems
[0].
pos
.
row
 = 1;

718 
‰ame
.
ôems
[0].
pos
.
cﬁ
 = 5;

719 
	`¢¥ötf
(
‰ame
.
ôems
[0].
tôÀ
, 
MAX_TITLE_LEN
, "%s", "ÈÉ®Á±ªÊü•ËØ¢");

721 
‰ame
.
ôems
[1].
pos
.
row
 = 2;

722 
‰ame
.
ôems
[1].
pos
.
cﬁ
 = 1;

723 
	`¢¥ötf
(
‰ame
.
ôems
[1].
tôÀ
, 
MAX_TITLE_LEN
, "%s%d", "ÁºñÂè∑Ôºö", 
d±_num
);

725 
‰ame
.
ôems
[2].
pos
.
row
 = 3;

726 
‰ame
.
ôems
[2].
pos
.
cﬁ
 = 1;

727 
	`¢¥ötf
(
‰ame
.
ôems
[2].
tôÀ
, 
MAX_TITLE_LEN
, "%s%s", "ÂêçÁß∞Ôºö", 
d±_ôem
.
«me
);

729 
	`show_sim∂e_‰ame
(&
‰ame
);

731 
	`gë_™ykey
();

732  
SUCCESS
;

733 
	}
}

739 
	$cmd_add_∂u
()

741 
ªt
;

742 
d±_num
;

743 
∂u_num
;

744 
èx_ödex
;

745 
∂u_ôem
Ölu_item;

746 
sim∂e_‰ame
 
‰ame
;

747 
èx_sy°em
 *Åax_sy°em = 
	`gë_èx_sy°em
();

748 
∂u_›î©e
 * 
∂u_›s
 = 
	`gë_∂u_›s
();

750 
	`mem£t
(&
∂u_ôem
, 0, (plu_item));

751 
	`mem£t
(&
‰ame
, 0, (frame));

753 
ªt
 = 
èx_sy°em
->
	`is_fisˇl_öô
();

754 i‡(
ªt
 !
POSITIVE
) {

755 
	`di•œy_w¨n
("Á®éÊéßÂäüËÉΩÊú™ÂàùÂßãÂåñÔºåÊó†Ê≥ïËøõË°åÊìç‰ΩúÔºÅ");

756  
FAIL
;

759 
võw_d±
:

760 
d±_num
 = 
	`do_võw_d±
("ËØ∑ÈÄâÊã©ÂïÜÂìÅÊâÄÂ±ûÈÉ®Á±ª");

761 
d±_num
) {

762 -
EUI_BACK
:

763  
FAIL
;

766 -
EUI_ESC
:

767  
FAIL
;

771 i‡(!(
d±_num
 >= 1 && dpt_num <= 20)) {

772 
	`di•œy_w¨n
("Êú™Áü•ÈîôËØØÔºåËØ∑ËÅîÁ≥ªÂéÇÂïÜÔºÅ");

773  
FAIL
;

778 
fis_ty≥
:

779 
èx_ödex
 = 
	`gë_fis_ty≥
();

780 i‡(
èx_ödex
 < 0) {

781 i‡(
èx_ödex
 =-
EUI_ESC
) {

782 
ªt
 = 
	`que°i⁄_u£r
("Á°ÆËÆ§ÂèñÊ∂àÊú¨Ê¨°Êìç‰ΩúÔºü");

783 i‡(
ªt
 =
POSITIVE
)

784  
FAIL
;

786 
fis_ty≥
;

787 } i‡(
èx_ödex
 =-
EUI_BACK
)

788 
võw_d±
;

791 
∂u_num
 = 
∂u_›s
->
	`gë_‰ì_∂u
(
d±_num
);

792 i‡(
∂u_num
 < 0) {

793 
	`di•œy_w¨n
("Ê∑ªÂä†ÂïÜÂìÅÂá∫ÈîôÔºåËØ∑ËÅîÁ≥ªÂéÇÂïÜÔºÅ");

794  
FAIL
;

797 
∂u_ôem
.
∂u_num
 =Ölu_num;

798 
∂u_ôem
.
èx_ödex
 =Åax_index;

801 
‰ame
.
ôem_num
 = 3;

803 
‰ame
.
ôems
[0].
pos
.
row
 = 1;

804 
‰ame
.
ôems
[0].
pos
.
cﬁ
 = 5;

805 
	`¢¥ötf
(
‰ame
.
ôems
[0].
tôÀ
, 
MAX_TITLE_LEN
, "%s", "ÂïÜÂìÅÊ∑ªÂä†");

807 
‰ame
.
ôems
[1].
pos
.
row
 = 2;

808 
‰ame
.
ôems
[1].
pos
.
cﬁ
 = 1;

809 
	`¢¥ötf
(
‰ame
.
ôems
[1].
tôÀ
, 
MAX_TITLE_LEN
, "%s%d", "ÁºñÂè∑Ôºö", 
∂u_num
);

811 
‰ame
.
ôems
[2].
pos
.
row
 = 3;

812 
‰ame
.
ôems
[2].
pos
.
cﬁ
 = 1;

813 
	`¢¥ötf
(
‰ame
.
ôems
[2].
tôÀ
, 
MAX_TITLE_LEN
, "%s", "ÂêçÁß∞Ôºö");

816 
‰ame
.
ôems
[3].
pos
.
row
 = 4;

817 
‰ame
.
ôems
[3].
pos
.
cﬁ
 = 1;

818 
	`¢¥ötf
(
‰ame
.
ôems
[3].
tôÀ
, 
MAX_TITLE_LEN
, "%s", "Âçï‰ª∑Ôºö");

820 
‰ame
.
ôems
[4].
pos
.
row
 = 4;

821 
‰ame
.
ôems
[4].
pos
.
cﬁ
 = 7;

822 
	`¢¥ötf
(
‰ame
.
ôems
[4].
tôÀ
, 
MAX_TITLE_LEN
, "%s", "Â∫ìÂ≠ò:");

825 
∂u_«me
:

826 
	`show_sim∂e_‰ame
(&
‰ame
);

828 
ªt
 = 
	`gë_chn_°r
(3, 4, 
∂u_ôem
.
«me
);

829 i‡(
ªt
 =-
EUI_ESC
) {

830 
ªt
 = 
	`que°i⁄_u£r
("Á°ÆÂÆöÂèñÊ∂àÊú¨Ê¨°Êìç‰ΩúÔºü");

831 i‡(
ªt
 =
POSITIVE
)

832  
FAIL
;

834 
∂u_«me
;

835 } i‡(
ªt
 =-
EUI_BACK
)

836 
fis_ty≥
;

839 i‡(
	`°æí
(
∂u_ôem
.
«me
) == 0) {

840 
	`di•œy_w¨n
("ÂïÜÂìÅÂêçÂ≠ó‰∏çËÉΩ‰∏∫Á©∫ÔºÅ");

841 
∂u_«me
;

844 
	`show_°r
(4, 1, "Âçï‰ª∑: ");

845 
	`show_°r
(4, 7, "Â∫ìÂ≠ò: ");

849 
ªt
 = 
	`gë_öãr_num
(4, 4, (*)&
∂u_ôem
.
¥i˚
);

850 i‡(
ªt
 =-
EUI_ESC
) {

851 
ªt
 = 
	`que°i⁄_u£r
("Á°ÆÂÆöÂèñÊ∂àÊú¨Ê¨°Êìç‰ΩúÔºü");

852 i‡(
ªt
 =
POSITIVE
)

853  
FAIL
;

855 
∂u_«me
;

857 } 
∂u_ôem
.
¥i˚
 == 0);

861 
ªt
 = 
	`gë_öãr_num
(4, 10, (*)&
∂u_ôem
.
°ock
);

862 i‡(
ªt
 =-
EUI_ESC
) {

863 
ªt
 = 
	`que°i⁄_u£r
("Á°ÆÂÆöÂèñÊ∂àÊú¨Ê¨°Êìç‰ΩúÔºü");

864 i‡(
ªt
 =
POSITIVE
)

865  
FAIL
;

867 
∂u_«me
;

869 }
∂u_ôem
.
°ock
 == 0);

871 
	`di•œy_öfo
("Ê≠£Âú®Ê∑ªÂä†ÂïÜÂìÅ...");

873 
ªt
 = 
∂u_›s
->
	`≠≥nd_∂u
(
∂u_num
, &
∂u_ôem
);

874 i‡(
ªt
 !
SUCCESS
) {

875 
	`di•œy_w¨n
("Ê∑ªÂä†ÂïÜÂìÅÂá∫ÈîôÔºåËØ∑ËÅîÁ≥ªÂéÇÂïÜÔºÅ");

876  
FAIL
;

879 
	`di•œy_w¨n
("Ê∑ªÂä†ÂïÜÂìÅÊàêÂäüÔºÅ");

880  
SUCCESS
;

881 
	}
}

887 
	$cmd_dñ_∂u_by_num
()

889 
ªt
;

890 
key
;

891 
∂u_ôem
Ölu_item;

892 
∂u_›î©e
 *
∂u_›s
 = 
	`gë_∂u_›s
();

894 
ªt
 = 
	`do_võw_∂u_by_num
(&
∂u_ôem
);

895 i‡(
ªt
 !
SUCCESS
)

896  
ªt
;

898 
show_∂u
:

899 
	`show_∂u_ôem
(
BY_PLU_NUM
, "ÂïÜÂìÅÂà†Èô§", &
∂u_ôem
);

901 
	`˛ór_ˇche
();

903 
key
 = 
	`gë_keycode
();

904 i‡(
key
 =
ESC
) {

905 
ªt
 = 
	`que°i⁄_u£r
("Á°ÆËÆ§ÂèñÊ∂àÊú¨Ê¨°Êìç‰ΩúÔºü");

906 i‡(
ªt
 =
POSITIVE
)

907  
FAIL
;

909 
show_∂u
;

911 } 
key
 !
ENTER
);

913 
ªt
 = 
	`que°i⁄_u£r
("Á°ÆËÆ§Âà†Èô§ËØ•ÂïÜÂìÅÔºü");

914 i‡(
ªt
 !
POSITIVE
)

915 
show_∂u
;

917 
	`di•œy_öfo
("Ê≠£Âú®Âà†Èô§ÂïÜÂìÅ...");

919 
ªt
 = 
∂u_›s
->
	`dñëe_∂u
(
∂u_ôem
.
∂u_num
);

920 i‡(
ªt
 < 0) {

921 
	`di•œy_w¨n
("Âà†Èô§ÂïÜÂìÅÂ§±Ë¥•ÔºåËØ∑ËÅîÁ≥ªÂéÇÂïÜÔºÅ");

922 
	`di•œy_îr_msg
(
ªt
);

923  
FAIL
;

926 
	`di•œy_w¨n
("Âà†Èô§ÂïÜÂìÅÊàêÂäüÔºÅ");

927  
SUCCESS
;

928 
	}
}

934 
	$cmd_dñ_∂u_by_b¨code
()

936 
ªt
;

937 
key
;

938 
∂u_ôem
Ölu_item;

939 
∂u_›î©e
 *
∂u_›s
 = 
	`gë_∂u_›s
();

941 
ªt
 = 
	`do_võw_∂u_by_b¨code
(&
∂u_ôem
);

942 i‡(
ªt
 !
SUCCESS
)

943  
ªt
;

945 
show_∂u
:

946 
	`show_∂u_ôem
(
BY_BARCODE
, "ÂïÜÂìÅÂà†Èô§", &
∂u_ôem
);

948 
	`˛ór_ˇche
();

950 
key
 = 
	`gë_keycode
();

951 i‡(
key
 =
ESC
) {

952 
ªt
 = 
	`que°i⁄_u£r
("Á°ÆËÆ§ÂèñÊ∂àÊú¨Ê¨°Êìç‰ΩúÔºü");

953 i‡(
ªt
 =
POSITIVE
)

954  
FAIL
;

956 
show_∂u
;

958 } 
key
 !
ENTER
);

960 
ªt
 = 
	`que°i⁄_u£r
("Á°ÆËÆ§Âà†Èô§ËØ•ÂïÜÂìÅÔºü");

961 i‡(
ªt
 !
POSITIVE
)

962 
show_∂u
;

964 
	`di•œy_öfo
("Ê≠£Âú®Âà†Èô§ÂïÜÂìÅ...");

966 
ªt
 = 
∂u_›s
->
	`dñëe_∂u
(
∂u_ôem
.
∂u_num
);

967 i‡(
ªt
 < 0) {

968 
	`di•œy_w¨n
("Âà†Èô§ÂïÜÂìÅÂ§±Ë¥•ÔºåËØ∑ËÅîÁ≥ªÂéÇÂïÜÔºÅ");

969 
	`di•œy_îr_msg
(
ªt
);

970  
FAIL
;

973 
	`di•œy_w¨n
("Âà†Èô§ÂïÜÂìÅÊàêÂäüÔºÅ");

974  
SUCCESS
;

975 
	}
}

981 
	$cmd_dñ_∂u_by_«me
()

983 
ªt
;

984 
key
;

985 
∂u_ôem
Ölu_item;

986 
∂u_›î©e
 * 
∂u_›s
 = 
	`gë_∂u_›s
();

988 
ªt
 = 
	`do_võw_∂u_by_«me
(&
∂u_ôem
);

989 i‡(
ªt
 !
SUCCESS
)

990  
ªt
;

992 
show_∂u
:

993 
	`show_∂u_ôem
(
BY_PLU_NUM
, "ÂïÜÂìÅÂà†Èô§", &
∂u_ôem
);

995 
	`˛ór_ˇche
();

997 
key
 = 
	`gë_keycode
();

998 i‡(
key
 =
ESC
) {

999 
ªt
 = 
	`que°i⁄_u£r
("Á°ÆËÆ§ÂèñÊ∂àÊú¨Ê¨°Êìç‰ΩúÔºü");

1000 i‡(
ªt
 =
POSITIVE
)

1001  
FAIL
;

1003 
show_∂u
;

1005 } 
key
 !
ENTER
);

1007 
ªt
 = 
	`que°i⁄_u£r
("Á°ÆËÆ§Âà†Èô§ËØ•ÂïÜÂìÅÔºü");

1008 i‡(
ªt
 !
POSITIVE
)

1009 
show_∂u
;

1011 
	`di•œy_öfo
("Ê≠£Âú®Âà†Èô§ÂïÜÂìÅ...");

1013 
ªt
 = 
∂u_›s
->
	`dñëe_∂u
(
∂u_ôem
.
∂u_num
);

1014 i‡(
ªt
 < 0) {

1015 
	`di•œy_w¨n
("Âà†Èô§ÂïÜÂìÅÂ§±Ë¥•ÔºåËØ∑ËÅîÁ≥ªÂéÇÂïÜÔºÅ");

1016 
	`di•œy_îr_msg
(
ªt
);

1017  
FAIL
;

1020 
	`di•œy_w¨n
("Âà†Èô§ÂïÜÂìÅÊàêÂäüÔºÅ");

1021  
SUCCESS
;

1022 
	}
}

1028 
	$cmd_modify_∂u_by_num
()

1030 
ªt
;

1031 
key
;

1032 
√w_cou¡
, 
√w_¥i˚
;

1033 
√w_«me
[24] = {0};

1034 
∂u_ôem
Ölu_item;

1035 
∂u_ôem
 
√w_ôem
;

1036 
∂u_›î©e
 * 
∂u_›s
 = 
	`gë_∂u_›s
();

1038 
ªt
 = 
	`do_võw_∂u_by_num
(&
∂u_ôem
);

1039 i‡(
ªt
 !
SUCCESS
)

1040  
ªt
;

1042 
show_∂u
:

1043 
	`show_∂u_ôem
(
BY_PLU_NUM
, "ÂïÜÂìÅ‰øÆÊîπ", &
∂u_ôem
);

1045 
	`˛ór_ˇche
();

1047 
key
 = 
	`gë_keycode
();

1048 i‡(
key
 =
ESC
) {

1049 
ªt
 = 
	`que°i⁄_u£r
("Á°ÆËÆ§ÂèñÊ∂àÊú¨Ê¨°Êìç‰ΩúÔºü");

1050 i‡(
ªt
 =
POSITIVE
)

1051  
FAIL
;

1053 
show_∂u
;

1055 } 
key
 !
ENTER
);

1057 
ªt
 = 
	`que°i⁄_u£r
("Á°ÆËÆ§‰øÆÊîπËØ•ÂïÜÂìÅÔºü");

1058 i‡(
ªt
 !
POSITIVE
)

1059 
show_∂u
;

1061 
öput_«me
:

1062 
	`˛ór_s¸ìn
();

1063 
	`show_°r
(1, 1, "ËØ∑ËæìÂÖ•Êñ∞ÁöÑÂïÜÂìÅÂêçÁß∞Ôºö");

1064 
ªt
 = 
	`gë_chn_°r
(2, 1, 
√w_«me
);

1065 i‡(
ªt
 =-
EUI_ESC
) {

1066 
ªt
 = 
	`que°i⁄_u£r
("Á°ÆÂÆöÂèñÊ∂àÊú¨Ê¨°Êìç‰ΩúÔºü");

1067 i‡(
ªt
 =
POSITIVE
)

1068  
FAIL
;

1070 
öput_«me
;

1073 i‡(
	`°æí
(
√w_«me
) == 0) {

1074 
	`di•œy_w¨n
("ÂïÜÂìÅÂêçÁß∞‰∏çËÉΩ‰∏∫Á©∫ÔºÅ");

1075 
öput_«me
;

1078 
öput_¥i˚
:

1079 
	`˛ór_s¸ìn
();

1080 
	`show_°r
(1, 1, "ËØ∑ËæìÂÖ•Êñ∞ÁöÑÂïÜÂìÅÂçï‰ª∑Ôºö");

1081 
ªt
 = 
	`gë_öãr_num
(2, 1, &
√w_¥i˚
);

1082 i‡(
ªt
 =-
EUI_ESC
) {

1083 
ªt
 = 
	`que°i⁄_u£r
("Á°ÆÂÆöÂèñÊ∂àÊú¨Ê¨°Êìç‰ΩúÔºü");

1084 i‡(
ªt
 =
POSITIVE
)

1085  
FAIL
;

1087 
öput_¥i˚
;

1090 i‡(
√w_¥i˚
 == 0) {

1091 
	`di•œy_w¨n
("ÂïÜÂìÅÂçï‰ª∑‰∏çËÉΩ‰∏∫Èõ∂ÔºÅ");

1092 
öput_¥i˚
;

1095 
öput_cou¡
:

1096 
	`˛ór_s¸ìn
();

1097 
	`show_°r
(1, 1, "ËØ∑ËæìÂÖ•Êñ∞ÁöÑÂïÜÂìÅÊï∞ÈáèÔºö");

1098 
ªt
 = 
	`gë_öãr_num
(2, 1, &
√w_cou¡
);

1099 i‡(
ªt
 =-
EUI_ESC
) {

1100 
ªt
 = 
	`que°i⁄_u£r
("Á°ÆÂÆöÂèñÊ∂àÊú¨Ê¨°Êìç‰ΩúÔºü");

1101 i‡(
ªt
 =
POSITIVE
)

1102  
FAIL
;

1104 
öput_cou¡
;

1107 i‡(
√w_cou¡
 == 0) {

1108 
	`di•œy_w¨n
("ÂïÜÂìÅÊï∞Èáè‰∏çËÉΩ‰∏∫Èõ∂ÔºÅ");

1109 
öput_cou¡
;

1112 
	`di•œy_öfo
("Ê≠£Âú®‰øÆÊîπÂïÜÂìÅ...");

1114 
√w_ôem
 = 
∂u_ôem
;

1115 
√w_ôem
.
¥i˚
 = 
√w_¥i˚
;

1116 
√w_ôem
.
°ock
 = 
√w_cou¡
;

1117 
	`mem˝y
(
√w_ôem
.
«me
, 
√w_«me
, 24);

1119 
ªt
 = 
∂u_›s
->
	`modify_∂u
(
∂u_ôem
.
∂u_num
, &
√w_ôem
);

1120 i‡(
ªt
 < 0) {

1121 
	`di•œy_w¨n
("‰øÆÊîπÂïÜÂìÅÂ§±Ë¥•ÔºåËØ∑ËÅîÁ≥ªÂéÇÂïÜÔºÅ");

1122 
	`di•œy_îr_msg
(
ªt
);

1123  
FAIL
;

1126 
	`di•œy_w¨n
("‰øÆÊîπÊàêÂäüÔºÅ");

1127  
SUCCESS
;

1128 
	}
}

1134 
	$cmd_modify_∂u_by_b¨code
()

1136 
ªt
;

1137 
key
;

1138 
√w_cou¡
, 
√w_¥i˚
;

1139 
√w_«me
[24] = {0};

1140 
∂u_ôem
 
√w_ôem
;

1141 
∂u_ôem
Ölu_item;

1142 
∂u_›î©e
 *
∂u_›s
 = 
	`gë_∂u_›s
();

1144 
ªt
 = 
	`do_võw_∂u_by_b¨code
(&
∂u_ôem
);

1145 i‡(
ªt
 !
SUCCESS
)

1146  
ªt
;

1148 
show_∂u
:

1149 
	`show_∂u_ôem
(
BY_BARCODE
, "ÂïÜÂìÅ‰øÆÊîπ", &
∂u_ôem
);

1151 
	`˛ór_ˇche
();

1153 
key
 = 
	`gë_keycode
();

1154 i‡(
key
 =
ESC
) {

1155 
ªt
 = 
	`que°i⁄_u£r
("Á°ÆËÆ§ÂèñÊ∂àÊú¨Ê¨°Êìç‰ΩúÔºü");

1156 i‡(
ªt
 =
POSITIVE
)

1157  
FAIL
;

1159 
show_∂u
;

1161 } 
key
 !
ENTER
);

1163 
ªt
 = 
	`que°i⁄_u£r
("Á°ÆËÆ§‰øÆÊîπËØ•ÂïÜÂìÅÔºü");

1164 i‡(
ªt
 !
POSITIVE
)

1165 
show_∂u
;

1167 
öput_«me
:

1168 
	`˛ór_s¸ìn
();

1169 
	`show_°r
(1, 1, "ËØ∑ËæìÂÖ•Êñ∞ÁöÑÂïÜÂìÅÂêçÁß∞Ôºö");

1170 
ªt
 = 
	`gë_chn_°r
(2, 1, 
√w_«me
);

1171 i‡(
ªt
 =-
EUI_ESC
) {

1172 
ªt
 = 
	`que°i⁄_u£r
("Á°ÆÂÆöÂèñÊ∂àÊú¨Ê¨°Êìç‰ΩúÔºü");

1173 i‡(
ªt
 =
POSITIVE
)

1174  
FAIL
;

1176 
öput_«me
;

1179 
öput_¥i˚
:

1180 
	`˛ór_s¸ìn
();

1181 
	`show_°r
(1, 1, "ËØ∑ËæìÂÖ•Êñ∞ÁöÑÂïÜÂìÅÂçï‰ª∑Ôºö");

1182 
ªt
 = 
	`gë_öãr_num
(2, 1, &
√w_¥i˚
);

1183 i‡(
ªt
 =-
EUI_ESC
) {

1184 
ªt
 = 
	`que°i⁄_u£r
("Á°ÆÂÆöÂèñÊ∂àÊú¨Ê¨°Êìç‰ΩúÔºü");

1185 i‡(
ªt
 =
POSITIVE
)

1186  
FAIL
;

1188 
öput_¥i˚
;

1191 
öput_cou¡
:

1192 
	`˛ór_s¸ìn
();

1193 
	`show_°r
(1, 1, "ËØ∑ËæìÂÖ•Êñ∞ÁöÑÂïÜÂìÅÊï∞ÈáèÔºö");

1194 
ªt
 = 
	`gë_öãr_num
(2, 1, &
√w_cou¡
);

1195 i‡(
ªt
 =-
EUI_ESC
) {

1196 
ªt
 = 
	`que°i⁄_u£r
("Á°ÆÂÆöÂèñÊ∂àÊú¨Ê¨°Êìç‰ΩúÔºü");

1197 i‡(
ªt
 =
POSITIVE
)

1198  
FAIL
;

1200 
öput_cou¡
;

1203 
	`di•œy_öfo
("Ê≠£Âú®‰øÆÊîπÂïÜÂìÅ...");

1205 
√w_ôem
 = 
∂u_ôem
;

1206 
√w_ôem
.
¥i˚
 = 
√w_¥i˚
;

1207 
√w_ôem
.
°ock
 = 
√w_cou¡
;

1208 
	`mem˝y
(
√w_ôem
.
«me
, 
√w_«me
, 24);

1210 
ªt
 = 
∂u_›s
->
	`modify_∂u
(
∂u_ôem
.
∂u_num
, &
√w_ôem
);

1211 i‡(
ªt
 < 0) {

1212 
	`di•œy_w¨n
("‰øÆÊîπÂïÜÂìÅÂ§±Ë¥•ÔºåËØ∑ËÅîÁ≥ªÂéÇÂïÜÔºÅ");

1213 
	`di•œy_îr_msg
(
ªt
);

1214  
FAIL
;

1217 
	`di•œy_w¨n
("‰øÆÊîπÊàêÂäüÔºÅ");

1218  
SUCCESS
;

1219 
	}
}

1225 
	$cmd_modify_∂u_by_«me
()

1227 
ªt
;

1228 
key
;

1229 
√w_cou¡
, 
√w_¥i˚
;

1230 
√w_«me
[24] = {0};

1231 
∂u_ôem
 
√w_ôem
;

1232 
∂u_ôem
Ölu_item;

1233 
∂u_›î©e
 * 
∂u_›s
 = 
	`gë_∂u_›s
();

1235 
ªt
 = 
	`do_võw_∂u_by_«me
(&
∂u_ôem
);

1236 i‡(
ªt
 !
SUCCESS
)

1237  
ªt
;

1239 
show_∂u
:

1240 
	`show_∂u_ôem
(
BY_PLU_NUM
, "ÂïÜÂìÅ‰øÆÊîπ", &
∂u_ôem
);

1242 
	`˛ór_ˇche
();

1244 
key
 = 
	`gë_keycode
();

1245 i‡(
key
 =
ESC
) {

1246 
ªt
 = 
	`que°i⁄_u£r
("Á°ÆËÆ§ÂèñÊ∂àÊú¨Ê¨°Êìç‰ΩúÔºü");

1247 i‡(
ªt
 =
POSITIVE
)

1248  
FAIL
;

1250 
show_∂u
;

1252 } 
key
 !
ENTER
);

1254 
ªt
 = 
	`que°i⁄_u£r
("Á°ÆËÆ§‰øÆÊîπËØ•ÂïÜÂìÅÔºü");

1255 i‡(
ªt
 !
POSITIVE
)

1256 
show_∂u
;

1258 
öput_«me
:

1259 
	`˛ór_s¸ìn
();

1260 
	`show_°r
(1, 1, "ËØ∑ËæìÂÖ•Êñ∞ÁöÑÂïÜÂìÅÂêçÁß∞Ôºö");

1261 
ªt
 = 
	`gë_chn_°r
(2, 1, 
√w_«me
);

1262 i‡(
ªt
 =-
EUI_ESC
) {

1263 
ªt
 = 
	`que°i⁄_u£r
("Á°ÆÂÆöÂèñÊ∂àÊú¨Ê¨°Êìç‰ΩúÔºü");

1264 i‡(
ªt
 =
POSITIVE
)

1265  
FAIL
;

1267 
öput_«me
;

1270 
öput_¥i˚
:

1271 
	`˛ór_s¸ìn
();

1272 
	`show_°r
(1, 1, "ËØ∑ËæìÂÖ•Êñ∞ÁöÑÂïÜÂìÅÂçï‰ª∑Ôºö");

1273 
ªt
 = 
	`gë_öãr_num
(2, 1, &
√w_¥i˚
);

1274 i‡(
ªt
 =-
EUI_ESC
) {

1275 
ªt
 = 
	`que°i⁄_u£r
("Á°ÆÂÆöÂèñÊ∂àÊú¨Ê¨°Êìç‰ΩúÔºü");

1276 i‡(
ªt
 =
POSITIVE
)

1277  
FAIL
;

1279 
öput_¥i˚
;

1282 
öput_cou¡
:

1283 
	`˛ór_s¸ìn
();

1284 
	`show_°r
(1, 1, "ËØ∑ËæìÂÖ•Êñ∞ÁöÑÂïÜÂìÅÊï∞ÈáèÔºö");

1285 
ªt
 = 
	`gë_öãr_num
(2, 1, &
√w_cou¡
);

1286 i‡(
ªt
 =-
EUI_ESC
) {

1287 
ªt
 = 
	`que°i⁄_u£r
("Á°ÆÂÆöÂèñÊ∂àÊú¨Ê¨°Êìç‰ΩúÔºü");

1288 i‡(
ªt
 =
POSITIVE
)

1289  
FAIL
;

1291 
öput_cou¡
;

1294 
	`di•œy_öfo
("Ê≠£Âú®‰øÆÊîπÂïÜÂìÅ...");

1296 
√w_ôem
 = 
∂u_ôem
;

1297 
√w_ôem
.
¥i˚
 = 
√w_¥i˚
;

1298 
√w_ôem
.
°ock
 = 
√w_cou¡
;

1299 
	`mem˝y
(
√w_ôem
.
«me
, 
√w_«me
, 24);

1301 
ªt
 = 
∂u_›s
->
	`modify_∂u
(
∂u_ôem
.
∂u_num
, &
√w_ôem
);

1302 i‡(
ªt
 < 0) {

1303 
	`di•œy_w¨n
("‰øÆÊîπÂïÜÂìÅÂ§±Ë¥•ÔºåËØ∑ËÅîÁ≥ªÂéÇÂïÜÔºÅ");

1304 
	`di•œy_îr_msg
(
ªt
);

1305  
FAIL
;

1308 
	`di•œy_w¨n
("‰øÆÊîπÊàêÂäüÔºÅ");

1309  
SUCCESS
;

1310 
	}
}

1316 
	$cmd_võw_∂u_by_num
()

1318 
ªt
;

1319 
key
;

1320 
∂u_ôem
Ölu_item;

1322 
ªt
 = 
	`do_võw_∂u_by_num
(&
∂u_ôem
);

1323 i‡(
ªt
 !
SUCCESS
)

1324  
ªt
;

1326 
show_∂u
:

1327 
	`show_∂u_ôem
(
BY_PLU_NUM
, "ÂïÜÂìÅÊü•ËØ¢", &
∂u_ôem
);

1329 
	`˛ór_ˇche
();

1331 
key
 = 
	`gë_keycode
();

1332 i‡(
key
 =
ESC
) {

1333 
ªt
 = 
	`que°i⁄_u£r
("Á°ÆËÆ§ÂèñÊ∂àÊú¨Ê¨°Êìç‰ΩúÔºü");

1334 i‡(
ªt
 =
POSITIVE
)

1335  
FAIL
;

1337 
show_∂u
;

1339 } 
key
 !
ENTER
);

1341  
SUCCESS
;

1342 
	}
}

1348 
	$cmd_võw_∂u_by_b¨code
()

1350 
ªt
;

1351 
key
;

1352 
∂u_ôem
Ölu_item;

1354 
ªt
 = 
	`do_võw_∂u_by_b¨code
(&
∂u_ôem
);

1355 i‡(
ªt
 !
SUCCESS
)

1356  
ªt
;

1358 
show_∂u
:

1359 
	`show_∂u_ôem
(
BY_PLU_NUM
, "ÂïÜÂìÅÊü•ËØ¢", &
∂u_ôem
);

1361 
	`˛ór_ˇche
();

1363 
key
 = 
	`gë_keycode
();

1364 i‡(
key
 =
ESC
) {

1365 
ªt
 = 
	`que°i⁄_u£r
("Á°ÆËÆ§ÂèñÊ∂àÊú¨Ê¨°Êìç‰ΩúÔºü");

1366 i‡(
ªt
 =
POSITIVE
)

1367  
FAIL
;

1369 
show_∂u
;

1371 } 
key
 !
ENTER
);

1373  
SUCCESS
;

1374 
	}
}

1380 
	$cmd_võw_∂u_by_«me
()

1382 
ªt
, 
key
;

1383 
∂u_ôem
Ölu_item;

1385 
ªt
 = 
	`do_võw_∂u_by_«me
(&
∂u_ôem
);

1386 i‡(
ªt
 !
SUCCESS
)

1387  
ªt
;

1389 
show_∂u
:

1390 
	`show_∂u_ôem
(
BY_PLU_NUM
, "ÂïÜÂìÅÊü•ËØ¢", &
∂u_ôem
);

1392 
	`˛ór_ˇche
();

1394 
key
 = 
	`gë_keycode
();

1395 i‡(
key
 =
ESC
) {

1396 
ªt
 = 
	`que°i⁄_u£r
("Á°ÆËÆ§ÂèñÊ∂àÊú¨Ê¨°Êìç‰ΩúÔºü");

1397 i‡(
ªt
 =
POSITIVE
)

1398  
FAIL
;

1400 
show_∂u
;

1402 } 
key
 !
ENTER
);

1404  
SUCCESS
;

1405 
	}
}

1411 
	$cmd_°ock_m™age
()

1413 
ªt
;

1414 
key
, 
√w_°ock
;

1415 
∂u_ôem
Ölu_item;

1416 
∂u_›î©e
 *
∂u_›s
 = 
	`gë_∂u_›s
();

1418 
ªt
 = 
	`do_võw_∂u_by_num
(&
∂u_ôem
);

1419 i‡(
ªt
 !
SUCCESS
)

1420  
ªt
;

1422 
show_∂u
:

1423 
	`show_∂u_ôem
(
BY_PLU_NUM
, "ÂïÜÂìÅ‰ø°ÊÅØ", &
∂u_ôem
);

1425 
	`˛ór_ˇche
();

1427 
key
 = 
	`gë_keycode
();

1428 i‡(
key
 =
ESC
) {

1429 
ªt
 = 
	`que°i⁄_u£r
("Á°ÆËÆ§ÂèñÊ∂àÊú¨Ê¨°Êìç‰ΩúÔºü");

1430 i‡(
ªt
 =
POSITIVE
)

1431  
FAIL
;

1433 
show_∂u
;

1435 } 
key
 !
ENTER
);

1437 
öput_°ock
:

1438 
	`˛ór_s¸ìn
();

1439 
	`di•œy_°r
(1, 1, "ÂΩìÂâçÂ∫ìÂ≠ò: %d", 
∂u_ôem
.
°ock
);

1440 
	`show_°r
(2, 1, "ËæìÂÖ•Êñ∞Â∫ìÂ≠ò: ");

1441 
ªt
 = 
	`gë_öãr_num
(2, 7, &
√w_°ock
);

1442 i‡(
ªt
 =-
EUI_ESC
) {

1443 
ªt
 = 
	`que°i⁄_u£r
("Á°ÆÂÆöÂèñÊ∂àÊú¨Ê¨°Êìç‰ΩúÔºü");

1444 i‡(
ªt
 =
POSITIVE
)

1445  
FAIL
;

1447 
öput_°ock
;

1450 
∂u_ôem
.
°ock
 = 
√w_°ock
;

1452 
ªt
 = 
∂u_›s
->
	`modify_∂u
(
∂u_ôem
.
∂u_num
, &plu_item);

1453 i‡(
ªt
 !
SUCCESS
) {

1454 
	`di•œy_w¨n
("ËøõË¥ßÁÆ°ÁêÜÂ§±Ë¥•");

1455 
	`di•œy_îr_msg
(
ªt
);

1456  
FAIL
;

1459 
	`di•œy_w¨n
("‰øÆÊîπÊàêÂäüÔºÅ");

1460  
SUCCESS
;

1461 
	}
}

	@command/cmd_fiscal_manage.c

9 
	~<°dio.h
>

10 
	~<°dlib.h
>

11 
	~<uni°d.h
>

12 
	~<°rög.h
>

13 
	~<˘y≥.h
>

15 
	~"c⁄fig.h
"

16 
	~"comm⁄.h
"

17 
	~"îr‹.h
"

18 
	~"öput.h
"

19 
	~"keybﬂrd.h
"

20 
	~"∂u.h
"

21 
	~"comm™d.h
"

22 
	~"ui_≠i.h
"

23 
	~"ªÆ_time.h
"

24 
	~"èx_sy°em.h
"

29 
	$show_£tup_d©e
(
bcd_d©e
 *
today
)

31 
uöt
 
y
, 
m
, 
d
;

33 
sim∂e_‰ame
 
‰ame
;

35 
	`mem£t
(&
‰ame
, 0, (frame));

37 
	`bcd_to_gªg
(
today
, &
y
, &
m
, &
d
);

39 
‰ame
.
ôem_num
 = 4;

40 
‰ame
.
ôems
[0].
pos
.
row
 = 1;

41 
‰ame
.
ôems
[0].
pos
.
cﬁ
 = 4;

42 
	`•rötf
(
‰ame
.
ôems
[0].
tôÀ
, "ËÆæÁΩÆÁ≥ªÁªüÊó•Êúü");

44 
‰ame
.
ôems
[1].
pos
.
row
 = 2;

45 
‰ame
.
ôems
[1].
pos
.
cﬁ
 = 1;

46 
	`•rötf
(
‰ame
.
ôems
[1].
tôÀ
, "%s%d-%02d-%02d", "ÂΩìÂâçÊó•ÊúüÔºö", 
y
, 
m
, 
d
);

48 
‰ame
.
ôems
[2].
pos
.
row
 = 3;

49 
‰ame
.
ôems
[2].
pos
.
cﬁ
 = 1;

50 
	`•rötf
(
‰ame
.
ôems
[2].
tôÀ
, "%s", "ËæìÂÖ•Êó•ÊúüÔºö");

52 
‰ame
.
ôems
[3].
pos
.
row
 = 4;

53 
‰ame
.
ôems
[3].
pos
.
cﬁ
 = 1;

54 
	`•rötf
(
‰ame
.
ôems
[3].
tôÀ
, "%s", "(Êó•ÊúüÊ†ºÂºèÔºö20140101)");

56 
	`show_sim∂e_‰ame
(&
‰ame
);

58  
SUCCESS
;

59 
	}
}

61 
	$show_£tup_time
(
gªg_time
 *
now
)

63 
sim∂e_‰ame
 
‰ame
;

65 
	`mem£t
(&
‰ame
, 0, (frame));

67 
‰ame
.
ôem_num
 = 4;

68 
‰ame
.
ôems
[0].
pos
.
row
 = 1;

69 
‰ame
.
ôems
[0].
pos
.
cﬁ
 = 4;

70 
	`•rötf
(
‰ame
.
ôems
[0].
tôÀ
, "ËÆæÁΩÆÁ≥ªÁªüÊó∂Èó¥");

72 
‰ame
.
ôems
[1].
pos
.
row
 = 2;

73 
‰ame
.
ôems
[1].
pos
.
cﬁ
 = 1;

74 
	`•rötf
(
‰ame
.
ôems
[1].
tôÀ
, "%s%d:%02d:%02d", "ÂΩìÂâçÊó∂Èó¥Ôºö",

75 
now
->
hour
,Çow->
mö
,Çow->
£c
);

77 
‰ame
.
ôems
[2].
pos
.
row
 = 3;

78 
‰ame
.
ôems
[2].
pos
.
cﬁ
 = 1;

79 
	`•rötf
(
‰ame
.
ôems
[2].
tôÀ
, "%s", "ËæìÂÖ•Êó∂Èó¥Ôºö");

81 
‰ame
.
ôems
[3].
pos
.
row
 = 4;

82 
‰ame
.
ôems
[3].
pos
.
cﬁ
 = 1;

83 
	`•rötf
(
‰ame
.
ôems
[3].
tôÀ
, "%s", "(Êó∂Èó¥Ê†ºÂºèÔºö141530)");

85 
	`show_sim∂e_‰ame
(&
‰ame
);

87  
SUCCESS
;

88 
	}
}

90 
	$show_gë_ídd©e
(
bcd_d©e
 *
°¨t
, bcd_d©ê*
íd
)

92 
uöt
 
s_y
, 
s_m
, 
s_d
;

93 
uöt
 
e_y
, 
e_m
, 
e_d
;

95 
sim∂e_‰ame
 
‰ame
;

97 
	`mem£t
(&
‰ame
, 0, (frame));

99 
	`bcd_to_gªg
(
°¨t
, &
s_y
, &
s_m
, &
s_d
);

100 
	`bcd_to_gªg
(
íd
, &
e_y
, &
e_m
, &
e_d
);

102 
‰ame
.
ôem_num
 = 3;

103 
‰ame
.
ôems
[0].
pos
.
row
 = 1;

104 
‰ame
.
ôems
[0].
pos
.
cﬁ
 = 4;

105 
	`•rötf
(
‰ame
.
ôems
[0].
tôÀ
, "%s", "Ê≠£Â∏∏Á®éÊéßÁî≥Êä•");

107 
‰ame
.
ôems
[1].
pos
.
row
 = 2;

108 
‰ame
.
ôems
[1].
pos
.
cﬁ
 = 1;

109 
	`•rötf
(
‰ame
.
ôems
[1].
tôÀ
, "%s", "ËØ∑ËæìÂÖ•Êï∞ÊçÆÊà™Ê≠¢Êó•ÊúüÔºö");

111 
‰ame
.
ôems
[2].
pos
.
row
 = 4;

112 
‰ame
.
ôems
[2].
pos
.
cﬁ
 = 1;

113 
	`•rötf
(
‰ame
.
ôems
[2].
tôÀ
, "ËåÉÂõ¥(%d%02d%02d-%d%02d%02d)",

114 
s_y
, 
s_m
, 
s_d
, 
e_y
, 
e_m
, 
e_d
);

116 
	`show_sim∂e_‰ame
(&
‰ame
);

117  
SUCCESS
;

118 
	}
}

120 
	$show_gë_vîify_pö
()

122 
sim∂e_‰ame
 
‰ame
;

124 
	`mem£t
(&
‰ame
, 0, (frame));

126 
‰ame
.
ôem_num
 = 3;

127 
‰ame
.
ôems
[0].
pos
.
row
 = 1;

128 
‰ame
.
ôems
[0].
pos
.
cﬁ
 = 4;

129 
	`•rötf
(
‰ame
.
ôems
[0].
tôÀ
, "%s", "Á®éÊéßÁ®ΩÊü•");

131 
‰ame
.
ôems
[1].
pos
.
row
 = 2;

132 
‰ame
.
ôems
[1].
pos
.
cﬁ
 = 1;

133 
	`•rötf
(
‰ame
.
ôems
[1].
tôÀ
, "%s", "ËØ∑ËæìÂÖ•ËÆ§ËØÅÂØÜÁ†Å(HEX)Ôºö");

135 
‰ame
.
ôems
[2].
pos
.
row
 = 4;

136 
‰ame
.
ôems
[2].
pos
.
cﬁ
 = 1;

137 
	`•rötf
(
‰ame
.
ôems
[2].
tôÀ
, "%s", "Ê†ºÂºè‰∏∫ÂÖ´‰∏™ÂçÅÂÖ≠ËøõÂà∂Êï∞");

139 
	`show_sim∂e_‰ame
(&
‰ame
);

140  
SUCCESS
;

142 
	}
}

144 
	$show_ö•e˘_UI
(*
tôÀ
)

146 
sim∂e_‰ame
 
‰ame
;

148 
	`mem£t
(&
‰ame
, 0, (frame));

150 
‰ame
.
ôem_num
 = 3;

151 
‰ame
.
ôems
[0].
pos
.
row
 = 1;

152 
‰ame
.
ôems
[0].
pos
.
cﬁ
 = 6 - 
	`°æí
(
tôÀ
)/4;

153 
	`•rötf
(
‰ame
.
ôems
[0].
tôÀ
, "%s",Åitle);

155 
‰ame
.
ôems
[1].
pos
.
row
 = 2;

156 
‰ame
.
ôems
[1].
pos
.
cﬁ
 = 1;

157 
	`•rötf
(
‰ame
.
ôems
[1].
tôÀ
, "%s", "Ëµ∑ÂßãÊó•ÊúüÔºö");

159 
‰ame
.
ôems
[2].
pos
.
row
 = 3;

160 
‰ame
.
ôems
[2].
pos
.
cﬁ
 = 1;

161 
	`•rötf
(
‰ame
.
ôems
[2].
tôÀ
, "%s", "ÁªàÊ≠¢Êó•Êúü: ");

163 
‰ame
.
ôems
[2].
pos
.
row
 = 4;

164 
‰ame
.
ôems
[2].
pos
.
cﬁ
 = 1;

165 
	`•rötf
(
‰ame
.
ôems
[2].
tôÀ
, "%s", "Êó•ÊúüÊ†ºÂºèÔºö20150101");

167 
	`show_sim∂e_‰ame
(&
‰ame
);

168  
SUCCESS
;

169 
	}
}

172 
	$show_ö•e˘_chk_öfo
(*
tôÀ
, 
èx_sys_check_idx
 *
chk_idx
)

174 
buf
[10] = {0};

175 
sim∂e_‰ame
 
‰ame
;

177 
	`mem£t
(&
‰ame
, 0, (frame));

179 
‰ame
.
ôem_num
 = 3;

180 
‰ame
.
ôems
[0].
pos
.
row
 = 1;

181 
‰ame
.
ôems
[0].
pos
.
cﬁ
 = 6 - 
	`°æí
(
tôÀ
)/4;

182 
	`•rötf
(
‰ame
.
ôems
[0].
tôÀ
, "%s",Åitle);

184 
‰ame
.
ôems
[1].
pos
.
row
 = 2;

185 
‰ame
.
ôems
[1].
pos
.
cﬁ
 = 1;

186 
	`bcd_to_°r
((
uch¨
 *)&
chk_idx
->
°¨t_d©e
, 
buf
, 4);

187 
	`•rötf
(
‰ame
.
ôems
[1].
tôÀ
, "Ëµ∑ÂßãÊó•Êúü: %s", 
buf
);

189 
‰ame
.
ôems
[2].
pos
.
row
 = 3;

190 
‰ame
.
ôems
[2].
pos
.
cﬁ
 = 1;

191 
	`bcd_to_°r
((
uch¨
 *)&
chk_idx
->
íd_d©e
, 
buf
, 4);

192 
	`•rötf
(
‰ame
.
ôems
[2].
tôÀ
, "ÁªàÊ≠¢Êó•ÊúüÔºö%s", 
buf
);

194 
‰ame
.
ôems
[2].
pos
.
row
 = 4;

195 
‰ame
.
ôems
[2].
pos
.
cﬁ
 = 1;

196 
	`•rötf
(
‰ame
.
ôems
[2].
tôÀ
, "ËÆ∞ÂΩïÊù°Êï∞Ôºö%d", 
chk_idx
->
ªc_num
);

198 
	`show_sim∂e_‰ame
(&
‰ame
);

199  
SUCCESS
;

200 
	}
}

202 
	$do_£t_d©e
()

204 
ªt
;

205 
uöt
 
y
, 
m
, 
d
;

206 
tôÀ
[48 + 1] = {0};

208 
bcd_d©e
 
today
, 
√w_d©e
;

209 
π_›î©e
 *
π_›s
 = 
	`gë_π_›s
();

211 
	`mem£t
(&
today
, 0, (today));

212 
	`mem£t
(&
√w_d©e
, 0, (new_date));

214 
ªt
 = 
π_›s
->
	`gë_cur_d©e
(&
today
);

215 i‡(
ªt
 !
SUCCESS
) {

216 
	`di•œy_îr_msg
(
ªt
);

217  
FAIL
;

220 
	`bcd_to_gªg
(&
today
, &
y
, &
m
, &
d
);

221 
	`¢¥ötf
(
tôÀ
, 48, "‰ªäÂ§©ÊòØ%d-%02d-%02d, ÊòØÂê¶ÈáçÁΩÆÊó•ÊúüÔºü", 
y
, 
m
, 
d
);

223 
ªt
 = 
	`que°i⁄_u£r
(
tôÀ
);

224 i‡(
ªt
 =
NEGATIVE
) {

225  
SUCCESS
;

229 
	`show_£tup_d©e
(&
today
);

230 
ªt
 = 
	`gë_bcd_d©e
(3, 6, &
√w_d©e
);

231 i‡(
ªt
 !
SUCCESS
) {

232 i‡(
ªt
 =-
EUI_ESC
) {

233 
ªt
 = 
	`que°i⁄_u£r
("Á°ÆËÆ§ÂèñÊ∂àÊú¨Ê¨°Êìç‰ΩúÔºü");

234 i‡(
ªt
 =
POSITIVE
)

235  -
EUI_ESC
;

240 i‡(
ªt
 =-
EUI_BAD_DATE_FORMAT
) {

241 
	`di•œy_öfo
("ËæìÂÖ•Êó•ÊúüÊ†ºÂºèÈîôËØØ");

245 } i‡(
ªt
 =
SUCCESS
)

249 
ªt
 = 
π_›s
->
	`£t_cur_d©e
(&
√w_d©e
);

250 i‡(
ªt
 !
SUCCESS
) {

251 
	`di•œy_îr_msg
(
ªt
);

252  
FAIL
;

255 
	`di•œy_öfo
("Êó•ÊúüËÆæÁΩÆÊàêÂäü!");

257  
SUCCESS
;

258 
	}
}

260 
	$do_£t_time
()

262 
ªt
;

263 
tôÀ
[48 + 1] = {0};

265 
gªg_time
 
now
, 
√w_time
;

266 
π_›î©e
 *
π_›s
 = 
	`gë_π_›s
();

268 
	`mem£t
(&
now
, 0, (now));

269 
	`mem£t
(&
√w_time
, 0, (new_time));

271 
ªt
 = 
π_›s
->
	`gë_cur_time
(&
now
);

272 i‡(
ªt
 !
SUCCESS
) {

273 
	`di•œy_îr_msg
(
ªt
);

274  
FAIL
;

277 
	`¢¥ötf
(
tôÀ
, 48, "Áé∞Âú®Êó∂Èó¥ÊòØ%d:%02d:%02d, ÊòØÂê¶ÈáçÁΩÆÊó∂Èó¥Ôºü",

278 
now
.
hour
,Çow.
mö
,Çow.
£c
);

280 
ªt
 = 
	`que°i⁄_u£r
(
tôÀ
);

281 i‡(
ªt
 =
NEGATIVE
) {

282  
SUCCESS
;

286 
	`show_£tup_time
(&
now
);

287 
ªt
 = 
	`gë_gªg_time
(3, 6, &
√w_time
);

288 i‡(
ªt
 =-
EUI_ESC
) {

289 
ªt
 = 
	`que°i⁄_u£r
("Á°ÆËÆ§ÂèñÊ∂àÊú¨Ê¨°Êìç‰ΩúÔºü");

290 i‡(
ªt
 =
POSITIVE
)

291  -
EUI_ESC
;

294 } i‡(
ªt
 =
SUCCESS
)

298 
ªt
 = 
π_›s
->
	`£t_cur_time
(&
√w_time
);

299 i‡(
ªt
 !
SUCCESS
) {

300 
	`di•œy_îr_msg
(
ªt
);

301  
FAIL
;

304 
	`di•œy_öfo
("Êó∂Èó¥ËÆæÁΩÆÊàêÂäü!");

306  
SUCCESS
;

307 
	}
}

309 
ölöe
 
	$do_check_d©e
(
bcd_d©e
 *
s_d©e
, bcd_d©ê* 
e_d©e
)

311 
ªt
;

312 
bcd_d©e
 
today
;

313 
π_›î©e
 *
π_›s
 = 
	`gë_π_›s
();

315 
ªt
 = 
π_›s
->
	`gë_cur_d©e
(&
today
);

316 i‡(
ªt
 !
SUCCESS
)

317  
ªt
;

319 i‡(
π_›s
->
	`cmp_bcd_d©e
(
s_d©e
, 
e_d©e
) > 0) {

320 
	`di•œy_w¨n
("ÁªàÊ≠¢Êó•ÊúüÂøÖÈ°ªÂú®Ëµ∑ÂßãÊó•Êúü‰πãÂêéÔºÅ");

321  
FAIL
;

324 i‡(
π_›s
->
	`cmp_bcd_d©e
(
e_d©e
, &
today
) > 0) {

325 
	`di•œy_w¨n
("ÁªàÊ≠¢Êó•Êúü‰∏çËÉΩÂú®‰ªäÊó•‰πãÂêéÔºÅ");

326  
FAIL
;

329  
SUCCESS
;

330 
	}
}

337 
	$do_ö•e˘_¥ï¨e
(
ty≥
, 
èx_sys_check_öfo
 *
chk_öfo
)

339 
ªt
;

340 
bcd_d©e
 
today
;

341 
uch¨
 
pö
[8] = {0};

342 
π_›î©e
 * 
π_›s
 = 
	`gë_π_›s
();

343 
èx_sy°em
 *Åax_sy°em = 
	`gë_èx_sy°em
();

344 
èx_sys_≠p_öfo
 *
gp_≠p_öfo
 = 
	`gë_sys_≠p_öfo
();

346 
ªt
 = 
èx_sy°em
->
	`gë_check_öfo
(
chk_öfo
);

347 i‡(
ªt
 < 0)

348  
ªt
;

350 i‡(
chk_öfo
->
ty≥
 !=Åype) {

351 
	`di•œy_w¨n
("Á®ΩÊü•Âç°Á±ªÂûã‰∏çÂåπÈÖçÔºÅ");

352  
FAIL
;

355 
ªt
 = 
π_›s
->
	`gë_cur_d©e
(&
today
);

356 i‡(
π_›s
->
	`cmp_bcd_d©e
(&
today
, &
chk_öfo
->
vÆid_d©e
) > 0) {

357 
	`di•œy_w¨n
("Á®ΩÊü•Âç°Â∑≤ËøáÊúâÊïàÊúüÔºÅ");

358  
FAIL
;

361 i‡(
chk_öfo
->
Àvñ
 != 0xFF) {

362 i‡(
	`memcmp
(
chk_öfo
->
èx∑yî_nb
, 
gp_≠p_öfo
->taxpayer_nb, 8) != 0) {

363 
	`di•œy_w¨n
("ÈùûÊú¨Á∫≥Á®éÊà∑Á®ΩÊü•Âç°ÔºÅ");

364  
FAIL
;

367 
	`di•œy_öfo
("ËÆ§ËØÅÊàêÂäüÔºÅ");

368  
SUCCESS
;

372 
ªt
 = 
	`que°i⁄_u£r
("ÊòØÂê¶ËæìÂÖ•Á®ΩÊü•Âç°ËÆ§ËØÅÂØÜÁ†ÅÔºü");

373 i‡(
ªt
 !
POSITIVE
)

374  
SUCCESS
;

376 
gë_pö
:

377 
	`show_gë_vîify_pö
();

378 
ªt
 = 
	`gë_hex_num
(2, 1, 
pö
, 8);

379 i‡(
ªt
 =-
EUI_ESC
) {

380 
ªt
 = 
	`que°i⁄_u£r
("ÊòØÂê¶ÂèñÊ∂àÂΩìÂâçÊìç‰ΩúÔºÅ");

381 i‡(
ªt
 =
POSITIVE
)

382  
FAIL
;

384 
gë_pö
;

387 
ªt
 = 
èx_sy°em
->
	`vîify_check_ˇrd
(
pö
);

388 i‡(
ªt
 !
SUCCESS
) {

389 
	`di•œy_w¨n
("Á®ΩÊü•Âç°ËÆ§ËØÅÂ§±Ë¥•ÔºÅ");

390  
ªt
;

393 
	`di•œy_öfo
("ËÆ§ËØÅÊàêÂäü!");

394  
SUCCESS
;

395 
	}
}

402 
	$do_upd©e_daûy_ªc‹d
(
èx_sys_check_öfo
 *
chk_öfo
,

403 
èx_sys_check_idx
 *
chk_idx
)

405 
ªt
;

406 
key
, 
cur_off£t
;

407 
èx_sy°em
 *Åax_sy°em = 
	`gë_èx_sy°em
();

409 
cur_off£t
 = 
chk_idx
->
°¨t_off£t
;

411 
i
;

412 
i
 = 0; i < 
chk_idx
->
ªc_num
; i++) {

413 i‡(
chk_öfo
->
ªc_num
 >chk_öfo->
tŸÆ_num
) {

414 
	`di•œy_öfo
("Á®ΩÊü•Âç°Â∑≤Êª°ÔºåËØ∑Êç¢Âç°ÂêéÊåâ‰ªªÊÑèÈîÆÁªßÁª≠ÔºåÈÄÄÂá∫ËØ∑ÊåâÂèñÊ∂à");

415 
key
 = 
	`gë_™ykey
();

416 i‡(
key
 =
ESC
)

417  
FAIL
;

420 
	`di•œy_öfo
("Ê≠£Âú®Ê†°È™åÊñ∞Á®ΩÊü•Âç°...");

422 
ªt
 = 
	`do_ö•e˘_¥ï¨e
(
INSPECT_DAILY_SUM
, 
chk_öfo
);

423 i‡(
ªt
 !
SUCCESS
) {

424 
	`di•œy_öfo
("Ê†°È™åÂ§±Ë¥•ÔºåËØ∑Êç¢Âç°ÂêéÊåâ‰ªªÊÑèÈîÆÁªßÁª≠ÔºåÈÄÄÂá∫ËØ∑ÊåâÂèñÊ∂à");

425 
key
 = 
	`gë_™ykey
();

426 i‡(
key
 =
ESC
)

427  
FAIL
;

434 
	`˛ór_s¸ìn
();

435 
	`di•œy_°r
(1, 1, "Ê≠£Âú®ÂÜôÂÖ•...Á¨¨%dÊù°ÔºåÂÖ±%dÊù°", 
i
 + 1, 
chk_idx
->
ªc_num
);

438 
ªt
 = 
èx_sy°em
->
	`wrôe_check_daûy_dëaû
(
cur_off£t
, 
chk_öfo
->
ªc_num
 + 1);

439 i‡(
ªt
 !
SUCCESS
) {

440 
	`di•œy_w¨n
("ÂÜôÂç°Âá∫ÈîôÔºÅ");

441 
	`di•œy_îr_msg
(
ªt
);

442  
ªt
;

445 
cur_off£t
 ++;

446 
chk_öfo
->
ªc_num
 ++;

449 
	`di•œy_w¨n
("ÂÜôÂç°ÂÆåÊàêÔºÅ");

450  
SUCCESS
;

451 
	}
}

453 
	$do_upd©e_de˛¨e_ªc‹d
(
èx_sys_check_öfo
 *
chk_öfo
,

454 
èx_sys_check_idx
 *
chk_idx
)

456 
ªt
;

457 
key
, 
cur_off£t
;

458 
èx_sy°em
 *Åax_sy°em = 
	`gë_èx_sy°em
();

460 
cur_off£t
 = 
chk_idx
->
°¨t_off£t
;

462 
i
, 
ªc‹d_nb
;

463 
i
 = 1, 
ªc‹d_nb
 = 
chk_idx
->
ªc_num
;

465 
ªc‹d_nb
 > 0) {

466 i‡(
chk_öfo
->
ªc_num
 >chk_öfo->
tŸÆ_num
) {

467 
	`di•œy_öfo
("Á®ΩÊü•Âç°Â∑≤Êª°ÔºåËØ∑Êç¢Âç°ÂêéÊåâ‰ªªÊÑèÈîÆÁªßÁª≠ÔºåÈÄÄÂá∫ËØ∑ÊåâÂèñÊ∂à");

468 
key
 = 
	`gë_™ykey
();

469 i‡(
key
 =
ESC
)

470  
FAIL
;

473 
	`di•œy_öfo
("Ê≠£Âú®Ê†°È™åÊñ∞Á®ΩÊü•Âç°...");

475 
ªt
 = 
	`do_ö•e˘_¥ï¨e
(
INSPECT_DAILY_SUM
, 
chk_öfo
);

476 i‡(
ªt
 !
SUCCESS
) {

477 
	`di•œy_öfo
("Ê†°È™åÂ§±Ë¥•ÔºåËØ∑Êç¢Âç°ÂêéÊåâ‰ªªÊÑèÈîÆÁªßÁª≠ÔºåÈÄÄÂá∫ËØ∑ÊåâÂèñÊ∂à");

478 
key
 = 
	`gë_™ykey
();

479 i‡(
key
 =
ESC
)

480  
FAIL
;

487 
	`˛ór_s¸ìn
();

488 
	`di•œy_°r
(1, 1, "Ê≠£Âú®ÂÜôÂÖ•...Á¨¨%dÊù°ÔºåÂÖ±%dÊù°", 
i
, 
chk_idx
->
ªc_num
);

491 i‡(
ªc‹d_nb
 >= 2) {

492 
ªt
 = 
èx_sy°em
->
	`wrôe_check_de˛¨e_dëaû
(2, 
cur_off£t
,

493 
chk_öfo
->
ªc_num
 + 1);

494 
i
 += 2;

495 
cur_off£t
 += 2;

496 
ªc‹d_nb
 -= 2;

498 
ªt
 = 
èx_sy°em
->
	`wrôe_check_de˛¨e_dëaû
(1, 
cur_off£t
,

499 
chk_öfo
->
ªc_num
 + 1);

500 
i
 ++;

501 
cur_off£t
 ++;

502 
ªc‹d_nb
 --;

504 
chk_öfo
->
ªc_num
 ++;

506 i‡(
ªt
 !
SUCCESS
) {

507 
	`di•œy_w¨n
("ÂÜôÂç°Âá∫ÈîôÔºÅ");

508 
	`di•œy_îr_msg
(
ªt
);

509  
ªt
;

513 
	`di•œy_w¨n
("ÂÜôÂç°ÂÆåÊàêÔºÅ");

514  
SUCCESS
;

515 
	}
}

517 
	$do_upd©e_övoi˚_ªc‹d
(
èx_sys_check_öfo
 *
chk_öfo
,

518 
èx_sys_check_idx
 *
chk_idx
)

520 
ªt
, 
key
;

521 
ödex
, 
off£t
, 
cur_off£t
;

522 
èx_sy°em
 *Åax_sy°em = 
	`gë_èx_sy°em
();

524 
ödex
 = ((
chk_idx
->
°¨t_off£t
) >> 16) & 0xFFFF;

525 
off£t
 = (
chk_idx
->
°¨t_off£t
) & 0xFFFF;

527 
i
, 
ªc‹d_nb
;

528 
i
 = 1, 
ªc‹d_nb
 = 
chk_idx
->
ªc_num
;

530 
ªt
 = 0;

531 
ªc‹d_nb
 > 0) {

532 i‡(
chk_öfo
->
ªc_num
 >chk_öfo->
tŸÆ_num
) {

533 
	`di•œy_öfo
("Á®ΩÊü•Âç°Â∑≤Êª°ÔºåËØ∑Êç¢Âç°ÂêéÊåâ‰ªªÊÑèÈîÆÁªßÁª≠ÔºåÈÄÄÂá∫ËØ∑ÊåâÂèñÊ∂à");

534 
key
 = 
	`gë_™ykey
();

535 i‡(
key
 =
ESC
)

536  
FAIL
;

539 
	`di•œy_öfo
("Ê≠£Âú®Ê†°È™åÊñ∞Á®ΩÊü•Âç°...");

541 
ªt
 = 
	`do_ö•e˘_¥ï¨e
(
INSPECT_DAILY_SUM
, 
chk_öfo
);

542 i‡(
ªt
 !
SUCCESS
) {

543 
	`di•œy_öfo
("Ê†°È™åÂ§±Ë¥•ÔºåËØ∑Êç¢Âç°ÂêéÊåâ‰ªªÊÑèÈîÆÁªßÁª≠ÔºåÈÄÄÂá∫ËØ∑ÊåâÂèñÊ∂à");

544 
key
 = 
	`gë_™ykey
();

545 i‡(
key
 =
ESC
)

546  
FAIL
;

553 
	`˛ór_s¸ìn
();

554 
	`di•œy_°r
(1, 1, "Ê≠£Âú®ÂÜôÂÖ•...Á¨¨%dÊù°ÔºåÂÖ±%dÊù°", 
i
, 
chk_idx
->
ªc_num
);

556 
cur_off£t
 = ((
ödex
 & 0xffffË<< 16Ë| (
off£t
 & 0xffff);

559 i‡(
ªc‹d_nb
 >= 7) {

560 
ªt
 = 
èx_sy°em
->
	`wrôe_check_övoi˚_dëaû
(7, 
cur_off£t
,

561 
chk_öfo
->
ªc_num
 + 1);

563 
i
 += 7;

564 
ªc‹d_nb
 -= 7;

565 i‡(
off£t
 + 7 > 
INVOICE_DETAIL_REC_NUM
) {

566 
off£t
 = off£à+ 7 - 
INVOICE_DETAIL_REC_NUM
;

567 i‡(
ödex
 == 10)

568 
ödex
 = 1;

570 
ödex
 ++;

573 
ªt
 = 
èx_sy°em
->
	`wrôe_check_övoi˚_dëaû
(
ªc‹d_nb
, 
cur_off£t
,

574 
chk_öfo
->
ªc_num
 + 1);

575 
ªc‹d_nb
 = 0;

577 
chk_öfo
->
ªc_num
 ++;

579 i‡(
ªt
 !
SUCCESS
) {

580 
	`di•œy_w¨n
("ÂÜôÂç°Âá∫ÈîôÔºÅ");

581 
	`di•œy_îr_msg
(
ªt
);

582  
ªt
;

586 i‡(
ªt
 !
SUCCESS
)

587 
	`di•œy_w¨n
("ÂÜôÂç°Âá∫ÈîôÔºÅ");

589 
	`di•œy_w¨n
("ÂÜôÂç°ÂÆåÊàêÔºÅ");

590  
ªt
;

591 
	}
}

598 
	$cmd_n‹mÆ_de˛¨e_duty
()

600 
ªt
;

601 
bcd_d©e
 
today
;

602 
bcd_d©e
 
œ°_de˛¨e_d©e
, 
de˛¨e_limô_d©e
, 
de˛¨e_íd_d©e
;

604 
π_›î©e
 *
π_›s
 = 
	`gë_π_›s
();

605 
èx_sy°em
 *Åax_sy°em = 
	`gë_èx_sy°em
();

606 
èx_sys_≠p_öfo
 * 
g_≠p_öfo
 = 
	`gë_sys_≠p_öfo
();

608 
	`mem£t
(&
today
, 0, (today));

609 
	`mem£t
(&
œ°_de˛¨e_d©e
, 0, (last_declare_date));

610 
	`mem£t
(&
de˛¨e_limô_d©e
, 0, (declare_limit_date));

611 
	`mem£t
(&
de˛¨e_íd_d©e
, 0, (declare_end_date));

613 
ªt
 = 
èx_sy°em
->
	`is_fisˇl_öô
();

614 i‡(
ªt
 !
POSITIVE
) {

615 
	`di•œy_w¨n
("Êú¨Êú∫Â∞öÊú™Á®éÊéßÂàùÂßãÂåñÔºåÊó†Ê≥ïËøõË°åÊ≠§Êìç‰ΩúÔºÅ");

616  
FAIL
;

619 
ªt
 = 
	`check_u£æevñ
(
MANAGER_USER
);

620 i‡(
ªt
 !
POSITIVE
) {

621 
	`di•œy_öfo
("ÊùÉÈôêÈôêÂà∂ÔºåÊó†Ê≥ïËøõË°åÊ≠§Êìç‰ΩúÔºÅ");

622  
FAIL
;

625 
	`di•œy_öfo
("Ê≠£Âú®ÂáÜÂ§áÁ®éÊéßÁî≥Êä•...");

627 
ªt
 = 
π_›s
->
	`gë_cur_d©e
(&
today
);

628 i‡(
ªt
 !
SUCCESS
)

629 
Áû
;

632 
ªt
 = 
π_›s
->
	`gë_¥ev_d©e
(&
today
);

633 i‡(
ªt
 !
SUCCESS
)

634 
Áû
;

636 
ªt
 = 
èx_sy°em
->
	`gë_œ°_de˛¨e_d©e
(&
œ°_de˛¨e_d©e
);

637 i‡(
ªt
 !
SUCCESS
){

638 i‡(
ªt
 =-
EFILE_NO_REC
) {

639 
œ°_de˛¨e_d©e
 = 
g_≠p_öfo
->
öô_d©e
;

641 
Áû
;

644 
ªt
 = 
π_›s
->
	`cmp_bcd_d©e
(&
today
, &
œ°_de˛¨e_d©e
);

645 i‡(
ªt
 == 0) {

646 
	`di•œy_w¨n
("Êú¨Êú∫ÊöÇÊó†ÂèØÁî≥Êä•Êï∞ÊçÆ, ÊòéÊó•ÂÜçËøõË°åÁî≥Êä•ÔºÅ");

647  
FAIL
;

650 
de˛¨e_limô_d©e
 = 
today
;

651 
ªt
 = 
èx_sy°em
->
	`check_de˛¨e_d©e
(&
de˛¨e_limô_d©e
);

652 i‡(
ªt
 !
SUCCESS
)

653 
Áû
;

655 
ªt
 = 
π_›s
->
	`cmp_bcd_d©e
(&
de˛¨e_limô_d©e
, &
œ°_de˛¨e_d©e
);

656 i‡(
ªt
 <= 0) {

657 
	`di•œy_w¨n
("Êú¨Êú∫ÊöÇÊó†ÂèØÁî≥Êä•Êï∞ÊçÆ, ÊòéÊó•ÂÜçËøõË°åÁî≥Êä•ÔºÅ");

658  
FAIL
;

662 
	`show_gë_ídd©e
(&
œ°_de˛¨e_d©e
, &
de˛¨e_limô_d©e
);

663 
ªt
 = 
	`gë_bcd_d©e
(3, 1, &
de˛¨e_íd_d©e
);

664 i‡(
ªt
 !
SUCCESS
) {

665 i‡(
ªt
 =-
EUI_ESC
) {

666 
ªt
 = 
	`que°i⁄_u£r
("ÊòØÂê¶ÂèñÊ∂àÊú¨Ê¨°Áî≥Êä•Ôºü");

667 i‡(
ªt
 =
POSITIVE
)

668  
FAIL
;

673 i‡(
ªt
 =-
EUI_BAD_DATE_FORMAT
) {

674 
	`di•œy_w¨n
("ËæìÂÖ•Êó•ÊúüÊ†ºÂºèÈîôËØØÔºÅ");

678 } i‡(
ªt
 =
SUCCESS
) {

679 i‡((
π_›s
->
	`cmp_bcd_d©e
(&
de˛¨e_íd_d©e
, &
œ°_de˛¨e_d©e
) > 0)

680 && (
π_›s
->
	`cmp_bcd_d©e
(&
de˛¨e_íd_d©e
, &
de˛¨e_limô_d©e
) <= 0)){

683 
	`di•œy_w¨n
("ËæìÂÖ•ÁöÑÊà™Ê≠¢Êó•Êúü‰∏çÂú®ÂèØÁî≥Êä•ËåÉÂõ¥‰πãÂÜÖÔºÅ");

689 
	`di•œy_öfo
("Ê≠£Âú®Áî≥Êä•...");

691 
ªt
 = 
èx_sy°em
->
	`de˛¨e_duty
(
NORMAL_DECLARE
, &
de˛¨e_íd_d©e
);

692 i‡(
ªt
 !
SUCCESS
) {

693 i‡(
ªt
 =-
ETAX_NODATA_TO_DECLARE
) {

694 
	`di•œy_w¨n
("Êú¨Êú∫ÊöÇÊó†ÂèØÁî≥Êä•Êï∞ÊçÆÔºÅ");

695  
FAIL
;

697 
Áû
;

700 #ifde‡
CONFIG_DETAIL_DECLARE


701 
	`di•œy_öfo
("ÊòéÁªÜÁî≥Êä•Â∞öÊú™ÂÆåÂñÑÔºÅ");

704 
	`di•œy_w¨n
("Áî≥Êä•ÂÆåÊØïÔºåËØ∑ÂèäÊó∂ÂÆåÊàêÊä•Á®éÂπ∂ËøõË°åÁ®éÊéßÊõ¥Êñ∞ÔºÅ");

705  
SUCCESS
;

707 
Áû
:

708 
	`di•œy_îr_msg
(
ªt
);

709  
FAIL
;

710 
	}
}

716 
	$cmd_m⁄th_de˛¨e_duty
()

718 
ªt
;

719 
bcd_d©e
 
today
;

720 
bcd_d©e
 
œ°_de˛¨e_d©e
, 
de˛¨e_limô_d©e
, 
de˛¨e_íd_d©e
;

722 
π_›î©e
 *
π_›s
 = 
	`gë_π_›s
();

723 
èx_sy°em
 *Åax_sy°em = 
	`gë_èx_sy°em
();

724 
èx_sys_≠p_öfo
 * 
g_≠p_öfo
 = 
	`gë_sys_≠p_öfo
();

726 
	`mem£t
(&
today
, 0, (today));

727 
	`mem£t
(&
œ°_de˛¨e_d©e
, 0, (last_declare_date));

728 
	`mem£t
(&
de˛¨e_limô_d©e
, 0, (declare_limit_date));

729 
	`mem£t
(&
de˛¨e_íd_d©e
, 0, (declare_end_date));

731 
ªt
 = 
èx_sy°em
->
	`is_fisˇl_öô
();

732 i‡(
ªt
 !
POSITIVE
) {

733 
	`di•œy_w¨n
("Êú¨Êú∫Â∞öÊú™Á®éÊéßÂàùÂßãÂåñÔºåÊó†Ê≥ïËøõË°åÊ≠§Êìç‰ΩúÔºÅ");

734  
FAIL
;

737 
ªt
 = 
	`check_u£æevñ
(
MANAGER_USER
);

738 i‡(
ªt
 !
POSITIVE
) {

739 
	`di•œy_w¨n
("ÊùÉÈôêÈôêÂà∂ÔºåÊó†Ê≥ïËøõË°åÊ≠§Êìç‰ΩúÔºÅ");

740  
FAIL
;

743 
	`di•œy_öfo
("Ê≠£Âú®ÂáÜÂ§áÁ®éÊéßÁî≥Êä•...");

745 
ªt
 = 
π_›s
->
	`gë_cur_d©e
(&
today
);

746 i‡(
ªt
 !
SUCCESS
)

747 
Áû
;

749 
ªt
 = 
π_›s
->
	`gë_¥ev_d©e
(&
today
);

750 i‡(
ªt
 !
SUCCESS
)

751 
Áû
;

753 
ªt
 = 
èx_sy°em
->
	`gë_œ°_de˛¨e_d©e
(&
œ°_de˛¨e_d©e
);

754 i‡(
ªt
 !
SUCCESS
){

755 i‡(
ªt
 =-
EFILE_NO_REC
) {

756 
œ°_de˛¨e_d©e
 = 
g_≠p_öfo
->
öô_d©e
;

758 
Áû
;

761 
ªt
 = 
π_›s
->
	`cmp_bcd_d©e
(&
today
, &
œ°_de˛¨e_d©e
);

762 i‡(
ªt
 == 0) {

763 
	`di•œy_w¨n
("Êú¨ÊúàÊöÇÊó†ÂèØÁî≥Êä•Êï∞ÊçÆ, ‰∏ãÊúàÂÜçËøõË°åÁî≥Êä•ÔºÅ");

764  
FAIL
;

767 
	`di•œy_öfo
("Ê≠£Âú®Áî≥Êä•...");

769 
ªt
 = 
èx_sy°em
->
	`de˛¨e_duty
(
MONTH_DECLARE
, 
NULL
);

770 i‡(
ªt
 !
SUCCESS
) {

771 i‡(
ªt
 =-
ETAX_NODATA_TO_DECLARE
) {

772 
	`di•œy_w¨n
("Êú¨ÊúàÊöÇÊó†ÂèØÁî≥Êä•Êï∞ÊçÆ, ‰∏ãÊúàÂÜçËøõË°åÁî≥Êä•ÔºÅ");

773  
FAIL
;

775 
Áû
;

778 #ifde‡
CONFIG_DETAIL_DECLARE


779 
	`di•œy_öfo
("ÊòéÁªÜÁî≥Êä•Â∞öÊú™ÂÆåÂñÑÔºÅ");

782 
	`di•œy_öfo
("Áî≥Êä•ÂÆåÊØïÔºåËØ∑ÂèäÊó∂ÂÆåÊàêÊä•Á®éÂπ∂ËøõË°åÁ®éÊéßÊõ¥Êñ∞ÔºÅ");

784  
SUCCESS
;

786 
Áû
:

787 
	`di•œy_îr_msg
(
ªt
);

788  
FAIL
;

789 
	}
}

795 
	$cmd_de˛¨e_¥evõw
()

800 
	`di•œy_w¨n
("ÂäüËÉΩÂ∞öÊú™ÂÆåÂñÑÔºÅ");

802  
SUCCESS
;

803 
	}
}

812 
	$cmd_£t_d©e_time
()

814 
ªt
;

815 
èx_sy°em
 *Åax_sy°em = 
	`gë_èx_sy°em
();

816 
èx_sys_check_öfo
 
chk_öfo
;

818 
	`mem£t
(&
chk_öfo
, 0, (chk_info));

819 
ªt
 = 
	`check_u£æevñ
(
DEVELOP_USER
);

820 i‡(
ªt
 =
POSITIVE
)

821 
£t_d©e
;

823 
ªt
 = 
èx_sy°em
->
	`is_fisˇl_öô
();

824 i‡(
ªt
 !
POSITIVE
)

825 
£t_d©e
;

827 
	`di•œy_öfo
("Ê≠£Âú®Ê†°È™åÁ®ΩÊü•Âç°...");

828 
ªt
 = 
	`do_ö•e˘_¥ï¨e
(
INSPECT_MOD_TIME
, &
chk_öfo
);

829 i‡(
ªt
 !
SUCCESS
) {

830 
	`di•œy_w¨n
("Á®ΩÊü•Âç°Ê†°È™åÂ§±Ë¥•ÔºÅ");

831  
ªt
;

834 
£t_d©e
;

837 
£t_d©e
:

838 
ªt
 = 
	`do_£t_d©e
();

839 i‡(
ªt
 !
SUCCESS
)

840  
ªt
;

842 
ªt
 = 
	`do_£t_time
();

843 i‡(
ªt
 !
SUCCESS
)

844  
ªt
;

846  
SUCCESS
;

847 
	}
}

853 
	$cmd_ö•e˘_öv_by_d©e
()

855 
ªt
;

856 
èx_sys_check_idx
 
chk_idx
;

857 
èx_sys_check_öfo
 
chk_öfo
;

859 
	`mem£t
(&
chk_idx
, 0, (chk_idx));

860 
	`mem£t
(&
chk_öfo
, 0, (chk_info));

862 
	`di•œy_öfo
("Ê≠£Âú®Ê†°È™åÁ®ΩÊü•Âç°...");

864 
ªt
 = 
	`do_ö•e˘_¥ï¨e
(
INSPECT_INV_DETAIL
, &
chk_öfo
);

865 i‡(
ªt
 !
SUCCESS
)

866  
ªt
;

868 
gë_d©e
:

869 
	`show_ö•e˘_UI
("Ê†∏Êü•ÂèëÁ•®ÊòéÁªÜÊï∞ÊçÆ");

870 
ªt
 = 
	`gë_bcd_d©e
(2, 6, &
chk_idx
.
°¨t_d©e
);

871 i‡(
ªt
 =-
EUI_ESC
) {

872 
ªt
 = 
	`que°i⁄_u£r
("ÊòØÂê¶ÂèñÊ∂àÂΩìÂâçÊìç‰ΩúÔºÅ");

873 i‡(
ªt
 =
POSITIVE
)

874  
FAIL
;

876 
	`mem£t
(&
chk_idx
.
°¨t_d©e
, 0, (chk_idx.start_date));

877 
gë_d©e
;

881 
ªt
 = 
	`gë_bcd_d©e
(3, 6, &
chk_idx
.
íd_d©e
);

882 i‡(
ªt
 =-
EUI_ESC
) {

883 
ªt
 = 
	`que°i⁄_u£r
("ÊòØÂê¶ÂèñÊ∂àÂΩìÂâçÊìç‰ΩúÔºÅ");

884 i‡(
ªt
 =
POSITIVE
)

885  
FAIL
;

887 
	`mem£t
(&
chk_idx
.
°¨t_d©e
, 0, (chk_idx.start_date));

888 
	`mem£t
(&
chk_idx
.
íd_d©e
, 0, (chk_idx.end_date));

889 
gë_d©e
;

894 
ªt
 = 
	`do_check_d©e
(&
chk_idx
.
°¨t_d©e
, &chk_idx.
íd_d©e
);

895 i‡(
ªt
 !
SUCCESS
)

896 
gë_d©e
;

898 
	`di•œy_öfo
("Ê≠£Âú®Êü•ÊâæÂèëÁ•®ÊòéÁªÜÊï∞ÊçÆ...");

900 
ªt
 = 
	`èx_fûe_föd_chk_övoi˚_idx
(&
chk_idx
);

901 i‡(
ªt
 !
SUCCESS
) {

902 i‡(
ªt
 =-
EFILE_NO_REC
) {

903 
	`di•œy_w¨n
("Êó†ÊâæÂà∞ËÆ∞ÂΩïÔºåËØ∑Á°ÆËÆ§Êó•ÊúüËæìÂÖ•Ê≠£Á°ÆÔºÅ");

904 
gë_d©e
;

907 
	`di•œy_w¨n
("Êü•ÊâæÂèëÁ•®ÊòéÁªÜÂá∫ÈîôÔºÅ");

908 
	`di•œy_îr_msg
(
ªt
);

909  
ªt
;

912 
	`show_ö•e˘_chk_öfo
("ÂèëÁ•®ÊòéÁªÜÊü•ÊâæÁªìÊûú", &
chk_idx
);

913 
	`gë_™ykey
();

915 
ªt
 = 
	`que°i⁄_u£r
("ÊòØÂê¶Â∞ÜËÆ∞ÂΩïÂÜôÂÖ•Á®ΩÊü•Âç°Ôºü");

916 i‡(
ªt
 !
POSITIVE
)

917  
SUCCESS
;

920 
ªt
 = 
	`do_upd©e_övoi˚_ªc‹d
(&
chk_öfo
, &
chk_idx
);

921  
ªt
;

922 
	}
}

928 
	$cmd_ö•e˘_öv_by_nb
()

930 
ªt
;

931 
öv_nb
 = 0;

932 
èx_sys_check_idx
 
chk_idx
;

933 
èx_sys_check_öfo
 
chk_öfo
;

935 
sim∂e_‰ame
 
‰ame
;

936 
èx_sys_övoi˚_dëaû_ªc‹d
 
öv_dëaû
;

938 
	`mem£t
(&
chk_idx
, 0, (chk_idx));

939 
	`mem£t
(&
chk_öfo
, 0, (chk_info));

940 
	`mem£t
(&
‰ame
, 0, (frame));

942 
	`di•œy_öfo
("Ê≠£Âú®Ê†°È™åÁ®ΩÊü•Âç°...");

944 
ªt
 = 
	`do_ö•e˘_¥ï¨e
(
INSPECT_INV_DETAIL
, &
chk_öfo
);

945 i‡(
ªt
 !
SUCCESS
)

946  
ªt
;

948 
‰ame
.
ôem_num
 = 2;

949 
‰ame
.
ôems
[0].
pos
.
row
 = 1;

950 
‰ame
.
ôems
[0].
pos
.
cﬁ
 = 1;

951 
	`•rötf
(
‰ame
.
ôems
[0].
tôÀ
, "Ê†∏Êü•ÂèëÁ•®ÊòéÁªÜÊï∞ÊçÆ");

953 
‰ame
.
ôems
[1].
pos
.
row
 = 2;

954 
‰ame
.
ôems
[1].
pos
.
cﬁ
 = 1;

955 
	`•rötf
(
‰ame
.
ôems
[1].
tôÀ
, "ËØ∑ËæìÂÖ•ÂèëÁ•®Âè∑Ôºö");

957 
gë_öv_nb
:

958 
	`show_sim∂e_‰ame
(&
‰ame
);

959 
ªt
 = 
	`gë_öãr_num
(3, 1, &
öv_nb
);

960 i‡(
ªt
 =-
EUI_ESC
) {

961 
ªt
 = 
	`que°i⁄_u£r
("ÊòØÂê¶ÂèñÊ∂àÂΩìÂâçÊìç‰ΩúÔºÅ");

962 i‡(
ªt
 =
POSITIVE
)

963  
FAIL
;

965 
gë_öv_nb
;

968 
ªt
 = 
	`èx_fûe_föd_övoi˚_dëaû
((
uöt
 *)&
öv_nb
, &
öv_dëaû
);

969 i‡(
ªt
 !
SUCCESS
 ||Ñë !-
ETAX_INV_HAS_RETURNED
) {

970 
	`di•œy_w¨n
("Êü•ÊâæÂèëÁ•®ÊòéÁªÜÂá∫ÈîôÔºÅ");

971 
	`di•œy_îr_msg
(
ªt
);

972  
FAIL
;

975 
chk_idx
.
ªc_num
 = 1;

976 
chk_idx
.
°¨t_off£t
 = 
öv_nb
;

979 
ªt
 = 
	`do_upd©e_övoi˚_ªc‹d
(&
chk_öfo
, &
chk_idx
);

980  
ªt
;

981 
	}
}

987 
	$cmd_ö•e˘_daûy_cﬁÀ˘
()

989 
ªt
;

990 
èx_sys_check_idx
 
chk_idx
;

991 
èx_sys_check_öfo
 
chk_öfo
;

992 
èx_sy°em
 *Åax_sy°em = 
	`gë_èx_sy°em
();

994 
	`mem£t
(&
chk_idx
, 0, (chk_idx));

995 
	`mem£t
(&
chk_öfo
, 0, (chk_info));

997 
	`di•œy_öfo
("Ê≠£Âú®Ê†°È™åÁ®ΩÊü•Âç°...");

999 
ªt
 = 
	`do_ö•e˘_¥ï¨e
(
INSPECT_DAILY_SUM
, &
chk_öfo
);

1000 i‡(
ªt
 !
SUCCESS
)

1001  
ªt
;

1003 
gë_d©e
:

1004 
	`show_ö•e˘_UI
("Á®ΩÊü•Êó•Ê±áÊÄª");

1005 
ªt
 = 
	`gë_bcd_d©e
(2, 6, &
chk_idx
.
°¨t_d©e
);

1006 i‡(
ªt
 =-
EUI_ESC
) {

1007 
ªt
 = 
	`que°i⁄_u£r
("ÊòØÂê¶ÂèñÊ∂àÂΩìÂâçÊìç‰ΩúÔºÅ");

1008 i‡(
ªt
 =
POSITIVE
)

1009  
FAIL
;

1011 
	`mem£t
(&
chk_idx
.
°¨t_d©e
, 0, (chk_idx.start_date));

1012 
gë_d©e
;

1016 
ªt
 = 
	`gë_bcd_d©e
(3, 6, &
chk_idx
.
íd_d©e
);

1017 i‡(
ªt
 =-
EUI_ESC
) {

1018 
ªt
 = 
	`que°i⁄_u£r
("ÊòØÂê¶ÂèñÊ∂àÂΩìÂâçÊìç‰ΩúÔºÅ");

1019 i‡(
ªt
 =
POSITIVE
)

1020  
FAIL
;

1022 
	`mem£t
(&
chk_idx
.
°¨t_d©e
, 0, (chk_idx.start_date));

1023 
	`mem£t
(&
chk_idx
.
íd_d©e
, 0, (chk_idx.end_date));

1024 
gë_d©e
;

1029 
ªt
 = 
	`do_check_d©e
(&
chk_idx
.
°¨t_d©e
, &chk_idx.
íd_d©e
);

1030 i‡(
ªt
 !
SUCCESS
)

1031 
gë_d©e
;

1033 
	`di•œy_öfo
("Ê≠£Âú®ËøõË°åÊó•Ê±áÊÄª...");

1035 
ªt
 = 
èx_sy°em
->
	`daûy_cﬁÀ˘
();

1036 i‡(
ªt
 =
SUCCESS
) {

1037 
	`di•œy_w¨n
("Êó•Ê±áÊÄªÂá∫ÈîôÔºÅ");

1038 
	`di•œy_îr_msg
(
ªt
);

1039  
ªt
;

1042 
	`di•œy_öfo
("Ê≠£Âú®Êü•ÊâæÊó•Ê±áÊÄªËÆ∞ÂΩï...");

1044 
ªt
 = 
	`èx_fûe_föd_chk_daûy_idx
(&
chk_idx
);

1045 i‡(
ªt
 !
SUCCESS
) {

1046 i‡(
ªt
 =-
EFILE_NO_REC
) {

1047 
	`di•œy_w¨n
("Êó†ÊâæÂà∞ËÆ∞ÂΩïÔºåËØ∑Á°ÆËÆ§Êó•ÊúüËæìÂÖ•Ê≠£Á°ÆÔºÅ");

1048 
gë_d©e
;

1051 
	`di•œy_w¨n
("Êü•ÊâæÊó•Ê±áÊÄªËÆ∞ÂΩïÂá∫ÈîôÔºÅ");

1052 
	`di•œy_îr_msg
(
ªt
);

1053  
ªt
;

1056 
	`show_ö•e˘_chk_öfo
("Êó•Ê±áÊÄªÊü•ÊâæÁªìÊûú", &
chk_idx
);

1057 
	`gë_™ykey
();

1059 
ªt
 = 
	`que°i⁄_u£r
("ÊòØÂê¶Â∞ÜËÆ∞ÂΩïÂÜôÂÖ•Á®ΩÊü•Âç°Ôºü");

1060 i‡(
ªt
 !
POSITIVE
)

1061  
SUCCESS
;

1064 
ªt
 = 
	`do_upd©e_daûy_ªc‹d
(&
chk_öfo
, &
chk_idx
);

1065  
ªt
;

1066 
	}
}

1072 
	$cmd_ö•e˘_de˛¨e_d©a
()

1074 
ªt
;

1075 
èx_sys_check_idx
 
chk_idx
;

1076 
èx_sys_check_öfo
 
chk_öfo
;

1078 
	`mem£t
(&
chk_idx
, 0, (chk_idx));

1079 
	`mem£t
(&
chk_öfo
, 0, (chk_info));

1081 
	`di•œy_öfo
("Ê≠£Âú®Ê†°È™åÁ®ΩÊü•Âç°...");

1083 
ªt
 = 
	`do_ö•e˘_¥ï¨e
(
INSPECT_DECLARE
, &
chk_öfo
);

1084 i‡(
ªt
 !
SUCCESS
)

1085  
ªt
;

1087 
gë_d©e
:

1088 
	`show_ö•e˘_UI
("Á®ΩÊü•Áî≥Êä•Êï∞ÊçÆ");

1089 
ªt
 = 
	`gë_bcd_d©e
(2, 6, &
chk_idx
.
°¨t_d©e
);

1090 i‡(
ªt
 =-
EUI_ESC
) {

1091 
ªt
 = 
	`que°i⁄_u£r
("ÊòØÂê¶ÂèñÊ∂àÂΩìÂâçÊìç‰ΩúÔºÅ");

1092 i‡(
ªt
 =
POSITIVE
)

1093  
FAIL
;

1095 
	`mem£t
(&
chk_idx
.
°¨t_d©e
, 0, (chk_idx.start_date));

1096 
gë_d©e
;

1100 
ªt
 = 
	`gë_bcd_d©e
(3, 6, &
chk_idx
.
íd_d©e
);

1101 i‡(
ªt
 =-
EUI_ESC
) {

1102 
ªt
 = 
	`que°i⁄_u£r
("ÊòØÂê¶ÂèñÊ∂àÂΩìÂâçÊìç‰ΩúÔºÅ");

1103 i‡(
ªt
 =
POSITIVE
)

1104  
FAIL
;

1106 
	`mem£t
(&
chk_idx
.
°¨t_d©e
, 0, (chk_idx.start_date));

1107 
	`mem£t
(&
chk_idx
.
íd_d©e
, 0, (chk_idx.end_date));

1108 
gë_d©e
;

1113 
ªt
 = 
	`do_check_d©e
(&
chk_idx
.
°¨t_d©e
, &chk_idx.
íd_d©e
);

1114 i‡(
ªt
 !
SUCCESS
)

1115 
gë_d©e
;

1117 
	`di•œy_öfo
("Ê≠£Âú®Êü•ÊâæÁî≥Êä•ËÆ∞ÂΩï...");

1119 
ªt
 = 
	`èx_fûe_föd_chk_de˛¨e_idx
(&
chk_idx
);

1120 i‡(
ªt
 !
SUCCESS
) {

1121 i‡(
ªt
 =-
EFILE_NO_REC
) {

1122 
	`di•œy_w¨n
("Êó†ÊâæÂà∞ËÆ∞ÂΩïÔºåËØ∑Á°ÆËÆ§Êó•ÊúüËæìÂÖ•Ê≠£Á°ÆÔºÅ");

1123 
gë_d©e
;

1126 
	`di•œy_w¨n
("Êü•ÊâæÁî≥Êä•ËÆ∞ÂΩïÂá∫ÈîôÔºÅ");

1127 
	`di•œy_îr_msg
(
ªt
);

1128  
ªt
;

1131 
	`show_ö•e˘_chk_öfo
("Áî≥Êä•Êï∞ÊçÆÊü•ÊâæÁªìÊûú", &
chk_idx
);

1132 
	`gë_™ykey
();

1134 
ªt
 = 
	`que°i⁄_u£r
("ÊòØÂê¶Â∞ÜËÆ∞ÂΩïÂÜôÂÖ•Á®ΩÊü•Âç°Ôºü");

1135 i‡(
ªt
 !
POSITIVE
)

1136  
SUCCESS
;

1139 
ªt
 = 
	`do_upd©e_de˛¨e_ªc‹d
(&
chk_öfo
, &
chk_idx
);

1140  
ªt
;

1141 
	}
}

1147 
	$cmd_ö•e˘_by_u¨t
()

1152 
	`di•œy_w¨n
("ÂäüËÉΩÂ∞öÊú™ÂÆåÂñÑÔºÅ");

1154  
SUCCESS
;

1156 
	}
}

1162 
	$cmd_upd©e_c⁄åﬁ
()

1164 
ªt
;

1165 
èx_sy°em
 *Åax_sy°em = 
	`gë_èx_sy°em
();

1166 
èx_sys_fis_c⁄fig_ªc‹d
 *
gp_fis_cfg
 = 
	`gë_fis_c⁄fig
();

1167 
èx_sys_≠p_öfo
 *
gp_≠p_öfo
 = 
	`gë_sys_≠p_öfo
();

1169 
ªt
 = 
èx_sy°em
->
	`is_fisˇl_öô
();

1170 i‡(
ªt
 !
POSITIVE
) {

1171 
	`di•œy_w¨n
("Êú¨Êú∫Â∞öÊú™Á®éÊéßÂàùÂßãÂåñÔºåÊó†Ê≥ïËøõË°åÊõ¥Êñ∞ÔºÅ");

1172  
FAIL
;

1178 
ªt
 = 
	`check_u£æevñ
(
MANAGER_USER
);

1179 i‡(
ªt
 =
NEGATIVE
) {

1180 
	`di•œy_w¨n
("ÊùÉÈôêÈôêÂà∂ÔºåÊó†Ê≥ïËøõË°åÊ≠§Êìç‰ΩúÔºÅ");

1181  
FAIL
;

1184 i‡(
gp_fis_cfg
->
de˛¨e_Êag
 == 0) {

1185 
	`di•œy_w¨n
("Â∞öÊú™Áî≥Êä•ÔºåÊó†ÈúÄÊõ¥Êñ∞ÔºÅ");

1186  
FAIL
;

1189 
ªt
 = 
	`que°i⁄_u£r
("Á°ÆËÆ§ËøõË°åÁ®éÊéßÊõ¥Êñ∞Ôºü");

1190 i‡(
ªt
 !
POSITIVE
)

1191  
FAIL
;

1193 
	`di•œy_öfo
("Ê≠£Âú®ËøõË°åÊõ¥Êñ∞...");

1196 
ªt
 = 
èx_sy°em
->
	`check_föish_èx
(
gp_≠p_öfo
->
fisˇl_ˇrd_nb
);

1197 i‡(
ªt
 =
NEGATIVE
) {

1198 
	`di•œy_w¨n
("ËØ•Âç°Â∑≤ÁªèÁî≥Êä•ÂÆåÊØïÔºåËØ∑Ëá≥Á®éÂä°Â±ÄÂÆåÁ®éÂêéÂÜçÂ∞ùËØïÊõ¥Êñ∞ÔºÅ");

1199  
FAIL
;

1202 
ªt
 = 
èx_sy°em
->
	`upd©e_c⁄åﬁ
();

1203 i‡(
ªt
 !
SUCCESS
) {

1204 
	`di•œy_w¨n
("Êõ¥Êñ∞Â§±Ë¥•ÔºåËØ∑ËÅîÁ≥ªÂéÇÂïÜÔºÅ");

1205 
	`di•œy_îr_msg
(
ªt
);

1206  
FAIL
;

1209 
	`di•œy_w¨n
("Êõ¥Êñ∞ÊàêÂäüÔºÅ");

1210  
SUCCESS
;

1211 
	}
}

1217 
	$cmd_fisˇl_öô
()

1219 
ªt
;

1220 
èx_sy°em
 *Åax_sy°em = 
	`gë_èx_sy°em
();

1221 
∂u_›î©e
 * 
∂u_›s
 = 
	`gë_∂u_›s
();

1223 
ªt
 = 
èx_sy°em
->
	`is_fisˇl_öô
();

1224 i‡(
ªt
 =
POSITIVE
) {

1225 
	`di•œy_w¨n
("Â∑≤ÁªèÂàùÂßãÂåñÂÆåÊØïÔºåÊó†ÈúÄÂÜçÂàùÂßãÂåñÔºÅ");

1226  
FAIL
;

1232 
ªt
 = 
	`check_u£æevñ
(
MANAGER_USER
);

1233 i‡(
ªt
 =
NEGATIVE
) {

1234 
	`di•œy_w¨n
("ÊùÉÈôêÈôêÂà∂,Êó†Ê≥ïËøõË°åÊ≠§Êìç‰ΩúÔºÅ");

1235  
FAIL
;

1238 
	`di•œy_öfo
("Ê≠£Âú®ÂáÜÂ§áÁ®éÊéßÂàùÂßãÂåñ...");

1243 
ªt
 = 
	`cmd_£t_d©e_time
();

1244 i‡(
ªt
 !
SUCCESS
) {

1245 i‡(
ªt
 =-
EUI_ESC
)

1246  
SUCCESS
;

1248 
	`di•œy_îr_msg
(
ªt
);

1249  
FAIL
;

1252 
	`di•œy_öfo
("Ê≠£Âú®ËøõË°åÁ®éÊéßÂàùÂßãÂåñ...");

1254 
ªt
 = 
èx_sy°em
->
	`fisˇl_öô
();

1255 i‡(
ªt
 !
SUCCESS
) {

1256 
	`di•œy_îr_msg
(
ªt
);

1257  
FAIL
;

1260 
	`di•œy_öfo
("Ê≠£Âú®ÈáçÁΩÆÁ®éÊéßÊú∫...");

1266 
ªt
 = 
èx_sy°em
->
	`powî_⁄_check
();

1267 i‡(
ªt
 !
SUCCESS
) {

1268 
	`di•œy_îr_msg
(
ªt
);

1269  
FAIL
;

1272 
ªt
 = 
∂u_›s
->
	`∂u_öô
();

1273 i‡(
ªt
 !
SUCCESS
) {

1274 
	`di•œy_îr_msg
(
ªt
);

1275  
FAIL
;

1278 
	`di•œy_w¨n
("Á®éÊéßÂàùÂßãÂåñÊàêÂäü!!");

1280  
SUCCESS
;

1282 
	}
}

1288 
	$cmd_mach_å™s„r
()

1290 
ªt
;

1291 
èx_sy°em
 *Åax_sy°em = 
	`gë_èx_sy°em
();

1292 
∂u_›î©e
 * 
∂u_›s
 = 
	`gë_∂u_›s
();

1297 
ªt
 = 
	`check_u£æevñ
(
MANAGER_USER
);

1298 i‡(
ªt
 =
NEGATIVE
) {

1299 
	`di•œy_w¨n
("ÊùÉÈôêÈôêÂà∂ÔºåÊó†Ê≥ïËøõË°åÊ≠§Êìç‰ΩúÔºÅ");

1300  
FAIL
;

1303 
	`di•œy_öfo
("Ê≠£Âú®ÂáÜÂ§áÂÅúÊú∫ËøáÊà∑ÔºåËØ∑ÊèíÂÖ•Êñ∞Á®éÊéßÂç°ÂèäÁî®Êà∑Âç°...");

1305 
ªt
 = 
	`que°i⁄_u£r
("Êú¨Êìç‰ΩúÂ∞ÜÊ∏ÖÈô§Êú¨Êú∫Êï∞ÊçÆÔºåÊòØÂê¶ÁªßÁª≠Ôºü");

1306 i‡(
ªt
 !
POSITIVE
)

1307  
FAIL
;

1309 
	`di•œy_öfo
("Ê≠£Âú®Ê∏ÖÈô§Êú¨Êú∫Á®éÊéßÊï∞ÊçÆ...");

1310 
	`sync
();

1312 
ªt
 = 
	`èx_fûe_ãrm_˛ór
();

1313 i‡(
ªt
 !
SUCCESS
) {

1314 
	`di•œy_w¨n
("ÂÅúÊú∫ËøáÊà∑Â§±Ë¥•ÔºÅ");

1315 
	`di•œy_îr_msg
(
ªt
);

1316  
FAIL
;

1319 
	`di•œy_öfo
("Ê∏ÖÈô§Êï∞ÊçÆÊàêÂäüÔºåÊ≠£Âú®ÈáçÊñ∞Á®éÊéßÂàùÂßãÂåñ...");

1321 
ªt
 = 
èx_sy°em
->
	`fisˇl_öô
();

1322 i‡(
ªt
 !
SUCCESS
) {

1323 
	`di•œy_w¨n
("Á®éÊéßÂàùÂßãÂåñÂ§±Ë¥•ÔºÅ");

1324 
	`di•œy_îr_msg
(
ªt
);

1325  
FAIL
;

1328 
	`di•œy_öfo
("Ê≠£Âú®ÈáçÁΩÆÁ®éÊéßÊú∫...");

1334 
ªt
 = 
èx_sy°em
->
	`powî_⁄_check
();

1335 i‡(
ªt
 !
SUCCESS
) {

1336 
	`di•œy_w¨n
("ÈáçÁΩÆÁ®éÊéßÊú∫Â§±Ë¥•ÔºÅ");

1337 
	`di•œy_îr_msg
(
ªt
);

1338  
FAIL
;

1341 
ªt
 = 
∂u_›s
->
	`∂u_öô
();

1342 i‡(
ªt
 !
SUCCESS
) {

1343 
	`di•œy_w¨n
("ÈáçÁΩÆÁ®éÊéßÊú∫Â§±Ë¥•ÔºÅ");

1344 
	`di•œy_îr_msg
(
ªt
);

1345  
FAIL
;

1348 
	`di•œy_w¨n
("ÂÅúÊú∫ËøáÊà∑ÊàêÂäü!!");

1349  
SUCCESS
;

1351 
	}
}

1357 
	$cmd_upd©e_èx∑yî
()

1359 
ªt
;

1360 
èx_sy°em
 *Åax_sy°em = 
	`gë_èx_sy°em
();

1362 
ªt
 = 
èx_sy°em
->
	`is_fisˇl_öô
();

1363 i‡(
ªt
 !
POSITIVE
) {

1364 
	`di•œy_w¨n
("Êú¨Êú∫Â∞öÊú™Á®éÊéßÂàùÂßãÂåñÔºåÊó†Ê≥ïËøõË°åÊõ¥Êñ∞ÔºÅ");

1365  
FAIL
;

1371 
ªt
 = 
	`check_u£æevñ
(
MANAGER_USER
);

1372 i‡(
ªt
 =
NEGATIVE
) {

1373 
	`di•œy_w¨n
("ÊùÉÈôêÈôêÂà∂ÔºåÊó†Ê≥ïËøõË°åÊ≠§Êìç‰ΩúÔºÅ");

1374  
FAIL
;

1377 
ªt
 = 
	`que°i⁄_u£r
("Á°ÆËÆ§Êõ¥Êñ∞Á∫≥Á®é‰∫∫ÂêçÁß∞Ôºü");

1378 i‡(
ªt
 !
POSITIVE
)

1379  
FAIL
;

1381 
ªt
 = 
èx_sy°em
->
	`upd©e_èx∑yî
();

1382 i‡(
ªt
 !
SUCCESS
) {

1383 
	`di•œy_w¨n
("Êõ¥Êñ∞Â§±Ë¥•ÔºåËØ∑ËÅîÁ≥ªÂéÇÂïÜÔºÅ");

1384 
	`di•œy_îr_msg
(
ªt
);

1385  
FAIL
;

1388 
	`di•œy_w¨n
("Êõ¥Êñ∞Á∫≥Á®é‰∫∫ÊàêÂäüÔºÅ");

1389  
SUCCESS
;

1390 
	}
}

	@command/cmd_invoice_manage.c

12 
	~<°dio.h
>

13 
	~<°dlib.h
>

14 
	~<°rög.h
>

15 
	~<uni°d.h
>

16 
	~<f˙é.h
>

18 
	~"comm⁄.h
"

19 
	~"c⁄fig.h
"

20 
	~"îr‹.h
"

21 
	~"ui_≠i.h
"

22 
	~"öput.h
"

23 
	~"èx_sy°em.h
"

24 
	~"èx_fûe_›.h
"

30 
	$cmd_di°_öv
()

32 
ªt
;

33 
sim∂e_‰ame
 
‰ame
;

34 
èx_sys_¥Ÿe˘_ªc‹d
 
¥Ÿ_ªc
;

35 
èx_sys_övoi˚_rﬁl_ªc‹d
 
öv_rﬁl_ªc
;

36 
èx_sy°em
 *Åax_sy°em = 
	`gë_èx_sy°em
();

38 
	`mem£t
(&
‰ame
, 0, (frame));

40 
ªt
 = 
èx_sy°em
->
	`is_fisˇl_öô
();

41 i‡(
ªt
 !
POSITIVE
) {

42 
	`di•œy_w¨n
("Á®éÊéßÂäüËÉΩÊú™ÂêØÁî®ÔºåËØ∑ÂÖàËøõË°åÁ®éÊéßÂàùÂßãÂåñ!");

44  
FAIL
;

47 
ªt
 = 
	`èx_fûe_is_em±y
(
PROTECT_FILE
);

48 i‡(
ªt
 < 0) {

49 
	`di•œy_îr_msg
(
ªt
);

50  
FAIL
;

51 } i‡(
ªt
 !
POSITIVE
) {

52 
	`di•œy_w¨n
("ËøòÊúâÂ∑≤ÂàÜÂèëÁöÑÂèëÁ•®Êú™‰ΩøÁî®ÔºåÊó†Ê≥ïÂàÜÂèëÂèëÁ•®!");

53  
SUCCESS
;

56 
ªt
 = 
	`que°i⁄_u£r
("Á°ÆËÆ§Áî®Êà∑Âç°ÊèíÂÖ•Âπ∂ÂàÜÂèëÂèëÁ•®Ôºü");

57 i‡(
ªt
 !
POSITIVE
)

58  
FAIL
;

60 
	`di•œy_öfo
("Ê≠£Âú®ÂàÜÂèëÂèëÁ•®...");

62 
	`mem£t
(&
öv_rﬁl_ªc
, 0, (inv_roll_rec));

63 
	`mem£t
(&
¥Ÿ_ªc
, 0, ((prot_rec)));

65 
ªt
 = 
èx_sy°em
->
	`di°_övoi˚
(&
öv_rﬁl_ªc
);

66 i‡(
ªt
 =
SUCCESS
) {

67 
¥Ÿ_ªc
.
ty≥
 = 
PROTECT_TYPE_MOUNT
;

68 
¥Ÿ_ªc
.
övoi˚_öfo
 = 
öv_rﬁl_ªc
;

70 
ªt
 = 
	`èx_fûe_ßve_¥Ÿe˘
(&
¥Ÿ_ªc
);

71 i‡(
ªt
 < 0) {

72 
	`di•œy_w¨n
("ÂàÜÂèëÂ§±Ë¥•!");

73  
FAIL
;

76 
‰ame
.
ôem_num
 = 2;

77 
‰ame
.
ôems
[0].
pos
.
row
 = 1;

78 
‰ame
.
ôems
[0].
pos
.
cﬁ
 = 4;

79 
	`•rötf
(
‰ame
.
ôems
[0].
tôÀ
, "%s", "ÂàÜÂèëÊàêÂäü");

81 
‰ame
.
ôems
[1].
pos
.
row
 = 3;

82 
‰ame
.
ôems
[1].
pos
.
cﬁ
 = 1;

84 
	`•rötf
(
‰ame
.
ôems
[1].
tôÀ
, "%010d ~ %010d",

85 
öv_rﬁl_ªc
.
°¨t_num
, inv_rﬁl_ªc.
íd_num
);

87 
	`show_sim∂e_‰ame
(&
‰ame
);

89 
	`˛ór_ˇche
();

90 
	`gë_keycode
();

92  
SUCCESS
;

95 
	`di•œy_îr_msg
(
ªt
);

96  
FAIL
;

97 
	}
}

103 
	$cmd_mou¡_rﬁl
()

105 
ªt
;

106 
key_code
;

107 
sim∂e_‰ame
 
‰ame
;

108 
èx_sys_¥Ÿe˘_ªc‹d
 
¥Ÿ_ªc
;

109 
èx_sy°em
 *Åax_sy°em = 
	`gë_èx_sy°em
();

110 
èx_sys_cur_rﬁl_À·_ªc‹d
 *
gp_¸ 
 = 
	`gë_cur_rﬁl_À·
();

112 
	`mem£t
(&
‰ame
, 0, (frame));

114 
ªt
 = 
èx_sy°em
->
	`is_fisˇl_öô
();

115 i‡(
ªt
 !
POSITIVE
) {

116 
	`di•œy_w¨n
("Á®éÊéßÂäüËÉΩÊú™ÂêØÁî®ÔºåËØ∑ÂÖàËøõË°åÁ®éÊéßÂàùÂßãÂåñ!");

118  
FAIL
;

121 i‡(
gp_¸ 
->
cur_rﬁl_À·
 > 0) {

122 
	`di•œy_w¨n
("ÂΩìÂâçÂèëÁ•®Âç∑Êú™‰ΩøÁî®ÂÆå, Êó†Ê≥ïË£ÖËΩΩ");

124  
SUCCESS
;

127 
ªt
 = 
	`èx_fûe_is_em±y
(
PROTECT_FILE
);

128 i‡(
ªt
 =
POSITIVE
) {

129 
	`di•œy_w¨n
("Êó†Â∑≤ÂàÜÂèëÂèëÁ•®ÔºåËØ∑ÂÖàÂàÜÂèëÂèëÁ•®ÔºÅ");

131  
SUCCESS
;

134 
ªt
 = 
	`èx_fûe_ªad_¥Ÿe˘
(&
¥Ÿ_ªc
);

135 i‡(
ªt
 < 0) {

136 
	`di•œy_w¨n
("Ë£ÖËΩΩÂ§±Ë¥•!");

138  
FAIL
;

141 
‰ame
.
ôem_num
 = 2;

142 
‰ame
.
ôems
[0].
pos
.
row
 = 1;

143 
‰ame
.
ôems
[0].
pos
.
cﬁ
 = 5;

144 
	`•rötf
(
‰ame
.
ôems
[0].
tôÀ
, "%s", "ÂèëÁ•®Ë£ÖËΩΩ");

146 
‰ame
.
ôems
[1].
pos
.
row
 = 3;

147 
‰ame
.
ôems
[1].
pos
.
cﬁ
 = 1;

148 
	`•rötf
(
‰ame
.
ôems
[1].
tôÀ
, "%010d ~ %010d",

149 
¥Ÿ_ªc
.
övoi˚_öfo
.
°¨t_num
,ÖrŸ_ªc.övoi˚_öfo.
íd_num
);

151 
	`show_sim∂e_‰ame
(&
‰ame
);

153 
	`˛ór_ˇche
();

154 (
key_code
 = 
	`gë_keycode
()Ë!
ENTER
);

156 
ªt
 = 
	`que°i⁄_u£r
("Á°ÆËÆ§Ë£ÖËΩΩÔºü");

157 i‡(
ªt
 !
POSITIVE
)

158  
FAIL
;

160 
	`di•œy_öfo
("Ê≠£Âú®Ë£ÖËΩΩ...");

162 
ªt
 = 
èx_sy°em
->
	`mou¡_rﬁl
(&
¥Ÿ_ªc
.
övoi˚_öfo
);

163 i‡(
ªt
 =
SUCCESS
) {

164 
ªt
 = 
	`èx_fûe_˛ór
(
PROTECT_FILE
);

165 i‡(
ªt
 < 0) {

166 
	`di•œy_w¨n
("Ë£ÖËΩΩÂ§±Ë¥•ÔºÅ");

168  
FAIL
;

171 
	`di•œy_w¨n
("Ë£ÖËΩΩÊàêÂäüÔºÅ");

172  
SUCCESS
;

176 
	`di•œy_îr_msg
(
ªt
);

177  
FAIL
;

178 
	}
}

184 
	$cmd_võw_cur_rﬁl
()

186 
ªt
;

187 
key
, 
pos
;

188 
tŸÆ_num
, 
u£d_num
;

189 
sim∂e_‰ame
 
‰ame
, 
bŸ_‰ame
;

190 
èx_sys_buy_rﬁl_ªc‹d
 * 
gp_cur_rﬁl
 = 
	`gë_cur_rﬁl
();

191 
èx_sys_cur_rﬁl_À·_ªc‹d
 *
gp_¸ 
 = 
	`gë_cur_rﬁl_À·
();

192 
èx_sy°em
 *Åax_sy°em = 
	`gë_èx_sy°em
();

194 
	`mem£t
(&
‰ame
, 0, (frame));

195 
	`mem£t
(&
bŸ_‰ame
, 0, (bot_frame));

197 
ªt
 = 
èx_sy°em
->
	`is_fisˇl_öô
();

198 i‡(
ªt
 !
POSITIVE
) {

199 
	`di•œy_w¨n
("Á®éÊéßÂäüËÉΩÊú™ÂêØÁî®ÔºåËØ∑ÂÖàËøõË°åÁ®éÊéßÂàùÂßãÂåñ!");

201  
FAIL
;

204 
tŸÆ_num
 = 
gp_cur_rﬁl
->
íd_num
 - gp_cur_rﬁl->
°¨t_num
;

205 
u£d_num
 = 
tŸÆ_num
 - 
gp_¸ 
->
cur_rﬁl_À·
;

207 i‡(
tŸÆ_num
 == 0) {

208 
	`di•œy_w¨n
("ËØ∑ÂÖàËøõË°åÂèëÁ•®Ë£ÖËΩΩ!");

209  
FAIL
;

212 
‰ame
.
ôem_num
 = 4;

213 
‰ame
.
ôems
[0].
pos
.
row
 = 1;

214 
‰ame
.
ôems
[0].
pos
.
cﬁ
 = 4;

215 
	`•rötf
(
‰ame
.
ôems
[0].
tôÀ
, "%s", "ÂΩìÂâçÂèëÁ•®‰ø°ÊÅØ");

217 
‰ame
.
ôems
[1].
pos
.
row
 = 2;

218 
‰ame
.
ôems
[1].
pos
.
cﬁ
 = 1;

219 
	`•rötf
(
‰ame
.
ôems
[1].
tôÀ
, "%s", "ÂèëÁ•®‰ª£Âè∑");

221 
‰ame
.
ôems
[2].
pos
.
row
 = 3;

222 
‰ame
.
ôems
[2].
pos
.
cﬁ
 = 2;

223 
i
;

224 
i
 = 0; i < 10; i++)

225 
	`•rötf
(
‰ame
.
ôems
[2].
tôÀ
 + 
i
*2, "%02x", 
gp_cur_rﬁl
->
övoi˚_code
[i]);

227 
‰ame
.
ôems
[3].
pos
.
row
 = 4;

228 
‰ame
.
ôems
[3].
pos
.
cﬁ
 = 1;

229 
	`•rötf
(
‰ame
.
ôems
[3].
tôÀ
, "%s%010d", "Ëµ∑ÂßãÂè∑Ôºö", 
gp_cur_rﬁl
->
°¨t_num
);

231 
bŸ_‰ame
.
ôem_num
 = 4;

232 
bŸ_‰ame
.
ôems
[0].
pos
.
row
 = 1;

233 
bŸ_‰ame
.
ôems
[0].
pos
.
cﬁ
 = 4;

234 
	`•rötf
(
bŸ_‰ame
.
ôems
[0].
tôÀ
, "%s", "ÂΩìÂâçÂèëÁ•®‰ø°ÊÅØ");

236 
bŸ_‰ame
.
ôems
[1].
pos
.
row
 = 2;

237 
bŸ_‰ame
.
ôems
[1].
pos
.
cﬁ
 = 1;

238 
	`•rötf
(
bŸ_‰ame
.
ôems
[1].
tôÀ
, "%s%010d", "ÁªàÊ≠¢Âè∑:", 
gp_cur_rﬁl
->
íd_num
);

240 
bŸ_‰ame
.
ôems
[2].
pos
.
row
 = 3;

241 
bŸ_‰ame
.
ôems
[2].
pos
.
cﬁ
 = 1;

242 
	`•rötf
(
bŸ_‰ame
.
ôems
[2].
tôÀ
, "Â∑≤‰ΩøÁî®Ôºö%d Âº†", 
u£d_num
);

244 
bŸ_‰ame
.
ôems
[3].
pos
.
row
 = 4;

245 
bŸ_‰ame
.
ôems
[3].
pos
.
cﬁ
 = 1;

246 
	`•rötf
(
bŸ_‰ame
.
ôems
[3].
tôÀ
, "Ââ©‰ΩôÔºö%d Âº†", 
gp_¸ 
->
cur_rﬁl_À·
);

248 
	`show_sim∂e_‰ame
(&
‰ame
);

250 
pos
 = 1;

251 
	`˛ór_ˇche
();

253 
key
 = 
	`gë_keycode
();

254 
key
) {

255 
ENTER
:

256  
SUCCESS
;

259 
UP
:

260 i‡(
pos
 != 1) {

261 
	`show_sim∂e_‰ame
(&
‰ame
);

262 
pos
 = 1;

266 
DOWN
:

267 i‡(
pos
 != 2) {

268 
	`show_sim∂e_‰ame
(&
bŸ_‰ame
);

269 
pos
 = 2;

278 
	}
}

284 
	$cmd_võw_buyed_öv_öfo
()

286 
ªt
;

287 
rﬁl_num
 = 0;

288 
off£t
, 
rﬁl
, 
key
;

290 
sim∂e_‰ame
 
‰ame
[2];

292 
èx_sy°em
 *Åax_sy°em = 
	`gë_èx_sy°em
();

293 
èx_sys_buy_rﬁl_ªc‹d
 
buy_rﬁl_ªc
[10];

295 
	`mem£t
(
buy_rﬁl_ªc
, 0, 10 * (
èx_sys_buy_rﬁl_ªc‹d
));

296 
	`mem£t
(
‰ame
, 0, 2 * (
sim∂e_‰ame
));

298 
ªt
 = 
èx_sy°em
->
	`is_fisˇl_öô
();

299 i‡(
ªt
 !
POSITIVE
) {

300 
	`di•œy_w¨n
("Á®éÊéßÂäüËÉΩÊú™ÂêØÁî®ÔºåËØ∑ÂÖàËøõË°åÁ®éÊéßÂàùÂßãÂåñ!");

301  
FAIL
;

304 
ªt
 = 
èx_sy°em
->
	`gë_buy_rﬁl
(&
rﬁl_num
, 
buy_rﬁl_ªc
);

305 i‡(
ªt
 !
SUCCESS
) {

306 i‡(
ªt
 =-
ETAX_INVOICE_EMPTY
) {

307 
	`di•œy_w¨n
("Áî®Êà∑Âç°‰∏çÂ≠òÂú®È¢ÜË¥≠‰ø°ÊÅØÔºÅ");

308  
FAIL
;

310 
	`di•œy_w¨n
("Ëé∑Âèñ‰ø°ÊÅØÂ§±Ë¥•!");

311  
FAIL
;

315 
off£t
 = 0;

316 
rﬁl
 = 1;

318 
‰ame
[0].
ôem_num
 = 4;

319 
‰ame
[0].
ôems
[0].
pos
.
row
 = 1;

320 
‰ame
[0].
ôems
[0].
pos
.
cﬁ
 = 4;

322 
‰ame
[0].
ôems
[1].
pos
.
row
 = 2;

323 
‰ame
[0].
ôems
[1].
pos
.
cﬁ
 = 1;

325 
‰ame
[0].
ôems
[2].
pos
.
row
 = 3;

326 
‰ame
[0].
ôems
[2].
pos
.
cﬁ
 = 1;

328 
‰ame
[0].
ôems
[3].
pos
.
row
 = 4;

329 
‰ame
[0].
ôems
[3].
pos
.
cﬁ
 = 1;

331 
‰ame
[1].
ôem_num
 = 4;

332 
‰ame
[1].
ôems
[0].
pos
.
row
 = 1;

333 
‰ame
[1].
ôems
[0].
pos
.
cﬁ
 = 4;

335 
‰ame
[1].
ôems
[1].
pos
.
row
 = 2;

336 
‰ame
[1].
ôems
[1].
pos
.
cﬁ
 = 1;

338 
‰ame
[1].
ôems
[2].
pos
.
row
 = 3;

339 
‰ame
[1].
ôems
[2].
pos
.
cﬁ
 = 1;

341 
‰ame
[1].
ôems
[3].
pos
.
row
 = 4;

342 
‰ame
[1].
ôems
[3].
pos
.
cﬁ
 = 1;

344 
	`•rötf
(
‰ame
[0].
ôems
[0].
tôÀ
, "%s", "ÂèëÁ•®È¢ÜË¥≠‰ø°ÊÅØ");

345 
	`•rötf
(
‰ame
[1].
ôems
[0].
tôÀ
, "%s", "ÂèëÁ•®È¢ÜË¥≠‰ø°ÊÅØ");

347 
	`•rötf
(
‰ame
[0].
ôems
[2].
tôÀ
, "%s", "ÂèëÁ•®‰ª£Âè∑Ôºö");

350 
	`mem£t
(
‰ame
[0].
ôems
[1].
tôÀ
, 0, 
MAX_TITLE_LEN
);

351 
	`mem£t
(
‰ame
[0].
ôems
[3].
tôÀ
, 0, 
MAX_TITLE_LEN
);

352 
	`mem£t
(
‰ame
[1].
ôems
[1].
tôÀ
, 0, 
MAX_TITLE_LEN
);

353 
	`mem£t
(
‰ame
[1].
ôems
[2].
tôÀ
, 0, 
MAX_TITLE_LEN
);

355 
	`•rötf
(
‰ame
[0].
ôems
[1].
tôÀ
, "Á¨¨%d Âç∑ÔºåÂÖ±%d Âç∑", 
rﬁl
, 
rﬁl_num
);

356 
	`•rötf
(
‰ame
[1].
ôems
[1].
tôÀ
, "Á¨¨%d Âç∑ÔºåÂÖ±%d Âç∑", 
rﬁl
, 
rﬁl_num
);

358 
i
;

359 
i
 = 0; i < 10; i++)

360 
	`•rötf
(
‰ame
[0].
ôems
[3].
tôÀ
 + 
i
 * 2, "%02x", 
buy_rﬁl_ªc
[
rﬁl
 - 1].
övoi˚_code
[i]);

362 
	`•rötf
(
‰ame
[1].
ôems
[2].
tôÀ
, "%s%010d", "Ëµ∑ÂßãÂè∑:", 
buy_rﬁl_ªc
[
rﬁl
 - 1].
°¨t_num
);

363 
	`•rötf
(
‰ame
[1].
ôems
[3].
tôÀ
, "%s%010d", "ÁªàÊ≠¢Âè∑:", 
buy_rﬁl_ªc
[
rﬁl
 - 1].
íd_num
);

365 
	`show_sim∂e_‰ame
(&
‰ame
[
off£t
]);

367 
	`˛ór_ˇche
();

368 
key
 = 
	`gë_keycode
();

369 
key
) {

370 
ENTER
:

371  
SUCCESS
;

374 
UP
:

375 i‡(
off£t
 != 0) {

376 
off£t
 = 0;

381 
DOWN
:

382 i‡(
off£t
 != 1) {

383 
off£t
 = 1;

388 
LEFT
:

389 i‡(
rﬁl
 > 1) {

390 
rﬁl
 --;

395 
RIGHT
:

396 i‡(
rﬁl
 < 
rﬁl_num
) {

397 
rﬁl
 ++;

407  
SUCCESS
;

408 
	}
}

414 
	$cmd_võw_di°ed_rﬁl
()

416 
ªt
;

417 
key
, 
pos
;

419 
èx_sy°em
 *Åax_sy°em =
	`gë_èx_sy°em
();

420 
èx_sys_övoi˚_rﬁl_ªc‹d
 
rﬁl_ªc
;

421 
sim∂e_‰ame
 
‰ame
, 
bŸ_‰ame
;

422 
	`mem£t
(&
‰ame
, 0, (frame));

423 
	`mem£t
(&
bŸ_‰ame
, 0, (bot_frame));

425 
ªt
 = 
èx_sy°em
->
	`is_fisˇl_öô
();

426 i‡(
ªt
 !
POSITIVE
) {

427 
	`di•œy_w¨n
("Á®éÊéßÂäüËÉΩÊú™ÂêØÁî®ÔºåËØ∑ÂÖàËøõË°åÁ®éÊéßÂàùÂßãÂåñ!");

429  
FAIL
;

432 
ªt
 = 
	`èx_fûe_ªad_œ°_di°
(&
rﬁl_ªc
);

433 i‡(
ªt
 < 0) {

434 i‡(
ªt
 =-
EFILE_NO_REC
) {

435 
	`di•œy_w¨n
("Êó†ÂàÜÂèëËÆ∞ÂΩïÔºÅ");

436  
FAIL
;

439 
	`di•œy_îr_msg
(
ªt
);

440  
FAIL
;

443 
‰ame
.
ôem_num
 = 4;

444 
‰ame
.
ôems
[0].
pos
.
row
 = 1;

445 
‰ame
.
ôems
[0].
pos
.
cﬁ
 = 4;

446 
	`•rötf
(
‰ame
.
ôems
[0].
tôÀ
, "%s", "Â∑≤ÂàÜÂèëÂç∑‰ø°ÊÅØ");

448 
‰ame
.
ôems
[1].
pos
.
row
 = 2;

449 
‰ame
.
ôems
[1].
pos
.
cﬁ
 = 1;

450 
	`•rötf
(
‰ame
.
ôems
[1].
tôÀ
, "%s", "ÂèëÁ•®‰ª£Âè∑");

452 
‰ame
.
ôems
[2].
pos
.
row
 = 3;

453 
‰ame
.
ôems
[2].
pos
.
cﬁ
 = 2;

454 
i
;

455 
i
 = 0; i < 10; i++)

456 
	`•rötf
(
‰ame
.
ôems
[2].
tôÀ
 + 
i
*2, "%02x", 
rﬁl_ªc
.
övoi˚_code
[i]);

458 
‰ame
.
ôems
[3].
pos
.
row
 = 4;

459 
‰ame
.
ôems
[3].
pos
.
cﬁ
 = 1;

460 
	`•rötf
(
‰ame
.
ôems
[3].
tôÀ
, "%s%010d", "Ëµ∑ÂßãÂè∑Ôºö", 
rﬁl_ªc
.
°¨t_num
);

462 
bŸ_‰ame
.
ôem_num
 = 2;

463 
bŸ_‰ame
.
ôems
[0].
pos
.
row
 = 1;

464 
bŸ_‰ame
.
ôems
[0].
pos
.
cﬁ
 = 4;

465 
	`•rötf
(
bŸ_‰ame
.
ôems
[0].
tôÀ
, "%s", "Â∑≤ÂàÜÂèëÂç∑‰ø°ÊÅØ");

467 
bŸ_‰ame
.
ôems
[1].
pos
.
row
 = 2;

468 
bŸ_‰ame
.
ôems
[1].
pos
.
cﬁ
 = 1;

469 
	`•rötf
(
bŸ_‰ame
.
ôems
[1].
tôÀ
, "%s%010d", "ÁªàÊ≠¢Âè∑:", 
rﬁl_ªc
.
íd_num
);

471 
	`show_sim∂e_‰ame
(&
‰ame
);

473 
pos
 = 1;

474 
	`˛ór_ˇche
();

476 
key
 = 
	`gë_keycode
();

477 
key
) {

478 
ENTER
:

479  
SUCCESS
;

482 
UP
:

483 i‡(
pos
 != 1) {

484 
	`show_sim∂e_‰ame
(&
‰ame
);

485 
pos
 = 1;

489 
DOWN
:

490 i‡(
pos
 != 2) {

491 
	`show_sim∂e_‰ame
(&
bŸ_‰ame
);

492 
pos
 = 2;

502  
SUCCESS
;

503 
	}
}

	@command/cmd_invoice_ops.c

9 
	~<°dlib.h
>

10 
	~<uni°d.h
>

11 
	~<°dio.h
>

12 
	~<°rög.h
>

13 
	~<f˙é.h
>

14 
	~<˘y≥.h
>

16 
	~"c⁄fig.h
"

17 
	~"comm⁄.h
"

18 
	~"îr‹.h
"

19 
	~"èx_cmd.h
"

20 
	~"èx_sy°em.h
"

21 
	~"èx_fûe_›.h
"

22 
	~"ui_≠i.h
"

23 
	~"∂u.h
"

24 
	~"¥öt.h
"

25 
	~"öput.h
"

26 
	~"ªÆ_time.h
"

31 
	gg_h™g_Êag
 = 
NEGATIVE
;

33 
èx_sys_å™ß˘_ôems
 
	gg_n‹mÆ_å™s_ôems
;

34 
èx_sys_å™ß˘_ôems
 
	gg_h™g_å™s_ôems
;

35 
èx_sys_övoi˚_dëaû_ªc‹d
 
	gg_öv_dëaû
;

40 
	$show_å™s_öput_∂u
(
ty≥
, 
ôem_num
)

42 
sim∂e_‰ame
 
‰ame
;

43 
	`mem£t
(&
‰ame
, 0, (frame));

45 
‰ame
.
ôem_num
 = 3;

46 
‰ame
.
ôems
[0].
pos
.
row
 = 1;

47 
‰ame
.
ôems
[0].
pos
.
cﬁ
 = 2;

48 
	`•rötf
(
‰ame
.
ôems
[0].
tôÀ
, "ÈîÄÂîÆÂïÜÂìÅÔºàÁ¨¨%d‰ª∂Ôºâ", 
ôem_num
 + 1);

50 
‰ame
.
ôems
[1].
pos
.
row
 = 2;

51 
‰ame
.
ôems
[1].
pos
.
cﬁ
 = 1;

52 
	`•rötf
(
‰ame
.
ôems
[1].
tôÀ
, "%s", 
ty≥
 =
BY_PLU_NUM
 ? "ÁºñÂè∑Ôºö" : "Êù°ÂΩ¢Á†ÅÔºö");

54 
‰ame
.
ôems
[2].
pos
.
row
 = 4;

55 
‰ame
.
ôems
[2].
pos
.
cﬁ
 = 1;

56 
	`•rötf
(
‰ame
.
ôems
[2].
tôÀ
, "%s", "Â∞èËÆ°Ôºö0.00");

58 
	`show_sim∂e_‰ame
(&
‰ame
);

60  
SUCCESS
;

61 
	}
}

63 
	$show_å™s_ísuª_∂u
(
ty≥
, 
ôem_num
, 
∂u_ôem
 *plu_item)

65 
sim∂e_‰ame
 
‰ame
;

66 
	`mem£t
(&
‰ame
, 0, (frame));

68 
‰ame
.
ôem_num
 = 5;

69 
‰ame
.
ôems
[0].
pos
.
row
 = 1;

70 
‰ame
.
ôems
[0].
pos
.
cﬁ
 = 2;

71 
	`•rötf
(
‰ame
.
ôems
[0].
tôÀ
, "ÈîÄÂîÆÂïÜÂìÅÔºàÁ¨¨%d‰ª∂Ôºâ", 
ôem_num
 + 1);

73 
‰ame
.
ôems
[1].
pos
.
row
 = 2;

74 
‰ame
.
ôems
[1].
pos
.
cﬁ
 = 1;

75 i‡(
ty≥
 =
BY_PLU_NUM
)

76 
	`•rötf
(
‰ame
.
ôems
[1].
tôÀ
, "%s%d", "ÁºñÂè∑Ôºö", 
∂u_ôem
->
∂u_num
);

78 
	`•rötf
(
‰ame
.
ôems
[1].
tôÀ
, "%s%s", "Êù°ÂΩ¢Á†Å:", 
∂u_ôem
->
b¨code
);

80 
‰ame
.
ôems
[2].
pos
.
row
 = 3;

81 
‰ame
.
ôems
[2].
pos
.
cﬁ
 = 1;

82 
	`•rötf
(
‰ame
.
ôems
[2].
tôÀ
, "%s%s", "ÂêçÁß∞Ôºö", 
∂u_ôem
->
«me
);

84 
‰ame
.
ôems
[3].
pos
.
row
 = 4;

85 
‰ame
.
ôems
[3].
pos
.
cﬁ
 = 1;

86 
	`•rötf
(
‰ame
.
ôems
[3].
tôÀ
, "%s%.2f", "Âçï‰ª∑Ôºö", ()
∂u_ôem
->
¥i˚
);

88 
‰ame
.
ôems
[4].
pos
.
row
 = 4;

89 
‰ame
.
ôems
[4].
pos
.
cﬁ
 = 8;

90 
	`•rötf
(
‰ame
.
ôems
[4].
tôÀ
, "%s%d", "Â∫ìÂ≠òÔºö", 
∂u_ôem
->
°ock
);

92 
	`show_sim∂e_‰ame
(&
‰ame
);

94  
SUCCESS
;

95 
	}
}

97 
	$show_å™s_öput_cou¡
(
ôem_num
, 
∂u_ôem
*Ölu_item)

99 
sim∂e_‰ame
 
‰ame
;

100 
	`mem£t
(&
‰ame
, 0, (frame));

102 
‰ame
.
ôem_num
 = 5;

103 
‰ame
.
ôems
[0].
pos
.
row
 = 1;

104 
‰ame
.
ôems
[0].
pos
.
cﬁ
 = 2;

105 
	`•rötf
(
‰ame
.
ôems
[0].
tôÀ
, "ÈîÄÂîÆÂïÜÂìÅÔºàÁ¨¨%d‰ª∂Ôºâ", 
ôem_num
 + 1);

107 
‰ame
.
ôems
[1].
pos
.
row
 = 2;

108 
‰ame
.
ôems
[1].
pos
.
cﬁ
 = 1;

109 
	`•rötf
(
‰ame
.
ôems
[1].
tôÀ
, "%s", "Êï∞ÈáèÔºö");

111 
‰ame
.
ôems
[2].
pos
.
row
 = 3;

112 
‰ame
.
ôems
[2].
pos
.
cﬁ
 = 1;

113 
	`•rötf
(
‰ame
.
ôems
[2].
tôÀ
, "%s%s", "ÂêçÁß∞Ôºö", 
∂u_ôem
->
«me
);

115 
‰ame
.
ôems
[3].
pos
.
row
 = 4;

116 
‰ame
.
ôems
[3].
pos
.
cﬁ
 = 1;

117 
	`•rötf
(
‰ame
.
ôems
[3].
tôÀ
, "%s%.2f", "Âçï‰ª∑Ôºö", ()
∂u_ôem
->
¥i˚
);

119 
‰ame
.
ôems
[4].
pos
.
row
 = 4;

120 
‰ame
.
ôems
[4].
pos
.
cﬁ
 = 8;

121 
	`•rötf
(
‰ame
.
ôems
[4].
tôÀ
, "%s%d", "Â∫ìÂ≠òÔºö", 
∂u_ôem
->
°ock
);

123 
	`show_sim∂e_‰ame
(&
‰ame
);

125  
SUCCESS
;

126 
	}
}

128 
	$show_å™s_ísuª_cou¡
(
∂u_ôem
 *Ölu_ôem, 
ôem_num
, 
cou¡
)

130 
sim∂e_‰ame
 
‰ame
;

131 
	`mem£t
(&
‰ame
, 0, (frame));

133 
‰ame
.
ôem_num
 = 5;

134 
‰ame
.
ôems
[0].
pos
.
row
 = 1;

135 
‰ame
.
ôems
[0].
pos
.
cﬁ
 = 2;

136 
	`•rötf
(
‰ame
.
ôems
[0].
tôÀ
, "ÈîÄÂîÆÂïÜÂìÅÔºàÁ¨¨%d‰ª∂Ôºâ", 
ôem_num
 + 1);

138 
‰ame
.
ôems
[1].
pos
.
row
 = 2;

139 
‰ame
.
ôems
[1].
pos
.
cﬁ
 = 1;

140 
	`•rötf
(
‰ame
.
ôems
[1].
tôÀ
, "%s%d", "Êï∞ÈáèÔºö", 
cou¡
);

142 
‰ame
.
ôems
[2].
pos
.
row
 = 3;

143 
‰ame
.
ôems
[2].
pos
.
cﬁ
 = 1;

144 
	`•rötf
(
‰ame
.
ôems
[2].
tôÀ
, "%s%s", "ÂêçÁß∞Ôºö", 
∂u_ôem
->
«me
);

146 
‰ame
.
ôems
[3].
pos
.
row
 = 4;

147 
‰ame
.
ôems
[3].
pos
.
cﬁ
 = 1;

148 
	`•rötf
(
‰ame
.
ôems
[3].
tôÀ
, "%s%.2f", "Âçï‰ª∑Ôºö", ()
∂u_ôem
->
¥i˚
);

150 
‰ame
.
ôems
[4].
pos
.
row
 = 4;

151 
‰ame
.
ôems
[4].
pos
.
cﬁ
 = 9;

152 
	`•rötf
(
‰ame
.
ôems
[4].
tôÀ
, "%.2f", ()
cou¡
 * 
∂u_ôem
->
¥i˚
);

154 
	`show_sim∂e_‰ame
(&
‰ame
);

155  
SUCCESS
;

156 
	}
}

158 
	$show_subtﬂl_míu
(
övoi˚_nb
)

160 
i
;

161 
cou¡
 = 0, 
tŸÆ
 = 0;

162 
sim∂e_‰ame
 
‰ame
;

163 
	`mem£t
(&
‰ame
, 0, (frame));

165 
cou¡
 = 
g_n‹mÆ_å™s_ôems
.
ôem_num
;

166 
i
 = 0; i < 
cou¡
; i++) {

167 
tŸÆ
 +
g_n‹mÆ_å™s_ôems
.
comm_ôems
[
i
].
amou¡
;

170 
‰ame
.
ôem_num
 = 5;

171 
‰ame
.
ôems
[0].
pos
.
row
 = 1;

172 
‰ame
.
ôems
[0].
pos
.
cﬁ
 = 1;

173 
	`•rötf
(
‰ame
.
ôems
[0].
tôÀ
, "%s%010d", "ÂèëÁ•®Âè∑:", 
övoi˚_nb
);

175 
‰ame
.
ôems
[1].
pos
.
row
 = 2;

176 
‰ame
.
ôems
[1].
pos
.
cﬁ
 = 1;

177 
	`•rötf
(
‰ame
.
ôems
[1].
tôÀ
, "%s%d", "ÊÄªËÆ°Ôºö", 
tŸÆ
);

179 
‰ame
.
ôems
[2].
pos
.
row
 = 2;

180 
‰ame
.
ôems
[2].
pos
.
cﬁ
 = 9;

181 
	`•rötf
(
‰ame
.
ôems
[2].
tôÀ
, "ÂÖ±%d‰ª∂", 
cou¡
);

183 
‰ame
.
ôems
[3].
pos
.
row
 = 3;

184 
‰ame
.
ôems
[3].
pos
.
cﬁ
 = 1;

185 
	`•rötf
(
‰ame
.
ôems
[3].
tôÀ
, "%s", "ÂÆûÊî∂Ôºö");

187 
‰ame
.
ôems
[4].
pos
.
row
 = 4;

188 
‰ame
.
ôems
[4].
pos
.
cﬁ
 = 1;

189 
	`•rötf
(
‰ame
.
ôems
[4].
tôÀ
, "%s", "ÊâæÈõ∂Ôºö");

191 
	`show_sim∂e_‰ame
(&
‰ame
);

192  
SUCCESS
;

193 
	}
}

195 
	$show_å™s_öput_∑yî
()

197 
sim∂e_‰ame
 
‰ame
;

198 
	`mem£t
(&
‰ame
, 0, (frame));

200 
‰ame
.
ôem_num
 = 1;

201 
‰ame
.
ôems
[0].
pos
.
row
 = 1;

202 
‰ame
.
ôems
[0].
pos
.
cﬁ
 = 1;

203 
	`•rötf
(
‰ame
.
ôems
[0].
tôÀ
, "%s", "ËØ∑ËæìÂÖ•‰ªòÊ¨æÂçï‰ΩçÔºö");

205 
	`show_sim∂e_‰ame
(&
‰ame
);

206  
SUCCESS
;

207 
	}
}

209 
	$show_å™s_öput_døwî
()

211 
sim∂e_‰ame
 
‰ame
;

212 
	`mem£t
(&
‰ame
, 0, (frame));

214 
‰ame
.
ôem_num
 = 1;

215 
‰ame
.
ôems
[0].
pos
.
row
 = 1;

216 
‰ame
.
ôems
[0].
pos
.
cﬁ
 = 1;

217 
	`•rötf
(
‰ame
.
ôems
[0].
tôÀ
, "%s", "ËØ∑ËæìÂÖ•ÂºÄÁ•®‰∫∫Ôºö");

219 
	`show_sim∂e_‰ame
(&
‰ame
);

220  
SUCCESS
;

221 
	}
}

223 
	$show_ªtu∫_öput_‹ige
(
uöt
 
öv_num
)

225 
sim∂e_‰ame
 
‰ame
;

226 
	`mem£t
(&
‰ame
, 0, (frame));

228 
‰ame
.
ôem_num
 = 3;

229 
‰ame
.
ôems
[0].
pos
.
row
 = 1;

230 
‰ame
.
ôems
[0].
pos
.
cﬁ
 = 5;

231 
	`•rötf
(
‰ame
.
ôems
[0].
tôÀ
, "%s", "ÈÄÄÁ•®Â§ÑÁêÜ");

233 
‰ame
.
ôems
[1].
pos
.
row
 = 2;

234 
‰ame
.
ôems
[1].
pos
.
cﬁ
 = 1;

235 
	`•rötf
(
‰ame
.
ôems
[1].
tôÀ
, "%s%010d", "ÂèëÁ•®Â∫èÂè∑: ", 
öv_num
);

237 
‰ame
.
ôems
[2].
pos
.
row
 = 3;

238 
‰ame
.
ôems
[2].
pos
.
cﬁ
 = 1;

239 
	`•rötf
(
‰ame
.
ôems
[2].
tôÀ
, "%s", "ÂéüÂèëÁ•®Âè∑: ");

241 
	`show_sim∂e_‰ame
(&
‰ame
);

242  
SUCCESS
;

243 
	}
}

245 
	$show_ªtu∫_‹ige_öfo
(
èx_sys_övoi˚_dëaû_ªc‹d
 * 
‹i_dëaû
)

247 
uöt
 
y
, 
m
, 
d
;

248 
sim∂e_‰ame
 
‰ame
;

249 
	`mem£t
(&
‰ame
, 0, (frame));

251 
	`bcd_to_gªg
(&
‹i_dëaû
->
dëaû_d©e
, &
y
, &
m
, &
d
);

253 
‰ame
.
ôem_num
 = 4;

254 
‰ame
.
ôems
[0].
pos
.
row
 = 1;

255 
‰ame
.
ôems
[0].
pos
.
cﬁ
 = 5;

256 
	`•rötf
(
‰ame
.
ôems
[0].
tôÀ
, "%s", "ÂéüÁ•®‰ø°ÊÅØ");

258 
‰ame
.
ôems
[1].
pos
.
row
 = 2;

259 
‰ame
.
ôems
[1].
pos
.
cﬁ
 = 1;

260 
	`•rötf
(
‰ame
.
ôems
[1].
tôÀ
, "%s%010d", "ÂèëÁ•®Âè∑: ", 
‹i_dëaû
->
dëaû_öv_num
);

262 
‰ame
.
ôems
[2].
pos
.
row
 = 3;

263 
‰ame
.
ôems
[2].
pos
.
cﬁ
 = 1;

264 
	`•rötf
(
‰ame
.
ôems
[2].
tôÀ
, "%s%d-%02d-%02d", "ÂºÄÁ•®Êó•Êúü: ", 
y
, 
m
, 
d
);

266 
‰ame
.
ôems
[3].
pos
.
row
 = 4;

267 
‰ame
.
ôems
[3].
pos
.
cﬁ
 = 1;

268 
	`•rötf
(
‰ame
.
ôems
[3].
tôÀ
, "%s%.2f", "ÊÄªÈáëÈ¢ù(ÂÖÉ):", ()
‹i_dëaû
->
dëaû_amt_tŸÆ
);

270 
	`show_sim∂e_‰ame
(&
‰ame
);

272  
SUCCESS
;

273 
	}
}

275 
	$show_•oû_övoi˚_num
()

277 
sim∂e_‰ame
 
‰ame
;

278 
	`mem£t
(&
‰ame
, 0, (frame));

280 
‰ame
.
ôem_num
 = 1;

281 
‰ame
.
ôems
[0].
pos
.
row
 = 1;

282 
‰ame
.
ôems
[0].
pos
.
cﬁ
 = 1;

283 
	`•rötf
(
‰ame
.
ôems
[0].
tôÀ
, "%s", "ËØ∑ËæìÂÖ•Â∫üÁ•®Âº†Êï∞: ");

285 
	`show_sim∂e_‰ame
(&
‰ame
);

286  
SUCCESS
;

287 
	}
}

289 
	$show_m™_issue_öv
()

291 
sim∂e_‰ame
 
‰ame
;

292 
	`mem£t
(&
‰ame
, 0, (frame));

294 
‰ame
.
ôem_num
 = 3;

296 
‰ame
.
ôems
[0].
pos
.
row
 = 1;

297 
‰ame
.
ôems
[0].
pos
.
cﬁ
 = 5;

298 
	`¢¥ötf
(
‰ame
.
ôems
[0].
tôÀ
, 
MAX_TITLE_LEN
, "%s", "ÊâãÂ∑•ÂºÄÁ•®");

300 
‰ame
.
ôems
[1].
pos
.
row
 = 2;

301 
‰ame
.
ôems
[1].
pos
.
cﬁ
 = 1;

302 
	`¢¥ötf
(
‰ame
.
ôems
[1].
tôÀ
, 
MAX_TITLE_LEN
, "%s", "ÂêçÁß∞Ôºö");

304 
‰ame
.
ôems
[2].
pos
.
row
 = 3;

305 
‰ame
.
ôems
[2].
pos
.
cﬁ
 = 1;

306 
	`¢¥ötf
(
‰ame
.
ôems
[2].
tôÀ
, 
MAX_TITLE_LEN
, "%s", "ÈáëÈ¢ùÔºöÔºö");

308 
	`show_sim∂e_‰ame
(&
‰ame
);

309  
SUCCESS
;

310 
	}
}

315 
ölöe
 
	$£t_h™g_Êag
(
Êag
)

317 
g_h™g_Êag
 = 
Êag
;

318  
SUCCESS
;

319 
	}
}

321 
ölöe
 
	$gë_h™g_Êag
()

323  
g_h™g_Êag
;

324 
	}
}

331 
	$gë_∂u_num
(
row
, 
cﬁ
, *
∂u_num
)

333 
ªt
;

334 
key
, 
off£t
 = 0;

337 
ascii_no
[6] = {0};

339 i‡(*
∂u_num
 != 0) {

340 
off£t
 = 
	`¢¥ötf
(
ascii_no
, 6, "%d", *
∂u_num
);

343 
ªt
 = 
SUCCESS
;

344 
	`£t_ime_°©us
(
INPUT_LOW_CASE
);

346 
	`˛ór_ˇche
();

348 
	`show_°r
(
row
, 
cﬁ
, 
ascii_no
);

350 
key
 = 
	`gë_keycode
();

351 i‡(
	`isdigô
(
key
)) {

352 i‡(
off£t
 < 5) {

353 
	`•rötf
(
ascii_no
 + 
off£t
, "%c", ()
key
);

354 
off£t
 ++;

357 
key
) {

358 
D_ZERO
 :

359 i‡(
off£t
 != 0 && offset < 4) {

360 
	`•rötf
(
ascii_no
 + 
off£t
, "%c%c", '0', '0');

361 
off£t
 += 2;

363 i‡(
off£t
 == 4) {

364 
	`•rötf
(
ascii_no
 + 
off£t
, "%c", '0');

365 
off£t
 ++;

370 
BACK
:

371 i‡(
off£t
 > 0) {

372 
ascii_no
[
off£t
 - 1] = '\0';

373 
off£t
 --;

377 
VIEW
:

378 i‡(
off£t
 == 0) {

379 
ªt
 = -
EUI_VIEW
;

380 
h™dÀd
;

384 
HANG
:

385 i‡(
off£t
 == 0) {

386 
ªt
 = -
EUI_HANG
;

387 
h™dÀd
;

391 
MODIFY
:

392 i‡(
off£t
 == 0) {

393 
ªt
 = -
EUI_MODIFY
;

394 
h™dÀd
;

398 
TOTAL
:

399 i‡(
off£t
 == 0) {

400 
ªt
 = -
EUI_TOTAL
;

401 
h™dÀd
;

405 
ESC
:

406 
ªt
 = -
EUI_ESC
;

407 
h™dÀd
;

410 
ENTER
:

411 
ªt
 = 
SUCCESS
;

412 
h™dÀd
;

421 
h™dÀd
:

422 *
∂u_num
 = 
	`©oi
(
ascii_no
);

424  
ªt
;

425 
	}
}

428 
	$gë_∂u_cou¡
(*
cou¡
, 
∂u_ôem
 * 
tmp_ôem
)

430 
ªt
;

431 
key
, 
off£t
 = 0;

432 
ascii_no
[4] = {0};

434 i‡(*
cou¡
 != 0) {

435 
off£t
 = 
	`¢¥ötf
(
ascii_no
, 4, "%d", *
cou¡
);

438 
ªt
 = 
SUCCESS
;

439 
	`£t_ime_°©us
(
INPUT_LOW_CASE
);

441 
	`˛ór_ˇche
();

443 i‡(
off£t
 == 0)

444 
	`show_å™s_öput_cou¡
(
g_n‹mÆ_å™s_ôems
.
ôem_num
, 
tmp_ôem
);

446 i‡(*
cou¡
 > 0)

447 
	`show_å™s_ísuª_cou¡
(
tmp_ôem
, 
g_n‹mÆ_å™s_ôems
.
ôem_num
, *
cou¡
);

449 
	`show_°r
(2, 4, 
ascii_no
);

451 
key
 = 
	`gë_keycode
();

452 i‡(
	`isdigô
(
key
)) {

453 i‡(
off£t
 < 3) {

454 
	`•rötf
(
ascii_no
 + 
off£t
, "%c", ()
key
);

455 
off£t
 ++;

456 *
cou¡
 = 
	`©oi
(
ascii_no
);

459 
key
) {

460 
D_ZERO
 :

461 i‡(
off£t
 != 0 && offset < 2) {

462 
	`•rötf
(
ascii_no
 + 
off£t
, "%c%c", '0', '0');

463 
off£t
 += 2;

464 *
cou¡
 = 
	`©oi
(
ascii_no
);

466 i‡(
off£t
 == 2) {

467 
	`•rötf
(
ascii_no
 + 
off£t
, "%c", '0');

468 
off£t
 ++;

469 *
cou¡
 = 
	`©oi
(
ascii_no
);

475 
BACK
:

476 i‡(
off£t
 > 0) {

477 
ascii_no
[
off£t
 - 1] = '\0';

478 
off£t
 --;

479 *
cou¡
 = 
	`©oi
(
ascii_no
);

483 
ESC
:

484 
ªt
 = -
EUI_ESC
;

485 
h™dÀd
;

488 
ENTER
:

489 
ªt
 = 
SUCCESS
;

490 
h™dÀd
;

499 
h™dÀd
:

500 *
cou¡
 = 
	`©oi
(
ascii_no
);

502  
ªt
;

503 
	}
}

505 
	$gë_∑id_up
(*
∑id_up
)

507 
ªt
;

508 
key
, 
off£t
 = 0;

509 
i
, 
cou¡
, 
tŸÆ
 = 0;

510 
ch¨g
 = 0;

511 
ch¨g_°r
[7] = {0};

512 
ascii_no
[7] = {0};

514 i‡(*
∑id_up
 != 0) {

515 
off£t
 = 
	`¢¥ötf
(
ascii_no
, 6, "%d", *
∑id_up
);

518 
cou¡
 = 
g_n‹mÆ_å™s_ôems
.
ôem_num
;

519 
i
 = 0; i < 
cou¡
; i++) {

520 
tŸÆ
 +
g_n‹mÆ_å™s_ôems
.
comm_ôems
[
i
].
amou¡
;

523 
ªt
 = 
SUCCESS
;

524 
	`£t_ime_°©us
(
INPUT_LOW_CASE
);

526 
	`˛ór_ˇche
();

528 
	`show_°r
(3, 4, 
ascii_no
);

530 
ch¨g
 = *
∑id_up
 - 
tŸÆ
;

531 i‡(
ch¨g
 > 0) {

532 
	`mem£t
(
ch¨g_°r
, 0, 7);

533 
	`•rötf
(
ch¨g_°r
, "%.2f", ()
ch¨g
);

535 
	`show_°r
(4, 4, 
ch¨g_°r
);

537 
	`show_°r
(4, 4, 
NULL
);

539 
key
 = 
	`gë_keycode
();

540 i‡(
	`isdigô
(
key
)) {

541 i‡(
off£t
 < 5) {

542 
	`•rötf
(
ascii_no
 + 
off£t
, "%c", ()
key
);

543 
off£t
 ++;

545 *
∑id_up
 = 
	`©oi
(
ascii_no
);

548 
key
) {

549 
D_ZERO
:

550 i‡(
off£t
 != 0 && offset < 5) {

551 
	`•rötf
(
ascii_no
 + 
off£t
, "%c%c", '0', '0');

552 
off£t
 += 2;

554 *
∑id_up
 = 
	`©oi
(
ascii_no
);

556 i‡(
off£t
 == 5) {

557 
	`•rötf
(
ascii_no
 + 
off£t
, "%c", '0');

558 
off£t
 ++;

560 *
∑id_up
 = 
	`©oi
(
ascii_no
);

565 
BACK
:

566 i‡(
off£t
 > 0) {

567 
ascii_no
[
off£t
 - 1] = '\0';

568 
off£t
 --;

570 *
∑id_up
 = 
	`©oi
(
ascii_no
);

574 
ESC
:

575 
ªt
 = -
EUI_ESC
;

576 
h™dÀd
;

579 
ENTER
:

580 
ªt
 = 
SUCCESS
;

581 
h™dÀd
;

590 
h™dÀd
:

591 *
∑id_up
 = 
	`©oi
(
ascii_no
);

593  
ªt
;

594 
	}
}

596 
	$gë_fisˇl_code
(
issue_övoi˚_ªs
 * 
öv_ªs
)

598 
uöt
 
t›_hÆf
 = 0;

599 
uöt
 
bŸ_hÆf
 = 0;

602 
t›_buf
[10 + 1] = {0};

603 
bŸ_buf
[10 + 1] = {0};

605 
i
;

606 
i
 = 0; i < 4; i++) {

607 
tmp
 = 
öv_ªs
->
hÆf_t›
[
i
];

608 
t›_hÆf
 <<= 8;

609 
t›_hÆf
 +
tmp
;

611 
tmp
 = 
öv_ªs
->
hÆf_bŸ
[
i
];

612 
bŸ_hÆf
 <<= 8;

613 
bŸ_hÆf
 +
tmp
;

616 
	`•rötf
(
t›_buf
, "%10u", 
t›_hÆf
);

617 
	`•rötf
(
bŸ_buf
, "%10u", 
bŸ_hÆf
);

619 
i
 = 0; i < 10; i++) {

620 
öv_ªs
->
èx_num
[
i
] = 
t›_buf
[i];

622 i‡(
bŸ_buf
[
i
] == ' ')

623 
öv_ªs
->
èx_num
[10 + 
i
] = '0';

625 
öv_ªs
->
èx_num
[10 + 
i
] = 
bŸ_buf
[i];

629 
	`íd_covî_öt
((
uch¨
 *)&
t›_hÆf
, (uch¨ *)
öv_ªs
->
hÆf_t›
);

630 
	`íd_covî_öt
((
uch¨
 *)&
bŸ_hÆf
, (uch¨ *)
öv_ªs
->
hÆf_bŸ
);

632 
	`•rötf
(
öv_ªs
->
èx_num
, "%010u%010u", 
t›_hÆf
, 
bŸ_hÆf
);

634  
SUCCESS
;

635 
	}
}

642 
	$do_gë_comm_ôem
(* 
tôÀ
)

644 
key_code
;

645 
i
, 
cou¡
 = 0, 
pos
 = 0;

647 
sim∂e_‰ame
 
‰ame
;

648 
	`mem£t
(&
‰ame
, 0, (frame));

650 
cou¡
 = 
g_n‹mÆ_å™s_ôems
.
ôem_num
;

651 i‡(
cou¡
 == 0) {

652 
	`di•œy_w¨n
("Â∞öÊú™Ê∑ªÂä†ÂïÜÂìÅÔºÅ");

653  
SUCCESS
;

656 
‰ame
.
ôem_num
 = 4;

657 
‰ame
.
ôems
[0].
pos
.
row
 = 1;

658 
‰ame
.
ôems
[0].
pos
.
cﬁ
 = 6 - 
	`°æí
(
tôÀ
)/4;

659 
‰ame
.
ôems
[1].
pos
.
row
 = 2;

660 
‰ame
.
ôems
[1].
pos
.
cﬁ
 = 1;

661 
‰ame
.
ôems
[2].
pos
.
row
 = 3;

662 
‰ame
.
ôems
[2].
pos
.
cﬁ
 = 1;

663 
‰ame
.
ôems
[3].
pos
.
row
 = 4;

664 
‰ame
.
ôems
[3].
pos
.
cﬁ
 = 1;

666 
	`°r˝y
(
‰ame
.
ôems
[0].
tôÀ
,Åitle);

668 
i
 = 0;

669 
pos
 = 1;

670 
	`˛ór_ˇche
();

672 i‡(
cou¡
 - 
i
 >= 3) {

673 
	`¢¥ötf
(
‰ame
.
ôems
[1].
tôÀ
, 
MAX_TITLE_LEN
, "%s%d %s", "ÂïÜÂìÅ", 
i
 + 1,

674 
g_n‹mÆ_å™s_ôems
.
comm_ôems
[
i
].
comm_∂u_«me
);

675 
	`¢¥ötf
(
‰ame
.
ôems
[2].
tôÀ
, 
MAX_TITLE_LEN
, "%s%d %s", "ÂïÜÂìÅ", 
i
 + 2,

676 
g_n‹mÆ_å™s_ôems
.
comm_ôems
[
i
 + 1].
comm_∂u_«me
);

677 
	`¢¥ötf
(
‰ame
.
ôems
[3].
tôÀ
, 
MAX_TITLE_LEN
, "%s%d %s", "ÂïÜÂìÅ", 
i
 + 3,

678 
g_n‹mÆ_å™s_ôems
.
comm_ôems
[
i
 + 2].
comm_∂u_«me
);

679 } i‡(
cou¡
 - 
i
 == 2) {

680 
	`¢¥ötf
(
‰ame
.
ôems
[1].
tôÀ
, 
MAX_TITLE_LEN
, "%s%d %s", "ÂïÜÂìÅ", 
i
 + 1,

681 
g_n‹mÆ_å™s_ôems
.
comm_ôems
[
i
].
comm_∂u_«me
);

682 
	`¢¥ötf
(
‰ame
.
ôems
[2].
tôÀ
, 
MAX_TITLE_LEN
, "%s%d %s", "ÂïÜÂìÅ", 
i
 + 2,

683 
g_n‹mÆ_å™s_ôems
.
comm_ôems
[
i
 + 1].
comm_∂u_«me
);

684 
	`mem£t
(
‰ame
.
ôems
[3].
tôÀ
, 0, 
MAX_TITLE_LEN
);

685 } i‡(
cou¡
 - 
i
 == 1) {

686 
	`¢¥ötf
(
‰ame
.
ôems
[1].
tôÀ
, 
MAX_TITLE_LEN
, "%s%d %s", "ÂïÜÂìÅ", 
i
 + 1,

687 
g_n‹mÆ_å™s_ôems
.
comm_ôems
[
i
].
comm_∂u_«me
);

688 
	`mem£t
(
‰ame
.
ôems
[2].
tôÀ
, 0, 
MAX_TITLE_LEN
);

689 
	`mem£t
(
‰ame
.
ôems
[3].
tôÀ
, 0, 
MAX_TITLE_LEN
);

692 
	`show_sim∂e_‰ame
(&
‰ame
);

693 
	`highlight_⁄
(1 + 
pos
);

695 
key_code
 = 
	`gë_keycode
();

696 
key_code
) {

697 
UP
:

698 i‡(
pos
 > 1) {

699 
	`highlight_off
(1 + 
pos
--);

700 
	`highlight_⁄
(1 + 
pos
);

702 i‡(
i
 > 0) {

703 
i
 -= 3;

704 
	`highlight_off
(1 + 
pos
);

705 
pos
 = 3;

706 
	`highlight_⁄
(1 + 
pos
);

711 
DOWN
:

712 i‡(
cou¡
 > 
i
 + 
pos
) {

713 i‡(
pos
 < 3) {

714 
	`highlight_off
(1 + 
pos
++);

715 
	`highlight_⁄
(1 + 
pos
);

717 i‡(
cou¡
 - 
i
 > 3) {

718 
i
 += 3;

719 
	`highlight_off
(1 + 
pos
);

720 
pos
 = 1;

721 
	`highlight_⁄
(1 + 
pos
);

727 
ENTER
:

728 
	`˛ór_s¸ìn
();

729  (
i
 + 
pos
 - 1);

732 
BACK
:

733 
	`˛ór_s¸ìn
();

734  -
EUI_BACK
;

737 
ESC
:

738  -
EUI_ESC
;

745 
	}
}

751 
	$do_võw_comm_ôems
()

753 
ªt
;

754 
ôem
, 
ty≥
, 
key
;

755 
∂u_ôem
 *Ölu_item;

756 
sim∂e_‰ame
 
‰ame
;

757 
	`mem£t
(&
‰ame
, 0, (frame));

759 
‰ame
.
ôem_num
 = 5;

760 
‰ame
.
ôems
[0].
pos
.
row
 = 1;

761 
‰ame
.
ôems
[0].
pos
.
cﬁ
 = 5;

762 
	`•rötf
(
‰ame
.
ôems
[0].
tôÀ
, "ÂïÜÂìÅ‰ø°ÊÅØ");

764 
‰ame
.
ôems
[1].
pos
.
row
 = 2;

765 
‰ame
.
ôems
[1].
pos
.
cﬁ
 = 1;

766 
‰ame
.
ôems
[2].
pos
.
row
 = 3;

767 
‰ame
.
ôems
[2].
pos
.
cﬁ
 = 1;

768 
‰ame
.
ôems
[3].
pos
.
row
 = 4;

769 
‰ame
.
ôems
[3].
pos
.
cﬁ
 = 1;

770 
‰ame
.
ôems
[4].
pos
.
row
 = 4;

771 
‰ame
.
ôems
[4].
pos
.
cﬁ
 = 8;

773 
ty≥
 = 
g_n‹mÆ_å™s_ôems
.type;

775 
ªt

	`do_gë_comm_ôem
("ÂïÜÂìÅÊü•ËØ¢");

776 i‡(
ªt
 =-
EUI_BACK
)

777  
SUCCESS
;

778 i‡(
ªt
 =-
EUI_ESC
)

779  
ªt
;

780 
ôem
 = 
ªt
;

782 
∂u_ôem
 = &
g_n‹mÆ_å™s_ôems
.
comm_ôems
[
ôem
].plu_item;

783 i‡(
ty≥
 =
BY_PLU_NUM
)

784 
	`•rötf
(
‰ame
.
ôems
[1].
tôÀ
, "%s%d", "ÁºñÂè∑Ôºö", 
∂u_ôem
->
∂u_num
);

786 
	`•rötf
(
‰ame
.
ôems
[1].
tôÀ
, "%s%s", "Êù°ÂΩ¢Á†Å:", 
∂u_ôem
->
b¨code
);

788 
	`•rötf
(
‰ame
.
ôems
[2].
tôÀ
, "%s%s", "ÂêçÁß∞Ôºö", 
∂u_ôem
->
«me
);

789 
	`•rötf
(
‰ame
.
ôems
[3].
tôÀ
, "%s%.2f", "Âçï‰ª∑Ôºö", ()
∂u_ôem
->
¥i˚
);

790 
	`•rötf
(
‰ame
.
ôems
[4].
tôÀ
, "%s%d", "Êï∞ÈáèÔºö", 
g_n‹mÆ_å™s_ôems
.
comm_ôems
[
ôem
].
num
);

792 
	`show_sim∂e_‰ame
(&
‰ame
);

794 
	`˛ór_ˇche
();

796 
key
 = 
	`gë_keycode
();

797 i‡(
key
 =
ESC
)

798  
ªt
;

800 i‡(
key
 =
BACK
)

802 } 
key
 !
ENTER
);

804 
	}
}

810 
	$do_modify_comm_ôems
()

812 
ªt
;

813 
key
, 
ôem
, 
ty≥
;

814 
√w_∂u_num
, 
√w_cou¡
;

815 
∂u_ôem
 
√w_∂u
;

816 
∂u_ôem
 *Ölu_item;

817 
sim∂e_‰ame
 
‰ame
;

818 
∂u_›î©e
 * 
∂u_›s
 = 
	`gë_∂u_›s
();

820 
	`mem£t
(&
‰ame
, 0, (frame));

822 
‰ame
.
ôem_num
 = 5;

823 
‰ame
.
ôems
[0].
pos
.
row
 = 1;

824 
‰ame
.
ôems
[0].
pos
.
cﬁ
 = 2;

825 
	`•rötf
(
‰ame
.
ôems
[0].
tôÀ
, "ÂïÜÂìÅ‰ø°ÊÅØ");

827 
‰ame
.
ôems
[1].
pos
.
row
 = 2;

828 
‰ame
.
ôems
[1].
pos
.
cﬁ
 = 1;

829 
‰ame
.
ôems
[2].
pos
.
row
 = 3;

830 
‰ame
.
ôems
[2].
pos
.
cﬁ
 = 1;

831 
‰ame
.
ôems
[3].
pos
.
row
 = 4;

832 
‰ame
.
ôems
[3].
pos
.
cﬁ
 = 1;

833 
‰ame
.
ôems
[4].
pos
.
row
 = 4;

834 
‰ame
.
ôems
[4].
pos
.
cﬁ
 = 7;

836 
ty≥
 = 
g_n‹mÆ_å™s_ôems
.type;

838 
ªt
 = 
	`do_gë_comm_ôem
("ÂïÜÂìÅ‰øÆÊîπ");

839 i‡(
ªt
 =-
EUI_BACK
)

840  
SUCCESS
;

841 i‡(
ªt
 =-
EUI_ESC
)

842  
ªt
;

843 
ôem
 = 
ªt
;

845 
∂u_ôem
 = &
g_n‹mÆ_å™s_ôems
.
comm_ôems
[
ôem
].plu_item;

846 i‡(
ty≥
 =
BY_PLU_NUM
)

847 
	`•rötf
(
‰ame
.
ôems
[1].
tôÀ
, "%s%d", "ÁºñÂè∑Ôºö", 
∂u_ôem
->
∂u_num
);

849 
	`•rötf
(
‰ame
.
ôems
[1].
tôÀ
, "%s%s", "Êù°ÂΩ¢Á†Å:", 
∂u_ôem
->
b¨code
);

851 
	`•rötf
(
‰ame
.
ôems
[2].
tôÀ
, "%s%s", "ÂêçÁß∞Ôºö", 
∂u_ôem
->
«me
);

852 
	`•rötf
(
‰ame
.
ôems
[3].
tôÀ
, "%s%.2f", "Âçï‰ª∑Ôºö", ()
∂u_ôem
->
¥i˚
);

853 
	`•rötf
(
‰ame
.
ôems
[4].
tôÀ
, "%s%d", "Êï∞ÈáèÔºö", 
g_n‹mÆ_å™s_ôems
.
comm_ôems
[
ôem
].
num
);

855 
	`show_sim∂e_‰ame
(&
‰ame
);

857 i‡(
ty≥
 =
BY_PLU_NUM
) {

858 
√w_∂u_num
 = 
∂u_ôem
->
∂u_num
;

860 
ªt
 = 
	`gë_∂u_num
(2, 4, &
√w_∂u_num
);

861 i‡(
ªt
 =-
EUI_ESC
)

862  
ªt
;

864 i‡(
√w_∂u_num
 !
∂u_ôem
->
∂u_num
) {

865 
ªt
 = 
∂u_›s
->
	`ªad_∂u
(
√w_∂u_num
, &
√w_∂u
);

866 i‡(
ªt
 !
SUCCESS
) {

868 
	`show_°r
(3, 4, " ");

869 
	`di•œy_°r
(4, 4, " ");

870 
	`di•œy_°r
(4, 10, " ");

873 
√w_cou¡
 = 0;

877 
√w_cou¡
 = 
g_n‹mÆ_å™s_ôems
.
comm_ôems
[
ôem
].
num
;

878 
√w_∂u
 = *
∂u_ôem
;

883 #ifde‡
CONFIG_HPP


885 
	`mem˝y
(
√w_b¨code
, 
∂u_ôem
->
b¨code
, 13);

887 
√w_b¨code
[14] = {0};

888 
ªt
 = 
	`gë_b¨code
(2, 5, 
√w_b¨code
);

889 i‡(
ªt
 =-
EUI_ESC
)

890  
ªt
;

892 i‡(
	`mem˝m
(
√w_b¨code
, 
∂u_ôem
->
b¨code
) != 0) {

893 
ªt
 = 
∂u_›s
->
	`ödex_by_bc
(
√w_b¨code
, &
√w_∂u
);

894 i‡(
ªt
 !
SUCCESS
) {

896 
	`show_°r
(3, 4, " ");

897 
	`di•œy_°r
(4, 4, " ");

898 
	`di•œy_°r
(4, 10, " ");

902 
√w_cou¡
 = 
g_n‹mÆ_å™s_ôems
.
comm_ôems
[
ôem
].
num
;

903 
√w_∂u
 = *
∂u_ôem
;

910 
	`show_°r
(3, 4, 
√w_∂u
.
«me
);

911 
	`di•œy_°r
(4, 4, "%d", 
√w_∂u
.
¥i˚
);

912 
	`di•œy_°r
(4, 10, "%d", 
√w_cou¡
);

914 
ªt
 = 
	`gë_öãr_num
(4, 10, &
√w_cou¡
);

915 i‡(
ªt
 =-
EUI_ESC
)

916  
ªt
;

918 
	`˛ór_ˇche
();

920 
key
 = 
	`gë_keycode
();

921 i‡(
key
 =
ESC
) {

922 
ªt
 = 
	`que°i⁄_u£r
("ÊòØÂê¶Ë¶ÅÂèñÊ∂àÊú¨Ê¨°ÈîÄÂîÆÔºü");

923 i‡(
ªt
 =
POSITIVE
)

924  
FAIL
;

928 } 
key
 !
ENTER
);

931 i‡(
√w_cou¡
 == 0) {

932 
i
;

933 
i
 = 
ôem
; i < 
g_n‹mÆ_å™s_ôems
.
ôem_num
 - 1; i ++)

934 
g_n‹mÆ_å™s_ôems
.
comm_ôems
[
i
] = g_normal_trans_items.comm_items[i + 1];

936 
g_n‹mÆ_å™s_ôems
.
ôem_num
 --;

938 
g_n‹mÆ_å™s_ôems
.
comm_ôems
[
ôem
].
num
 = 
√w_cou¡
;

939 
g_n‹mÆ_å™s_ôems
.
comm_ôems
[
ôem
].
amou¡
 = 
√w_cou¡
 * 
√w_∂u
.
¥i˚
;

940 
g_n‹mÆ_å™s_ôems
.
comm_ôems
[
ôem
].
∂u_ôem
 = 
√w_∂u
;

944 
	`di•œy_w¨n
("‰øÆÊîπÊàêÂäüÔºÅ");

945  
SUCCESS
;

946 
	}
}

952 
	$do_h™g_up_å™ß˘
()

954 i‡(
g_h™g_Êag
 =
POSITIVE
) {

955 
	`di•œy_w¨n
("ÂêéÂè∞Â∑≤Â≠òÂú®ÊåÇÂçïÔºåËØ∑ÂÖàÊÅ¢Â§çÊåÇÂçï");

956  
FAIL
;

959 
g_h™g_å™s_ôems
 = 
g_n‹mÆ_å™s_ôems
;

960 
	`£t_h™g_Êag
(
POSITIVE
);

962 
	`di•œy_w¨n
("ÊåÇÂçïËá≥ÂêéÂè∞ÊàêÂäüÔºÅ");

963  
SUCCESS
;

964 
	}
}

971 
	$do_add_comm_to_li°
(
∂u_ôem
 * 
tmp_ôem
, 
cou¡
)

973 
pos
 = 
g_n‹mÆ_å™s_ôems
.
ôem_num
;

975 
g_n‹mÆ_å™s_ôems
.
comm_ôems
[
pos
].
num
 = 
cou¡
;

976 
g_n‹mÆ_å™s_ôems
.
comm_ôems
[
pos
].
amou¡
 = 
cou¡
 * 
tmp_ôem
->
¥i˚
;

977 
g_n‹mÆ_å™s_ôems
.
comm_ôems
[
pos
].
∂u_ôem
 = *
tmp_ôem
;

979 
g_n‹mÆ_å™s_ôems
.
ôem_num
 ++;

981  
SUCCESS
;

982 
	}
}

988 
	$do_subtŸÆ_comm_ôems
()

990 
ªt
, 
∑id_up
;

991 
uöt
 
övoi˚_nb
;

992 
èx_sy°em
 *èx_sy°em = 
	`gë_èx_sy°em
();

994 
ªt
 = 
èx_sy°em
->
	`gë_övoi˚_nb
(&
övoi˚_nb
);

995 i‡(
ªt
 !
SUCCESS
) {

996 i‡(
ªt
 =-
ETAX_INVOICE_MC_EMPTY
)

997 
	`di•œy_w¨n
("Êú™ÂèëÁé∞ÂèØÁî®ÂèëÁ•®ÔºåËØ∑ÂÖàË£ÖËΩΩÂèëÁ•®ÔºÅ");

999  
FAIL
;

1003 
	`show_subtﬂl_míu
(
övoi˚_nb
);

1005 
ªt
 = 
	`gë_∑id_up
(&
∑id_up
);

1006 i‡(
ªt
 =-
EUI_BACK
) {

1007 
ªt
 = 
	`que°i⁄_u£r
("ÊòØÂê¶Ë¶ÅÂèñÊ∂àÊú¨Ê¨°ÈîÄÂîÆÔºü");

1008 i‡(
ªt
 =
POSITIVE
)

1009  
FAIL
;

1012 } i‡(
ªt
 =
SUCCESS
)

1016  
SUCCESS
;

1017 
	}
}

1023 
	$do_check_‹igö_öv
(
èx_sys_övoi˚_dëaû_ªc‹d
 * 
öv_dëaû
)

1025 
ªt
;

1026 
bcd_d©e
 
de˛¨e_d©e
;

1027 
èx_sy°em
 *Åax_sy°em = 
	`gë_èx_sy°em
();

1028 
π_›î©e
 * 
π_›s
 = 
	`gë_π_›s
();

1030 
ªt
 = 
èx_sy°em
->
	`gë_œ°_de˛¨e_d©e
(&
de˛¨e_d©e
);

1031 i‡(
ªt
 < 0)

1032  
ªt
;

1034 i‡(
π_›s
->
	`cmp_bcd_d©e
(&
öv_dëaû
->
dëaû_d©e
, &
de˛¨e_d©e
) < 0)

1035  -
ETAX_OUT_DECLARE_DATE
;

1037 i‡(
öv_dëaû
->
dëaû_ty≥
 =
RETURN_INVOICE
)

1038  -
ETAX_RETURN_INV
;

1040 i‡(
öv_dëaû
->
dëaû_ty≥
 =
SPOIL_INVOICE
)

1041  -
ETAX_SPOIL_INV
;

1043  
SUCCESS
;

1044 
	}
}

1051 
	$do_ªtu∫_övoi˚
(
èx_sys_övoi˚_dëaû_ªc‹d
 * 
‹i_dëaû
)

1053 
i
, 
j
, 
ªt
;

1054 
cou¡
, 
èx_ödex
, 
öv_nb
;

1055 
bcd_d©e
 
today
;

1056 
èx_sys_issue_övoi˚
 
issue_öv
;

1057 
issue_övoi˚_ªs
 
issue_ªs
;

1058 
èx_sys_övoi˚_dëaû_ªc‹d
 
öv_dëaû
;

1059 
èx_sy°em
 *Åax_sy°em = 
	`gë_èx_sy°em
();

1060 
π_›î©e
 * 
π_›s
 = 
	`gë_π_›s
();

1062 
	`mem£t
(&
öv_dëaû
, 0, (inv_detail));

1063 
	`mem£t
(&
issue_öv
, 0, (issue_inv));

1065 
ªt
 = 
π_›s
->
	`gë_cur_d©e
(&
today
);

1066 i‡(
ªt
 < 0)

1067  
ªt
;

1069 
ªt
 = 
èx_sy°em
->
	`gë_övoi˚_nb
((
uöt
 *)&
öv_nb
);

1070 i‡(
ªt
 < 0)

1071  
ªt
;

1073 
cou¡
 = 
‹i_dëaû
->
ôem_num
;

1074 
i
 = 0; i < 
cou¡
; i++) {

1075 
èx_ödex
 = 
‹i_dëaû
->
ôem
[
i
].
comm_èx_ödex
;

1077 
j
 = 0; j < 
MAX_USER_TAXRATE
; j++) {

1078 i‡(
issue_öv
.
ôem
[
j
].
ödex
 =
èx_ödex
) {

1079 
issue_öv
.
ôem
[
j
].
amou¡
 +
‹i_dëaû
->ôem[
i
].amount;

1084 
issue_öv
.
övoi˚_ty≥
 = 
RETURN_INVOICE
;

1085 
issue_öv
.
amt_tŸÆ
 = 
‹i_dëaû
->
dëaû_amt_tŸÆ
;

1086 
issue_öv
.
d©e
 = 
today
;

1087 
issue_öv
.
övoi˚_num
 = (
uöt
)
öv_nb
;

1088 
issue_öv
.
‹igö_öv_num
 = 
‹i_dëaû
->
dëaû_öv_num
;

1090 
ªt
 = 
èx_sy°em
->
	`issue_övoi˚
(&
issue_öv
, &
issue_ªs
);

1091 i‡(
ªt
 < 0) {

1092 
	`di•œy_îr_msg
(
ªt
);

1093  
FAIL
;

1096 
	`gë_fisˇl_code
(&
issue_ªs
);

1098 
öv_dëaû
 = *
‹i_dëaû
;

1099 
öv_dëaû
.
dëaû_ty≥
 = 
RETURN_INVOICE
;

1100 
öv_dëaû
.
dëaû_amt_tŸÆ
 = 
issue_öv
.
amt_tŸÆ
;

1101 
öv_dëaû
.
dëaû_‹i_öv_num
 = 
issue_öv
.
‹igö_öv_num
;

1102 
öv_dëaû
.
dëaû_d©e
 = 
issue_öv
.
d©e
;

1103 
	`mem˝y
(
öv_dëaû
.
dëaû_fisˇl_code
, 
issue_ªs
.
èx_num
, 20);

1105 
ªt
 = 
	`èx_fûe_≠≥nd_övoi˚_dëaû
(&
öv_dëaû
);

1106 i‡(
ªt
 < 0) {

1107 
	`di•œy_îr_msg
(
ªt
);

1108  
FAIL
;

1111  
SUCCESS
;

1112 
	}
}

1118 
	$do_issue_övoi˚
()

1120 
i
, 
j
, 
ªt
;

1121 
cou¡
, 
èx_ödex
;

1122 
èx_sys_issue_övoi˚
 
issue_öv
;

1123 
issue_övoi˚_ªs
 
öv_ªs
;

1124 
èx_sy°em
 *èx_sy°em = 
	`gë_èx_sy°em
();

1125 
π_›î©e
 *
π_›s
 = 
	`gë_π_›s
();

1126 
èx_sys_≠p_öfo
 *
sys_≠p_öfo
 = 
	`gë_sys_≠p_öfo
();

1128 
	`mem£t
(&
issue_öv
, 0, (issue_inv));

1129 
	`mem£t
(&
öv_ªs
, 0, (inv_res));

1131 
	`di•œy_öfo
("Ê≠£Âú®ËøõË°åÂºÄÁ•®Ê£ÄÊü•...");

1133 
ªt
 = 
èx_sy°em
->
	`å™ß˘_¥ï¨e
();

1134 
ªt
) {

1135 -
ETAX_FISCAL_NOT_INIT
:

1136 
	`di•œy_w¨n
("ÂïÜ‰∏öÂäüËÉΩÊú™ÂêØÁî®ÔºåÊó†Ê≥ïËøõË°å‰∫§ÊòìÔºÅ");

1137  
FAIL
;

1141 -
ETAX_MACH_LOCKED
:

1142 
	`di•œy_w¨n
("Êú∫Âô®ËøáÊúüÈîÅÊ≠ªÔºåÊó†Ê≥ïËøõË°å‰∫§ÊòìÔºÅ");

1143  
FAIL
;

1147 -
ETAX_ISSUE_LIMIT
:

1148 
	`di•œy_w¨n
("Â∑≤ËøáÂºÄÁ•®Êà™Ê≠¢Êó•ÊúüÔºåÊó†Ê≥ïËøõË°å‰∫§ÊòìÔºÅ");

1149  
FAIL
;

1153 -
ETAX_FC_NOT_READY
:

1154 
	`di•œy_w¨n
("Á®éÊéßÂç°Êú™Â∞±Áª™ÔºåËØ∑ËÅîÁ≥ªÂéÇÂïÜÔºÅ");

1155  
FAIL
;

1159 -
ETAX_INVOICE_FULL
:

1160 
	`di•œy_w¨n
("Êú¨Áî≥Êä•ÊúüÊâÄÂºÄÂèëÁ•®Â∑≤ËææÊúÄÂ§ßÈôêÂà∂ÔºåËØ∑ÂÖàËøõË°åÁî≥Êä•.");

1161  
FAIL
;

1165 -
ETAX_AMT_TOTAL_LIMIT
:

1166 
	`di•œy_w¨n
("Êú¨Áî≥Êä•ÊúüÂºÄÁ•®ÈáëÈ¢ùÂ∑≤ËææÊúÄÂ§ßÈôêÂà∂ÔºåÊó†Ê≥ïÁªßÁª≠ÂºÄÁ•®.");

1167  
FAIL
;

1172 i‡(
ªt
 !
SUCCESS
) {

1173 
	`di•œy_îr_msg
(
ªt
);

1174  
FAIL
;

1180 
ªt
 = 
π_›s
->
	`gë_cur_d©e
(&
issue_öv
.
d©e
);

1181 i‡(
ªt
 !
SUCCESS
) {

1182 
	`di•œy_îr_msg
(
ªt
);

1183  
FAIL
;

1186 
ªt
 = 
èx_sy°em
->
	`gë_övoi˚_nb
(&
issue_öv
.
övoi˚_num
);

1187 i‡(
ªt
 !
SUCCESS
) {

1188 
	`di•œy_îr_msg
(
ªt
);

1189  
FAIL
;

1193 
i
 = 0; i < 
MAX_USER_TAXRATE
; i++) {

1194 
issue_öv
.
ôem
[
i
].
ödex
 = 
sys_≠p_öfo
->
èx_ödex
[i];

1197 
cou¡
 = 
g_n‹mÆ_å™s_ôems
.
ôem_num
;

1199 
i
 = 0; i < 
cou¡
; i++) {

1200 
issue_öv
.
amt_tŸÆ
 +
g_n‹mÆ_å™s_ôems
.
comm_ôems
[
i
].
amou¡
;

1202 
èx_ödex
 = 
g_n‹mÆ_å™s_ôems
.
comm_ôems
[
i
].
comm_èx_ödex
;

1204 
j
 = 0; j < 
MAX_USER_TAXRATE
; j++) {

1205 i‡(
issue_öv
.
ôem
[
j
].
ödex
 =
èx_ödex
) {

1206 
issue_öv
.
ôem
[
j
].
amou¡
 +
g_n‹mÆ_å™s_ôems
.
comm_ôems
[
i
].amount;

1211 
issue_öv
.
övoi˚_ty≥
 = 
NORMAL_INVOICE
;

1213 
	`di•œy_öfo
("Ê≠£Âú®ÂºÄÁ•®...");

1215 
ªt
 = 
èx_sy°em
->
	`issue_övoi˚
(&
issue_öv
, &
öv_ªs
);

1216 i‡(
ªt
 !
SUCCESS
) {

1217 
	`di•œy_îr_msg
(
ªt
);

1218  
FAIL
;

1221 
	`gë_fisˇl_code
(&
öv_ªs
);

1224 
	`mem˝y
(
g_öv_dëaû
.
övoi˚
.
fisˇl_code
, 
öv_ªs
.
èx_num
, 20);

1226 
g_öv_dëaû
.
övoi˚
.
d©e
 = 
issue_öv
.date;

1227 
g_öv_dëaû
.
övoi˚
.
ty≥
 = 
issue_öv
.
övoi˚_ty≥
;

1228 
g_öv_dëaû
.
övoi˚
.
amt_tŸÆ
 = 
issue_öv
.amt_total;

1229 
g_öv_dëaû
.
dëaû_öv_num
 = 
issue_öv
.
övoi˚_num
;

1231  
SUCCESS
;

1232 
	}
}

1238 
	$do_¥öt_övoi˚
()

1240 
ªt
;

1241 
èx_sys_≠p_öfo
 *
sys_≠p_öfo
 = 
	`gë_sys_≠p_öfo
();

1242 
¥öt_sys
 *Öröt_sy†
	`gë_¥öt_sys
();

1244 
	`mem˝y
(
g_öv_dëaû
.
èx_∑yì
, 
sys_≠p_öfo
->
èx∑yî_«me
, 41);

1245 
g_öv_dëaû
.
ôem_num
 = 
g_n‹mÆ_å™s_ôems
.item_num;

1247 
i
;

1248 
i
 = 0; i < 10; i++) {

1249 
g_öv_dëaû
.
ôem
[
i
] = 
g_n‹mÆ_å™s_ôems
.
comm_ôems
[i];

1252 
	`mem˝y
(
g_öv_dëaû
.
ªgi°î_num
, 
sys_≠p_öfo
->
èx∑yî_nb
, 8);

1255 
ªt
 = 
	`èx_fûe_≠≥nd_övoi˚_dëaû
(&
g_öv_dëaû
);

1256 i‡(
ªt
 < 0) {

1257 
	`di•œy_îr_msg
(
ªt
);

1258  
ªt
;

1261 
	`di•œy_öfo
("Ê≠£Âú®ÊâìÂç∞ÂèëÁ•®...");

1262 
ªt
 = 
¥öt_sys
->
›s
->
	`¥öt_övoi˚
(&
g_öv_dëaû
);

1263 i‡(
ªt
 !
SUCCESS
) {

1264 
	`di•œy_îr_msg
(
ªt
);

1265  
FAIL
;

1268 
ªt
 = 
	`que°i⁄_u£r
("ÂèëÁ•®ÊòØÂê¶ÊâìÂç∞Ê≠£Á°ÆÔºü");

1269 i‡(
ªt
 =
NEGATIVE
) {

1270 
	`di•œy_öfo
("ËØ∑ÂÅöÈÄÄÁ•®ÊàñÂ∫üÁ•®Â§ÑÁêÜÔºÅ");

1271  
FAIL
;

1274  
SUCCESS
;

1275 
	}
}

1282 
	$do_de¸ó£_∂u_cou¡
()

1284 
ªt
;

1286 
∂u_ôem
 
tmp_ôem
;

1287 
∂u_›î©e
 *
∂u_›s
 = 
	`gë_∂u_›s
();

1289 
i
;

1290 
i
 = 0; i < 
g_n‹mÆ_å™s_ôems
.
ôem_num
; i++) {

1291 
tmp_ôem
 = 
g_n‹mÆ_å™s_ôems
.
comm_ôems
[
i
].
∂u_ôem
;

1292 
tmp_ôem
.
°ock
 -
g_n‹mÆ_å™s_ôems
.
comm_ôems
[
i
].
num
;

1294 
ªt
 = 
∂u_›s
->
	`modify_∂u
(
tmp_ôem
.
∂u_num
, &tmp_item);

1295 i‡(
ªt
 < 0)

1296  
ªt
;

1299  
SUCCESS
;

1300 
	}
}

1307 
	$do_å™ß˘
()

1309 
ªt
, 
key
;

1310 
∂u_cou¡
 = 0, 
cou¡
 = 0;

1311 
∂u_num
 = 0;

1312 
uch¨
 
b¨code
[13] = {0};

1313 
∂u_ôem
 
tmp_ôem
;

1314 
∂u_›î©e
 *
∂u_›s
 = 
	`gë_∂u_›s
();

1315 
èx_sy°em
 *Åax_sy°em = 
	`gë_èx_sy°em
();

1317 
ªt
 = 
èx_sy°em
->
	`is_fisˇl_öô
();

1318 i‡(
ªt
 !
POSITIVE
) {

1319 
	`di•œy_w¨n
("Êú¨Êú∫Â∞öÊú™Á®éÊéßÂàùÂßãÂåñÔºåËØ∑ÂÖàËøõË°åÂàùÂßãÂåñÔºÅ");

1321  
FAIL
;

1324 
	`mem£t
(&
g_öv_dëaû
, 0, (g_inv_detail));

1326 
ªt
 = 
∂u_›s
->
	`gë_∂u_cou¡
(&
∂u_cou¡
);

1327 i‡(
ªt
 !
SUCCESS
) {

1328 
	`di•œy_îr_msg
(
ªt
);

1329  
FAIL
;

1332 i‡(
∂u_cou¡
 == 0) {

1333 
	`di•œy_w¨n
("Â∞öÊú™Ê∑ªÂä†ÂïÜÂìÅÔºåËØ∑ÂÖàÊ∑ªÂä†ÂïÜÂìÅÔºÅ");

1334  
FAIL
;

1338 
∂u_num
 = 0;

1339 
	`mem£t
(
b¨code
, 0, 13);

1341 
öput_∂u
:

1342 
	`show_å™s_öput_∂u
(
g_n‹mÆ_å™s_ôems
.
ty≥
, g_n‹mÆ_å™s_ôems.
ôem_num
);

1344 i‡(
g_n‹mÆ_å™s_ôems
.
ty≥
 =
BY_PLU_NUM
)

1345 
ªt
 = 
	`gë_∂u_num
(2, 4, &
∂u_num
);

1347 
ªt
 = 
	`gë_b¨code
(2, 5, (*)
b¨code
);

1349 
ªt
) {

1350 -
EUI_ESC
:

1351 
ªt
 = 
	`que°i⁄_u£r
("ÊòØÂê¶Ë¶ÅÂèñÊ∂àÊú¨Ê¨°ÈîÄÂîÆÔºü");

1352 i‡(
ªt
 =
POSITIVE
)

1353  
SUCCESS
;

1355 
öput_∂u
;

1359 -
EUI_TOTAL
:

1360 i‡(
g_n‹mÆ_å™s_ôems
.
ôem_num
 > 0)

1361 
subtŸÆ
;

1365 -
EUI_VIEW
:

1366 
ªt
 = 
	`do_võw_comm_ôems
();

1367 i‡(
ªt
 =-
EUI_ESC
) {

1368 
ªt
 = 
	`que°i⁄_u£r
("ÊòØÂê¶Ë¶ÅÂèñÊ∂àÊú¨Ê¨°ÈîÄÂîÆÔºü");

1369 i‡(
ªt
 =
POSITIVE
)

1370  
SUCCESS
;

1372 
öput_∂u
;

1373 } i‡(
ªt
 =
SUCCESS
)

1374 
öput_∂u
;

1378 -
EUI_MODIFY
:

1379 
ªt
 = 
	`do_modify_comm_ôems
();

1380 i‡(
ªt
 =-
EUI_ESC
) {

1381 
ªt
 = 
	`que°i⁄_u£r
("ÊòØÂê¶Ë¶ÅÂèñÊ∂àÊú¨Ê¨°ÈîÄÂîÆÔºü");

1382 i‡(
ªt
 =
POSITIVE
)

1383  
SUCCESS
;

1385 
öput_∂u
;

1386 } i‡(
ªt
 =
SUCCESS
)

1387 
öput_∂u
;

1391 -
EUI_HANG
:

1392 
ªt
 = 
	`que°i⁄_u£r
("ÊòØÂê¶Ë¶ÅÊåÇÂçïÂà∞ÂêéÂè∞Ôºü");

1393 i‡(
ªt
 =
POSITIVE
) {

1394 
ªt
 = 
	`do_h™g_up_å™ß˘
();

1395 i‡(
ªt
 =
SUCCESS
)

1396  
SUCCESS
;

1398 
öput_∂u
;

1406 i‡(
g_n‹mÆ_å™s_ôems
.
ty≥
 =
BY_PLU_NUM
) {

1407 
ªt
 = 
∂u_›s
->
	`ªad_∂u
(
∂u_num
, &
tmp_ôem
);

1408 i‡(
ªt
 =
SUCCESS
)

1409 
ísuª_∂u
;

1413 #ifde‡
CONFIG_HPP


1415 
ªt
 = 
∂u_›s
->
	`ödex_by_bc
(
b¨code
, &
tmp_ôem
);

1416 i‡(
ªt
 !
SUCCESS
)

1422 i‡(
tmp_ôem
.
°ock
 == 0) {

1423 
	`di•œy_w¨n
("ÂïÜÂìÅÊó†Â∫ìÂ≠òÔºåËØ∑ÂÖàÈîÄÂîÆÂÖ∂‰ªñÂïÜÂìÅÔºÅ");

1427 
ísuª_∂u
:

1428 
	`show_å™s_ísuª_∂u
(
g_n‹mÆ_å™s_ôems
.
ty≥
,

1429 
g_n‹mÆ_å™s_ôems
.
ôem_num
, &
tmp_ôem
);

1431 
	`˛ór_ˇche
();

1433 
key
 = 
	`gë_keycode
();

1434 i‡(
key
 =
ESC
) {

1435 
ªt
 = 
	`que°i⁄_u£r
("ÊòØÂê¶Ë¶ÅÂèñÊ∂àÊú¨Ê¨°ÈîÄÂîÆÔºü");

1436 i‡(
ªt
 =
POSITIVE
)

1437  
SUCCESS
;

1439 
ísuª_∂u
;

1441 } 
key
 !
ENTER
);

1443 
öput_cou¡
:

1447 
ªt
 = 
	`gë_∂u_cou¡
(&
cou¡
, &
tmp_ôem
);

1448 i‡(
ªt
 =-
EUI_ESC
) {

1449 
ªt
 = 
	`que°i⁄_u£r
("ÊòØÂê¶Ë¶ÅÂèñÊ∂àÊú¨Ê¨°ÈîÄÂîÆÔºü");

1450 i‡(
ªt
 =
POSITIVE
)

1451  
SUCCESS
;

1453 
öput_cou¡
;

1456 i‡(
cou¡
 > 
tmp_ôem
.
°ock
) {

1457 
	`di•œy_w¨n
("ÂïÜÂìÅÂ∫ìÂ≠ò‰∏çË∂≥ÔºåËØ∑ÈîÄÂîÆÂÖ∂‰ªñÂïÜÂìÅÔºÅ");

1461 
	`do_add_comm_to_li°
(&
tmp_ôem
, 
cou¡
);

1464 
subtŸÆ
:

1465 
ªt
 = 
	`do_subtŸÆ_comm_ôems
();

1466 i‡(
ªt
 !
SUCCESS
) {

1467 
	`di•œy_îr_msg
(
ªt
);

1468  
FAIL
;

1471 
öput_∑yî
:

1472 
	`show_å™s_öput_∑yî
();

1473 
ªt
 = 
	`gë_chn_°r
(2, 1, 
g_öv_dëaû
.
∑yî_«me
);

1474 i‡(
ªt
 =-
EUI_ESC
) {

1475 
ªt
 = 
	`que°i⁄_u£r
("ÊòØÂê¶Ë¶ÅÂèñÊ∂àÊú¨Ê¨°ÈîÄÂîÆÔºü");

1476 i‡(
ªt
 =
POSITIVE
)

1477  
SUCCESS
;

1479 
öput_∑yî
;

1482 i‡(
	`°æí
(
g_öv_dëaû
.
∑yî_«me
) == 0)

1483 
	`°r˝y
(
g_öv_dëaû
.
∑yî_«me
, "‰∏™‰∫∫");

1485 
öput_døwî
:

1486 
	`show_å™s_öput_døwî
();

1487 
ªt
 = 
	`gë_chn_°r
(2, 1, 
g_öv_dëaû
.
døwî
);

1488 i‡(
ªt
 =-
EUI_ESC
) {

1489 
ªt
 = 
	`que°i⁄_u£r
("ÊòØÂê¶Ë¶ÅÂèñÊ∂àÊú¨Ê¨°ÈîÄÂîÆÔºü");

1490 i‡(
ªt
 =
POSITIVE
)

1491  
SUCCESS
;

1493 
öput_døwî
;

1496 i‡(
	`°æí
(
g_öv_dëaû
.
døwî
) == 0)

1497 
	`°r˝y
(
g_öv_dëaû
.
døwî
, "Êó†");

1499 
ªt
 = 
	`do_issue_övoi˚
();

1500 i‡(
ªt
 !
SUCCESS
)

1501  
FAIL
;

1503 
ªt
 = 
	`do_¥öt_övoi˚
();

1504 i‡(
ªt
 !
SUCCESS
)

1505  
FAIL
;

1508 
ªt
 = 
	`do_de¸ó£_∂u_cou¡
();

1509 i‡(
ªt
 !
SUCCESS
){

1510 
	`di•œy_îr_msg
(
ªt
);

1511  
FAIL
;

1514  
SUCCESS
;

1515 
	}
}

1521 
	$cmd_å™ß˘_by_b¨code
()

1523 #ifde‡
CONFIG_HPP


1524 
ªt
;

1526 
	`mem£t
(
g_n‹mÆ_å™s_ôems
, 0, (g_normal_trans_items));

1529 
g_n‹mÆ_å™s_ôems
.
ty≥
 = 
BY_BARCODE
;

1531 
ªt
 = 
	`do_å™ß˘
();

1532 i‡(
ªt
 !
SUCCESS
) {

1533  
FAIL
;

1536 
	`di•œy_w¨n
("Ê≤°ÊúâË£ÖÈÖçÊù°Á†ÅÊû™ÔºåÊó†Ê≥ïËøõË°å‰∫§ÊòìÔºÅ");

1539  
SUCCESS
;

1540 
	}
}

1546 
	$cmd_å™ß˘_by_num
()

1548 
ªt
;

1549 
	`mem£t
(&
g_n‹mÆ_å™s_ôems
, 0, (g_normal_trans_items));

1552 
g_n‹mÆ_å™s_ôems
.
ty≥
 = 
BY_PLU_NUM
;

1554 
ªt
 = 
	`do_å™ß˘
();

1555 i‡(
ªt
 !
SUCCESS
) {

1556  
FAIL
;

1559  
SUCCESS
;

1560 
	}
}

1566 
	$cmd_ªsume_å™ß˘
()

1568 i‡(
g_h™g_Êag
 !
POSITIVE
) {

1569 
	`di•œy_w¨n
("ÂêéÂè∞‰∏çÂ≠òÂú®ÊåÇÂçï");

1570  
FAIL
;

1573 
g_n‹mÆ_å™s_ôems
 = 
g_h™g_å™s_ôems
;

1575 
	`mem£t
(&
g_h™g_å™s_ôems
, 0, (g_hang_trans_items));

1576 
	`mem£t
(&
g_öv_dëaû
, 0, (g_inv_detail));

1578 
	`£t_h™g_Êag
(
NEGATIVE
);

1579 
	`do_å™ß˘
();

1581  
SUCCESS
;

1582 
	}
}

1588 
	$cmd_m™_issue_öv
()

1590 
ªt
;

1591 
øã
 = 0;

1592 
∂u_ôem
 
tmp_ôem
;

1593 
èx_sy°em
 *Åax_sy°em = 
	`gë_èx_sy°em
();

1595 
ªt
 = 
èx_sy°em
->
	`is_fisˇl_öô
();

1596 i‡(
ªt
 !
POSITIVE
) {

1597 
	`di•œy_w¨n
("Êú¨Êú∫Â∞öÊú™Á®éÊéßÂàùÂßãÂåñÔºåËØ∑ÂÖàËøõË°åÂàùÂßãÂåñÔºÅ");

1599  
FAIL
;

1602 
	`mem£t
(&
tmp_ôem
, 0, (tmp_item));

1603 
	`mem£t
(&
g_öv_dëaû
, 0, (g_inv_detail));

1604 
	`mem£t
(&
g_n‹mÆ_å™s_ôems
, 0, (g_normal_trans_items));

1606 
öput_«me
:

1607 
	`show_m™_issue_öv
();

1608 
ªt
 = 
	`gë_chn_°r
(2, 4, 
tmp_ôem
.
«me
);

1609 i‡(
ªt
 =-
EUI_ESC
) {

1610 
ªt
 = 
	`que°i⁄_u£r
("Á°ÆÂÆöÂèñÊ∂àÊú¨Ê¨°Êìç‰ΩúÔºü");

1611 i‡(
ªt
 =
POSITIVE
)

1612  
FAIL
;

1614 
öput_«me
;

1617 
ªt
 = 
	`gë_öãr_num
(3, 4, (*)&
tmp_ôem
.
¥i˚
);

1618 i‡(
ªt
 =-
EUI_ESC
) {

1619 
ªt
 = 
	`que°i⁄_u£r
("Á°ÆÂÆöÂèñÊ∂àÊú¨Ê¨°Êìç‰ΩúÔºü");

1620 i‡(
ªt
 =
POSITIVE
)

1621  
FAIL
;

1623 
öput_«me
;

1626 
gë_øã
:

1627 
øã
 = 
	`gë_fis_ty≥
();

1628 i‡(
øã
 =-
EUI_ESC
) {

1629 
øã
 = 
	`que°i⁄_u£r
("Á°ÆÂÆöÂèñÊ∂àÊú¨Ê¨°Êìç‰ΩúÔºü");

1630 i‡(
øã
 =
POSITIVE
)

1631  
FAIL
;

1633 
gë_øã
;

1634 } i‡(
ªt
 =-
EUI_BACK
)

1635 
öput_«me
;

1637 
tmp_ôem
.
èx_ödex
 = 
øã
;

1639 
	`do_add_comm_to_li°
(&
tmp_ôem
, 1);

1640 
ªt
 = 
	`do_subtŸÆ_comm_ôems
();

1641 i‡(
ªt
 !
SUCCESS
) {

1642 
	`di•œy_îr_msg
(
ªt
);

1643  
FAIL
;

1646 
öput_∑yî
:

1647 
	`show_å™s_öput_∑yî
();

1648 
ªt
 = 
	`gë_chn_°r
(2, 1, 
g_öv_dëaû
.
∑yî_«me
);

1649 i‡(
ªt
 =-
EUI_ESC
) {

1650 
ªt
 = 
	`que°i⁄_u£r
("ÊòØÂê¶Ë¶ÅÂèñÊ∂àÊú¨Ê¨°ÈîÄÂîÆÔºü");

1651 i‡(
ªt
 =
POSITIVE
)

1652  
SUCCESS
;

1654 
öput_∑yî
;

1657 i‡(
	`°æí
(
g_öv_dëaû
.
∑yî_«me
) == 0)

1658 
	`°r˝y
(
g_öv_dëaû
.
∑yî_«me
, "‰∏™‰∫∫");

1660 
öput_døwî
:

1661 
	`show_å™s_öput_døwî
();

1662 
ªt
 = 
	`gë_chn_°r
(2, 1, 
g_öv_dëaû
.
døwî
);

1663 i‡(
ªt
 =-
EUI_ESC
) {

1664 
ªt
 = 
	`que°i⁄_u£r
("ÊòØÂê¶Ë¶ÅÂèñÊ∂àÊú¨Ê¨°ÈîÄÂîÆÔºü");

1665 i‡(
ªt
 =
POSITIVE
)

1666  
SUCCESS
;

1668 
öput_døwî
;

1671 i‡(
	`°æí
(
g_öv_dëaû
.
døwî
) == 0)

1672 
	`°r˝y
(
g_öv_dëaû
.
døwî
, "Êó†");

1674 
ªt
 = 
	`do_issue_övoi˚
();

1675 i‡(
ªt
 !
SUCCESS
)

1676  
FAIL
;

1678 
ªt
 = 
	`do_¥öt_övoi˚
();

1679 i‡(
ªt
 !
SUCCESS
)

1680  
FAIL
;

1682  
SUCCESS
;

1683 
	}
}

1689 
	$cmd_ªtu∫_öv
()

1691 
ªt
, 
key
;

1692 
öv_num
;

1693 
‹i_num
;

1694 
èx_sys_övoi˚_dëaû_ªc‹d
 
‹i_dëaû
;

1695 
èx_sy°em
 *Åax_sy°em = 
	`gë_èx_sy°em
();

1697 
ªt
 = 
èx_sy°em
->
	`gë_övoi˚_nb
((
uöt
 *)&
öv_num
);

1698 
	`mem£t
(&
‹i_dëaû
, 0, (ori_detail));

1700 
öput_‹i
:

1701 
	`show_ªtu∫_öput_‹ige
(
öv_num
);

1702 
ªt
 = 
	`gë_öãr_num
(3, 6, &
‹i_num
);

1703 i‡(
ªt
 =-
EUI_ESC
) {

1704 
ªt
 = 
	`que°i⁄_u£r
("Á°ÆËÆ§ÂèñÊ∂àÂΩìÂâçÊìç‰ΩúÔºü");

1705 i‡(
ªt
 =
POSITIVE
)

1706  
SUCCESS
;

1708 
öput_‹i
;

1711 
	`di•œy_öfo
("Ê≠£Âú®Êü•ËØ¢ÂºÄÁ•®ËÆ∞ÂΩï...");

1713 
ªt
 = 
	`èx_fûe_föd_övoi˚_dëaû
((
uöt
 *)&
‹i_num
, &
‹i_dëaû
);

1714 i‡(
ªt
 =-
EFILE_NO_REC
){

1715 
	`di•œy_w¨n
("‰∏çÂ≠òÂú®ËØ•Á•®ËÆ∞ÂΩïÔºÅ");

1716 
öput_‹i
;

1717 } i‡(
ªt
 =-
ETAX_INV_HAS_RETURNED
) {

1718 
	`di•œy_w¨n
("ËØ•ÂèëÁ•®Â∑≤Ë¢´ÈÄÄÁ•®ÔºÅ");

1719 
öput_‹i
;

1722 
ªt
 = 
	`do_check_‹igö_öv
(&
‹i_dëaû
);

1723 
ªt
) {

1724 -
ETAX_OUT_DECLARE_DATE
:

1725 
	`di•œy_w¨n
("ËØ•Á•®‰∏çÂú®Áî≥Êä•ÊúüÂÜÖÔºåÊó†Ê≥ïÈÄÄÁ•®ÔºÅ");

1726 
öput_‹i
;

1729 -
ETAX_SPOIL_INV
:

1730 
	`di•œy_w¨n
("ËØ•Á•®ÊòØÂ∑≤Ë¢´ÈÄÄÁ•®ÔºåÊó†Ê≥ïÈÄÄÁ•®ÔºÅ");

1731 
öput_‹i
;

1734 -
ETAX_RETURN_INV
:

1735 
	`di•œy_w¨n
("ËØ•Á•®ÊòØÂ∫üÁ•®ÔºåÊó†Ê≥ïÈÄÄÁ•®ÔºÅ");

1736 
öput_‹i
;

1743 
show_‹i
:

1744 
	`show_ªtu∫_‹ige_öfo
(&
‹i_dëaû
);

1746 
	`£t_ime_°©us
(
INPUT_LOW_CASE
);

1747 
	`˛ór_ˇche
();

1749 
key
 = 
	`gë_keycode
();

1750 
key
) {

1751 
ESC
:

1752 
ªt
 = 
	`que°i⁄_u£r
("Á°ÆËÆ§ÂèñÊ∂àÊú¨Ê¨°Êìç‰ΩúÔºü");

1753 i‡(
ªt
 =
POSITIVE
)

1754  
FAIL
;

1757 
BACK
:

1758 
öput_‹i
;

1761 
ENTER
:

1767 } 
key
 !
ENTER
);

1769 
ªt
 = 
	`que°i⁄_u£r
("Á°ÆËÆ§ËøõË°åÈÄÄÁ•®Ôºü");

1770 i‡(
ªt
 !
POSITIVE
)

1771 
show_‹i
;

1773 
	`di•œy_öfo
("Ê≠£Âú®ÈÄÄÁ•®...");

1775 
ªt
 = 
	`do_ªtu∫_övoi˚
(&
‹i_dëaû
);

1776 i‡(
ªt
 !
SUCCESS
) {

1777 
	`di•œy_îr_msg
(
ªt
);

1778  
FAIL
;

1781 
	`di•œy_w¨n
("ÈÄÄÁ•®ÊàêÂäüÔºÅ");

1782  
SUCCESS
;

1783 
	}
}

1789 
	$cmd_•oû_cur_öv
()

1791 
ªt
;

1792 
tôÀ
[50] = {0};

1793 
issue_övoi˚_ªs
 
issue_ªs
;

1794 
èx_sys_issue_övoi˚
 
issue_öv
;

1795 
èx_sys_övoi˚_dëaû_ªc‹d
 
öv_dëaû
;

1796 
π_›î©e
 * 
π_›s
 = 
	`gë_π_›s
();

1797 
èx_sy°em
 *Åax_sy°em = 
	`gë_èx_sy°em
();

1799 
	`mem£t
(&
issue_öv
, 0, (issue_inv));

1800 
	`mem£t
(&
öv_dëaû
, 0, (inv_detail));

1802 
ªt
 = 
èx_sy°em
->
	`gë_övoi˚_nb
(&
issue_öv
.
övoi˚_num
);

1803 i‡(
ªt
 < 0) {

1804 i‡(
ªt
 =-
ETAX_INVOICE_MC_EMPTY
) {

1805 
	`di•œy_w¨n
("ÂΩìÂâçÂèëÁ•®Âç∑Â∑≤Áî®Â∞ΩÔºåÊó†Ê≥ïÂ∫üÁ•®ÔºÅ");

1806  
FAIL
;

1809 
	`di•œy_îr_msg
(
ªt
);

1810  
FAIL
;

1813 
	`¢¥ötf
(
tôÀ
, 50, "ÂΩìÂâçÂèëÁ•®Âè∑‰∏∫: %010dÔºåÊòØÂê¶Ë¶ÅÂ∞ÜËØ•Á•®‰ΩúÂ∫ü?", 
issue_öv
.
övoi˚_num
);

1814 
ªt
 = 
	`que°i⁄_u£r
(
tôÀ
);

1815 i‡(
ªt
 !
POSITIVE
)

1816  
FAIL
;

1818 
	`di•œy_öfo
("Ê≠£Âú®Â∫üÁ•®...");

1821 
issue_öv
.
övoi˚_ty≥
 = 
SPOIL_INVOICE
;

1822 
ªt
 = 
π_›s
->
	`gë_cur_d©e
(&
issue_öv
.
d©e
);

1823 i‡(
ªt
 < 0) {

1824 
	`di•œy_îr_msg
(
ªt
);

1825  
ªt
;

1828 
ªt
 = 
èx_sy°em
->
	`issue_övoi˚
(&
issue_öv
, &
issue_ªs
);

1829 i‡(
ªt
 < 0) {

1830 
	`di•œy_îr_msg
(
ªt
);

1831  
ªt
;

1834 
	`gë_fisˇl_code
(&
issue_ªs
);

1836 
öv_dëaû
.
dëaû_d©e
 = 
issue_öv
.
d©e
;

1837 
öv_dëaû
.
dëaû_ty≥
 = 
issue_öv
.
övoi˚_ty≥
;

1838 
öv_dëaû
.
dëaû_öv_num
 = 
issue_öv
.
övoi˚_num
;

1839 
	`mem˝y
(
öv_dëaû
.
dëaû_fisˇl_code
, 
issue_ªs
.
èx_num
, 20);

1841 
ªt
 = 
	`èx_fûe_≠≥nd_övoi˚_dëaû
(&
öv_dëaû
);

1842 i‡(
ªt
 < 0) {

1843 
	`di•œy_îr_msg
(
ªt
);

1844  
FAIL
;

1847 
	`di•œy_w¨n
("Â∫üÁ•®ÊàêÂäüÔºÅ");

1848  
SUCCESS
;

1849 
	}
}

1855 
	$cmd_•oû_À·_öv
()

1857 
ªt
;

1858 
tôÀ
[50] = {0};

1860 
bcd_d©e
 
today
;

1861 
issue_övoi˚_ªs
 
issue_ªs
;

1862 
èx_sys_issue_övoi˚
 
issue_öv
;

1863 
èx_sys_övoi˚_dëaû_ªc‹d
 
öv_dëaû
;

1865 
π_›î©e
 * 
π_›s
 = 
	`gë_π_›s
();

1866 
èx_sy°em
 *Åax_sy°em = 
	`gë_èx_sy°em
();

1867 
èx_sys_cur_rﬁl_À·_ªc‹d
 * 
gp_¸ 
 = 
	`gë_cur_rﬁl_À·
();

1869 
	`mem£t
(&
issue_öv
, 0, (issue_inv));

1870 
	`mem£t
(&
öv_dëaû
, 0, (inv_detail));

1872 
ªt
 = 
π_›s
->
	`gë_cur_d©e
(&
today
);

1873 i‡(
ªt
 < 0) {

1874 
	`di•œy_îr_msg
(
ªt
);

1875  
FAIL
;

1878 
ªt
 = 
èx_sy°em
->
	`gë_övoi˚_nb
(&
issue_öv
.
övoi˚_num
);

1879 i‡(
ªt
 < 0) {

1880 i‡(
ªt
 =-
ETAX_INVOICE_MC_EMPTY
) {

1881 
	`di•œy_w¨n
("ÂΩìÂâçÂèëÁ•®Âç∑Â∑≤Áî®Â∞ΩÔºåÊó†Ê≥ïÂ∫üÁ•®ÔºÅ");

1882  
FAIL
;

1885 
	`di•œy_îr_msg
(
ªt
);

1886  
FAIL
;

1889 
	`¢¥ötf
(
tôÀ
, 50, "ÂΩìÂâçÂâ©‰ΩôÂèëÁ•®Ôºö%dÔºåÁ°ÆÂÆö‰ΩúÂ∫üÂâ©‰ΩôÁ•®Ôºü", 
gp_¸ 
->
cur_rﬁl_À·
);

1890 
ªt
 = 
	`que°i⁄_u£r
(
tôÀ
);

1891 i‡(
ªt
 !
POSITIVE
)

1892  
FAIL
;

1894 
	`di•œy_öfo
("Ê≠£Âú®Â∫üÁ•®...");

1897 
issue_öv
.
d©e
 = 
today
;

1898 
öv_dëaû
.
dëaû_d©e
 = 
today
;

1899 
öv_dëaû
.
dëaû_ty≥
 = 
SPOIL_INVOICE
;

1900 
issue_öv
.
övoi˚_ty≥
 = 
SPOIL_INVOICE
;

1903 
ªt
 = 
èx_sy°em
->
	`gë_övoi˚_nb
(&
issue_öv
.
övoi˚_num
);

1904 i‡(
ªt
 < 0) {

1905 i‡(
ªt
 !-
ETAX_INVOICE_MC_EMPTY
) {

1906 
	`di•œy_îr_msg
(
ªt
);

1907  
FAIL
;

1912 
ªt
 = 
èx_sy°em
->
	`issue_övoi˚
(&
issue_öv
, &
issue_ªs
);

1913 i‡(
ªt
 < 0) {

1914 
	`di•œy_îr_msg
(
ªt
);

1915  
ªt
;

1918 
	`gë_fisˇl_code
(&
issue_ªs
);

1920 
öv_dëaû
.
dëaû_öv_num
 = 
issue_öv
.
övoi˚_num
;

1921 
	`mem˝y
(
öv_dëaû
.
dëaû_fisˇl_code
, 
issue_ªs
.
èx_num
, 20);

1923 
ªt
 = 
	`èx_fûe_≠≥nd_övoi˚_dëaû
(&
öv_dëaû
);

1924 i‡(
ªt
 < 0) {

1925 
	`di•œy_îr_msg
(
ªt
);

1926  
FAIL
;

1930 
	`di•œy_w¨n
("‰ΩúÂ∫üÂâ©‰ΩôÁ•®ÊàêÂäüÔºÅ");

1932  
SUCCESS
;

1933 
	}
}

1939 
	$cmd_•oû_¨ó_öv
()

1941 
ªt
;

1942 
•oû_nb
;

1943 
tôÀ
[50] = {0};

1945 
bcd_d©e
 
today
;

1946 
issue_övoi˚_ªs
 
issue_ªs
;

1947 
èx_sys_issue_övoi˚
 
issue_öv
;

1948 
èx_sys_övoi˚_dëaû_ªc‹d
 
öv_dëaû
;

1950 
π_›î©e
 * 
π_›s
 = 
	`gë_π_›s
();

1951 
èx_sy°em
 *Åax_sy°em = 
	`gë_èx_sy°em
();

1952 
èx_sys_cur_rﬁl_À·_ªc‹d
 * 
gp_¸ 
 = 
	`gë_cur_rﬁl_À·
();

1954 
	`mem£t
(&
issue_öv
, 0, (issue_inv));

1955 
	`mem£t
(&
öv_dëaû
, 0, (inv_detail));

1957 
ªt
 = 
π_›s
->
	`gë_cur_d©e
(&
today
);

1958 i‡(
ªt
 < 0) {

1959 
	`di•œy_îr_msg
(
ªt
);

1960  
FAIL
;

1963 
ªt
 = 
èx_sy°em
->
	`gë_övoi˚_nb
(&
issue_öv
.
övoi˚_num
);

1964 i‡(
ªt
 < 0) {

1965 i‡(
ªt
 =-
ETAX_INVOICE_MC_EMPTY
) {

1966 
	`di•œy_w¨n
("ÂΩìÂâçÂèëÁ•®Âç∑Â∑≤Áî®Â∞ΩÔºåÊó†Ê≥ïÂ∫üÁ•®ÔºÅ");

1967  
FAIL
;

1970 
	`di•œy_îr_msg
(
ªt
);

1971  
FAIL
;

1974 
öput_nb
:

1975 
	`show_•oû_övoi˚_num
();

1976 
ªt
 = 
	`gë_öãr_num
(2, 1, &
•oû_nb
);

1977 i‡(
ªt
 =-
EUI_ESC
) {

1978 
ªt
 = 
	`que°i⁄_u£r
("Á°ÆËÆ§ÂèñÊ∂àÊú¨Ê¨°Êìç‰ΩúÔºü");

1979 i‡(
ªt
 =
POSITIVE
)

1980  
FAIL
;

1982 
öput_nb
;

1985 i‡(
•oû_nb
 > 
gp_¸ 
->
cur_rﬁl_À·
) {

1986 
	`di•œy_w¨n
("Â∫üÁ•®Êï∞Â§ß‰∫éÂâ©‰ΩôÂèëÁ•®Êï∞ÔºåËØ∑ÈáçÊñ∞ËæìÂÖ•ÔºÅ");

1987 
öput_nb
;

1990 
	`¢¥ötf
(
tôÀ
, 50, "Á°ÆÂÆö‰ΩúÂ∫ü%dÂº†Á•®Ôºü", 
•oû_nb
);

1991 
ªt
 = 
	`que°i⁄_u£r
(
tôÀ
);

1992 i‡(
ªt
 !
POSITIVE
)

1993  
FAIL
;

1995 
	`di•œy_öfo
("Ê≠£Âú®Â∫üÁ•®...");

1998 
issue_öv
.
d©e
 = 
today
;

1999 
öv_dëaû
.
dëaû_d©e
 = 
today
;

2000 
öv_dëaû
.
dëaû_ty≥
 = 
SPOIL_INVOICE
;

2001 
issue_öv
.
övoi˚_ty≥
 = 
SPOIL_INVOICE
;

2003 
i
;

2004 
i
 = 0; i < 
•oû_nb
; i ++) {

2005 
ªt
 = 
èx_sy°em
->
	`gë_övoi˚_nb
(&
issue_öv
.
övoi˚_num
);

2006 i‡(
ªt
 < 0) {

2007 i‡(
ªt
 !-
ETAX_INVOICE_MC_EMPTY
) {

2008 
	`di•œy_îr_msg
(
ªt
);

2009  
FAIL
;

2014 
ªt
 = 
èx_sy°em
->
	`issue_övoi˚
(&
issue_öv
, &
issue_ªs
);

2015 i‡(
ªt
 < 0) {

2016 
	`di•œy_îr_msg
(
ªt
);

2017  
ªt
;

2020 
	`gë_fisˇl_code
(&
issue_ªs
);

2022 
öv_dëaû
.
dëaû_öv_num
 = 
issue_öv
.
övoi˚_num
;

2023 
	`mem˝y
(
öv_dëaû
.
dëaû_fisˇl_code
, 
issue_ªs
.
èx_num
, 20);

2025 
ªt
 = 
	`èx_fûe_≠≥nd_övoi˚_dëaû
(&
öv_dëaû
);

2026 i‡(
ªt
 < 0) {

2027 
	`di•œy_îr_msg
(
ªt
);

2028  
FAIL
;

2032 
	`di•œy_w¨n
("Â∫üÁ•®ÊàêÂäüÔºÅ");

2034  
SUCCESS
;

2035 
	}
}

	@command/cmd_other_ops.c

9 
	~<°dlib.h
>

10 
	~<uni°d.h
>

11 
	~<°dio.h
>

12 
	~<°rög.h
>

13 
	~<f˙é.h
>

14 
	~<˘y≥.h
>

16 
	~"c⁄fig.h
"

17 
	~"comm⁄.h
"

18 
	~"îr‹.h
"

19 
	~"èx_cmd.h
"

20 
	~"èx_sy°em.h
"

21 
	~"èx_fûe_›.h
"

22 
	~"ui_≠i.h
"

23 
	~"∂u.h
"

24 
	~"¥öt.h
"

25 
	~"öput.h
"

26 
	~"comm⁄.h
"

27 
	~"c⁄fig.h
"

28 
	~"ui_≠i.h
"

34 
	$show_võw_sögÀ_öv_UI
()

36 
sim∂e_‰ame
 
‰ame
;

37 
	`mem£t
(&
‰ame
, 0, (frame));

39 
‰ame
.
ôem_num
 = 2;

40 
‰ame
.
ôems
[0].
pos
.
row
 = 1;

41 
‰ame
.
ôems
[0].
pos
.
cﬁ
 = 3;

42 
	`•rötf
(
‰ame
.
ôems
[0].
tôÀ
, "Êü•ËØ¢ÂçïÂº†ÂèëÁ•®‰ø°ÊÅØ");

44 
‰ame
.
ôems
[1].
pos
.
row
 = 2;

45 
‰ame
.
ôems
[1].
pos
.
cﬁ
 = 1;

46 
	`•rötf
(
‰ame
.
ôems
[1].
tôÀ
, "ÂèëÁ•®Âè∑: ");

48 
	`show_sim∂e_‰ame
(&
‰ame
);

49  
SUCCESS
;

50 
	}
}

52 
	$show_võw_≥riod_cﬁÀ˘_UI
()

54 
sim∂e_‰ame
 
‰ame
;

55 
	`mem£t
(&
‰ame
, 0, (frame));

57 
‰ame
.
ôem_num
 = 4;

58 
‰ame
.
ôems
[0].
pos
.
row
 = 1;

59 
‰ame
.
ôems
[0].
pos
.
cﬁ
 = 3;

60 
	`•rötf
(
‰ame
.
ôems
[0].
tôÀ
, "ÂèëÁ•®‰ΩøÁî®‰ø°ÊÅØÊü•ËØ¢");

62 
‰ame
.
ôems
[1].
pos
.
row
 = 2;

63 
‰ame
.
ôems
[1].
pos
.
cﬁ
 = 1;

64 
	`•rötf
(
‰ame
.
ôems
[1].
tôÀ
, "Ëµ∑ÂßãÊó•Êúü: ");

66 
‰ame
.
ôems
[2].
pos
.
row
 = 3;

67 
‰ame
.
ôems
[2].
pos
.
cﬁ
 = 1;

68 
	`•rötf
(
‰ame
.
ôems
[2].
tôÀ
, "ÁªàÊ≠¢Êó•Êúü: ");

70 
‰ame
.
ôems
[3].
pos
.
row
 = 4;

71 
‰ame
.
ôems
[3].
pos
.
cﬁ
 = 1;

72 
	`•rötf
(
‰ame
.
ôems
[3].
tôÀ
, "Êó•ÊúüÊ†ºÂºè:20150101 ");

74 
	`show_sim∂e_‰ame
(&
‰ame
);

75  
SUCCESS
;

76 
	}
}

78 
	$show_võw_u£d_rﬁl_UI
()

80 
sim∂e_‰ame
 
‰ame
;

81 
	`mem£t
(&
‰ame
, 0, (frame));

83 
‰ame
.
ôem_num
 = 2;

84 
‰ame
.
ôems
[0].
pos
.
row
 = 1;

85 
‰ame
.
ôems
[0].
pos
.
cﬁ
 = 3;

86 
	`•rötf
(
‰ame
.
ôems
[0].
tôÀ
, "Êü•ËØ¢Â∑≤‰ΩøÁî®Âç∑‰ø°ÊÅØ");

88 
‰ame
.
ôems
[1].
pos
.
row
 = 2;

89 
‰ame
.
ôems
[1].
pos
.
cﬁ
 = 1;

90 
	`•rötf
(
‰ame
.
ôems
[1].
tôÀ
, "ËØ∑ËæìÂÖ•ËØ•Âç∑‰∏≠‰ªªÊÑèÂèëÁ•®Âè∑Ôºö");

92 
	`show_sim∂e_‰ame
(&
‰ame
);

93  
SUCCESS
;

94 
	}
}

96 
	$show_võw_de˛¨e_öfo_UI
()

98 
sim∂e_‰ame
 
‰ame
;

99 
	`mem£t
(&
‰ame
, 0, (frame));

101 
‰ame
.
ôem_num
 = 3;

102 
‰ame
.
ôems
[0].
pos
.
row
 = 1;

103 
‰ame
.
ôems
[0].
pos
.
cﬁ
 = 3;

104 
	`•rötf
(
‰ame
.
ôems
[0].
tôÀ
, "Êü•ËØ¢Áî≥Êä•‰ø°ÊÅØ");

106 
‰ame
.
ôems
[1].
pos
.
row
 = 2;

107 
‰ame
.
ôems
[1].
pos
.
cﬁ
 = 1;

108 
	`•rötf
(
‰ame
.
ôems
[1].
tôÀ
, "ËØ∑ËæìÂÖ•Êó•Êúü: ");

110 
‰ame
.
ôems
[2].
pos
.
row
 = 4;

111 
‰ame
.
ôems
[2].
pos
.
cﬁ
 = 1;

112 
	`•rötf
(
‰ame
.
ôems
[2].
tôÀ
, "Êó•ÊúüÊ†ºÂºè:20150101 ");

114 
	`show_sim∂e_‰ame
(&
‰ame
);

115  
SUCCESS
;

116 
	}
}

118 
	$show_võw_daûy_cﬁÀ˘_UI
()

120 
sim∂e_‰ame
 
‰ame
;

121 
	`mem£t
(&
‰ame
, 0, (frame));

123 
‰ame
.
ôem_num
 = 3;

124 
‰ame
.
ôems
[0].
pos
.
row
 = 1;

125 
‰ame
.
ôems
[0].
pos
.
cﬁ
 = 3;

126 
	`•rötf
(
‰ame
.
ôems
[0].
tôÀ
, "Êü•ËØ¢Êó•Ê±áÊÄª‰ø°ÊÅØ");

128 
‰ame
.
ôems
[1].
pos
.
row
 = 2;

129 
‰ame
.
ôems
[1].
pos
.
cﬁ
 = 1;

130 
	`•rötf
(
‰ame
.
ôems
[1].
tôÀ
, "ËØ∑ËæìÂÖ•Êó•Êúü: ");

132 
‰ame
.
ôems
[2].
pos
.
row
 = 4;

133 
‰ame
.
ôems
[2].
pos
.
cﬁ
 = 1;

134 
	`•rötf
(
‰ame
.
ôems
[2].
tôÀ
, "Êó•ÊúüÊ†ºÂºè:20150101 ");

136 
	`show_sim∂e_‰ame
(&
‰ame
);

137  
SUCCESS
;

138 
	}
}

140 
	$show_devñ›_sys_UI
()

142 
sim∂e_‰ame
 
‰ame
;

143 
	`mem£t
(&
‰ame
, 0, (frame));

145 
‰ame
.
ôem_num
 = 3;

146 
‰ame
.
ôems
[0].
pos
.
row
 = 1;

147 
‰ame
.
ôems
[0].
pos
.
cﬁ
 = 4;

148 
	`•rötf
(
‰ame
.
ôems
[0].
tôÀ
, "ÂºÄÂèëËÄÖÈÄâÈ°π");

150 
‰ame
.
ôems
[1].
pos
.
row
 = 2;

151 
‰ame
.
ôems
[1].
pos
.
cﬁ
 = 1;

152 
	`•rötf
(
‰ame
.
ôems
[1].
tôÀ
, "ËØ∑ËæìÂÖ•Êú∫Âô®ÁºñÂè∑(16 bits): ");

154 
‰ame
.
ôems
[2].
pos
.
row
 = 4;

155 
‰ame
.
ôems
[2].
pos
.
cﬁ
 = 1;

156 
	`•rötf
(
‰ame
.
ôems
[2].
tôÀ
, "ÔºàÂá∫ÂéÇÊó•ÊúüÈªòËÆ§‰∏∫‰ªäÊó•Ôºâ");

158 
	`show_sim∂e_‰ame
(&
‰ame
);

159  
SUCCESS
;

160 
	}
}

162 
	$show_devñ›_¥öt_UI
()

164 
sim∂e_‰ame
 
‰ame
;

165 
	`mem£t
(&
‰ame
, 0, (frame));

167 
‰ame
.
ôem_num
 = 3;

168 
‰ame
.
ôems
[0].
pos
.
row
 = 1;

169 
‰ame
.
ôems
[0].
pos
.
cﬁ
 = 4;

170 
	`•rötf
(
‰ame
.
ôems
[0].
tôÀ
, "ÊâìÂç∞Êú∫ÊîØÊåÅËÆæÁΩÆ");

172 
‰ame
.
ôems
[1].
pos
.
row
 = 2;

173 
‰ame
.
ôems
[1].
pos
.
cﬁ
 = 1;

174 
	`•rötf
(
‰ame
.
ôems
[1].
tôÀ
, "1-‰ªÖÊîØÊåÅÂπ≥Êé®ÊâìÂç∞Êú∫");

176 
‰ame
.
ôems
[2].
pos
.
row
 = 3;

177 
‰ame
.
ôems
[2].
pos
.
cﬁ
 = 1;

178 
	`•rötf
(
‰ame
.
ôems
[2].
tôÀ
, "2-ÊîØÊåÅÂπ≥Êé®ÂèäÂç∑ÂºèÊâìÂç∞Êú∫");

180 
	`show_sim∂e_‰ame
(&
‰ame
);

181  
SUCCESS
;

182 
	}
}

184 
	$show_¥öt_£tup_UI
()

186 
sim∂e_‰ame
 
‰ame
;

187 
	`mem£t
(&
‰ame
, 0, (frame));

189 
‰ame
.
ôem_num
 = 3;

190 
‰ame
.
ôems
[0].
pos
.
row
 = 1;

191 
‰ame
.
ôems
[0].
pos
.
cﬁ
 = 4;

192 
	`•rötf
(
‰ame
.
ôems
[0].
tôÀ
, "ÈªòËÆ§ÊâìÂç∞Êú∫");

194 
‰ame
.
ôems
[1].
pos
.
row
 = 2;

195 
‰ame
.
ôems
[1].
pos
.
cﬁ
 = 1;

196 
	`•rötf
(
‰ame
.
ôems
[1].
tôÀ
, "1-Âπ≥Êé®ÊâìÂç∞Êú∫");

198 
‰ame
.
ôems
[2].
pos
.
row
 = 3;

199 
‰ame
.
ôems
[2].
pos
.
cﬁ
 = 1;

200 
	`•rötf
(
‰ame
.
ôems
[2].
tôÀ
, "2-Âç∑ÂºèÊâìÂç∞Êú∫");

202 
	`show_sim∂e_‰ame
(&
‰ame
);

203  
SUCCESS
;

204 
	}
}

209 
	$show_sögÀ_öv_öfo
(
èx_sys_övoi˚_dëaû_ªc‹d
 * 
‹i_dëaû
)

211 
key
, 
pos
, 
ôem
;

212 
buf
[20] = {0};

213 *
fis_«me
 = 
NULL
;

214 
sim∂e_‰ame
 
‰ame
[3];

216 
	`mem£t
(
‰ame
, 0, 3 * (
sim∂e_‰ame
));

218 
‰ame
[0].
ôem_num
 = 5;

219 
‰ame
[0].
ôems
[0].
pos
.
row
 = 1;

220 
‰ame
[0].
ôems
[0].
pos
.
cﬁ
 = 1;

221 
	`bcd_to_°r
((
uch¨
 *)&
‹i_dëaû
->
dëaû_d©e
, 
buf
, 4);

222 
	`•rötf
(
‰ame
[0].
ôems
[0].
tôÀ
, "%s", 
buf
);

224 
‰ame
[0].
ôems
[1].
pos
.
row
 = 1;

225 
‰ame
[0].
ôems
[1].
pos
.
cﬁ
 = 10;

226 
	`•rötf
(
‰ame
[0].
ôems
[1].
tôÀ
, "%s",

227 
‹i_dëaû
->
dëaû_ty≥
 =
NORMAL_INVOICE
 ? "Ê≠£Â∏∏Á•®" :

228 
‹i_dëaû
->
dëaû_ty≥
 =
RETURN_INVOICE
 ? "ÈÄÄÁ•®" :

229 
‹i_dëaû
->
dëaû_ty≥
 =
SPOIL_INVOICE
 ? "Â∫üÁ•®" :

232 
‰ame
[0].
ôems
[2].
pos
.
row
 = 2;

233 
‰ame
[0].
ôems
[2].
pos
.
cﬁ
 = 1;

234 
	`•rötf
(
‰ame
[0].
ôems
[2].
tôÀ
, "ÂºÄÁ•®ÊÄªÈáëÈ¢ùÔºö%.2fÂÖÉ", 
‹i_dëaû
->
dëaû_amt_tŸÆ
/100.0);

236 
‰ame
[0].
ôems
[3].
pos
.
row
 = 3;

237 
‰ame
[0].
ôems
[3].
pos
.
cﬁ
 = 1;

238 
	`•rötf
(
‰ame
[0].
ôems
[3].
tôÀ
, "ÂèëÁ•®Âè∑:%08u", 
‹i_dëaû
->
dëaû_öv_num
);

240 
‰ame
[0].
ôems
[4].
pos
.
row
 = 4;

241 
‰ame
[0].
ôems
[4].
pos
.
cﬁ
 = 1;

242 i‡(
‹i_dëaû
->
dëaû_ty≥
 =
RETURN_INVOICE
) {

243 
	`•rötf
(
‰ame
[0].
ôems
[4].
tôÀ
, "%sÔºö%08u", "ÂéüÂèëÁ•®Âè∑:", 
‹i_dëaû
->
dëaû_‹i_öv_num
);

245 
	`•rötf
(
‰ame
[0].
ôems
[4].
tôÀ
, "%s", "ÂéüÂèëÁ•®Âè∑: Êó†");

248 
	`mem£t
(
buf
, 0, 20);

250 
‰ame
[1].
ôem_num
 = 3;

251 
‰ame
[1].
ôems
[0].
pos
.
row
 = 1;

252 
‰ame
[1].
ôems
[0].
pos
.
cﬁ
 = 1;

253 
	`•rötf
(
‰ame
[1].
ôems
[0].
tôÀ
, "Á®éÊéßÁ†Å:");

255 
‰ame
[1].
ôems
[1].
pos
.
row
 = 2;

256 
‰ame
[1].
ôems
[1].
pos
.
cﬁ
 = 2;

257 
	`•rötf
(
‰ame
[1].
ôems
[1].
tôÀ
, "%s", 
‹i_dëaû
->
dëaû_fisˇl_code
);

259 
‰ame
[1].
ôems
[3].
pos
.
row
 = 3;

260 
‰ame
[1].
ôems
[3].
pos
.
cﬁ
 = 1;

261 
	`•rötf
(
‰ame
[1].
ôems
[0].
tôÀ
, "‰ªòÊ¨æÂçï‰ΩçÔºö%s",

262 
	`°æí
(
‹i_dëaû
->
∑yî_«me
) > 0 ? ori_detail->payer_name : "Êó†");

264 
	`£t_ime_°©us
(
INPUT_LOW_CASE
);

265 
	`˛ór_ˇche
();

267 
pos
 = 0;

268 
ôem
 = 0;

270 i‡(
‹i_dëaû
->
dëaû_ty≥
 !
SPOIL_INVOICE
) {

271 
‰ame
[2].
ôem_num
 = 5;

272 
‰ame
[2].
ôems
[0].
pos
.
row
 = 1;

273 
‰ame
[2].
ôems
[0].
pos
.
cﬁ
 = 5;

274 
	`•rötf
(
‰ame
[2].
ôems
[0].
tôÀ
, "Êù°ÁõÆ %d/%d", 
ôem
 + 1, 
‹i_dëaû
->
ôem_num
);

276 
‰ame
[2].
ôems
[1].
pos
.
row
 = 2;

277 
‰ame
[2].
ôems
[1].
pos
.
cﬁ
 = 1;

278 
	`•rötf
(
‰ame
[2].
ôems
[1].
tôÀ
, "Êï∞ÈáèÔºö%d", 
‹i_dëaû
->
ôem
[ôem].
num
);

280 
‰ame
[2].
ôems
[2].
pos
.
row
 = 2;

281 
‰ame
[2].
ôems
[2].
pos
.
row
 = 8;

282 
	`•rötf
(
‰ame
[2].
ôems
[2].
tôÀ
, "Âçï‰ª∑:%.2f", 
‹i_dëaû
->
ôem
[ôem].
comm_¥i˚
/100.0);

284 
‰ame
[2].
ôems
[3].
pos
.
row
 = 3;

285 
‰ame
[2].
ôems
[3].
pos
.
row
 = 1;

286 
	`•rötf
(
‰ame
[2].
ôems
[3].
tôÀ
, "ÂêàËÆ°: %.2f", 
‹i_dëaû
->
ôem
[ôem].
amou¡
/100.0);

288 
‰ame
[2].
ôems
[4].
pos
.
row
 = 4;

289 
‰ame
[2].
ôems
[4].
pos
.
row
 = 1;

290 
fis_«me
 = 
	`gë_fis_ty≥_«me
(
‹i_dëaû
->
ôem
[ôem].
comm_èx_ödex
);

291 
	`•rötf
(
‰ame
[2].
ôems
[4].
tôÀ
, "Á®éÁßç%d:%s(%d)", 
ôem
,

292 
fis_«me
 !
NULL
 ? fis_name : "Êú™Áü•ÂêçÂ≠ó",

293 
‹i_dëaû
->
ôem
[ôem].
comm_èx_ödex
);

295 
‰ame
[2].
ôem_num
 = 1;

296 
‰ame
[2].
ôems
[0].
pos
.
row
 = 1;

297 
‰ame
[2].
ôems
[0].
pos
.
cﬁ
 = 5;

298 
	`•rötf
(
‰ame
[2].
ôems
[0].
tôÀ
, "Êù°ÁõÆ 0/0");

301 
show_ui
:

302 
	`show_sim∂e_‰ame
(&
‰ame
[
pos
]);

304 
key
 = 
	`gë_keycode
();

305 
key
) {

306 
BACK
:

307  
SUCCESS
;

310 
ENTER
:

311  
SUCCESS
;

314 
ESC
:

315  
SUCCESS
;

318 
UP
:

319 i‡(
pos
 == 1) {

320 
pos
 --;

321 
show_ui
;

322 } i‡(
pos
 == 2) {

323 i‡(
ôem
 == 0) {

324 
pos
 --;

325 
show_ui
;

327 
ôem
 --;

334 
DOWN
:

335 i‡(
pos
 == 0 ||Öos == 1) {

336 
pos
 ++;

337 
show_ui
;

338 } i‡(
pos
 == 2) {

339 i‡(
ôem
 == 0) {

340 i‡(
ôem
 + 1 < 
‹i_dëaû
->
ôem_num
) {

341 
ôem
 ++;

353 
	}
}

355 
	$show_dayly_cﬁÀ˘_öfo
(
èx_sys_daûy_cﬁÀ˘_ªc‹d
 * 
daûy_ªc
)

357 
key
, 
pos
, 
ôem
;

358 *
fis_«me
;

359 
buf
[20] = {0};

360 
sim∂e_‰ame
 
‰ame
[2];

361 
èx_sys_≠p_öfo
 *
gp_≠p_öfo
 = 
	`gë_sys_≠p_öfo
();

363 
	`mem£t
(
‰ame
, 0, 2 * (
sim∂e_‰ame
));

365 
‰ame
[0].
ôem_num
 = 4;

366 
‰ame
[0].
ôems
[0].
pos
.
row
 = 1;

367 
‰ame
[0].
ôems
[0].
pos
.
cﬁ
 = 1;

368 
	`bcd_to_°r
((
uch¨
 *)&
daûy_ªc
->
cur_d©e
, 
buf
, 4);

369 
	`•rötf
(
‰ame
[0].
ôems
[0].
tôÀ
, "Êó•ÊúüÔºö%s", 
buf
);

371 
‰ame
[0].
ôems
[1].
pos
.
row
 = 2;

372 
‰ame
[0].
ôems
[1].
pos
.
cﬁ
 = 1;

373 
	`•rötf
(
‰ame
[0].
ôems
[1].
tôÀ
, "Ê≠£Â∏∏ÂºÄÁ•®Êï∞Ôºö%d", 
daûy_ªc
->
vÆid_cou¡
);

375 
‰ame
[0].
ôems
[2].
pos
.
row
 = 3;

376 
‰ame
[0].
ôems
[2].
pos
.
cﬁ
 = 1;

377 
	`•rötf
(
‰ame
[0].
ôems
[2].
tôÀ
, "ÈÄÄÁ•®Êï∞Ôºö%d", 
daûy_ªc
->
ªtu∫_cou¡
);

379 
‰ame
[0].
ôems
[3].
pos
.
row
 = 4;

380 
‰ame
[0].
ôems
[3].
pos
.
cﬁ
 = 1;

381 
	`•rötf
(
‰ame
[0].
ôems
[3].
tôÀ
, "Â∫üÁ•®Êï∞Ôºö%d", 
daûy_ªc
->
•oû_cou¡
);

383 
‰ame
[1].
ôem_num
 = 4;

384 
‰ame
[1].
ôems
[0].
pos
.
row
 = 1;

385 
‰ame
[1].
ôems
[0].
pos
.
cﬁ
 = 4;

387 
‰ame
[1].
ôems
[1].
pos
.
row
 = 2;

388 
‰ame
[1].
ôems
[1].
pos
.
cﬁ
 = 1;

390 
‰ame
[1].
ôems
[2].
pos
.
row
 = 3;

391 
‰ame
[1].
ôems
[2].
pos
.
cﬁ
 = 1;

393 
‰ame
[1].
ôems
[3].
pos
.
row
 = 4;

394 
‰ame
[1].
ôems
[3].
pos
.
cﬁ
 = 1;

396 
pos
 = 
ôem
 = 0;

398 
	`•rötf
(
‰ame
[1].
ôems
[0].
tôÀ
, "ÂêÑÁ®éÁßçÂºÄÁ•®ÈáëÈ¢ù");

400 
fis_«me
 = 
	`gë_fis_ty≥_«me
(
daûy_ªc
->
èx_ödex
[
ôem
]);

401 
	`•rötf
(
‰ame
[1].
ôems
[1].
tôÀ
, "Á®éÁßç%d:%s(%d)", 
ôem
,

402 
fis_«me
 !
NULL
 ? fis_name : "Êú™Áü•ÂêçÂ≠ó",

403 
daûy_ªc
->
èx_ödex
[
ôem
]);

405 
	`•rötf
(
‰ame
[1].
ôems
[2].
tôÀ
, "ÂºÄÁ•®ÊÄªÈ¢ùÔºö%d", 
daûy_ªc
->
amt_vÆid
[
ôem
]);

406 
	`•rötf
(
‰ame
[1].
ôems
[3].
tôÀ
, "ÈÄÄÁ•®ÊÄªÈ¢ùÔºö%d", 
daûy_ªc
->
amt_ªtu∫
[
ôem
]);

408 
show_ui
:

409 
	`show_sim∂e_‰ame
(&
‰ame
[
pos
]);

411 
key
 = 
	`gë_keycode
();

412 
key
) {

413 
ENTER
:

414  
SUCCESS
;

417 
BACK
:

418  -
EUI_BACK
;

421 
ESC
:

422  -
EUI_ESC
;

425 
UP
:

426 i‡(
pos
 > 0) {

427 i‡(
ôem
 == 0) {

428 
pos
 --;

429 
show_ui
;

431 
ôem
 --;

435 
DOWN
:

436 i‡(
pos
 == 0) {

437 
pos
 ++;

438 
show_ui
;

440 i‡(
ôem
 + 1 < 
gp_≠p_öfo
->
èx_ôem_nb
) {

441 
ôem
 ++;

450 
	}
}

452 
	$show_de˛¨e_öfo
(
èx_sys_de˛¨e_duty_ªc‹d
 * 
de˛¨e_ªc
)

454 
key
, 
pos
, 
ôem
;

455 *
fis_«me
;

456 
buf
[20] = {0};

457 
sim∂e_‰ame
 
‰ame
[3];

458 
èx_sys_≠p_öfo
 *
gp_≠p_öfo
 = 
	`gë_sys_≠p_öfo
();

460 
	`mem£t
(
‰ame
, 0, 3 * (
sim∂e_‰ame
));

462 
‰ame
[0].
ôem_num
 = 4;

463 
‰ame
[0].
ôems
[0].
pos
.
row
 = 1;

464 
‰ame
[0].
ôems
[0].
pos
.
cﬁ
 = 5;

465 
	`•rötf
(
‰ame
[0].
ôems
[0].
tôÀ
, "Áî≥Êä•‰ø°ÊÅØ");

467 
‰ame
[0].
ôems
[1].
pos
.
row
 = 2;

468 
‰ame
[0].
ôems
[1].
pos
.
cﬁ
 = 1;

469 
	`bcd_to_°r
((
uch¨
 *)&
de˛¨e_ªc
->
cur_d©e
, 
buf
, 4);

470 
	`•rötf
(
‰ame
[0].
ôems
[1].
tôÀ
, "Áî≥Êä•Êó•ÊúüÔºö%s", 
buf
);

472 
‰ame
[0].
ôems
[2].
pos
.
row
 = 3;

473 
‰ame
[0].
ôems
[2].
pos
.
cﬁ
 = 1;

474 
	`bcd_to_°r
((
uch¨
 *)&
de˛¨e_ªc
->
°¨t_d©e
, 
buf
, 4);

475 
	`•rötf
(
‰ame
[0].
ôems
[2].
tôÀ
, "Ëµ∑ÂßãÊó•ÊúüÔºö%s", 
buf
);

477 
‰ame
[0].
ôems
[3].
pos
.
row
 = 4;

478 
‰ame
[0].
ôems
[3].
pos
.
cﬁ
 = 1;

479 
	`bcd_to_°r
((
uch¨
 *)&
de˛¨e_ªc
->
íd_d©e
, 
buf
, 4);

480 
	`•rötf
(
‰ame
[0].
ôems
[3].
tôÀ
, "Êà™Ê≠¢Êó•ÊúüÔºö%s", 
buf
);

482 
‰ame
[1].
ôem_num
 = 4;

483 
‰ame
[1].
ôems
[0].
pos
.
row
 = 1;

484 
‰ame
[1].
ôems
[0].
pos
.
cﬁ
 = 5;

485 
	`•rötf
(
‰ame
[1].
ôems
[1].
tôÀ
, "Áî≥Êä•‰ø°ÊÅØ");

487 
‰ame
[1].
ôems
[1].
pos
.
row
 = 2;

488 
‰ame
[1].
ôems
[1].
pos
.
cﬁ
 = 1;

489 
	`•rötf
(
‰ame
[1].
ôems
[1].
tôÀ
, "Ê≠£Â∏∏Á•®Êï∞Ôºö%d", 
de˛¨e_ªc
->
vÆid_cou¡
);

491 
‰ame
[1].
ôems
[2].
pos
.
row
 = 3;

492 
‰ame
[1].
ôems
[2].
pos
.
cﬁ
 = 1;

493 
	`•rötf
(
‰ame
[1].
ôems
[1].
tôÀ
, "ÈÄÄÁ•®Êï∞Ôºö%d", 
de˛¨e_ªc
->
ªtu∫_cou¡
);

495 
‰ame
[1].
ôems
[3].
pos
.
row
 = 4;

496 
‰ame
[1].
ôems
[3].
pos
.
cﬁ
 = 1;

497 
	`•rötf
(
‰ame
[1].
ôems
[1].
tôÀ
, "Â∫üÁ•®Êï∞Ôºö%d", 
de˛¨e_ªc
->
•oû_cou¡
);

499 
‰ame
[2].
ôem_num
 = 4;

500 
‰ame
[2].
ôems
[0].
pos
.
row
 = 1;

501 
‰ame
[2].
ôems
[0].
pos
.
cﬁ
 = 4;

503 
‰ame
[2].
ôems
[1].
pos
.
row
 = 2;

504 
‰ame
[2].
ôems
[1].
pos
.
cﬁ
 = 1;

506 
‰ame
[2].
ôems
[2].
pos
.
row
 = 3;

507 
‰ame
[2].
ôems
[2].
pos
.
cﬁ
 = 1;

509 
‰ame
[2].
ôems
[3].
pos
.
row
 = 4;

510 
‰ame
[2].
ôems
[3].
pos
.
cﬁ
 = 1;

512 
pos
 = 
ôem
 = 0;

514 
	`•rötf
(
‰ame
[2].
ôems
[0].
tôÀ
, "ÂêÑÁ®éÁßçÂºÄÁ•®ÈáëÈ¢ù");

516 
fis_«me
 = 
	`gë_fis_ty≥_«me
(
de˛¨e_ªc
->
èx_ödex
[
ôem
]);

517 
	`•rötf
(
‰ame
[2].
ôems
[1].
tôÀ
, "Á®éÁßç%d:%s(%d)", 
ôem
,

518 
fis_«me
 !
NULL
 ? fis_name : "Êú™Áü•ÂêçÂ≠ó",

519 
de˛¨e_ªc
->
èx_ödex
[
ôem
]);

521 
	`•rötf
(
‰ame
[2].
ôems
[2].
tôÀ
, "ÂºÄÁ•®ÊÄªÈ¢ùÔºö%d", 
de˛¨e_ªc
->
amt_vÆid
[
ôem
]);

522 
	`•rötf
(
‰ame
[2].
ôems
[3].
tôÀ
, "ÈÄÄÁ•®ÊÄªÈ¢ùÔºö%d", 
de˛¨e_ªc
->
amt_ªtu∫
[
ôem
]);

524 
show_‰ame
:

525 
	`show_sim∂e_‰ame
(&
‰ame
[
pos
]);

527 
key
 = 
	`gë_keycode
();

528 
key
) {

529 
ENTER
:

530  
SUCCESS
;

533 
BACK
:

534  -
EUI_BACK
;

537 
ESC
:

538  -
EUI_ESC
;

541 
UP
:

542 i‡(
pos
 > 0) {

543 i‡(
ôem
 == 0) {

544 
pos
 --;

545 
show_‰ame
;

547 
ôem
 --;

551 
DOWN
:

552 i‡(
pos
 < 2) {

553 
pos
 ++;

554 
show_‰ame
;

556 i‡(
ôem
 + 1 < 
gp_≠p_öfo
->
èx_ôem_nb
) {

557 
ôem
 ++;

566 
	}
}

569 
	$show_u£d_rﬁl_öfo
(
èx_sys_u£d_rﬁl_id_ªc‹d
 * 
u£d_rﬁl
)

571 
key
, 
pos
;

572 
buf
[40] = {0};

573 
sim∂e_‰ame
 
‰ame
[3];

575 
	`mem£t
(
‰ame
, 0, 3 * (
sim∂e_‰ame
));

577 
‰ame
[0].
ôem_num
 = 4;

578 
‰ame
[0].
ôems
[0].
pos
.
row
 = 1;

579 
‰ame
[0].
ôems
[0].
pos
.
cﬁ
 = 1;

580 
	`•rötf
(
‰ame
[0].
ôems
[0].
tôÀ
, "Ëµ∑ÂßãÂè∑Ôºö%d", 
u£d_rﬁl
->
°¨t_num
);

582 
‰ame
[0].
ôems
[1].
pos
.
row
 = 2;

583 
‰ame
[0].
ôems
[1].
pos
.
cﬁ
 = 1;

584 
	`•rötf
(
‰ame
[0].
ôems
[1].
tôÀ
, "ÁªàÊ≠¢Âè∑Ôºö%d", 
u£d_rﬁl
->
íd_num
);

586 
‰ame
[0].
ôems
[2].
pos
.
row
 = 3;

587 
‰ame
[0].
ôems
[2].
pos
.
cﬁ
 = 1;

588 
	`bcd_to_°r
((
uch¨
 *)&
u£d_rﬁl
->
°¨t_d©e
, 
buf
, 4);

589 
	`•rötf
(
‰ame
[0].
ôems
[2].
tôÀ
, "Ëµ∑ÂßãÊó•ÊúüÔºö%s", 
buf
);

591 
‰ame
[0].
ôems
[3].
pos
.
row
 = 4;

592 
‰ame
[0].
ôems
[3].
pos
.
cﬁ
 = 1;

593 
	`bcd_to_°r
((
uch¨
 *)&
u£d_rﬁl
->
íd_d©e
, 
buf
, 4);

594 
	`•rötf
(
‰ame
[0].
ôems
[3].
tôÀ
, "ÁªàÊ≠¢Êó•ÊúüÔºö%s", 
buf
);

596 
‰ame
[1].
ôem_num
 = 4;

597 
‰ame
[1].
ôems
[0].
pos
.
row
 = 1;

598 
‰ame
[1].
ôems
[0].
pos
.
cﬁ
 = 1;

599 
	`bcd_to_°r
(
u£d_rﬁl
->
övoi˚_code
, 
buf
, 10);

600 
	`•rötf
(
‰ame
[1].
ôems
[0].
tôÀ
, "‰ª£Á†ÅÔºö%s", 
buf
);

602 
‰ame
[1].
ôems
[1].
pos
.
row
 = 2;

603 
‰ame
[1].
ôems
[1].
pos
.
cﬁ
 = 1;

604 
	`•rötf
(
‰ame
[1].
ôems
[1].
tôÀ
, "Ê≠£Â∏∏Á•®Êï∞Ôºö%d", 
u£d_rﬁl
->
vÆid_cou¡
);

606 
‰ame
[1].
ôems
[2].
pos
.
row
 = 3;

607 
‰ame
[1].
ôems
[2].
pos
.
cﬁ
 = 1;

608 
	`•rötf
(
‰ame
[1].
ôems
[2].
tôÀ
, "ÈÄÄÁ•®Êï∞Ôºö%d", 
u£d_rﬁl
->
ªtu∫_cou¡
);

610 
‰ame
[1].
ôems
[3].
pos
.
row
 = 4;

611 
‰ame
[1].
ôems
[3].
pos
.
cﬁ
 = 1;

612 
	`•rötf
(
‰ame
[1].
ôems
[3].
tôÀ
, "Â∫üÁ•®Êï∞Ôºö%d", 
u£d_rﬁl
->
•oû_cou¡
);

614 
‰ame
[2].
ôem_num
 = 2;

615 
‰ame
[2].
ôems
[0].
pos
.
row
 = 1;

616 
‰ame
[2].
ôems
[0].
pos
.
cﬁ
 = 5;

617 
	`•rötf
(
‰ame
[2].
ôems
[0].
tôÀ
, "Ê≠£Â∏∏Á•®ÊÄªÈ¢ùÔºö%.2f", 
u£d_rﬁl
->
amt_vÆid
/100.0);

619 
‰ame
[2].
ôems
[1].
pos
.
row
 = 2;

620 
‰ame
[2].
ôems
[1].
pos
.
cﬁ
 = 1;

621 
	`•rötf
(
‰ame
[2].
ôems
[1].
tôÀ
, "ÈÄÄÁ•®ÊÄªÈ¢ùÔºö%.2f", 
u£d_rﬁl
->
amt_ªtu∫
/100.0);

623 
pos
 = 0;

625 
	`show_sim∂e_‰ame
(&
‰ame
[
pos
]);

627 
key
 = 
	`gë_keycode
();

628 
key
) {

629 
ENTER
:

630  
SUCCESS
;

633 
ESC
:

634  -
EUI_ESC
;

637 
BACK
:

638  -
EUI_BACK
;

641 
UP
:

642 i‡(
pos
 > 0)

643 
pos
 --;

647 
DOWN
:

648 i‡(
pos
 < 2)

649 
pos
 ++;

657 
	}
}

659 
	$show_≥riod_cﬁÀ˘
(
èx_sys_≥riod_cﬁÀ˘_ªc‹d
 * 
cﬁÀ˘_ªc
)

661 
key
, 
pos
;

662 
buf_t
[20] = {0};

663 
buf_b
[20] = {0};

664 
sim∂e_‰ame
 
‰ame
[2];

666 
	`mem£t
(
‰ame
, 0, 2 * (
sim∂e_‰ame
));

668 
‰ame
[0].
ôem_num
 = 4;

669 
‰ame
[0].
ôems
[0].
pos
.
row
 = 1;

670 
‰ame
[0].
ôems
[0].
pos
.
cﬁ
 = 3;

671 
	`•rötf
(
‰ame
[0].
ôems
[0].
tôÀ
, "ÂèëÁ•®‰ΩøÁî®Ê±áÊÄª‰ø°ÊÅØ");

673 
‰ame
[0].
ôems
[1].
pos
.
row
 = 2;

674 
‰ame
[0].
ôems
[1].
pos
.
cﬁ
 = 1;

675 
	`bcd_to_°r
((
uch¨
 *)&
cﬁÀ˘_ªc
->
°¨t_d©e
, 
buf_t
, 4);

676 
	`bcd_to_°r
((
uch¨
 *)&
cﬁÀ˘_ªc
->
íd_d©e
, 
buf_b
, 4);

677 
	`•rötf
(
‰ame
[0].
ôems
[1].
tôÀ
, "%†-- %s", 
buf_t
, 
buf_b
);

679 
‰ame
[0].
ôems
[2].
pos
.
row
 = 3;

680 
‰ame
[0].
ôems
[2].
pos
.
cﬁ
 = 1;

681 
	`•rötf
(
‰ame
[0].
ôems
[2].
tôÀ
, "Ê≠£Â∏∏Á•®Êï∞Ôºö%d", 
cﬁÀ˘_ªc
->
vÆid_cou¡
);

683 
‰ame
[0].
ôems
[3].
pos
.
row
 = 4;

684 
‰ame
[0].
ôems
[3].
pos
.
cﬁ
 = 1;

685 
	`•rötf
(
‰ame
[0].
ôems
[3].
tôÀ
, "ÈáëÈ¢ùÔºö%.2f", 
cﬁÀ˘_ªc
->
amt_vÆid
/100.0);

687 
‰ame
[1].
ôem_num
 = 4;

688 
‰ame
[1].
ôems
[0].
pos
.
row
 = 1;

689 
‰ame
[1].
ôems
[0].
pos
.
cﬁ
 = 1;

690 
	`•rötf
(
‰ame
[1].
ôems
[0].
tôÀ
, "ÈÄÄÁ•®Êï∞Ôºö%d", 
cﬁÀ˘_ªc
->
ªtu∫_cou¡
);

692 
‰ame
[1].
ôems
[1].
pos
.
row
 = 2;

693 
‰ame
[1].
ôems
[1].
pos
.
cﬁ
 = 1;

694 
	`•rötf
(
‰ame
[1].
ôems
[1].
tôÀ
, "ÈáëÈ¢ùÔºö%.2f", 
cﬁÀ˘_ªc
->
amt_ªtu∫
/100.0);

696 
pos
 = 0;

698 
	`show_sim∂e_‰ame
(&
‰ame
[
pos
]);

700 
key
 = 
	`gë_keycode
();

701 
key
) {

702 
ENTER
:

703  
SUCCESS
;

706 
ESC
:

707  -
EUI_ESC
;

710 
BACK
:

711  -
EUI_BACK
;

714 
UP
:

715 i‡(
pos
 > 0)

716 
pos
 --;

720 
DOWN
:

721 i‡(
pos
 < 1)

722 
pos
 ++;

730 
	}
}

732 
	$do_check_u£r_™d_d©e
(
bcd_d©e
 * 
d©e
)

734 
ªt
;

735 
bcd_d©e
 
today
;

736 
bcd_d©e
 
de˛¨e_d©e
;

738 
u£r
 *
cur_u£r
 = 
	`gë_cur_u£r
();

739 
π_›î©e
 * 
π_›s
 = 
	`gë_π_›s
();

740 
èx_sy°em
 *Åax_sy°em = 
	`gë_èx_sy°em
();

742 
ªt
 = 
π_›s
->
	`gë_cur_d©e
(&
today
);

743 i‡(
ªt
 < 0)

744  
ªt
;

746 
ªt
 = 
èx_sy°em
->
	`gë_œ°_de˛¨e_d©e
(&
de˛¨e_d©e
);

747 i‡(
ªt
 < 0)

748  
ªt
;

750 i‡(
cur_u£r
->
Àvñ
 =
NORMAL_USER
) {

752 
ªt
 = 
π_›s
->
	`cmp_bcd_d©e
(&
today
, 
d©e
);

753 i‡(
ªt
 != 0)

755 } i‡(
cur_u£r
->
Àvñ
 =
SUPPER_USER
) {

757 
ªt
 = 
π_›s
->
	`cmp_bcd_d©e
(&
de˛¨e_d©e
, 
d©e
);

758 i‡(
ªt
 > 0)

762  
SUCCESS
;

763 
	}
}

765 
	$do_check_°¨t_™d_íd
(
bcd_d©e
 * 
°¨t_d©e
, bcd_d©ê* 
íd_d©e
)

767 
ªt
;

768 
bcd_d©e
 
today
;

769 
bcd_d©e
 
de˛¨e_d©e
;

771 
u£r
 *
cur_u£r
 = 
	`gë_cur_u£r
();

772 
π_›î©e
 * 
π_›s
 = 
	`gë_π_›s
();

773 
èx_sy°em
 *Åax_sy°em = 
	`gë_èx_sy°em
();

775 
ªt
 = 
π_›s
->
	`gë_cur_d©e
(&
today
);

776 i‡(
ªt
 < 0)

777  
ªt
;

779 
ªt
 = 
èx_sy°em
->
	`gë_œ°_de˛¨e_d©e
(&
de˛¨e_d©e
);

780 i‡(
ªt
 < 0)

781  
ªt
;

783 i‡(
π_›s
->
	`cmp_bcd_d©e
(
°¨t_d©e
, 
íd_d©e
) > 0)

786 i‡(
π_›s
->
	`cmp_bcd_d©e
(&
today
, 
íd_d©e
) < 0)

789 i‡(
cur_u£r
->
Àvñ
 =
SUPPER_USER
) {

791 
ªt
 = 
π_›s
->
	`cmp_bcd_d©e
(&
de˛¨e_d©e
, 
°¨t_d©e
);

792 i‡(
ªt
 > 0)

796  
SUCCESS
;

797 
	}
}

803 
	$cmd_võw_sögÀ_öv
()

805 
ªt
;

806 
‹i_num
;

807 
èx_sys_övoi˚_dëaû_ªc‹d
 
‹i_dëaû
;

808 
¥öt_sys
 *Öröt_sy†
	`gë_¥öt_sys
();

810 
	`mem£t
(&
‹i_dëaû
, 0, (ori_detail));

812 
öput_‹i
:

813 
	`show_võw_sögÀ_öv_UI
();

814 
ªt
 = 
	`gë_öãr_num
(2, 5, &
‹i_num
);

815 i‡(
ªt
 =-
EUI_ESC
) {

816 
ªt
 = 
	`que°i⁄_u£r
("Á°ÆËÆ§ÂèñÊ∂àÂΩìÂâçÊìç‰ΩúÔºü");

817 i‡(
ªt
 =
POSITIVE
)

818  
FAIL
;

820 
öput_‹i
;

823 
	`di•œy_öfo
("Ê≠£Âú®Êü•ÊâæÂèëÁ•®‰ø°ÊÅØ...");

825 
ªt
 = 
	`èx_fûe_föd_övoi˚_dëaû
((
uöt
 *)&
‹i_num
, &
‹i_dëaû
);

826 i‡(
ªt
 =-
EFILE_NO_REC
) {

827 
	`di•œy_w¨n
("Êú™ÊâæÂà∞ÂèëÁ•®‰ø°ÊÅØÔºåËØ∑Á°ÆËÆ§ÂèëÁ•®Âè∑ËæìÂÖ•Ê≠£Á°ÆÔºÅ");

828 
öput_‹i
;

832 
ªt
 = 
	`do_check_u£r_™d_d©e
(&
‹i_dëaû
.
dëaû_d©e
);

833 i‡(
ªt
 < 0) {

834 
	`di•œy_w¨n
("Êü•ÊâæÂèëÁ•®‰ø°ÊÅØÂá∫ÈîôÔºÅ");

835 
	`di•œy_îr_msg
(
ªt
);

836  
FAIL
;

838 i‡(
ªt
 == 1) {

839 
	`di•œy_w¨n
("ÊÇ®‰∏∫ÊôÆÈÄöÁî®Êà∑ÔºåÂè™ËÉΩÊü•ËØ¢ÂΩìÂ§©ÂèëÁ•®‰ø°ÊÅØÔºÅ");

840 
öput_‹i
;

841 } i‡(
ªt
 == 2) {

842 
	`di•œy_w¨n
("ÊÇ®‰∏∫Ë∂ÖÁ∫ßÁî®Êà∑ÔºåÂè™ËÉΩÊü•ËØ¢Áî≥Êä•ÊúüÂÜÖÂèëÁ•®‰ø°ÊÅØÔºÅ");

843 
öput_‹i
;

847 
	`show_sögÀ_öv_öfo
(&
‹i_dëaû
);

849 i‡(
¥öt_sys
->
›s
->
¥öt_övoi˚_°ub
) {

850 
ªt
 = 
	`que°i⁄_u£r
("ÊòØÂê¶ÊâìÂç∞ÁîµÂ≠êÂèëÁ•®Â≠òÊ†πÔºü");

851 i‡(
ªt
 =
POSITIVE
) {

852 
	`di•œy_öfo
("Ê≠£Âú®ÊâìÂç∞ÊâìÁîµÂ≠êÂèëÁ•®Â≠òÊ†π...");

853 
¥öt_sys
->
›s
->
	`¥öt_övoi˚_°ub
(&
‹i_dëaû
);

854 
	`¶ìp
(1);

855 
	`di•œy_öfo
("ÊâìÂç∞ÊàêÂäüÔºÅ");

859 
	`gë_™ykey
();

860  
SUCCESS
;

861 
	}
}

868 
	$cmd_võw_≥riod_cﬁÀ˘
()

870 
ªt
;

871 
bcd_d©e
 
today
;

872 
bcd_d©e
 
°¨t_d©e
, 
íd_d©e
;

873 
èx_sys_≥riod_cﬁÀ˘_ªc‹d
 
cﬁÀ˘_ªc
;

874 
èx_sys_daûy_cﬁÀ˘_ªc‹d
 
tmp_ªc
;

875 
u£r
 *
cur_u£r
 = 
	`gë_cur_u£r
();

876 
π_›î©e
 * 
π_›s
 = 
	`gë_π_›s
();

877 
¥öt_sys
 *Öröt_sy†
	`gë_¥öt_sys
();

879 
	`mem£t
(&
cﬁÀ˘_ªc
, 0, (collect_rec));

880 
	`mem£t
(&
tmp_ªc
, 0, (tmp_rec));

882 
ªt
 = 
π_›s
->
	`gë_cur_d©e
(&
today
);

883 i‡(
ªt
 < 0) {

884 
	`di•œy_w¨n
("Êü•ËØ¢ÂèëÁ•®‰ø°ÊÅØÂ§±Ë¥•ÔºÅ");

885 
	`di•œy_îr_msg
(
ªt
);

886  
FAIL
;

889 
ªt
 = 
	`èx_fûe_ªad_œ°_ªc‹d
(
DAILY_COLLECT_FILE
, (
uch¨
 *)&
tmp_ªc
, (tmp_rec));

890 i‡(
ªt
 < 0) {

891 
	`di•œy_w¨n
("Êü•ËØ¢ÂèëÁ•®‰ø°ÊÅØÂ§±Ë¥•ÔºÅ");

892 
	`di•œy_îr_msg
(
ªt
);

893  
FAIL
;

897 i‡(
cur_u£r
->
Àvñ
 =
NORMAL_USER
) {

898 i‡(
π_›s
->
	`cmp_bcd_d©e
(&
tmp_ªc
.
cur_d©e
, &
today
) != 0) {

899 
	`di•œy_w¨n
("‰ªäÊó•Â∞öÊó†ÂèØÊü•‰ø°ÊÅØÔºÅ");

900  
SUCCESS
;

904 
show_ui
:

905 
	`show_võw_≥riod_cﬁÀ˘_UI
();

906 
ªt
 = 
	`gë_bcd_d©e
(2, 6, &
°¨t_d©e
);

907 i‡(
ªt
 =-
EUI_ESC
) {

908 
ªt
 = 
	`que°i⁄_u£r
("Á°ÆËÆ§ÂèñÊ∂àÂΩìÂâçÊìç‰ΩúÔºü");

909 i‡(
ªt
 =
POSITIVE
)

910  
SUCCESS
;

912 
	`mem£t
(&
°¨t_d©e
, 0, (start_date));

913 
	`mem£t
(&
íd_d©e
, 0, (end_date));

915 
show_ui
;

917 } i‡(
ªt
 =-
EUI_BAD_DATE_FORMAT
) {

918 
	`di•œy_w¨n
("ËØ∑ÊåâÁÖßÊ≠£Á°ÆÊó•ÊúüÊ†ºÂºèËæìÂÖ•ÔºÅ");

920 
	`mem£t
(&
°¨t_d©e
, 0, (start_date));

921 
	`mem£t
(&
íd_d©e
, 0, (end_date));

922 
show_ui
;

925 
ªt
 = 
	`gë_bcd_d©e
(3, 6, &
íd_d©e
);

926 i‡(
ªt
 =-
EUI_ESC
) {

927 
ªt
 = 
	`que°i⁄_u£r
("Á°ÆËÆ§ÂèñÊ∂àÂΩìÂâçÊìç‰ΩúÔºü");

928 i‡(
ªt
 =
POSITIVE
)

929  
SUCCESS
;

931 
	`mem£t
(&
°¨t_d©e
, 0, (start_date));

932 
	`mem£t
(&
íd_d©e
, 0, (end_date));

933 
show_ui
;

935 }i‡(
ªt
 =-
EUI_BAD_DATE_FORMAT
) {

936 
	`di•œy_w¨n
("ËØ∑ÊåâÁÖßÊ≠£Á°ÆÊó•ÊúüÊ†ºÂºèËæìÂÖ•ÔºÅ");

938 
	`mem£t
(&
°¨t_d©e
, 0, (start_date));

939 
	`mem£t
(&
íd_d©e
, 0, (end_date));

940 
show_ui
;

944 
ªt
 = 
	`do_check_°¨t_™d_íd
(&
°¨t_d©e
, &
íd_d©e
);

945 
ªt
) {

947 
	`di•œy_w¨n
("ÁªàÊ≠¢Êó•Êúü‰∏çËÉΩÂ∞è‰∫éËµ∑ÂßãÊó•ÊúüÔºÅ");

949 
	`mem£t
(&
°¨t_d©e
, 0, (start_date));

950 
	`mem£t
(&
íd_d©e
, 0, (end_date));

951 
show_ui
;

955 
	`di•œy_w¨n
("ÁªàÊ≠¢Êó•Êúü‰∏çËÉΩÂ§ß‰∫é‰ªäÊó•ÔºÅ");

957 
	`mem£t
(&
°¨t_d©e
, 0, (start_date));

958 
	`mem£t
(&
íd_d©e
, 0, (end_date));

959 
show_ui
;

963 
	`di•œy_w¨n
("ÊÇ®Âè™ËÉΩÊü•ËØ¢Êú¨Áî≥Êä•ÊúüÊï∞ÊçÆÔºÅ");

965 
	`mem£t
(&
°¨t_d©e
, 0, (start_date));

966 
	`mem£t
(&
íd_d©e
, 0, (end_date));

967 
show_ui
;

974 
cﬁÀ˘_ªc
.
°¨t_d©e
 = start_date;

975 
cﬁÀ˘_ªc
.
íd_d©e
 =Énd_date;

976 
ªt
 = 
	`èx_fûe_föd_≥riod_cﬁÀ˘
(&
cﬁÀ˘_ªc
);

977 i‡(
ªt
 < 0) {

978 i‡(
ªt
 =-
EFILE_NO_REC
) {

979 
	`di•œy_w¨n
("Êú™ÊâæÂà∞ÂèëÁ•®‰ø°ÊÅØÔºåËØ∑ÈáçÊñ∞ËæìÂÖ•Êó•ÊúüÔºÅ");

981 
	`mem£t
(&
°¨t_d©e
, 0, (start_date));

982 
	`mem£t
(&
íd_d©e
, 0, (end_date));

983 
show_ui
;

985 
	`di•œy_w¨n
("Êü•ËØ¢ÂèëÁ•®‰ø°ÊÅØÂ§±Ë¥•ÔºÅ");

986 
	`di•œy_îr_msg
(
ªt
);

987  
FAIL
;

991 
	`show_≥riod_cﬁÀ˘
(&
cﬁÀ˘_ªc
);

993 i‡(
¥öt_sys
->
›s
->
¥öt_≥riod_öfo
) {

994 
ªt
 = 
	`que°i⁄_u£r
("ÊòØÂê¶ÊâìÂç∞ÂèëÁ•®‰ΩøÁî®‰ø°ÊÅØÔºü");

995 i‡(
ªt
 =
POSITIVE
) {

996 
	`di•œy_öfo
("Ê≠£Âú®ÊâìÂç∞ÂèëÁ•®‰ΩøÁî®‰ø°ÊÅØ...");

997 
¥öt_sys
->
›s
->
	`¥öt_≥riod_öfo
(&
cﬁÀ˘_ªc
);

998 
	`¶ìp
(1);

999 
	`di•œy_öfo
("ÊâìÂç∞ÊàêÂäüÔºÅ");

1003 
	`gë_™ykey
();

1004  
SUCCESS
;

1005 
	}
}

1012 
	$cmd_võw_öv_rﬁl
()

1014 
ªt
;

1015 
ªc_num
, 
‹i_num
;

1017 
bcd_d©e
 
today
;

1018 
èx_sys_u£d_rﬁl_id_ªc‹d
 
u£d_rﬁl
;

1019 
π_›î©e
 *
π_›s
 = 
	`gë_π_›s
();

1020 
u£r
 *
cur_u£r
 = 
	`gë_cur_u£r
();

1021 
¥öt_sys
 *Öröt_sy†
	`gë_¥öt_sys
();

1023 
	`mem£t
(&
u£d_rﬁl
, 0, (used_roll));

1025 
ªt
 = 
π_›s
->
	`gë_cur_d©e
(&
today
);

1026 i‡(
ªt
 < 0)

1027 
Áû
;

1029 
ªc_num
 = 
	`èx_fûe_gë_ªc_num
(
ROLL_COLLECT_FILE
);

1030 i‡(
ªc_num
 < 0)

1031 
Áû
;

1032 i‡(
ªc_num
 == 0) {

1033 
	`di•œy_w¨n
("Â∞öÊó†Â∑≤‰ΩøÁî®Âç∑ÔºÅ");

1034  
SUCCESS
;

1037 i‡(
cur_u£r
->
Àvñ
 =
NORMAL_USER
) {

1038 
ªt
 = 
	`èx_fûe_ªad_œ°_ªc‹d
(
ROLL_COLLECT_FILE
, (
uch¨
 *)&
u£d_rﬁl
, (used_roll));

1039 i‡(
ªt
 < 0)

1040 
Áû
;

1041 i‡(
π_›s
->
	`cmp_bcd_d©e
(&
today
, &
u£d_rﬁl
.
íd_d©e
) > 0) {

1042 
	`di•œy_w¨n
("‰ªäÊó•Â∞öÊó†Â∑≤‰ΩøÁî®Âç∑‰ø°ÊÅØÔºÅ");

1043  
SUCCESS
;

1047 
show_ui
:

1048 
	`show_võw_u£d_rﬁl_UI
();

1049 
ªt
 = 
	`gë_öãr_num
(3, 1, &
‹i_num
);

1050 i‡(
ªt
 =-
EUI_ESC
) {

1051 
ªt
 = 
	`que°i⁄_u£r
("Á°ÆËÆ§ÂèñÊ∂àÂΩìÂâçÊìç‰ΩúÔºü");

1052 i‡(
ªt
 =
POSITIVE
)

1053  
SUCCESS
;

1055 
show_ui
;

1058 
	`di•œy_öfo
("Ê≠£Âú®Êü•ËØ¢...");

1060 
	`mem£t
(&
u£d_rﬁl
, 0, (used_roll));

1061 
ªt
 = 
	`èx_fûe_föd_u£d_rﬁl_id
(
‹i_num
, &
u£d_rﬁl
);

1062 i‡(
ªt
 !
SUCCESS
) {

1063 i‡(
ªt
 =-
EFILE_NO_REC
) {

1064 
	`di•œy_w¨n
("Êú™Êü•ËØ¢Âà∞ÂèëÁ•®Âç∑‰ø°ÊÅØÔºåËØ∑ÈáçÊñ∞ËæìÂÖ•ÔºÅ");

1065 
show_ui
;

1067 
Áû
;

1070 
ªt
 = 
	`do_check_u£r_™d_d©e
(&
u£d_rﬁl
.
íd_d©e
);

1071 i‡(
ªt
 < 0) {

1072 
	`di•œy_w¨n
("Êü•ÊâæÂèëÁ•®Âç∑‰ø°ÊÅØÂá∫ÈîôÔºÅ");

1073 
	`di•œy_îr_msg
(
ªt
);

1074  
FAIL
;

1076 i‡(
ªt
 == 1) {

1077 
	`di•œy_w¨n
("ÊÇ®‰∏∫ÊôÆÈÄöÁî®Êà∑ÔºåÂè™ËÉΩÊü•ËØ¢ÂΩìÂ§©‰ΩøÁî®Âç∑‰ø°ÊÅØÔºÅ");

1078 
show_ui
;

1079 } i‡(
ªt
 == 2) {

1080 
	`di•œy_w¨n
("ÊÇ®‰∏∫Ë∂ÖÁ∫ßÁî®Êà∑ÔºåÂè™ËÉΩÊü•ËØ¢Áî≥Êä•ÊúüÂÜÖ‰ΩøÁî®Âç∑‰ø°ÊÅØÔºÅ");

1081 
show_ui
;

1085 
	`show_u£d_rﬁl_öfo
(&
u£d_rﬁl
);

1087 i‡(
¥öt_sys
->
›s
->
¥öt_rﬁl_öfo
) {

1088 
ªt
 = 
	`que°i⁄_u£r
("ÊòØÂê¶ÊâìÂç∞ÂèëÁ•®Âç∑‰ΩøÁî®‰ø°ÊÅØÔºü");

1089 i‡(
ªt
 =
POSITIVE
) {

1090 
	`di•œy_öfo
("Ê≠£Âú®ÊâìÂç∞ÂèëÁ•®Âç∑‰ΩøÁî®‰ø°ÊÅØ...");

1091 
¥öt_sys
->
›s
->
	`¥öt_rﬁl_öfo
(&
u£d_rﬁl
);

1092 
	`¶ìp
(1);

1093 
	`di•œy_öfo
("ÊâìÂç∞ÊàêÂäüÔºÅ");

1097 
	`gë_keycode
();

1098  
SUCCESS
;

1100 
Áû
:

1101 
	`di•œy_w¨n
("Êü•ËØ¢‰ΩøÁî®Âç∑‰ø°ÊÅØÂ§±Ë¥•ÔºÅ");

1102 
	`di•œy_îr_msg
(
ªt
);

1103  
FAIL
;

1104 
	}
}

1110 
	$cmd_võw_de˛¨e_d©a
()

1112 
ªt
;

1113 
ªc_num
;

1114 
bcd_d©e
 
today
, 
de˛¨e_d©e
;

1115 
èx_sys_de˛¨e_duty_ªc‹d
 
de˛¨e_ªc
;

1116 
π_›î©e
 *
π_›s
 = 
	`gë_π_›s
();

1118 
ªt
 = 
	`check_u£æevñ
(
MANAGER_USER
);

1119 i‡(
ªt
 !
POSITIVE
) {

1120 
	`di•œy_w¨n
("ÊùÉÈôêÈôêÂà∂ÔºåÊó†Ê≥ïÁªßÁª≠Êìç‰ΩúÔºÅ");

1121  
FAIL
;

1124 
ªt
 = 
π_›s
->
	`gë_cur_d©e
(&
today
);

1125 i‡(
ªt
 < 0)

1126 
Áû
;

1128 
ªc_num
 = 
	`èx_fûe_gë_ªc_num
(
DECLARE_DUTY_FILE
);

1129 i‡(
ªc_num
 < 0)

1130 
Áû
;

1131 i‡(
ªc_num
 == 0) {

1132 
	`di•œy_w¨n
("Â∞öÊó†Áî≥Êä•Êï∞ÊçÆÂèØÊü•ÔºÅ");

1133  
SUCCESS
;

1136 
show_ui
:

1137 
	`show_võw_de˛¨e_öfo_UI
();

1138 
ªt
 = 
	`gë_bcd_d©e
(3, 1, &
de˛¨e_d©e
);

1139 i‡(
ªt
 =-
EUI_ESC
) {

1140 
ªt
 = 
	`que°i⁄_u£r
("Á°ÆËÆ§ÂèñÊ∂àÂΩìÂâçÊìç‰ΩúÔºü");

1141 i‡(
ªt
 =
POSITIVE
)

1142  
SUCCESS
;

1144 
show_ui
;

1147 i‡(
π_›s
->
	`cmp_bcd_d©e
(&
de˛¨e_d©e
, &
today
) > 0) {

1148 
	`di•œy_w¨n
("Êó•Êúü‰∏çËÉΩÂú®‰ªäÊó•‰πãÂêéÔºÅ");

1149 
show_ui
;

1152 
ªt
 = 
	`èx_fûe_föd_de˛¨e_duty
(&
de˛¨e_d©e
, &
de˛¨e_ªc
);

1153 i‡(
ªt
 < 0) {

1154 i‡(
ªt
 =-
EFILE_NO_REC
) {

1155 
	`di•œy_w¨n
("Êú™ÊâæÂà∞Áî≥Êä•‰ø°ÊÅØÔºåËØ∑ÈáçÊñ∞ËæìÂÖ•Êó•ÊúüÔºÅ");

1156 
show_ui
;

1158 
Áû
;

1161 
	`show_de˛¨e_öfo
(&
de˛¨e_ªc
);

1163 
	`gë_™ykey
();

1164  
SUCCESS
;

1166 
Áû
:

1167 
	`di•œy_w¨n
("Êü•ËØ¢Áî≥Êä•‰ø°ÊÅØÂ§±Ë¥•ÔºÅ");

1168  
ªt
;

1169 
	}
}

1175 
	$cmd_võw_daûy_cﬁÀ˘
()

1177 
ªt
;

1178 
ªc_num
;

1179 
bcd_d©e
 
today
, 
cﬁÀ˘_d©e
;

1180 
èx_sys_daûy_cﬁÀ˘_ªc‹d
 
cﬁÀ˘_ªc
;

1181 
π_›î©e
 *
π_›s
 = 
	`gë_π_›s
();

1183 
ªt
 = 
	`check_u£æevñ
(
MANAGER_USER
);

1184 i‡(
ªt
 !
POSITIVE
) {

1185 
	`di•œy_w¨n
("ÊùÉÈôêÈôêÂà∂ÔºåÊó†Ê≥ïÁªßÁª≠Êìç‰ΩúÔºÅ");

1186  
FAIL
;

1189 
ªt
 = 
π_›s
->
	`gë_cur_d©e
(&
today
);

1190 i‡(
ªt
 < 0)

1191 
Áû
;

1193 
ªc_num
 = 
	`èx_fûe_gë_ªc_num
(
DAILY_COLLECT_FILE
);

1194 i‡(
ªc_num
 < 0)

1195 
Áû
;

1196 i‡(
ªc_num
 == 0) {

1197 
	`di•œy_w¨n
("Â∞öÊó†Êó•Ê±áÊÄªÊï∞ÊçÆÂèØÊü•ÔºÅ");

1198  
SUCCESS
;

1201 
show_ui
:

1202 
	`show_võw_daûy_cﬁÀ˘_UI
();

1203 
ªt
 = 
	`gë_bcd_d©e
(3, 1, &
cﬁÀ˘_d©e
);

1204 i‡(
ªt
 =-
EUI_ESC
) {

1205 
ªt
 = 
	`que°i⁄_u£r
("Á°ÆËÆ§ÂèñÊ∂àÂΩìÂâçÊìç‰ΩúÔºü");

1206 i‡(
ªt
 =
POSITIVE
)

1207  
SUCCESS
;

1209 
show_ui
;

1212 i‡(
π_›s
->
	`cmp_bcd_d©e
(&
cﬁÀ˘_d©e
, &
today
) > 0) {

1213 
	`di•œy_w¨n
("Êó•Êúü‰∏çËÉΩÂú®‰ªäÊó•‰πãÂêéÔºÅ");

1214 
show_ui
;

1217 
ªt
 = 
	`èx_fûe_föd_daûy_cﬁÀ˘
(&
cﬁÀ˘_d©e
, &
cﬁÀ˘_ªc
);

1218 i‡(
ªt
 < 0) {

1219 i‡(
ªt
 =-
EFILE_NO_REC
) {

1220 
	`di•œy_w¨n
("Êú™ÊâæÂà∞Êó•Ê±áÊÄª‰ø°ÊÅØÔºåËØ∑ÈáçÊñ∞ËæìÂÖ•Êó•ÊúüÔºÅ");

1221 
show_ui
;

1223 
Áû
;

1226 
	`show_dayly_cﬁÀ˘_öfo
(&
cﬁÀ˘_ªc
);

1228 
	`gë_™ykey
();

1229  
SUCCESS
;

1231 
Áû
:

1232 
	`di•œy_w¨n
("Êü•ËØ¢Áî≥Êä•‰ø°ÊÅØÂ§±Ë¥•ÔºÅ");

1233  
ªt
;

1234 
	}
}

1241 
	$cmd_devñ›_sys
()

1243 
ªt
;

1244 
uöt
 
dec_d©a
 = 0;

1245 
uch¨
 
bcd_d©a
 = 0;

1246 
key
, 
¥öt_nb
, 
cur_¥öt
;

1247 
tmp
[3] = {0};

1248 
mach_nb
[16 + 1] = {0};

1249 
bcd_d©e
 
today
;

1250 
machöe_öfo_ªc‹d
 
mach_öfo
;

1251 
fûe_›î©e
 * 
fûe_›s
 = 
	`gë_fûe_›s
();

1252 
π_›î©e
 * 
π_›s
 = 
	`gë_π_›s
();

1253 
èx_sy°em
 *Åax_sy°em = 
	`gë_èx_sy°em
();

1255 
ªt
 = 
	`check_u£æevñ
(
DEVELOP_USER
);

1256 i‡(
ªt
 !
POSITIVE
) {

1257 
	`di•œy_w¨n
("ÊùÉÈôêÈôêÂà∂ÔºåÊó†Ê≥ïÁªßÁª≠Êìç‰ΩúÔºÅ");

1258  
FAIL
;

1261 
ªt
 = 
èx_sy°em
->
	`is_fisˇl_öô
();

1262 i‡(
ªt
 =
POSITIVE
) {

1263 
	`di•œy_w¨n
("Êú¨Êú∫Â∑≤ÁªèÂàùÂßãÂåñÔºåÊó†ÈúÄÂá∫ÂéÇËÆæÁΩÆÔºÅ");

1264  
FAIL
;

1267 
show_ui
:

1268 
	`show_devñ›_sys_UI
();

1269 
ªt
 = 
	`gë_°rög
(3, 1, 
mach_nb
);

1270 i‡(
ªt
 =-
EUI_ESC
) {

1271 
ªt
 = 
	`que°i⁄_u£r
("Á°ÆÂÆöÂèñÊ∂àÂΩìÂâçÊìç‰ΩúÔºü");

1272 i‡(
ªt
 =
POSITIVE
)

1273  
FAIL
;

1275 
show_ui
;

1278 i‡(
	`°æí
(
mach_nb
) != 16) {

1279 
	`di•œy_w¨n
("Êú∫Âô®ÁºñÂè∑ÂøÖÈ°ª‰∏∫16BitsÔºÅ");

1280 
show_ui
;

1283 
£tup_¥öt
:

1284 
	`show_devñ›_¥öt_UI
();

1286 
	`£t_ime_°©us
(
INPUT_LOW_CASE
);

1287 
	`˛ór_ˇche
();

1288 (
key
 = 
	`gë_keycode
()) != '1' && key != '2') {

1289 i‡(
key
 =
ESC
) {

1290 
ªt
 = 
	`que°i⁄_u£r
("Á°ÆÂÆöÂèñÊ∂àÂΩìÂâçÊìç‰ΩúÔºü");

1291 i‡(
ªt
 =
POSITIVE
)

1292  
FAIL
;

1294 
£tup_¥öt
;

1302 i‡(
key
 == '1') {

1303 
¥öt_nb
 = 1;

1304 
cur_¥öt
 = 
FLAT_PRINT_TYPE
;

1305 } i‡(
key
 == '2') {

1306 
¥öt_nb
 = 2;

1307 
cur_¥öt
 = 
FLAT_PRINT_TYPE
;

1310 
	`di•œy_öfo
("Ê≠£Âú®ÁîüÊàêÂá∫ÂéÇËÆæÁΩÆ...");

1312 
ªt
 = 
fûe_›s
->
	`¸ót_fûe
(
MACH_INFO_FILE
, 
MACH_INFO_FILE_MODE
, 
MACH_INFO_REC_NUM
);

1313 i‡(
ªt
 < 0) {

1314 
	`di•œy_w¨n
("Âá∫ÂéÇËÆæÁΩÆÂá∫ÈîôÔºÅ");

1315 
	`di•œy_îr_msg
(
ªt
);

1316  
ªt
;

1319 
	`mem£t
(&
mach_öfo
, 0, (mach_info));

1321 
i
;

1322 
i
 = 0; i < 8; i++) {

1323 
	`mem˝y
(
tmp
, 
mach_nb
 + 2 * 
i
, 2);

1324 
dec_d©a
 = 
	`©oi
(
tmp
);

1325 
	`dec_to_bcd
(&
dec_d©a
, &
bcd_d©a
);

1326 
mach_öfo
.
machöe_nb
[
i
] = 
bcd_d©a
;

1329 
ªt
 = 
π_›s
->
	`gë_cur_d©e
(&
today
);

1330 i‡(
ªt
 < 0) {

1331 
	`di•œy_w¨n
("Âá∫ÂéÇËÆæÁΩÆÂá∫ÈîôÔºÅ");

1332 
	`di•œy_îr_msg
(
ªt
);

1333  
ªt
;

1336 
mach_öfo
.
¥öt_nb
 =Örint_nb;

1337 
mach_öfo
.
cur_¥öt
 = cur_print;

1338 
mach_öfo
.
¥odu˚_d©e
 = 
today
;

1339 
	`°r˝y
(
mach_öfo
.
hw_vîsi⁄
, 
HW_VERSION
);

1340 
	`°r˝y
(
mach_öfo
.
sw_vîsi⁄
, 
SW_VERSION
);

1342 
ªt
 = 
	`èx_fûe_ßve_mach_öfo
(&
mach_öfo
);

1343 i‡(
ªt
 !
SUCCESS
) {

1344 
	`di•œy_w¨n
("Âá∫ÂéÇËÆæÁΩÆÂá∫ÈîôÔºÅ");

1345 
	`di•œy_îr_msg
(
ªt
);

1346  
ªt
;

1349 
	`di•œy_w¨n
("Âá∫ÂéÇËÆæÁΩÆÊàêÂäüÔºÅ");

1350  
SUCCESS
;

1351 
	}
}

1357 
	$cmd_¥öt_£tup
()

1359 
ªt
;

1360 
fd
, 
key
, 
cur_¥öt
;

1361 
machöe_öfo_ªc‹d
 
mach_ªc
;

1363 
ªt
 = 
	`èx_fûe_ªad_mach_öfo
(&
mach_ªc
);

1364 i‡(
ªt
 < 0) {

1365 
	`di•œy_w¨n
("ÊâìÂç∞ËÆæÁΩÆÂá∫ÈîôÔºÅ");

1366 
	`di•œy_îr_msg
(
ªt
);

1367  
FAIL
;

1370 
show_ui
:

1371 
	`show_¥öt_£tup_UI
();

1373 
	`£t_ime_°©us
(
INPUT_LOW_CASE
);

1374 
	`˛ór_ˇche
();

1375 (
key
 = 
	`gë_keycode
()) != '1' && key != '2') {

1376 i‡(
key
 =
ESC
) {

1377 
ªt
 = 
	`que°i⁄_u£r
("Á°ÆÂÆöÂèñÊ∂àÂΩìÂâçÊìç‰ΩúÔºü");

1378 i‡(
ªt
 =
POSITIVE
)

1379  
FAIL
;

1381 
show_ui
;

1385 i‡(
key
 == '1') {

1386 
fd
 = 
	`›í
(
PRINT_DEV
, 
O_RDWR
);

1387 i‡(
fd
 < 0) {

1388 
	`di•œy_w¨n
("Âπ≥Êé®ÊâìÂç∞Êú∫Êú™Â∞±Áª™ÔºÅ");

1389 
show_ui
;

1391 
	`˛o£
(
fd
);

1392 
cur_¥öt
 = 
FLAT_PRINT_TYPE
;

1393 } i‡(
key
 == '2') {

1394 i‡(
mach_ªc
.
¥öt_nb
 == 1) {

1395 
	`di•œy_w¨n
("Êú¨Êú∫‰ªÖÊîØÊåÅÂπ≥Êé®ÊâìÂç∞Êú∫ÔºÅ");

1396 
show_ui
;

1398 
cur_¥öt
 = 
ROLL_PRINT_TYPE
;

1401 
mach_ªc
.
cur_¥öt
 = cur_print;

1402 
	`èx_fûe_ßve_mach_öfo
(&
mach_ªc
);

1404 
	`di•œy_w¨n
("ËÆæÁΩÆÊàêÂäüÔºÅ");

1405  
SUCCESS
;

1406 
	}
}

1412 
	$cmd_sy°em_ª°¨t
()

1414 
ªt
;

1416 
ªt
 = 
	`que°i⁄_u£r
("Á°ÆÂÆöÈáçÊñ∞ÂêØÂä®Êú∫Âô®Ôºü");

1417 i‡(
ªt
 =
POSITIVE
) {

1418 
	`di•œy_öfo
("Ê≠£Âú®ÈáçÊñ∞ÂêØÂä®...");

1420 
	`u¶ìp
(100000);

1421 
	`sync
();

1422 
ªt
 = 
	`sy°em
("reboot");

1423 i‡(
ªt
 < 0)

1424  
FAIL
;

1427  
SUCCESS
;

1428 
	}
}

1434 
	$cmd_sy°em_logout
()

1436 
ªt
;

1438 
ªt
 = 
	`que°i⁄_u£r
("Á°ÆÂÆöÊ≥®ÈîÄÁôªÈôÜÔºü");

1439 i‡(
ªt
 !
POSITIVE
)

1440  
FAIL
;

1442 
	`di•œy_öfo
("Ê≠£Âú®Ê≥®ÈîÄ...");

1444 
	`sync
();

1445 
	`£t_logout_Êag
(
POSITIVE
);

1447  
SUCCESS
;

1448 
	}
}

1454 
	$cmd_võw_ß„_log
()

1459 
	`di•œy_w¨n
("ÂäüËÉΩÂ∞öÊú™ÂÆåÂñÑÔºÅ");

1461  
SUCCESS
;

1462 
	}
}

1469 
	$cmd_demo_fisˇl_öô
()

1474 
	`di•œy_w¨n
("ÂäüËÉΩÂ∞öÊú™ÂÆåÂñÑÔºÅ");

1476  
SUCCESS
;

1477 
	}
}

1483 
	$cmd_demo_di°_rﬁl
()

1488 
	`di•œy_w¨n
("ÂäüËÉΩÂ∞öÊú™ÂÆåÂñÑÔºÅ");

1490  
SUCCESS
;

1491 
	}
}

1497 
	$cmd_demo_mou¡_rﬁl
()

1502 
	`di•œy_w¨n
("ÂäüËÉΩÂ∞öÊú™ÂÆåÂñÑÔºÅ");

1504  
SUCCESS
;

1505 
	}
}

1511 
	$cmd_demo_issue_öv
()

1516 
	`di•œy_w¨n
("ÂäüËÉΩÂ∞öÊú™ÂÆåÂñÑÔºÅ");

1518  
SUCCESS
;

1519 
	}
}

1525 
	$cmd_demo_ªtu∫_öv
()

1530 
	`di•œy_w¨n
("ÂäüËÉΩÂ∞öÊú™ÂÆåÂñÑÔºÅ");

1532  
SUCCESS
;

1533 
	}
}

1539 
	$cmd_demo_•oû_öv
()

1544 
	`di•œy_w¨n
("ÂäüËÉΩÂ∞öÊú™ÂÆåÂñÑÔºÅ");

1546  
SUCCESS
;

1547 
	}
}

1553 
	$cmd_demo_võw_cur_rﬁl
()

1558 
	`di•œy_w¨n
("ÂäüËÉΩÂ∞öÊú™ÂÆåÂñÑÔºÅ");

1560  
SUCCESS
;

1561 
	}
}

1567 
	$cmd_demo_võw_öv
()

1572 
	`di•œy_w¨n
("ÂäüËÉΩÂ∞öÊú™ÂÆåÂñÑÔºÅ");

1574  
SUCCESS
;

1575 
	}
}

1581 
	$cmd_demo_võw_öv_rﬁl
()

1586 
	`di•œy_w¨n
("ÂäüËÉΩÂ∞öÊú™ÂÆåÂñÑÔºÅ");

1588  
SUCCESS
;

1589 
	}
}

	@command/cmd_system_manage.c

9 
	~<°dlib.h
>

10 
	~<uni°d.h
>

11 
	~<°dio.h
>

12 
	~<°rög.h
>

13 
	~<f˙é.h
>

14 
	~<˘y≥.h
>

16 
	~"c⁄fig.h
"

17 
	~"comm⁄.h
"

18 
	~"îr‹.h
"

20 
	~"èx_cmd.h
"

21 
	~"èx_sy°em.h
"

22 
	~"èx_fûe_›.h
"

24 
	~"ui_≠i.h
"

26 
	~"∂u.h
"

27 
	~"¥öt.h
"

28 
	~"öput.h
"

30 
	~"comm⁄.h
"

31 
	~"c⁄fig.h
"

32 
	~"ui_≠i.h
"

38 
	$show_add_u£r_≥rm
()

40 
sim∂e_‰ame
 
‰ame
;

41 
	`mem£t
(&
‰ame
, 0, (frame));

43 
‰ame
.
ôem_num
 = 3;

44 
‰ame
.
ôems
[0].
pos
.
row
 = 1;

45 
‰ame
.
ôems
[0].
pos
.
cﬁ
 = 3;

46 
	`•rötf
(
‰ame
.
ôems
[0].
tôÀ
, "ËØ∑ÈÄâÊã©Áî®Êà∑ÊùÉÈôê");

48 
‰ame
.
ôems
[1].
pos
.
row
 = 2;

49 
‰ame
.
ôems
[1].
pos
.
cﬁ
 = 4;

50 
	`•rötf
(
‰ame
.
ôems
[1].
tôÀ
, "1-‰∏ÄËà¨Áî®Êà∑");

52 
‰ame
.
ôems
[2].
pos
.
row
 = 3;

53 
‰ame
.
ôems
[2].
pos
.
cﬁ
 = 4;

54 
	`•rötf
(
‰ame
.
ôems
[2].
tôÀ
, "2-Ë∂ÖÁ∫ßÁî®Êà∑");

56 
	`show_sim∂e_‰ame
(&
‰ame
);

57  
SUCCESS
;

58 
	}
}

60 
	$show_add_u£r_öfo
(*
tôÀ
, 
u£r
 * user)

62 
sim∂e_‰ame
 
‰ame
;

63 
	`mem£t
(&
‰ame
, 0, (frame));

65 
‰ame
.
ôem_num
 = 4;

66 
‰ame
.
ôems
[0].
pos
.
row
 = 1;

67 
‰ame
.
ôems
[0].
pos
.
cﬁ
 = 3;

68 
	`•rötf
(
‰ame
.
ôems
[0].
tôÀ
, "%s",Åitle);

70 
‰ame
.
ôems
[1].
pos
.
row
 = 2;

71 
‰ame
.
ôems
[1].
pos
.
cﬁ
 = 1;

72 
	`•rötf
(
‰ame
.
ôems
[1].
tôÀ
, "Áî®Êà∑ÂêçÔºö %s", 
u£r
->
«me
);

74 
‰ame
.
ôems
[2].
pos
.
row
 = 3;

75 
‰ame
.
ôems
[2].
pos
.
cﬁ
 = 1;

76 
	`•rötf
(
‰ame
.
ôems
[2].
tôÀ
, "ÂØÜ Á†ÅÔºö");

78 
‰ame
.
ôems
[3].
pos
.
row
 = 4;

79 
‰ame
.
ôems
[3].
pos
.
cﬁ
 = 1;

80 
	`•rötf
(
‰ame
.
ôems
[3].
tôÀ
, "Á°ÆËÆ§ÂØÜÁ†ÅÔºö");

82 
	`show_sim∂e_‰ame
(&
‰ame
);

83  
SUCCESS
;

84 
	}
}

86 
	$show_¥öt_öfo
(
¥öãr_ty≥
 * 
¥öãr
)

88 
sim∂e_‰ame
 
‰ame
;

89 
	`mem£t
(&
‰ame
, 0, (frame));

91 
‰ame
.
ôem_num
 = 4;

92 
‰ame
.
ôems
[0].
pos
.
row
 = 1;

93 
‰ame
.
ôems
[0].
pos
.
cﬁ
 = 3;

94 
	`•rötf
(
‰ame
.
ôems
[0].
tôÀ
, "ÂΩìÂâçÊâìÂç∞Êú∫‰ø°ÊÅØ");

96 
‰ame
.
ôems
[1].
pos
.
row
 = 2;

97 
‰ame
.
ôems
[1].
pos
.
cﬁ
 = 1;

98 
	`•rötf
(
‰ame
.
ôems
[1].
tôÀ
, "ÂûãÂè∑Ôºö %s", 
¥öãr
->
«me
);

100 
‰ame
.
ôems
[2].
pos
.
row
 = 3;

101 
‰ame
.
ôems
[2].
pos
.
cﬁ
 = 1;

102 
	`•rötf
(
‰ame
.
ôems
[2].
tôÀ
, "Áä∂ÊÄÅÔºö%s", 
¥öãr
->
°©e
 & 
PRINT_UP
 ?

105 
‰ame
.
ôems
[3].
pos
.
row
 = 4;

106 
‰ame
.
ôems
[3].
pos
.
cﬁ
 = 1;

107 
	`•rötf
(
‰ame
.
ôems
[3].
tôÀ
, "Á±ªÂûãÔºö%sÊâìÂç∞Êú∫", 
¥öãr
->
id
 =
FLAT_PRINT_TYPE
 ?

110 
	`show_sim∂e_‰ame
(&
‰ame
);

111  
SUCCESS
;

112 
	}
}

117 
	$do_võw_u£r
(*
tôÀ
)

119 
ªt
;

120 
i
, 
key_code
, 
pos
, 
∑ge
, 
∑ge_ôem
, 
u£r_num
;

121 
sim∂e_‰ame
 
‰ame
;

122 
u£r
 
u£rs
[
MAX_USER_NUM
];

123 * 
Àvñ
[] = {

132 
	`mem£t
(&
‰ame
, 0, (frame));

133 
	`mem£t
(
u£rs
, 0, (
u£r
Ë* 
MAX_USER_NUM
);

138 
u£r_num
 = 
	`èx_fûe_gë_ªc_num
(
USER_FILE
);

139 
i
 = 0; i < 
u£r_num
; i++) {

140 
ªt
 = 
	`èx_fûe_ªad_u£r
(
i
 + 1, &
u£rs
[i]);

141 i‡(
ªt
 !
SUCCESS
)

142 
Áû
;

145 
‰ame
.
ôem_num
 = 7;

146 
‰ame
.
ôems
[0].
pos
.
row
 = 1;

147 
‰ame
.
ôems
[0].
pos
.
cﬁ
 = (12 - 
	`°æí
(
tôÀ
) / 2) / 2;

149 
‰ame
.
ôems
[1].
pos
.
row
 = 2;

150 
‰ame
.
ôems
[1].
pos
.
cﬁ
 = 1;

151 
‰ame
.
ôems
[2].
pos
.
row
 = 2;

152 
‰ame
.
ôems
[2].
pos
.
cﬁ
 = 9;

154 
‰ame
.
ôems
[3].
pos
.
row
 = 3;

155 
‰ame
.
ôems
[3].
pos
.
cﬁ
 = 1;

156 
‰ame
.
ôems
[4].
pos
.
row
 = 3;

157 
‰ame
.
ôems
[4].
pos
.
cﬁ
 = 9;

159 
‰ame
.
ôems
[5].
pos
.
row
 = 4;

160 
‰ame
.
ôems
[5].
pos
.
cﬁ
 = 1;

161 
‰ame
.
ôems
[6].
pos
.
row
 = 4;

162 
‰ame
.
ôems
[6].
pos
.
cﬁ
 = 9;

164 
	`¢¥ötf
(
‰ame
.
ôems
[0].
tôÀ
, 
MAX_TITLE_LEN
, "%s",Åitle);

166 
	`£t_ime_°©us
(
INPUT_LOW_CASE
);

168 
i
 = 1;

169 
∑ge_ôem
 = 
pos
 = 
∑ge
 = 0;

171 
	`˛ór_ˇche
();

173 i‡(
u£r_num
 - 
i
 >= 0) {

174 
	`•rötf
(
‰ame
.
ôems
[1].
tôÀ
, "%s", 
u£rs
[
i
 - 1].
«me
);

175 
	`•rötf
(
‰ame
.
ôems
[2].
tôÀ
, "%s", 
Àvñ
[
u£rs
[
i
 - 1].level]);

176 
∑ge_ôem
 = 1;

179 i‡(
u£r_num
 - 
i
 >= 1) {

180 
	`•rötf
(
‰ame
.
ôems
[3].
tôÀ
, "%s", 
u£rs
[
i
].
«me
);

181 
	`•rötf
(
‰ame
.
ôems
[4].
tôÀ
, "%s", 
Àvñ
[
u£rs
[
i
].level]);

182 
∑ge_ôem
 = 2;

185 i‡(
u£r_num
 - 
i
 >= 2) {

186 
	`•rötf
(
‰ame
.
ôems
[5].
tôÀ
, "%s", 
u£rs
[
i
 + 1].
«me
);

187 
	`•rötf
(
‰ame
.
ôems
[6].
tôÀ
, "%s", 
Àvñ
[
u£rs
[
i
 + 1].level]);

188 
∑ge_ôem
 = 3;

191 
	`show_sim∂e_‰ame
(&
‰ame
);

194 
key_code
 = 
	`gë_keycode
();

195 
key_code
) {

196 
BACK
:

197  -
EUI_BACK
;

200 
ESC
:

201  -
EUI_ESC
;

204 
ENTER
:

205  
i
 + 
pos
 - 1;

208 
UP
:

209 i‡(
pos
 > 0) {

210 
pos
 --;

213 i‡(
∑ge
 > 0) {

214 
∑ge
 --;

215 
pos
 = 2;

216 
i
 -= 3;

221 
DOWN
:

222 i‡(
pos
 < 2) {

223 
pos
 ++;

225 i‡(
u£r_num
 - 
i
 >= 3) {

226 
∑ge
 ++;

227 
pos
 = 0;

228 
i
 += 3;

234 i‡(
	`isdigô
(
key_code
)) {

235 i‡(
key_code
 >'1' && (key_codê- '0'Ë< 
∑ge_ôem
) {

236  
i
 + (
key_code
 - '0') - 2;

242 
Áû
:

243 
	`di•œy_w¨n
("Êü•ËØ¢Áî®Êà∑Â§±Ë¥•ÔºÅ");

244 
	`di•œy_îr_msg
(
ªt
);

245  
ªt
;

247 
	}
}

253 
	$cmd_add_u£r
()

255 
ªt
;

256 
key
, 
u£r_≥rm
;

257 
∑sswd
[20] = {0};

258 
u£r
 
√w_u£r
;

263 
ªt
 = 
	`check_u£æevñ
(
MANAGER_USER
);

264 i‡(
ªt
 !
SUCCESS
){

265 
	`di•œy_w¨n
("ÊùÉÈôêÈôêÂà∂ÔºåÊó†Ê≥ïÁªßÁª≠Ê≠§Êìç‰ΩúÔºÅ");

266  
FAIL
;

269 
show_≥rm
:

270 
	`show_add_u£r_≥rm
();

272 
	`£t_ime_°©us
(
INPUT_LOW_CASE
);

273 
	`˛ór_ˇche
();

275 
key
 = 
	`gë_keycode
();

276 i‡(
key
 =
ESC
) {

277 
ªt
 = 
	`que°i⁄_u£r
("Á°ÆÂÆöÂèñÊ∂àÂΩìÂâçÊìç‰ΩúÔºü");

278 i‡(
ªt
 =
POSITIVE
)

279  
FAIL
;

281 
show_≥rm
;

284 i‡(
key
 == '1') {

285 
u£r_≥rm
 = 
NORMAL_USER
;

289 i‡(
key
 == '2') {

290 
u£r_≥rm
 = 
SUPPER_USER
;

295 
	`mem£t
(&
√w_u£r
, 0, (new_user));

297 
show_u£r
:

298 i‡(
u£r_≥rm
 =
NORMAL_USER
)

299 
	`show_add_u£r_öfo
("Ê∑ªÂä†ÊôÆÈÄöÁî®Êà∑", &
√w_u£r
);

301 
	`show_add_u£r_öfo
("Ê∑ªÂä†Ë∂ÖÁ∫ßÁî®Êà∑", &
√w_u£r
);

303 
ªt
 = 
	`gë_°rög
(2, 5, 
√w_u£r
.
«me
);

304 i‡(
ªt
 =-
EUI_ESC
) {

305 
ªt
 = 
	`que°i⁄_u£r
("Á°ÆËÆ§ÂèñÊ∂àÂΩìÂâçÊìç‰ΩúÔºü");

306 i‡(
ªt
 =
POSITIVE
)

307  
FAIL
;

309 
show_u£r
;

312 
ªt
 = 
	`gë_∑sswd
(3, 6, 
√w_u£r
.
∑sswd
);

313 i‡(
ªt
 =-
EUI_ESC
) {

314 
ªt
 = 
	`que°i⁄_u£r
("Á°ÆËÆ§ÂèñÊ∂àÂΩìÂâçÊìç‰ΩúÔºü");

315 i‡(
ªt
 =
POSITIVE
)

316  
FAIL
;

318 
	`mem£t
(
√w_u£r
.
∑sswd
, 0, (new_user.passwd));

319 
show_u£r
;

323 
ªt
 = 
	`gë_∑sswd
(4, 6, 
∑sswd
);

324 i‡(
ªt
 =-
EUI_ESC
) {

325 
ªt
 = 
	`que°i⁄_u£r
("Á°ÆËÆ§ÂèñÊ∂àÊú¨Ê¨°Êìç‰ΩúÔºü");

326 i‡(
ªt
 =
POSITIVE
)

327  
FAIL
;

329 
	`mem£t
(
∑sswd
, 0, (passwd));

330 
show_u£r
;

335 i‡(
	`°rcmp
(
∑sswd
, 
√w_u£r
.passwd) != 0) {

336 
	`di•œy_w¨n
("‰∏§Ê¨°ËæìÂÖ•ÂØÜÁ†Å‰∏çÂåπÈÖçÔºåËØ∑ÈáçÊñ∞ËæìÂÖ•ÔºÅ");

337 
	`mem£t
(
√w_u£r
.
∑sswd
, 0, (new_user.passwd));

338 
	`mem£t
(
∑sswd
, 0, (passwd));

339 
show_u£r
;

342 
	`di•œy_öfo
("Ê≠£Âú®Ê∑ªÂä†Êñ∞Áî®Êà∑...");

344 
√w_u£r
.
id
 = 
	`èx_fûe_gë_ªc_num
(
USER_FILE
) + 1;

345 
√w_u£r
.
Àvñ
 = 
u£r_≥rm
;

348 
ªt
 = 
	`èx_fûe_≠≥nd_u£r
(&
√w_u£r
);

349 i‡(
ªt
 < 0) {

350 i‡(
ªt
 =-
ETAX_USERNAME_IMPLICT
) {

351 
	`di•œy_w¨n
("Áî®Êà∑ÂêçÂÜ≤Á™ÅÔºåËØ∑ÈáçÊñ∞ËæìÂÖ•ÔºÅ");

352 
	`mem£t
(
√w_u£r
.
«me
, 0, (new_user.name));

353 
	`mem£t
(
√w_u£r
.
∑sswd
, 0, (new_user.passwd));

354 
	`mem£t
(
∑sswd
, 0, (passwd));

355 
show_u£r
;

358 i‡(
ªt
 =-
EFILE_REC_FULL
) {

359 
	`di•œy_w¨n
("Áî®Êà∑Êï∞ÈáèË∂ÖÈôêÔºåÊó†Ê≥ïÊ∑ªÂä†Êñ∞Áî®Êà∑ÔºÅ");

360  
FAIL
;

363 
	`di•œy_w¨n
("Ê∑ªÂä†Áî®Êà∑Â§±Ë¥•ÔºåËØ∑ËÅîÁ≥ªÂéÇÂïÜÔºÅ");

364 
	`di•œy_îr_msg
(
ªt
);

365  
FAIL
;

368 
	`di•œy_w¨n
("Ê∑ªÂä†Áî®Êà∑ÊàêÂäüÔºÅ");

369  
SUCCESS
;

370 
	}
}

377 
	$cmd_dñ_u£r
()

379 
ªt
;

380 
off£t
;

381 
u£r
 
dñ_u£r
;

386 
ªt
 = 
	`check_u£æevñ
(
MANAGER_USER
);

387 i‡(
ªt
 !
SUCCESS
){

388 
	`di•œy_w¨n
("ÊùÉÈôêÈôêÂà∂ÔºåÊó†Ê≥ïÁªßÁª≠Ê≠§Êìç‰ΩúÔºÅ");

389  
FAIL
;

392 
ªt
 = 
	`do_võw_u£r
("ÈÄâÊã©Âà†Èô§Áî®Êà∑");

393 i‡(
ªt
 =-
EUI_BACK
)

394  
FAIL
;

395 i‡(
ªt
 =-
EUI_ESC
)

396  
FAIL
;

397 i‡(
ªt
 >= 0)

398 
off£t
 = 
ªt
;

400 
	`di•œy_w¨n
("Êú™Áü•ÈîôËØØÔºåËØ∑ËÅîÁ≥ªÂéÇÂïÜÔºÅ");

401 
	`di•œy_îr_msg
(
ªt
);

402  
FAIL
;

405 
ªt
 = 
	`èx_fûe_ªad_u£r
(
off£t
, &
dñ_u£r
);

406 i‡(
ªt
 < 0) {

407 
	`di•œy_w¨n
("Âà†Èô§Áî®Êà∑Â§±Ë¥•ÔºÅ");

408 
	`di•œy_îr_msg
(
ªt
);

409  
FAIL
;

412 i‡(
dñ_u£r
.
Àvñ
 >
MANAGER_USER
) {

413 
	`di•œy_w¨n
("Âè™ËÉΩÂà†Èô§ÈùûÁÆ°ÁêÜÂëòÁî®Êà∑ÔºÅ");

414  
FAIL
;

417 
ªt
 = 
	`èx_fûe_dñëe_u£r
(
off£t
);

418 i‡(
ªt
 < 0) {

419 
	`di•œy_w¨n
("Âà†Èô§Áî®Êà∑Â§±Ë¥•ÔºÅ");

420 
	`di•œy_îr_msg
(
ªt
);

421  
FAIL
;

424 
	`di•œy_w¨n
("Âà†Èô§Áî®Êà∑ÊàêÂäüÔºÅ");

425  
SUCCESS
;

426 
	}
}

432 
	$cmd_modify_u£r
()

434 
ªt
;

435 
key
, 
off£t
, 
√w_≥rm
;

436 
∑sswd
[20] = {0};

437 
u£r
 
ﬁd_u£r
, 
tmp_u£r
, 
föd_u£r
;

439 
ªt
 = 
	`check_u£æevñ
(
MANAGER_USER
);

440 i‡(
ªt
 !
POSITIVE
) {

441 
	`di•œy_w¨n
("ÊùÉÈôêÈôêÂà∂ÔºåÊó†Ê≥ïÁªßÁª≠Êìç‰ΩúÔºÅ");

442  
FAIL
;

445 
ªt
 = 
	`do_võw_u£r
("ÈÄâÊã©‰øÆÊîπÁî®Êà∑");

446 i‡(
ªt
 =-
EUI_BACK
)

447  
FAIL
;

448 i‡(
ªt
 =-
EUI_ESC
)

449  
FAIL
;

450 i‡(
ªt
 >= 0)

451 
off£t
 = 
ªt
;

453 
	`di•œy_w¨n
("Êú™Áü•ÈîôËØØÔºåËØ∑ËÅîÁ≥ªÂéÇÂïÜÔºÅ");

454 
	`di•œy_îr_msg
(
ªt
);

455  
FAIL
;

458 
ªt
 = 
	`èx_fûe_ªad_u£r
(
off£t
, &
ﬁd_u£r
);

459 i‡(
ªt
 =
SUCCESS
) {

460 
	`di•œy_w¨n
("‰øÆÊîπÁî®Êà∑Â§±Ë¥•ÔºÅ");

461 
	`di•œy_îr_msg
(
ªt
);

462  
FAIL
;

465 
show_≥rm
:

466 
	`show_add_u£r_≥rm
();

468 
	`£t_ime_°©us
(
INPUT_LOW_CASE
);

469 
	`˛ór_ˇche
();

471 
key
 = 
	`gë_keycode
();

472 i‡(
key
 =
ESC
) {

473 
ªt
 = 
	`que°i⁄_u£r
("Á°ÆÂÆöÂèñÊ∂àÂΩìÂâçÊìç‰ΩúÔºü");

474 i‡(
ªt
 =
POSITIVE
)

475  
FAIL
;

477 
show_≥rm
;

480 i‡(
key
 == '1') {

481 
√w_≥rm
 = 
NORMAL_USER
;

485 i‡(
key
 == '2') {

486 
√w_≥rm
 = 
SUPPER_USER
;

491 
	`mem£t
(&
tmp_u£r
, 0, (tmp_user));

493 
show_u£r
:

494 
	`show_add_u£r_öfo
("‰øÆÊîπÁî®Êà∑‰ø°ÊÅØ", &
tmp_u£r
);

496 
ªt
 = 
	`gë_°rög
(2, 5, 
tmp_u£r
.
«me
);

497 i‡(
ªt
 =-
EUI_ESC
) {

498 
ªt
 = 
	`que°i⁄_u£r
("Á°ÆËÆ§ÂèñÊ∂àÂΩìÂâçÊìç‰ΩúÔºü");

499 i‡(
ªt
 =
POSITIVE
)

500  
FAIL
;

502 
show_u£r
;

505 
ªt
 = 
	`gë_∑sswd
(3, 6, 
tmp_u£r
.
∑sswd
);

506 i‡(
ªt
 =-
EUI_ESC
) {

507 
ªt
 = 
	`que°i⁄_u£r
("Á°ÆËÆ§ÂèñÊ∂àÂΩìÂâçÊìç‰ΩúÔºü");

508 i‡(
ªt
 =
POSITIVE
)

509  
FAIL
;

511 
	`mem£t
(
tmp_u£r
.
∑sswd
, 0, (tmp_user.passwd));

512 
show_u£r
;

516 
ªt
 = 
	`gë_∑sswd
(4, 6, 
∑sswd
);

517 i‡(
ªt
 =-
EUI_ESC
) {

518 
ªt
 = 
	`que°i⁄_u£r
("Á°ÆËÆ§ÂèñÊ∂àÊú¨Ê¨°Êìç‰ΩúÔºü");

519 i‡(
ªt
 =
POSITIVE
)

520  
FAIL
;

522 
	`mem£t
(
∑sswd
, 0, (passwd));

523 
show_u£r
;

527 i‡(
	`°rcmp
(
∑sswd
, 
tmp_u£r
.passwd) != 0) {

528 
	`di•œy_w¨n
("‰∏§Ê¨°ËæìÂÖ•ÂØÜÁ†Å‰∏çÂåπÈÖçÔºåËØ∑ÈáçÊñ∞ËæìÂÖ•ÔºÅ");

529 
	`mem£t
(
tmp_u£r
.
∑sswd
, 0, (tmp_user.passwd));

530 
	`mem£t
(
∑sswd
, 0, (passwd));

531 
show_u£r
;

537 i‡(
	`°rcmp
(
tmp_u£r
.
«me
, 
ﬁd_u£r
.name) != 0) {

538 
ªt
 = 
	`èx_fûe_föd_u£r
(
tmp_u£r
.
«me
, &
föd_u£r
);

539 i‡(
ªt
 =
SUCCESS
) {

540 
	`di•œy_w¨n
("Áî®Êà∑ÂêçÂÜ≤Á™ÅÔºåËØ∑ÈáçÊñ∞ËæìÂÖ•!");

541 
	`mem£t
(
tmp_u£r
.
∑sswd
, 0, (tmp_user.passwd));

542 
	`mem£t
(
∑sswd
, 0, (passwd));

543 
show_u£r
;

550 
tmp_u£r
.
id
 = 
ﬁd_u£r
.id;

551 
tmp_u£r
.
Àvñ
 = 
√w_≥rm
;

552 
ªt
 = 
	`èx_fûe_modify_u£r
(
off£t
, &
tmp_u£r
);

553 i‡(
ªt
 !
SUCCESS
) {

554 
	`di•œy_w¨n
("‰øÆÊîπÁî®Êà∑Â§±Ë¥•ÔºÅ");

555 
	`di•œy_îr_msg
(
ªt
);

556  
FAIL
;

559 
	`di•œy_w¨n
("‰øÆÊîπÁî®Êà∑ÊàêÂäüÔºÅ");

560  
SUCCESS
;

561 
	}
}

567 
	$cmd_võw_u£r
()

569 
ªt
;

571 
ªt
 = 
	`check_u£æevñ
(
MANAGER_USER
);

572 i‡(
ªt
 !
POSITIVE
) {

573 
	`di•œy_w¨n
("ÊùÉÈôêÈôêÂà∂ÔºåÊó†Ê≥ïÁªßÁª≠Êìç‰ΩúÔºÅ");

574  
FAIL
;

577 
	`do_võw_u£r
("Êü•ËØ¢Áî®Êà∑‰ø°ÊÅØ");

579  
SUCCESS
;

580 
	}
}

586 
	$cmd_võw_owî_öfo
()

588 
ªt
, 
key
;

589 
offi˚_code
;

590 
buf
[25] = {0};

591 
sim∂e_‰ame
 
‰ames
[4];

592 
èx_sys_≠p_öfo
 * 
gp_≠p_öfo
 = 
	`gë_sys_≠p_öfo
();

593 
èx_sy°em
 *Åax_sy°em = 
	`gë_èx_sy°em
();

595 
ªt
 = 
èx_sy°em
->
	`is_fisˇl_öô
();

596 i‡(
ªt
 =
NEGATIVE
) {

597 
	`di•œy_w¨n
("Êú¨Êú∫Â∞öÊú™ÂàùÂßãÂåñÔºÅ");

598  
FAIL
;

599 } i‡(
ªt
 < 0) {

600 
	`di•œy_w¨n
("Êú™Áü•ÈîôËØØÔºåËØ∑ËÅîÁ≥ªÂéÇÂïÜÔºÅ");

601  
FAIL
;

604 
	`mem£t
(&
‰ames
, 0, (
sim∂e_‰ame
) * 4);

607 
‰ames
[0].
ôem_num
 = 3;

608 
‰ames
[0].
ôems
[0].
pos
.
row
 = 1;

609 
‰ames
[0].
ôems
[0].
pos
.
cﬁ
 = 1;

610 
	`•rötf
(
‰ames
[0].
ôems
[0].
tôÀ
, "ICÂç°ÁºñÂè∑Ôºö");

612 
‰ames
[0].
ôems
[1].
pos
.
row
 = 2;

613 
‰ames
[0].
ôems
[1].
pos
.
cﬁ
 = 2;

614 
	`bcd_to_°r
(
gp_≠p_öfo
->
fisˇl_ˇrd_nb
, 
buf
, 8);

615 
	`•rötf
(
‰ames
[0].
ôems
[0].
tôÀ
, "%s", 
buf
);

617 
‰ames
[0].
ôems
[2].
pos
.
row
 = 3;

618 
‰ames
[0].
ôems
[2].
pos
.
cﬁ
 = 1;

619 
	`•rötf
(
‰ames
[0].
ôems
[2].
tôÀ
, "Á∫≥Á®é‰∫∫Ôºö%s", 
gp_≠p_öfo
->
èx∑yî_«me
);

621 
	`mem£t
(
buf
, 0, 25);

624 
‰ames
[1].
ôem_num
 = 4;

625 
‰ames
[1].
ôems
[0].
pos
.
row
 = 1;

626 
‰ames
[1].
ôems
[0].
pos
.
cﬁ
 = 1;

627 
	`bcd_to_°r
((
uch¨
 *)&
gp_≠p_öfo
->
≠p_°¨t_d©e
, 
buf
, 4);

628 
	`•rötf
(
‰ames
[1].
ôems
[0].
tôÀ
, "Â∫îÁî®Ëµ∑ÂßãÊó•ÊúüÔºö%s", 
buf
);

630 
‰ames
[1].
ôems
[1].
pos
.
row
 = 2;

631 
‰ames
[1].
ôems
[1].
pos
.
cﬁ
 = 1;

632 
	`bcd_to_°r
((
uch¨
 *)&
gp_≠p_öfo
->
≠p_vaûd_d©e
, 
buf
, 4);

633 
	`•rötf
(
‰ames
[1].
ôems
[1].
tôÀ
, "Â∫îÁî®ÊúâÊïàÊó•ÊúüÔºö%s", 
buf
);

635 
‰ames
[1].
ôems
[2].
pos
.
row
 = 3;

636 
‰ames
[1].
ôems
[2].
pos
.
cﬁ
 = 1;

637 
	`bcd_to_°r
((
uch¨
 *)&
gp_≠p_öfo
->
issue_limô_d©e
, 
buf
, 4);

638 
	`•rötf
(
‰ames
[1].
ôems
[2].
tôÀ
, "ÂºÄÁ•®Êà™Ê≠¢Êó•ÊúüÔºö%s", 
buf
);

640 
‰ames
[1].
ôems
[3].
pos
.
row
 = 4;

641 
‰ames
[1].
ôems
[3].
pos
.
cﬁ
 = 1;

642 
	`•rötf
(
‰ames
[1].
ôems
[3].
tôÀ
, "Áî≥Êä•ÊñπÂºèÔºö%s", 
gp_≠p_öfo
->
de˛¨e_mode
 == 0x01 ? "Áî®Êà∑Âç°" : "ÂÖ∂‰ªñ");

644 
	`mem£t
(
buf
, 0, 25);

647 
‰ames
[2].
ôem_num
 = 4;

648 
‰ames
[2].
ôems
[0].
pos
.
row
 = 1;

649 
‰ames
[2].
ôems
[0].
pos
.
cﬁ
 = 1;

650 
	`•rötf
(
‰ames
[2].
ôems
[0].
tôÀ
, "Á∫≥Á®éÊà∑ÁºñÂè∑:");

652 
‰ames
[2].
ôems
[0].
pos
.
row
 = 2;

653 
‰ames
[2].
ôems
[0].
pos
.
cﬁ
 = 2;

654 
	`bcd_to_°r
(
gp_≠p_öfo
->
èx∑yî_nb
, 
buf
, 8);

655 
	`•rötf
(
‰ames
[2].
ôems
[0].
tôÀ
, "%s", 
buf
);

657 
‰ames
[2].
ôems
[1].
pos
.
row
 = 3;

658 
‰ames
[2].
ôems
[1].
pos
.
cﬁ
 = 1;

659 
	`íd_covî_öt
((
uch¨
 *)&
offi˚_code
, 
gp_≠p_öfo
->office_code);

660 
	`•rötf
(
‰ames
[2].
ôems
[0].
tôÀ
, "‰∏ªÁÆ°ÂàÜÂ±Ä‰ª£Á†ÅÔºö%09u", 
offi˚_code
);

662 
‰ames
[2].
ôems
[2].
pos
.
row
 = 4;

663 
‰ames
[2].
ôems
[2].
pos
.
cﬁ
 = 1;

664 
	`mem˝y
(
buf
, 
gp_≠p_öfo
->
èx∑yî_id
, 20);

665 
buf
[20] = 0;

666 
	`•rötf
(
‰ames
[2].
ôems
[0].
tôÀ
, "Á®éÂè∑Ôºö%s", 
gp_≠p_öfo
->
èx∑yî_id
);

669 
‰ames
[3].
ôem_num
 = 4;

670 
‰ames
[3].
ôems
[0].
pos
.
row
 = 1;

671 
‰ames
[3].
ôems
[0].
pos
.
cﬁ
 = 1;

672 
	`•rötf
(
‰ames
[3].
ôems
[0].
tôÀ
, "ÂçïÂº†ÂèëÁ•®ÈôêÈ¢ù: %.2f", 
gp_≠p_öfo
->
sögÀ_övoi˚_limô
/100.0);

674 
‰ames
[3].
ôems
[1].
pos
.
row
 = 2;

675 
‰ames
[3].
ôems
[1].
pos
.
cﬁ
 = 1;

676 
	`•rötf
(
‰ames
[3].
ôems
[1].
tôÀ
, "ÂºÄÁ•®Á¥ØËÆ°ÈôêÈ¢ù: %.2f", 
gp_≠p_öfo
->
tŸÆ_övoi˚_limô
/100.0);

678 
‰ames
[3].
ôems
[2].
pos
.
row
 = 3;

679 
‰ames
[3].
ôems
[2].
pos
.
cﬁ
 = 1;

680 
	`•rötf
(
‰ames
[3].
ôems
[2].
tôÀ
, "ÈÄÄÁ•®Á¥ØËÆ°È¢ùÈôê: %.2f", 
gp_≠p_öfo
->
ªtu∫_övoi˚_limô
/100.0);

682 
‰ames
[3].
ôems
[3].
pos
.
row
 = 4;

683 
‰ames
[3].
ôems
[3].
pos
.
cﬁ
 = 1;

684 i‡((
gp_≠p_öfo
->
dëaû_mode
 >> 4) == 3) {

685 
	`•rötf
(
‰ames
[3].
ôems
[3].
tôÀ
, "Áî≥Êä•ÊòéÁªÜÂíåÊó•‰∫§Êòì");

686 } i‡((
gp_≠p_öfo
->
dëaû_mode
 >> 4) == 2) {

687 
	`•rötf
(
‰ames
[3].
ôems
[3].
tôÀ
, "‰∏çÁî≥Êä•ÊòéÁªÜÔºåÁî≥Êä•Êó•‰∫§Êòì");

688 } i‡((
gp_≠p_öfo
->
dëaû_mode
 >> 4) == 1) {

689 
	`•rötf
(
‰ames
[3].
ôems
[3].
tôÀ
, "Áî≥Êä•ÊòéÁªÜÔºå‰∏çÁî≥Êä•Êó•‰∫§Êòì");

690 } i‡((
gp_≠p_öfo
->
dëaû_mode
 >> 4) == 0) {

691 
	`•rötf
(
‰ames
[3].
ôems
[3].
tôÀ
, "‰∏çÁî≥Êä•ÊòéÁªÜÂíåÊó•‰∫§Êòì");

694 
	`show_sim∂e_‰ame
(&
‰ames
[0]);

696 
	`£t_ime_°©us
(
INPUT_LOW_CASE
);

697 
	`˛ór_ˇche
();

699 
i
 = 0;

701 
key
 = 
	`gë_keycode
();

703 
key
) {

704 
ENTER
:

705  
SUCCESS
;

707 
BACK
:

708  
SUCCESS
;

711 
ESC
:

712  
SUCCESS
;

715 
UP
:

716 i‡(
i
 > 0)

717 
	`show_sim∂e_‰ame
(&
‰ames
[--
i
]);

720 
DOWN
:

721 i‡(
i
 < 3)

722 
	`show_sim∂e_‰ame
(&
‰ames
[++
i
]);

731  
FAIL
;

732 
	}
}

738 
	$cmd_võw_de˛¨e_öfo
()

740 
ªt
;

741 
èx_sys_fis_c⁄fig_ªc‹d
 * 
gp_fis_cfg
 = 
	`gë_fis_c⁄fig
();

742 
èx_sy°em
 *Åax_sy°em = 
	`gë_èx_sy°em
();

744 
ªt
 = 
èx_sy°em
->
	`is_fisˇl_öô
();

745 i‡(
ªt
 =
NEGATIVE
) {

746 
	`di•œy_w¨n
("Êú¨Êú∫Â∞öÊú™ÂàùÂßãÂåñÔºÅ");

747  
FAIL
;

750 i‡(
gp_fis_cfg
->
de˛¨e_Êag
 == 0) {

751 
	`di•œy_w¨n
("Êú¨Áî≥Êä•ÊúüÂ∞öÊú™Á®éÊéßÁî≥Êä•ÔºÅ");

753 
	`di•œy_w¨n
("Â∑≤Áî≥Êä•ÔºåËØ∑ÂèäÊó∂ÂÆåÁ®éÂπ∂ËøõË°åÁ®éÊéßÊõ¥Êñ∞ÔºÅ");

756  
SUCCESS
;

757 
	}
}

763 
	$cmd_võw_mach_öfo
()

765 
key
;

766 
buf
[25] = {0};

767 
sim∂e_‰ame
 
‰ames
[2];

768 
machöe_öfo_ªc‹d
 * 
gp_mach_öfo
 = 
	`gë_mach_öfo
();

770 
	`mem£t
(
‰ames
, 0, 2 * (
sim∂e_‰ame
));

773 
‰ames
[0].
ôem_num
 = 4;

774 
‰ames
[0].
ôems
[0].
pos
.
row
 = 1;

775 
‰ames
[0].
ôems
[0].
pos
.
cﬁ
 = 1;

776 
	`•rötf
(
‰ames
[0].
ôems
[0].
tôÀ
, "Êú∫Âô®ÁºñÂè∑:");

778 
‰ames
[0].
ôems
[1].
pos
.
row
 = 2;

779 
‰ames
[0].
ôems
[1].
pos
.
cﬁ
 = 2;

780 
	`bcd_to_°r
(
gp_mach_öfo
->
machöe_nb
, 
buf
, 8);

781 
	`•rötf
(
‰ames
[0].
ôems
[1].
tôÀ
, "%s", 
buf
);

783 
	`mem£t
(
buf
, 0, 25);

785 
‰ames
[0].
ôems
[2].
pos
.
row
 = 3;

786 
‰ames
[0].
ôems
[2].
pos
.
cﬁ
 = 1;

787 
	`•rötf
(
‰ames
[0].
ôems
[2].
tôÀ
, "Áîü‰∫ßÊó•Êúü: %s", 
buf
);

789 
‰ames
[0].
ôems
[3].
pos
.
row
 = 4;

790 
‰ames
[0].
ôems
[3].
pos
.
cﬁ
 = 2;

791 
	`bcd_to_°r
((
uch¨
 *)&
gp_mach_öfo
->
¥odu˚_d©e
, 
buf
, 4);

792 
	`•rötf
(
‰ames
[0].
ôems
[3].
tôÀ
, "Áîü‰∫ßÊó•Êúü: %s", 
buf
);

795 
‰ames
[1].
ôem_num
 = 4;

796 
‰ames
[1].
ôems
[0].
pos
.
row
 = 1;

797 
‰ames
[1].
ôems
[0].
pos
.
cﬁ
 = 1;

798 
	`•rötf
(
‰ames
[1].
ôems
[0].
tôÀ
, "Á°¨‰ª∂ÁâàÊú¨Âè∑:");

800 
‰ames
[1].
ôems
[1].
pos
.
row
 = 2;

801 
‰ames
[1].
ôems
[1].
pos
.
cﬁ
 = 2;

802 
	`•rötf
(
‰ames
[1].
ôems
[1].
tôÀ
, "%s", 
gp_mach_öfo
->
hw_vîsi⁄
);

804 
‰ames
[1].
ôems
[0].
pos
.
row
 = 3;

805 
‰ames
[1].
ôems
[0].
pos
.
cﬁ
 = 1;

806 
	`•rötf
(
‰ames
[1].
ôems
[0].
tôÀ
, "ËΩØ‰ª∂ÁâàÊú¨Âè∑:");

808 
‰ames
[1].
ôems
[0].
pos
.
row
 = 4;

809 
‰ames
[1].
ôems
[0].
pos
.
cﬁ
 = 2;

810 
	`•rötf
(
‰ames
[1].
ôems
[0].
tôÀ
, "%s", 
gp_mach_öfo
->
sw_vîsi⁄
);

812 
	`show_sim∂e_‰ame
(&
‰ames
[0]);

814 
	`£t_ime_°©us
(
INPUT_LOW_CASE
);

815 
	`˛ór_ˇche
();

817 
i
 = 0;

819 
key
 = 
	`gë_keycode
();

821 
key
) {

822 
ENTER
:

823  
SUCCESS
;

825 
BACK
:

826  
SUCCESS
;

829 
ESC
:

830  
SUCCESS
;

833 
UP
:

834 i‡(
i
 > 0)

835 
	`show_sim∂e_‰ame
(&
‰ames
[--
i
]);

838 
DOWN
:

839 i‡(
i
 < 1)

840 
	`show_sim∂e_‰ame
(&
‰ames
[++
i
]);

848  
FAIL
;

849 
	}
}

855 
	$cmd_võw_issue_öfo
()

857 
ªt
, 
key
;

858 
sim∂e_‰ame
 
‰ames
[2];

859 
èx_sys_amou¡_ªc‹d
 
amt_ªc
;

860 
èx_sys_≠p_öfo
 * 
gp_≠p_öfo
 = 
	`gë_sys_≠p_öfo
();

861 
èx_sy°em
 *èx_sy°em = 
	`gë_èx_sy°em
();

863 
ªt
 = 
èx_sy°em
->
	`is_fisˇl_öô
();

864 i‡(
ªt
 =
NEGATIVE
) {

865 
	`di•œy_w¨n
("Êú¨Êú∫Â∞öÊú™ÂàùÂßãÂåñÔºÅ");

866  
FAIL
;

867 } i‡(
ªt
 < 0) {

868 
	`di•œy_w¨n
("Êú™Áü•ÈîôËØØÔºÅ");

869 
	`di•œy_îr_msg
(
ªt
);

870  
FAIL
;

873 
	`di•œy_öfo
("Ê≠£Âú®Ëé∑ÂèñÊú¨Áî≥Êä•ÊúüÂºÄÁ•®‰ø°ÊÅØ...");

875 
ªt
 = 
	`èx_fûe_ªad_amou¡
(&
amt_ªc
);

876 i‡(
ªt
 < 0) {

877 
	`di•œy_w¨n
("Ëé∑ÂèñÁî≥Êä•‰ø°ÊÅØÂ§±Ë¥•ÔºÅ");

878 
	`di•œy_îr_msg
(
ªt
);

879  
FAIL
;

883 
‰ames
[0].
ôem_num
 = 4;

884 
‰ames
[0].
ôems
[0].
pos
.
row
 = 1;

885 
‰ames
[0].
ôems
[0].
pos
.
cﬁ
 = 3;

886 
	`•rötf
(
‰ames
[0].
ôems
[0].
tôÀ
, "Êú¨Áî≥Êä•ÊúüÂºÄÁ•®‰ø°ÊÅØ");

888 
‰ames
[0].
ôems
[1].
pos
.
row
 = 2;

889 
‰ames
[0].
ôems
[1].
pos
.
cﬁ
 = 1;

890 
	`•rötf
(
‰ames
[0].
ôems
[1].
tôÀ
, "ÂºÄÁ•®Á¥ØËÆ°ÈáëÈ¢ù: %.2f", 
amt_ªc
.
amt_tŸÆ_this
/100.0);

892 
‰ames
[0].
ôems
[2].
pos
.
row
 = 3;

893 
‰ames
[0].
ôems
[2].
pos
.
cﬁ
 = 1;

894 
	`•rötf
(
‰ames
[0].
ôems
[2].
tôÀ
, "ÈÄÄÁ•®Á¥ØËÆ°ÈáëÈ¢ù: %.2f", 
amt_ªc
.
amt_ªtu∫_this
/100.0);

897 
‰ames
[1].
ôem_num
 = 4;

898 
‰ames
[1].
ôems
[0].
pos
.
row
 = 1;

899 
‰ames
[1].
ôems
[0].
pos
.
cﬁ
 = 3;

900 
	`•rötf
(
‰ames
[1].
ôems
[0].
tôÀ
, "Êú¨Áî≥Êä•ÊúüÂºÄÁ•®‰ø°ÊÅØ");

902 
‰ames
[1].
ôems
[1].
pos
.
row
 = 2;

903 
‰ames
[1].
ôems
[1].
pos
.
cﬁ
 = 1;

904 
	`•rötf
(
‰ames
[1].
ôems
[1].
tôÀ
, "Ââ©‰ΩôÂºÄÁ•®ÈáëÈ¢ù: %.2f",

905 (
gp_≠p_öfo
->
tŸÆ_övoi˚_limô
 - 
amt_ªc
.
amt_tŸÆ_this
)/100.0);

907 
‰ames
[1].
ôems
[2].
pos
.
row
 = 3;

908 
‰ames
[1].
ôems
[2].
pos
.
cﬁ
 = 1;

909 
	`•rötf
(
‰ames
[1].
ôems
[2].
tôÀ
, "Ââ©‰ΩôÈÄÄÁ•®ÈáëÈ¢ù: %.2f",

910 (
gp_≠p_öfo
->
ªtu∫_övoi˚_limô
 - 
amt_ªc
.
amt_ªtu∫_this
)/100.0);

912 
	`show_sim∂e_‰ame
(&
‰ames
[0]);

914 
	`£t_ime_°©us
(
INPUT_LOW_CASE
);

915 
	`˛ór_ˇche
();

917 
i
 = 0;

919 
key
 = 
	`gë_keycode
();

920 
key
) {

921 
ENTER
:

922  
SUCCESS
;

924 
BACK
:

925  
SUCCESS
;

928 
ESC
:

929  
SUCCESS
;

932 
UP
:

933 i‡(
i
 > 0)

934 
	`show_sim∂e_‰ame
(&
‰ames
[--
i
]);

937 
DOWN
:

938 i‡(
i
 < 1)

939 
	`show_sim∂e_‰ame
(&
‰ames
[++
i
]);

947  
FAIL
;

948 
	}
}

954 
	$cmd_võw_èxøã_öfo
()

956 
key
, 
num
, 
pos
, 
∑ge
;

957 
buf
[20] = {0};

959 
sim∂e_‰ame
 
‰ames
[2];

960 
èx_sys_≠p_öfo
 * 
gp_≠p_öfo
 = 
	`gë_sys_≠p_öfo
();

962 
	`mem£t
(
‰ames
, 0, (
sim∂e_‰ame
) * 2);

965 
‰ames
[0].
ôem_num
 = 4;

966 
‰ames
[0].
ôems
[0].
pos
.
row
 = 1;

967 
‰ames
[0].
ôems
[0].
pos
.
cﬁ
 = 5;

969 
‰ames
[0].
ôems
[1].
pos
.
row
 = 2;

970 
‰ames
[0].
ôems
[1].
pos
.
cﬁ
 = 1;

972 
‰ames
[0].
ôems
[2].
pos
.
row
 = 3;

973 
‰ames
[0].
ôems
[2].
pos
.
cﬁ
 = 1;

975 
‰ames
[0].
ôems
[3].
pos
.
row
 = 4;

976 
‰ames
[0].
ôems
[3].
pos
.
cﬁ
 = 1;

979 
‰ames
[1].
ôem_num
 = 3;

980 
‰ames
[1].
ôems
[0].
pos
.
row
 = 1;

981 
‰ames
[1].
ôems
[0].
pos
.
cﬁ
 = 5;

983 
‰ames
[1].
ôems
[1].
pos
.
row
 = 2;

984 
‰ames
[1].
ôems
[1].
pos
.
cﬁ
 = 1;

986 
‰ames
[1].
ôems
[2].
pos
.
row
 = 3;

987 
‰ames
[1].
ôems
[2].
pos
.
cﬁ
 = 1;

989 
	`£t_ime_°©us
(
INPUT_LOW_CASE
);

990 
	`˛ór_ˇche
();

992 
num
 = 
pos
 = 
∑ge
 = 0;

995 
num
 = 0;Çum < 
gp_≠p_öfo
->
fis_ty≥_num
;Çum++) {

996 i‡(
gp_≠p_öfo
->
fis_ty≥
[
num
].
ödex
 =gp_≠p_öfo->
èx_ödex
[
pos
])

1000 
	`•rötf
(
‰ames
[0].
ôems
[0].
tôÀ
, "Á®éÁßçÁ®éÁõÆ(%d)", 
pos
 + 1);

1001 
	`•rötf
(
‰ames
[0].
ôems
[1].
tôÀ
, "%s%d", "Á®éÁßçÁ®éÁõÆÂºïÁ¥¢Âè∑", 
gp_≠p_öfo
->
èx_ödex
[
pos
]);

1002 
	`•rötf
(
‰ames
[1].
ôems
[0].
tôÀ
, "Á®éÁßçÁ®éÁõÆ(%d)", 
pos
 + 1);

1005 i‡(
num
 =
gp_≠p_öfo
->
fis_ty≥_num
) {

1006 
	`•rötf
(
‰ames
[0].
ôems
[2].
tôÀ
, "ÁªèËê•È°πÁõÆ‰ø°ÊÅØÔºöÊú™ÊâæÂà∞");

1008 
	`mem£t
(
‰ames
[0].
ôems
[3].
tôÀ
, 0, 
MAX_TITLE_LEN
);

1009 
	`mem£t
(
‰ames
[1].
ôems
[0].
tôÀ
, 0, 
MAX_TITLE_LEN
);

1010 
	`mem£t
(
‰ames
[1].
ôems
[1].
tôÀ
, 0, 
MAX_TITLE_LEN
);

1011 
	`mem£t
(
‰ames
[1].
ôems
[2].
tôÀ
, 0, 
MAX_TITLE_LEN
);

1013 
	`bcd_to_°r
(
gp_≠p_öfo
->
fis_ty≥
[
num
].
ôem_code
, 
buf
, 4);

1014 
	`•rötf
(
‰ames
[0].
ôems
[2].
tôÀ
, "ÁªèËê•È°πÁõÆ‰ª£Á†Å: %s", 
buf
);

1015 
	`•rötf
(
‰ames
[0].
ôems
[3].
tôÀ
, "%s%.2f%s", "Á®éÁéáÔºö",

1016 
gp_≠p_öfo
->
fis_ty≥
[
num
].
èx_øã
/100.0, "%");

1018 
	`•rötf
(
‰ames
[1].
ôems
[1].
tôÀ
, "%s%s", "‰∏≠ÊñáÂêçÂ≠ó:",

1019 
	`°æí
(
gp_≠p_öfo
->
fis_ty≥
[
num
].
ôem_˙_«me
Ë> 0 ? gp_≠p_öfo->fis_ty≥[num].
ôem_í_«me
 : "Êó†");

1020 
	`•rötf
(
‰ames
[1].
ôems
[2].
tôÀ
, "%s%s", "Ëã±ÊñáÂêçÂ≠ó:",

1021 
	`°æí
(
gp_≠p_öfo
->
fis_ty≥
[
num
].
ôem_˙_«me
Ë> 0 ? gp_≠p_öfo->fis_ty≥[num].
ôem_í_«me
 : "Êó†");

1024 
show_èx
:

1025 
	`show_sim∂e_‰ame
(&
‰ames
[
∑ge
]);

1026 
key
 = 
	`gë_keycode
();

1027 
key
) {

1028 
BACK
:

1029  
SUCCESS
;

1032 
ENTER
:

1033  
SUCCESS
;

1036 
ESC
:

1037  
SUCCESS
;

1040 
UP
:

1041 i‡(
∑ge
 > 0)

1042 
∑ge
 --;

1043 
show_èx
;

1047 
DOWN
:

1048 i‡(
∑ge
 < 1)

1049 
∑ge
 ++;

1050 
show_èx
;

1054 
RIGHT
:

1055 i‡(
pos
 < 
gp_≠p_öfo
->
fis_ty≥_num
 - 1)

1056 
pos
 ++;

1058 
show_èx
;

1062 
LEFT
:

1063 i‡(
pos
 > 0)

1064 
pos
 --;

1066 
show_èx
;

1076  
FAIL
;

1077 
	}
}

1084 
	$cmd_võw_¥öt_öfo
()

1086 
¥öt_sys
 *Öröt_sy†
	`gë_¥öt_sys
();

1088 
	`show_¥öt_öfo
(
¥öt_sys
->
¥öt_ty≥
);

1090 
	`gë_™ykey
();

1091  
SUCCESS
;

1092 
	}
}

1099 
	$cmd_sw_upd©e_by_u¨t
()

1104 
	`di•œy_w¨n
("ËØ•ÂäüËÉΩÂ∞öÊú™ÂÆåÂñÑÔºÅ");

1106  
SUCCESS
;

1107 
	}
}

1113 
	$cmd_sw_upd©e_by_√tw‹k
()

1118 
	`di•œy_w¨n
("ËØ•ÂäüËÉΩÂ∞öÊú™ÂÆåÂñÑÔºÅ");

1120  
SUCCESS
;

1121 
	}
}

1127 
	$cmd_sw_upd©e_by_usb
()

1132 
	`di•œy_w¨n
("ËØ•ÂäüËÉΩÂ∞öÊú™ÂÆåÂñÑÔºÅ");

1134  
SUCCESS
;

1135 
	}
}

1141 
	$cmd_sw_upd©e_£t_keycode
()

1146 
	`di•œy_w¨n
("ËØ•ÂäüËÉΩÂ∞öÊú™ÂÆåÂñÑÔºÅ");

1148  
SUCCESS
;

1149 
	}
}

1152 
	$cmd_sy°em_£tup
()

1157 
	`di•œy_w¨n
("ÂäüËÉΩÂ∞öÊú™ÂÆåÂñÑÔºÅ");

1159  
SUCCESS
;

1160 
	}
}

1167 
	$cmd_võw_d©e_time
()

1169 
ªt
;

1170 
uöt
 
y
, 
m
, 
d
;

1171 
gªg_time
 
now
;

1172 
bcd_d©e
 
today
;

1173 
π_›î©e
 *
π_›s
 = 
	`gë_π_›s
();

1174 
sim∂e_‰ame
 
‰ame
;

1176 
	`mem£t
(&
‰ame
, 0, (frame));

1177 
	`mem£t
(&
now
, 0, (now));

1178 
	`mem£t
(&
today
, 0, (today));

1180 
ªt
 = 
π_›s
->
	`gë_cur_d©e
(&
today
);

1181 i‡(
ªt
 !
SUCCESS
) {

1182 
	`di•œy_îr_msg
(
ªt
);

1183  
FAIL
;

1186 
	`bcd_to_gªg
(&
today
, &
y
, &
m
, &
d
);

1188 
ªt
 = 
π_›s
->
	`gë_cur_time
(&
now
);

1189 i‡(
ªt
 !
SUCCESS
) {

1190 
	`di•œy_îr_msg
(
ªt
);

1191  
FAIL
;

1194 
‰ame
.
ôem_num
 = 3;

1195 
‰ame
.
ôems
[0].
pos
.
row
 = 1;

1196 
‰ame
.
ôems
[0].
pos
.
cﬁ
 = 4;

1197 
	`•rötf
(
‰ame
.
ôems
[0].
tôÀ
, "ÂΩìÂâçÊó•ÊúüÊó∂Èó¥");

1199 
‰ame
.
ôems
[1].
pos
.
row
 = 2;

1200 
‰ame
.
ôems
[1].
pos
.
row
 = 1;

1201 
	`•rötf
(
‰ame
.
ôems
[1].
tôÀ
, "ÂΩìÂâçÊó•ÊúüÔºö%d-%02d-%02d", 
y
, 
m
, 
d
);

1203 
‰ame
.
ôems
[2].
pos
.
row
 = 4;

1204 
‰ame
.
ôems
[2].
pos
.
row
 = 1;

1205 
	`•rötf
(
‰ame
.
ôems
[2].
tôÀ
, "ÂΩìÂâçÊó∂Èó¥:%d:%02d:%02d", 
now
.
hour
,Çow.
mö
,Çow.
£c
);

1207 
	`˛ór_ˇche
();

1208 
	`gë_keycode
();

1210  
SUCCESS
;

1211 
	}
}

	@fiscal/tax_card_base.c

9 
	~<uni°d.h
>

10 
	~<°dlib.h
>

11 
	~<sys/ty≥s.h
>

12 
	~<sys/°©.h
>

13 
	~<f˙é.h
>

14 
	~<°rög.h
>

15 
	~<î∫o.h
>

16 
	~<as£π.h
>

18 
	~"c⁄fig.h
"

19 
	~"comm⁄.h
"

20 
	~"îr‹.h
"

22 
	~"èx_cmd.h
"

23 
	~"èx_sy°em.h
"

24 
	~"èx_ˇrd_ba£.h
"

26 
	~"u¨t.h
"

31 
	gˇrd_dev
 = 0;

38 
	$ˇrd_debug
(
uch¨
 * 
buf
, 
buf_size
)

40 
i
;

42 
	`debug_msg
("\nBuffer : \n");

43 
i
 = 0; i < 
buf_size
; i ++){

44 
	`debug_msg
("%02x ", 
buf
[
i
]);

46 
	`debug_msg
("\nEnd\n");

48  
SUCCESS
;

49 
	}
}

58 
ˇrd_£nd_buf
 *
	g£nd_buf
;

59 
ˇrd_£nd_buf
 *
	$gë_£nd_buf
()

61 i‡(
£nd_buf
 !
NULL
)

62  
£nd_buf
;

64 
£nd_buf
 = (
ˇrd_£nd_buf
 *)
	`mÆloc
((card_send_buf));

65 i‡(!
£nd_buf
) {

66 
îr_num
 = -
ETAX_NOMEM
;

67  
NULL
;

70  
£nd_buf
;

71 
	}
}

73 
ˇrd_ªs_buf
 * 
	gªs_buf
;

74 
ˇrd_ªs_buf
 * 
	$gë_ªs_buf
()

76 i‡(
ªs_buf
 !
NULL
)

77  
ªs_buf
;

79 
ªs_buf
 = (
ˇrd_ªs_buf
 *)
	`mÆloc
((card_res_buf));

80 i‡(!
ªs_buf
) {

81 
îr_num
 = -
ETAX_NOMEM
;

82  
NULL
;

85  
ªs_buf
;

86 
	}
}

95 
	$fûl_chksum
(
ˇrd_£nd_buf
 *
£nd_buf
)

97 i‡(!
£nd_buf
)

98  -
ETAX_NUL_SEND_BUF
;

100 
uch¨
 *
±r
;

101 
±r
 = (
uch¨
 *)
£nd_buf
;

103 
buf_size
;

104 
i
, 
sum
 = 0;

106 #ifde‡
CONFIG_CMDHEAD_4BYTE


107 
buf_size
 = 
£nd_buf
->
cmd_Àn
 - 1 + 4;

109 
buf_size
 = 
£nd_buf
->
cmd_Àn
 - 1 + 1;

112 
i
 = 0; i <
buf_size
; i++) {

113 
sum
 +*
±r
;

114 
±r
++;

117  (
uch¨
)
sum
;

118 
	}
}

127 
	$check_ªs_d©a
(
uch¨
 *
buf
, 
size
)

129 
i
, 
sum
;

130 
uch¨
 *
±r
 = 
buf
;

132 i‡(!
ªs_buf
)

133  -
ETAX_NUL_RES_BUF
;

135 
sum
 = 0;

136 
i
 = 0; i< 
size
 -1; i++) {

137 
sum
 +*
±r
;

138 
±r
++;

141 i‡(((
uch¨
)
sum
Ë=
buf
[
size
 - 1])

142  
SUCCESS
;

144  
FAIL
;

145 
	}
}

156 
ˇrd_£nd_buf
 * 
	$¥ï¨e_cmd
(
CARD
, 
CMD
, 
size
,

157 
≠du_cmd_£nd
 * 
cmd_buf
)

159 
ˇrd_£nd_buf
 *
£nd_buf
;

161 
£nd_buf
 = 
	`gë_£nd_buf
();

162 
	`mem£t
(
£nd_buf
, 0, (
ˇrd_£nd_buf
));

164 
CARD
)

166 
FISCAL_CARD
:

167 
£nd_buf
->
cmd_ty≥
 = 0x50;

168 
¥ï¨e
;

171 
USER_CARD
:

172 
£nd_buf
->
cmd_ty≥
 = 0xF0;

173 
¥ï¨e
;

177 
îr_num
 = -
ETAX_BAD_CARD_TYPE
;

178  
NULL
;

182 
¥ï¨e
:

183 
£nd_buf
->
cmd_hód
[0] = 0x02;

185 #ifde‡
CONFIG_CMDHEAD_4BYTE


186 
£nd_buf
->
cmd_hód
[1] = 0x55;

187 
£nd_buf
->
cmd_hód
[2] = 0xAA;

188 
£nd_buf
->
cmd_hód
[3] = 0x96;

191 
CMD
)

193 
CARD_OS_CMD
:

194 i‡(!
cmd_buf
 || 
size
 == 0) {

195 
îr_num
 = -
ETAX_BADAPDU
;

196  
NULL
;

199 
£nd_buf
->
cmd_Àn
 = 
size
 + 2;

200 
£nd_buf
->
cmd_ty≥
 += 0;

201 
£nd_buf
->
cmd_buf
 = *cmd_buf;

202 
£nd_buf
->
chksum
 = 
	`fûl_chksum
(send_buf);

205 
CARD_RST_CMD
:

206 
£nd_buf
->
cmd_Àn
 = 2;

207 
£nd_buf
->
cmd_ty≥
 += 1;

208 
£nd_buf
->
chksum
 = 
	`fûl_chksum
(send_buf);

211 
CARD_PWR_ON_CMD
:

212 
£nd_buf
->
cmd_Àn
 = 2;

213 
£nd_buf
->
cmd_ty≥
 += 2;

214 
£nd_buf
->
chksum
 = 
	`fûl_chksum
(send_buf);

217 
CARD_PWR_OFF_CMD
:

218 
£nd_buf
->
cmd_Àn
 = 2;

219 
£nd_buf
->
cmd_ty≥
 += 3;

220 
£nd_buf
->
chksum
 = 
	`fûl_chksum
(send_buf);

224 
îr_num
 = -
ETAX_BAD_CMD_TYPE
;

225  
NULL
;

229  
£nd_buf
;

230 
	}
}

239 
	$ˇrd_£nd_cmd
(
ˇrd_£nd_buf
 *
£nd_buf
)

242 i‡(
ˇrd_dev
 == 0)

243  -
ETAX_CARD_NOT_INIT
;

245 i‡(!
£nd_buf
)

246  -
ETAX_NUL_SEND_BUF
;

248 
uch¨
 *
±r
;

249 
±r
 = (
uch¨
 *)
£nd_buf
;

251 
ªt
, 
buf_size
;

252 
uch¨
 
buf
[
MAX_WRBUF_SIZE
];

254 #ifde‡
CONFIG_CMDHEAD_4BYTE


255 
buf_size
 = 
£nd_buf
->
cmd_Àn
 + 4;

257 
buf_size
 = 
£nd_buf
->
cmd_Àn
 + 1;

264 
i
;

265 
i
 = 0; i < 
buf_size
; i++) {

266 
buf
[
i
] = *
±r
++;

268 
buf
[
i
] = 
£nd_buf
->
chksum
;

270 #ifde‡
CONFIG_CARD_DEBUG


271 
	`ˇrd_debug
(
buf
, 
buf_size
 + 1);

278 
ªt
 = 
	`wrôe_u¨t
(
ˇrd_dev
, 
buf
, 
buf_size
 + 1);

279 i‡(
ªt
 !
buf_size
 + 1) {

280 
	`ˇrd_debug
(
buf
, 
buf_size
 + 1);

281  -
ETAX_WR_CARD
;

287  
buf_size
;

288 
	}
}

295 
	$ˇrd_ªgë_ªs
(
ˇrd_ªs_buf
 * 
ªs_buf
)

297 
ªt
;

298 
buf_size
;

300 
uch¨
 
buf
[
MAX_WRBUF_SIZE
];

302 
	`mem£t
(
ªs_buf
, 0, (*res_buf));

303 
	`mem£t
(
buf
, 0, 
MAX_WRBUF_SIZE
);

305 
buf
[0] = 0x02;

306 
buf
[1] = 0x55;

307 
buf
[2] = 0xAA;

308 
buf
[3] = 0x96;

309 
buf
[4] = 0x02;

310 
buf
[5] = 0xFA;

311 
i
, 
sum
;

312 
i
 = 0, 
sum
 = 0; i < 6; i++) {

313 
sum
 +
buf
[
i
];

315 
buf
[6] = 
sum
;

320 
ªt
 = 
	`wrôe_u¨t
(
ˇrd_dev
, 
buf
, 7);

321 i‡(
ªt
 != 7)

322  -
ETAX_WR_CARD
;

324 
buf_size
 = 2;

325 
ªt
 = 
	`ªad_u¨t
(
ˇrd_dev
, 
buf
, 
buf_size
);

326 i‡(
ªt
 !
SUCCESS
) {

327  -
ETAX_RD_CARD
;

330 i‡(
buf
[0] != 0x50)

331  -
ETAX_BAD_RES_HEAD
;

333 
ªs_buf
->
cmd_hód
 = 
buf
[0];

334 
ªs_buf
->
cmd_Àn
 = 
buf
[1];

336 
buf_size
 = 
ªs_buf
->
cmd_Àn
;

337 
ªt
 = 
	`ªad_u¨t
(
ˇrd_dev
, 
buf
 + 2, 
buf_size
);

338 i‡(
ªt
 !
SUCCESS
) {

339  -
ETAX_RD_CARD
;

342 i‡(
buf
[2] != 0XFA) {

343 
	`ˇrd_debug
(
buf
, 
buf_size
 + 2);

345 
buf
[2]) {

347  -
ETAX_CARD_NOT_IN
;

357  -
ETAX_CARD_ERROR
;

361  -
ETAX_UNKNOW_ERR
;

366 
ªs_buf
->
cmd_ty≥
 = 
buf
[2];

368 #ifde‡
CONFIG_CARD_DEBUG


369 
	`ˇrd_debug
(
buf
, 
buf_size
 + 2);

377 i‡(
ªs_buf
->
cmd_Àn
 == 0x02) {

378 
ªs_buf
->
chksum
 = 
buf
[3];

379 
checksum
;

383 
buf_size
 = 
ªs_buf
->
cmd_Àn
 - 4;

384 
	`mem˝y
(
ªs_buf
->ªs_buf.
d©a
, 
buf
 + 3, 
buf_size
);

385 
ªs_buf
->ªs_buf.
sw1
 = 
buf
[
buf_size
 + 3];

386 
ªs_buf
->ªs_buf.
sw2
 = 
buf
[
buf_size
 + 4];

387 
ªs_buf
->
chksum
 = 
buf
[
buf_size
 + 5];

389 
checksum
:

391 
ªt
 = 
	`check_ªs_d©a
(
buf
, 
ªs_buf
->
cmd_Àn
 + 2);

392 i‡(
ªt
 !
SUCCESS
) {

393 
	`ˇrd_debug
(
buf
, 
ªs_buf
->
cmd_Àn
 + 2);

394  -
ETAX_BAD_CHKSUM
;

397  
ªs_buf
->
cmd_Àn
 + 1;

398 
	}
}

406 
	$ˇrd_gë_ªs
(
ˇrd_ªs_buf
 * 
ªs_buf
)

408 
ªt
;

409 
åy_cou¡
;

410 
buf_size
;

411 
uch¨
 
buf
[
MAX_WRBUF_SIZE
];

413 i‡(
ˇrd_dev
 == 0)

414  -
ETAX_CARD_NOT_INIT
;

416 i‡(!
ªs_buf
)

417  -
ETAX_NUL_RES_BUF
;

419 
	`mem£t
(
ªs_buf
, 0, (*res_buf));

420 
	`mem£t
(
buf
, 0, 
MAX_WRBUF_SIZE
);

424 
buf_size
 = 2;

425 
åy_cou¡
 = 2;

426 
ªt
 = 
	`ªad_u¨t
(
ˇrd_dev
, 
buf
, 
buf_size
);

427 i‡(
ªt
 !
SUCCESS
) {

428 
åy_cou¡
 > 0) {

429 
ªt
 = 
	`ˇrd_ªgë_ªs
(
ªs_buf
);

430 i‡(
ªt
 =
SUCCESS
)

432 
åy_cou¡
 --;

435  
ªt
;

438 i‡(
buf
[0] != 0x05)

439  -
ETAX_BAD_RES_HEAD
;

441 
ªs_buf
->
cmd_hód
 = 
buf
[0];

442 
ªs_buf
->
cmd_Àn
 = 
buf
[1];

444 
buf_size
 = 
ªs_buf
->
cmd_Àn
;

445 
åy_cou¡
 = 2;

446 
ªt
 = 
	`ªad_u¨t
(
ˇrd_dev
, 
buf
 + 2, 
buf_size
);

447 i‡(
ªt
 !
SUCCESS
) {

448 
åy_cou¡
 > 0) {

449 
ªt
 = 
	`ˇrd_ªgë_ªs
(
ªs_buf
);

450 i‡(
ªt
 =
SUCCESS
)

452 
åy_cou¡
 --;

455  
ªt
;

458 i‡(
buf
[2] !
FC_OS_CMD
 && buf[2] !
UC_OS_CMD
) {

459 
	`ˇrd_debug
(
buf
, 
buf_size
 + 2);

461 
buf
[2]) {

463  -
ETAX_CARD_NOT_IN
;

473  -
ETAX_CARD_ERROR
;

477  -
ETAX_UNKNOW_ERR
;

482 
ªs_buf
->
cmd_ty≥
 = 
buf
[2];

484 #ifde‡
CONFIG_CARD_DEBUG


485 
	`ˇrd_debug
(
buf
, 
buf_size
 + 2);

492 i‡(
ªs_buf
->
cmd_Àn
 == 0x02) {

493 
ªs_buf
->
chksum
 = 
buf
[3];

494 
checksum
;

498 
buf_size
 = 
ªs_buf
->
cmd_Àn
 - 4;

499 
	`mem˝y
(
ªs_buf
->ªs_buf.
d©a
, 
buf
 + 3, 
buf_size
);

500 
ªs_buf
->ªs_buf.
sw1
 = 
buf
[
buf_size
 + 3];

501 
ªs_buf
->ªs_buf.
sw2
 = 
buf
[
buf_size
 + 4];

502 
ªs_buf
->
chksum
 = 
buf
[
buf_size
 + 5];

504 
checksum
:

506 
ªt
 = 
	`check_ªs_d©a
(
buf
, 
ªs_buf
->
cmd_Àn
 + 2);

507 i‡(
ªt
 !
SUCCESS
) {

508 
	`ˇrd_debug
(
buf
, 
ªs_buf
->
cmd_Àn
 + 2);

509  -
ETAX_BAD_CHKSUM
;

512  
ªs_buf
->
cmd_Àn
 + 1;

513 
	}
}

523 
	$ˇrd_£À˘_fûe_by_df
(
CARD
, c⁄° *
fûe_«me
)

525 
ªt
;

526 
cmd_size
;

528 i‡(!
fûe_«me
)

529  -
ETAX_WR_FILENAME
;

531 
≠du_cmd_£nd
 
cmd_buf
;

532 
ˇrd_£nd_buf
 *
£nd_buf
;

533 
ˇrd_ªs_buf
 *
ªs_buf
;

535 
cmd_buf
.
CLA
 = 0x00;

536 
cmd_buf
.
INS
 = 0xA4;

537 
cmd_buf
.
P1
 = 0x04;

538 
cmd_buf
.
P2
 = 0x00;

539 
cmd_buf
.
c⁄d_body
[0] = 
	`°æí
(
fûe_«me
);

540 
	`mem˝y
(
cmd_buf
.
c⁄d_body
 + 1, 
fûe_«me
, cmd_buf.cond_body[0]);

541 
cmd_size
 = 
cmd_buf
.
c⁄d_body
[0] + 5;

543 
£nd_buf
 = 
	`¥ï¨e_cmd
(
CARD
, 
CARD_OS_CMD
, 
cmd_size
, &
cmd_buf
);

544 i‡(
£nd_buf
 =
NULL
)

545  -
ETAX_NUL_SEND_BUF
;

547 
ªt
 = 
	`ˇrd_£nd_cmd
(
£nd_buf
);

548 i‡(
ªt
 < 0)

549  
ªt
;

551 
ªs_buf
 = 
	`gë_ªs_buf
();

552 
ªt
 = 
	`ˇrd_gë_ªs
(
ªs_buf
);

553 i‡(
ªt
 < 0)

554  
ªt
;

559 i‡(!(
ªs_buf
->ªs_buf.
sw1
 =0x90 &&Ñes_buf->ªs_buf.
sw2
 == 0x00)) {

560 i‡(
ªs_buf
->ªs_buf.
sw1
 =0x6A &&Ñes_buf->ªs_buf.
sw2
 == 0x81)

561  -
ETAX_CARD_PIN_LOCK
;

563 i‡(
ªs_buf
->ªs_buf.
sw1
 =0x6A &&Ñes_buf->ªs_buf.
sw2
 == 0x82)

564  -
ETAX_NO_CARD_FILE
;

566  -
ETAX_BAD_SW
;

569 
	`debug_msg
("\nSelect File By DF SUCCESS\n");

571  
SUCCESS
;

572 
	}
}

575 
	$ˇrd_£À˘_fûe_by_id
(
CARD
, 
fûe_id
)

577 
ªt
;

578 
cmd_size
;

580 
≠du_cmd_£nd
 
cmd_buf
;

581 
ˇrd_£nd_buf
 *
£nd_buf
;

582 
ˇrd_ªs_buf
 *
ªs_buf
;

584 
cmd_buf
.
CLA
 = 0x00;

585 
cmd_buf
.
INS
 = 0xA4;

586 
cmd_buf
.
P1
 = 0x00;

587 
cmd_buf
.
P2
 = 0x00;

588 
cmd_buf
.
c⁄d_body
[0] = 2;

589 
cmd_buf
.
c⁄d_body
[1] = (
uch¨
)(
fûe_id
 >> 8);

590 
cmd_buf
.
c⁄d_body
[2] = (
uch¨
)(
fûe_id
);

591 
cmd_size
 = 
cmd_buf
.
c⁄d_body
[0] + 5;

593 
£nd_buf
 = 
	`¥ï¨e_cmd
(
CARD
, 
CARD_OS_CMD
, 
cmd_size
, &
cmd_buf
);

594 i‡(
£nd_buf
 =
NULL
)

595  -
ETAX_NUL_SEND_BUF
;

597 
ªt
 = 
	`ˇrd_£nd_cmd
(
£nd_buf
);

598 i‡(
ªt
 < 0)

599  
ªt
;

601 
ªs_buf
 = 
	`gë_ªs_buf
();

602 
ªt
 = 
	`ˇrd_gë_ªs
(
ªs_buf
);

603 i‡(
ªt
 < 0)

604  
ªt
;

609 i‡(!(
ªs_buf
->ªs_buf.
sw1
 =0x90 &&Ñes_buf->ªs_buf.
sw2
 == 0x00)) {

610 i‡(
ªs_buf
->ªs_buf.
sw1
 =0x6A &&Ñes_buf->ªs_buf.
sw2
 == 0x81)

611  -
ETAX_CARD_PIN_LOCK
;

612 i‡(
ªs_buf
->ªs_buf.
sw1
 =0x6A &&Ñes_buf->ªs_buf.
sw2
 == 0x82)

613  -
ETAX_NO_CARD_FILE
;

615  -
ETAX_BAD_SW
;

618 
	`debug_msg
("\nSelect File By ID SUCCESS\n");

620  
SUCCESS
;

621 
	}
}

632 
	$ˇrd_ªad_bö¨y
(
CARD
, 
off£t
, 
size
, 
uch¨
 *
ªs
)

634 
ªt
;

635 
cmd_size
;

637 
	`as£π
(
ªs_buf
 !
NULL
);

639 
≠du_cmd_£nd
 
cmd_buf
;

640 
ˇrd_£nd_buf
 *
£nd_buf
;

641 
ˇrd_ªs_buf
 *
ªs_buf
;

646 
cmd_buf
.
CLA
 = 0x00;

647 
cmd_buf
.
INS
 = 0xB0;

648 
off£t
 &= 0xFFFF;

649 
cmd_buf
.
P1
 = (
uch¨
)(
off£t
 >> 8);

650 
cmd_buf
.
P2
 = (
uch¨
)
off£t
;

651 
cmd_buf
.
c⁄d_body
[0] = (
uch¨
)
size
;

652 
cmd_size
 = 5;

654 
£nd_buf
 = 
	`¥ï¨e_cmd
(
CARD
, 
CARD_OS_CMD
, 
cmd_size
, &
cmd_buf
);

655 i‡(
£nd_buf
 =
NULL
)

656  -
ETAX_NUL_SEND_BUF
;

658 
ªt
 = 
	`ˇrd_£nd_cmd
(
£nd_buf
);

659 i‡(
ªt
 < 0)

660  
ªt
;

662 
ªs_buf
 = 
	`gë_ªs_buf
();

663 
ªt
 = 
	`ˇrd_gë_ªs
(
ªs_buf
);

664 i‡(
ªt
 < 0)

665  
ªt
;

671 i‡(!(
ªs_buf
->ªs_buf.
sw1
 =0x90 &&Ñes_buf->ªs_buf.
sw2
 == 0x00)) {

672 i‡(
ªs_buf
->ªs_buf.
sw1
 =0x6A &&Ñes_buf->ªs_buf.
sw2
 == 0x82)

673  -
ETAX_NO_CARD_FILE
;

675  -
ETAX_BAD_SW
;

679 
	`mem˝y
(
ªs
, 
ªs_buf
->ªs_buf.
d©a
, 
size
);

681 
	`debug_msg
("\nRead Binnary SUCCESS\n");

683  
SUCCESS
;

684 
	}
}

695 
	$ˇrd_upd©e_bö¨y
(
CARD
, 
off£t
, 
size
, 
uch¨
 *
ªs
)

697 
ªt
;

698 
cmd_size
;

700 
	`as£π
(
ªs_buf
 !
NULL
);

702 
≠du_cmd_£nd
 
cmd_buf
;

703 
ˇrd_£nd_buf
 *
£nd_buf
;

704 
ˇrd_ªs_buf
 *
ªs_buf
;

709 
cmd_buf
.
CLA
 = 0x00;

710 
cmd_buf
.
INS
 = 0xD6;

711 
off£t
 &= 0xFFFF;

712 
cmd_buf
.
P1
 = (
uch¨
)(
off£t
 >> 8);

713 
cmd_buf
.
P2
 = (
uch¨
)
off£t
;

714 
cmd_buf
.
c⁄d_body
[0] = (
uch¨
)
size
;

715 
	`mem˝y
(
cmd_buf
.
c⁄d_body
 + 1, 
ªs
, 
size
);

716 
cmd_size
 = 5 + 
size
;

718 
£nd_buf
 = 
	`¥ï¨e_cmd
(
CARD
, 
CARD_OS_CMD
, 
cmd_size
, &
cmd_buf
);

719 i‡(
£nd_buf
 =
NULL
)

720  -
ETAX_NUL_SEND_BUF
;

722 
ªt
 = 
	`ˇrd_£nd_cmd
(
£nd_buf
);

723 i‡(
ªt
 < 0)

724  
ªt
;

726 
ªs_buf
 = 
	`gë_ªs_buf
();

727 
ªt
 = 
	`ˇrd_gë_ªs
(
ªs_buf
);

728 i‡(
ªt
 < 0)

729  
ªt
;

735 i‡(!(
ªs_buf
->ªs_buf.
sw1
 =0x90 &&Ñes_buf->ªs_buf.
sw2
 == 0x00)) {

736 i‡(
ªs_buf
->ªs_buf.
sw1
 =0x6A &&Ñes_buf->ªs_buf.
sw2
 == 0x82)

737  -
ETAX_NO_CARD_FILE
;

739  -
ETAX_BAD_SW
;

742 
	`debug_msg
("\nUpdate Binnary Done\n");

744  
SUCCESS
;

745 
	}
}

755 
	$ˇrd_ªad_ªc‹d
(
CARD
, 
uch¨
 
ªc‹d_nb
, 
size
, uch¨ *
ªs
)

757 
ªt
;

758 
cmd_size
;

760 
≠du_cmd_£nd
 
cmd_buf
;

761 
ˇrd_£nd_buf
 *
£nd_buf
;

762 
ˇrd_ªs_buf
 *
ªs_buf
;

764 
cmd_buf
.
CLA
 = 0x00;

765 
cmd_buf
.
INS
 = 0xB2;

766 
cmd_buf
.
P1
 = 
ªc‹d_nb
;

767 
cmd_buf
.
P2
 = 0x04;

768 
cmd_buf
.
c⁄d_body
[0] = (
uch¨
)
size
;

769 
cmd_size
 = 5;

771 
£nd_buf
 = 
	`¥ï¨e_cmd
(
CARD
, 
CARD_OS_CMD
, 
cmd_size
, &
cmd_buf
);

772 i‡(
£nd_buf
 =
NULL
)

773  -
ETAX_NUL_SEND_BUF
;

775 
ªt
 = 
	`ˇrd_£nd_cmd
(
£nd_buf
);

776 i‡(
ªt
 < 0)

777  
ªt
;

779 
ªs_buf
 = 
	`gë_ªs_buf
();

780 
ªt
 = 
	`ˇrd_gë_ªs
(
ªs_buf
);

781 i‡(
ªt
 < 0)

782  
ªt
;

788 i‡(!(
ªs_buf
->ªs_buf.
sw1
 =0x90 &&Ñes_buf->ªs_buf.
sw2
 == 0x00)) {

789 i‡(
ªs_buf
->ªs_buf.
sw1
 =0x6A &&Ñes_buf->ªs_buf.
sw2
 == 0x83)

790  -
ETAX_NO_CARD_REC
;

791 i‡(
ªs_buf
->ªs_buf.
sw1
 =0x6A &&Ñes_buf->ªs_buf.
sw2
 == 0x86)

792  -
ETAX_NO_CARD_REC
;

794  -
ETAX_BAD_SW
;

797 
	`mem˝y
(
ªs
, 
ªs_buf
->ªs_buf.
d©a
, 
size
);

799 
	`debug_msg
("\nRead Record SUCCESS\n");

801  
SUCCESS
;

802 
	}
}

812 
	$ˇrd_upd©e_ªc‹d
(
CARD
, 
uch¨
 
ªc‹d_nb
, 
size
, uch¨ *
d©a
)

814 
ªt
;

815 
cmd_size
;

817 
≠du_cmd_£nd
 
cmd_buf
;

818 
ˇrd_£nd_buf
 *
£nd_buf
;

819 
ˇrd_ªs_buf
 *
ªs_buf
;

821 
cmd_buf
.
CLA
 = 0x00;

822 
cmd_buf
.
INS
 = 0xDC;

823 
cmd_buf
.
P1
 = 
ªc‹d_nb
;

824 
cmd_buf
.
P2
 = 0x04;

825 
cmd_buf
.
c⁄d_body
[0] = (
uch¨
)
size
;

826 
	`mem˝y
(
cmd_buf
.
c⁄d_body
 + 1, 
d©a
, 
size
);

827 
cmd_size
 = 5 + 
size
;

829 
£nd_buf
 = 
	`¥ï¨e_cmd
(
CARD
, 
CARD_OS_CMD
, 
cmd_size
, &
cmd_buf
);

830 i‡(
£nd_buf
 =
NULL
)

831  -
ETAX_NUL_SEND_BUF
;

833 
ªt
 = 
	`ˇrd_£nd_cmd
(
£nd_buf
);

834 i‡(
ªt
 < 0)

835  
ªt
;

837 
ªs_buf
 = 
	`gë_ªs_buf
();

838 
ªt
 = 
	`ˇrd_gë_ªs
(
ªs_buf
);

839 i‡(
ªt
 < 0)

840  
ªt
;

846 i‡(!(
ªs_buf
->ªs_buf.
sw1
 =0x90 &&Ñes_buf->ªs_buf.
sw2
 == 0x00)) {

847 i‡(
ªs_buf
->ªs_buf.
sw1
 =0x6A &&Ñes_buf->ªs_buf.
sw2
 == 0x83)

848  -
ETAX_NO_CARD_REC
;

850  -
ETAX_BAD_SW
;

853 
	`debug_msg
("\nUpdate Record SUCCESS\n");

855  
SUCCESS
;

856 
	}
}

861 
	$ˇrd_öã∫Æ_authítiˇti⁄
(
CARD
, 
uch¨
 
key_id
, uch¨ *
£ª˘
,

862 
uch¨
 *
ªs
)

864 
ªt
;

865 
cmd_size
;

866 
≠du_cmd_£nd
 
cmd_buf
;

867 
ˇrd_£nd_buf
 *
£nd_buf
;

868 
ˇrd_ªs_buf
 *
ªs_buf
;

870 
cmd_buf
.
CLA
 = 0x00;

871 
cmd_buf
.
INS
 = 0x88;

872 
cmd_buf
.
P1
 = 0x00;

873 
cmd_buf
.
P2
 = 
key_id
;

874 
cmd_buf
.
c⁄d_body
[0] = 0x08;

875 
	`mem˝y
(
cmd_buf
.
c⁄d_body
 + 1, 
£ª˘
, 8);

876 
cmd_buf
.
c⁄d_body
[9] = 0x08;

877 
cmd_size
 = 6 + 0x08;

879 
£nd_buf
 = 
	`¥ï¨e_cmd
(
CARD
, 
CARD_OS_CMD
, 
cmd_size
, &
cmd_buf
);

880 i‡(
£nd_buf
 =
NULL
)

881  -
ETAX_NUL_SEND_BUF
;

883 
ªt
 = 
	`ˇrd_£nd_cmd
(
£nd_buf
);

884 i‡(
ªt
 < 0)

885  
ªt
;

887 
ªs_buf
 = 
	`gë_ªs_buf
();

888 
ªt
 = 
	`ˇrd_gë_ªs
(
ªs_buf
);

889 i‡(
ªt
 < 0)

890  
ªt
;

895 i‡(!(
ªs_buf
->ªs_buf.
sw1
 =0x90 &&Ñes_buf->ªs_buf.
sw2
 == 0x00)) {

896 i‡(!(
ªs_buf
->ªs_buf.
sw1
 =0x60 &&Ñes_buf->ªs_buf.
sw2
 == 0x90))

897  -
ETAX_BAD_SW
;

900 
	`mem˝y
(
ªs
, 
ªs_buf
->ªs_buf.
d©a
, 8);

902 
	`debug_msg
("\nINTERNAL AUTH SUCCESS\n");

903  
SUCCESS
;

904 
	}
}

910 
	$ˇrd_exã∫Æ_authítiˇti⁄
(
CARD
, 
uch¨
 
key_id
, uch¨ *
£ª˘
)

912 
ªt
;

913 
cmd_size
;

915 
≠du_cmd_£nd
 
cmd_buf
;

916 
ˇrd_£nd_buf
 *
£nd_buf
;

917 
ˇrd_ªs_buf
 *
ªs_buf
;

919 
cmd_buf
.
CLA
 = 0x00;

920 
cmd_buf
.
INS
 = 0x82;

921 
cmd_buf
.
P1
 = 0x00;

922 
cmd_buf
.
P2
 = 
key_id
;

923 
cmd_buf
.
c⁄d_body
[0] = 0x08;

924 
	`mem˝y
(
cmd_buf
.
c⁄d_body
 + 1, 
£ª˘
, 8);

925 
cmd_size
 = 5 + 0x08;

927 
£nd_buf
 = 
	`¥ï¨e_cmd
(
CARD
, 
CARD_OS_CMD
, 
cmd_size
, &
cmd_buf
);

928 i‡(
£nd_buf
 =
NULL
)

929  -
ETAX_NUL_SEND_BUF
;

931 
ªt
 = 
	`ˇrd_£nd_cmd
(
£nd_buf
);

932 i‡(
ªt
 < 0)

933  
ªt
;

935 
ªs_buf
 = 
	`gë_ªs_buf
();

936 
ªt
 = 
	`ˇrd_gë_ªs
(
ªs_buf
);

937 i‡(
ªt
 < 0)

938  
ªt
;

943 i‡(!(
ªs_buf
->ªs_buf.
sw1
 =0x90 &&Ñes_buf->ªs_buf.
sw2
 == 0x00)) {

944 i‡(!(
ªs_buf
->ªs_buf.
sw1
 =0x60 &&Ñes_buf->ªs_buf.
sw2
 == 0x90))

945  -
ETAX_BAD_SW
;

948 
	`debug_msg
("\nEXTERNAL AUTH SUCCESS\n");

949  
SUCCESS
;

950 
	}
}

955 
	$ˇrd_vîify_func
(
CARD
, 
uch¨
 
pö_id
, uch¨ 
pö_Àn
, uch¨ *
pö
)

957 
ªt
;

958 
cmd_size
;

960 
≠du_cmd_£nd
 
cmd_buf
;

961 
ˇrd_£nd_buf
 *
£nd_buf
;

962 
ˇrd_ªs_buf
 *
ªs_buf
;

964 
cmd_buf
.
CLA
 = 0x00;

965 
cmd_buf
.
INS
 = 0x20;

966 
cmd_buf
.
P1
 = 0x00;

967 
cmd_buf
.
P2
 = 
pö_id
;

968 
cmd_buf
.
c⁄d_body
[0] = 
pö_Àn
;

969 
	`mem˝y
(
cmd_buf
.
c⁄d_body
 + 1, 
pö
, 
pö_Àn
);

970 
cmd_size
 = 5 + 
pö_Àn
;

972 
£nd_buf
 = 
	`¥ï¨e_cmd
(
CARD
, 
CARD_OS_CMD
, 
cmd_size
, &
cmd_buf
);

973 i‡(
£nd_buf
 =
NULL
)

974  -
ETAX_NUL_SEND_BUF
;

976 
ªt
 = 
	`ˇrd_£nd_cmd
(
£nd_buf
);

977 i‡(
ªt
 < 0)

978  
ªt
;

980 
ªs_buf
 = 
	`gë_ªs_buf
();

981 
ªt
 = 
	`ˇrd_gë_ªs
(
ªs_buf
);

982 i‡(
ªt
 < 0)

983  
ªt
;

988 i‡(!(
ªs_buf
->ªs_buf.
sw1
 =0x90 &&Ñes_buf->ªs_buf.
sw2
 == 0x00))

989  -
ETAX_BAD_SW
;

991 
	`debug_msg
("\nVERIFY SUCCESS\n");

992  
SUCCESS
;

993 
	}
}

998 
	$ˇrd_gë_chÆÀnge
(
CARD
, 
uch¨
 
size
, uch¨ *
ønd⁄
)

1000 
ªt
;

1001 
cmd_size
;

1003 
≠du_cmd_£nd
 
cmd_buf
;

1004 
ˇrd_£nd_buf
 *
£nd_buf
;

1005 
ˇrd_ªs_buf
 *
ªs_buf
;

1007 
cmd_buf
.
CLA
 = 0x00;

1008 
cmd_buf
.
INS
 = 0x84;

1009 
cmd_buf
.
P1
 = 0x00;

1010 
cmd_buf
.
P2
 = 0x00;

1011 
cmd_buf
.
c⁄d_body
[0] = 
size
;

1012 
cmd_size
 = 5;

1014 
£nd_buf
 = 
	`¥ï¨e_cmd
(
CARD
, 
CARD_OS_CMD
, 
cmd_size
, &
cmd_buf
);

1015 i‡(
£nd_buf
 =
NULL
)

1016  -
ETAX_NUL_SEND_BUF
;

1018 
ªt
 = 
	`ˇrd_£nd_cmd
(
£nd_buf
);

1019 i‡(
ªt
 < 0)

1020  
ªt
;

1022 
ªs_buf
 = 
	`gë_ªs_buf
();

1023 
ªt
 = 
	`ˇrd_gë_ªs
(
ªs_buf
);

1024 i‡(
ªt
 < 0)

1025  
ªt
;

1031 i‡(!(
ªs_buf
->ªs_buf.
sw1
 =0x90 &&Ñes_buf->ªs_buf.
sw2
 == 0x00))

1032  -
ETAX_BAD_SW
;

1034 
	`mem˝y
(
ønd⁄
, 
ªs_buf
->ªs_buf.
d©a
, 
size
);

1036 
	`debug_msg
("\nGet Chanllenge SUCCESS\n");

1038  
SUCCESS
;

1039 
	}
}

1045 
	$ˇrd_gë_ªgi°î_nb
(
ªgi°î_öfo
 * 
öfo
)

1047 
ªt
;

1048 
cmd_size
;

1050 
≠du_cmd_£nd
 
cmd_buf
;

1051 
ˇrd_£nd_buf
 *
£nd_buf
;

1052 
ˇrd_ªs_buf
 *
ªs_buf
;

1054 
cmd_buf
.
CLA
 = 0xC0;

1055 
cmd_buf
.
INS
 = 0xF0;

1056 
cmd_buf
.
P1
 = 0x00;

1057 
cmd_buf
.
P2
 = 0x00;

1058 
cmd_buf
.
c⁄d_body
[0] = 0x10;

1059 
cmd_size
 = 5;

1061 
£nd_buf
 = 
	`¥ï¨e_cmd
(
FISCAL_CARD
, 
CARD_OS_CMD
, 
cmd_size
, &
cmd_buf
);

1062 i‡(
£nd_buf
 =
NULL
)

1063  -
ETAX_NUL_SEND_BUF
;

1065 
ªt
 = 
	`ˇrd_£nd_cmd
(
£nd_buf
);

1066 i‡(
ªt
 < 0)

1067  
ªt
;

1069 
ªs_buf
 = 
	`gë_ªs_buf
();

1070 
ªt
 = 
	`ˇrd_gë_ªs
(
ªs_buf
);

1071 i‡(
ªt
 < 0)

1072  
ªt
;

1078 i‡(!(
ªs_buf
->ªs_buf.
sw1
 =0x90 &&Ñes_buf->ªs_buf.
sw2
 == 0x00)) {

1079 i‡(
ªs_buf
->ªs_buf.
sw1
 =0x6A &&Ñes_buf->ªs_buf.
sw2
 == 0x82)

1080  -
ETAX_NO_CARD_FILE
;

1081 i‡(
ªs_buf
->ªs_buf.
sw1
 =0x93 &&Ñes_buf->ªs_buf.
sw2
 == 0x03)

1082  -
ETAX_FC_PIN_LOCK
;

1084  -
ETAX_BAD_SW
;

1087 
	`mem˝y
(
öfo
->
øndom
, 
ªs_buf
->ªs_buf.
d©a
, 4);

1088 
	`mem˝y
(
öfo
->
ˇrd_nb
, 
ªs_buf
->ªs_buf.
d©a
 + 4, 8);

1089 
	`mem˝y
(
öfo
->
mac1
, 
ªs_buf
->ªs_buf.
d©a
 + 12, 4);

1091 
	`debug_msg
("\nGet Register NB SUCCESS\n");

1093  
SUCCESS
;

1094 
	}
}

1100 
	$ˇrd_ãrmöÆ_ªgi°î
(
ªgi°î_öfo
 * 
öfo
)

1102 
ªt
;

1103 
cmd_size
;

1105 
≠du_cmd_£nd
 
cmd_buf
;

1106 
ˇrd_£nd_buf
 *
£nd_buf
;

1107 
ˇrd_ªs_buf
 *
ªs_buf
;

1109 
cmd_buf
.
CLA
 = 0xC0;

1110 
cmd_buf
.
INS
 = 0xF1;

1111 
cmd_buf
.
P1
 = 0x00;

1112 
cmd_buf
.
P2
 = 0x00;

1113 
cmd_buf
.
c⁄d_body
[0] = 0x04;

1114 
	`mem˝y
(
cmd_buf
.
c⁄d_body
 + 1, 
öfo
->
mac2
, 4);

1115 
cmd_buf
.
c⁄d_body
[5] = 0x08;

1116 
cmd_size
 = 10;

1118 
£nd_buf
 = 
	`¥ï¨e_cmd
(
FISCAL_CARD
, 
CARD_OS_CMD
, 
cmd_size
, &
cmd_buf
);

1119 i‡(
£nd_buf
 =
NULL
)

1120  -
ETAX_NUL_SEND_BUF
;

1122 
ªt
 = 
	`ˇrd_£nd_cmd
(
£nd_buf
);

1123 i‡(
ªt
 < 0)

1124  
ªt
;

1126 
ªs_buf
 = 
	`gë_ªs_buf
();

1127 
ªt
 = 
	`ˇrd_gë_ªs
(
ªs_buf
);

1128 i‡(
ªt
 < 0)

1129  
ªt
;

1135 i‡(!(
ªs_buf
->ªs_buf.
sw1
 =0x90 &&Ñes_buf->ªs_buf.
sw2
 == 0x00)) {

1136 i‡(
ªs_buf
->ªs_buf.
sw1
 =0x6A &&Ñes_buf->ªs_buf.
sw2
 == 0x82)

1137  -
ETAX_NO_CARD_FILE
;

1138 i‡(
ªs_buf
->ªs_buf.
sw1
 =0x93 &&Ñes_buf->ªs_buf.
sw2
 == 0x03)

1139  -
ETAX_FC_PIN_LOCK
;

1141  -
ETAX_BAD_SW
;

1145 
	`mem˝y
(
öfo
->
pö
, 
ªs_buf
->ªs_buf.
d©a
, 8);

1147 
	`debug_msg
("\nTerminal Register SUCCESS\n");

1149  
SUCCESS
;

1150 
	}
}

1156 
	$ˇrd_issue_övoi˚
(
issue_övoi˚
 *
öfo
, 
issue_övoi˚_ªs
 * 
ªs
)

1158 
ªt
;

1159 
cmd_size
;

1161 
≠du_cmd_£nd
 
cmd_buf
;

1162 
ˇrd_£nd_buf
 *
£nd_buf
;

1163 
ˇrd_ªs_buf
 *
ªs_buf
;

1165 
cmd_buf
.
CLA
 = 0xC0;

1166 
cmd_buf
.
INS
 = 0xF2;

1167 
cmd_buf
.
P1
 = 0x00;

1168 
cmd_buf
.
P2
 = 0x00;

1169 
cmd_buf
.
c⁄d_body
[0] = 0x2C;

1170 
	`mem˝y
(
cmd_buf
.
c⁄d_body
 + 1, (
uch¨
 *)
öfo
, (*info));

1171 
cmd_buf
.
c⁄d_body
[0x2C + 1] = 0x08;

1172 
cmd_size
 = 6 + (*
öfo
);

1174 
£nd_buf
 = 
	`¥ï¨e_cmd
(
FISCAL_CARD
, 
CARD_OS_CMD
, 
cmd_size
, &
cmd_buf
);

1175 i‡(
£nd_buf
 =
NULL
)

1176  -
ETAX_NUL_SEND_BUF
;

1178 
ªt
 = 
	`ˇrd_£nd_cmd
(
£nd_buf
);

1179 i‡(
ªt
 < 0)

1180  
ªt
;

1182 
ªs_buf
 = 
	`gë_ªs_buf
();

1183 
ªt
 = 
	`ˇrd_gë_ªs
(
ªs_buf
);

1184 i‡(
ªt
 < 0)

1185  
ªt
;

1191 i‡(!((
ªs_buf
->ªs_buf.
sw1
 =0x61 &&Ñes_buf->ªs_buf.
sw2
 == 0x08) ||

1192 (
ªs_buf
->ªs_buf.
sw1
 =0x90 &&Ñes_buf->ªs_buf.
sw2
 == 0x00))) {

1193 i‡(
ªs_buf
->ªs_buf.
sw1
 =0x6A &&Ñes_buf->ªs_buf.
sw2
 == 0x82)

1194  -
ETAX_NO_CARD_FILE
;

1196 i‡(
ªs_buf
->ªs_buf.
sw1
 =0x93 &&Ñes_buf->ªs_buf.
sw2
 == 0x03)

1197  -
ETAX_FC_PIN_LOCK
;

1199 i‡(
ªs_buf
->ªs_buf.
sw1
 =0x94 &&Ñes_buf->ªs_buf.
sw2
 == 0x01)

1200  -
ETAX_MON_OUT_RANG
;

1202  -
ETAX_BAD_SW
;

1206 
	`mem˝y
(
ªs
, 
ªs_buf
->ªs_buf.
d©a
, 8);

1208 
	`debug_msg
("\nIssue Invoice SUCCESS\n");

1210  
SUCCESS
;

1211 
	}
}

1217 
	$ˇrd_de˛¨e_duty
(
de˛¨e_duty
 * 
öfo
, 
de˛¨e_ªs
 * 
ªs
)

1219 
ªt
;

1220 
cmd_size
;

1222 
≠du_cmd_£nd
 
cmd_buf
;

1223 
ˇrd_£nd_buf
 *
£nd_buf
;

1224 
ˇrd_ªs_buf
 *
ªs_buf
;

1226 
cmd_buf
.
CLA
 = 0xC0;

1227 
cmd_buf
.
INS
 = 0xF4;

1228 
cmd_buf
.
P1
 = 0x00;

1229 
cmd_buf
.
P2
 = 0x00;

1230 
cmd_buf
.
c⁄d_body
[0] = 0x47;

1231 
	`mem˝y
(
cmd_buf
.
c⁄d_body
 + 1, (
uch¨
 *)
öfo
, (*info));

1232 
cmd_buf
.
c⁄d_body
[0x47 + 1] = 0x8E;

1233 
cmd_size
 = 6 + (*
öfo
);

1235 
£nd_buf
 = 
	`¥ï¨e_cmd
(
FISCAL_CARD
, 
CARD_OS_CMD
, 
cmd_size
, &
cmd_buf
);

1236 i‡(
£nd_buf
 =
NULL
)

1237  -
ETAX_NUL_SEND_BUF
;

1239 
ªt
 = 
	`ˇrd_£nd_cmd
(
£nd_buf
);

1240 i‡(
ªt
 < 0)

1241  
ªt
;

1243 
ªs_buf
 = 
	`gë_ªs_buf
();

1244 
ªt
 = 
	`ˇrd_gë_ªs
(
ªs_buf
);

1245 i‡(
ªt
 < 0)

1246  
ªt
;

1252 i‡(!((
ªs_buf
->ªs_buf.
sw1
 =0x61 &&Ñes_buf->ªs_buf.
sw2
 == 0x8E) ||

1253 (
ªs_buf
->ªs_buf.
sw1
 =0x90 &&Ñes_buf->ªs_buf.
sw2
 == 0x00))) {

1254 i‡(
ªs_buf
->ªs_buf.
sw1
 =0x6A &&Ñes_buf->ªs_buf.
sw2
 == 0x82)

1255  -
ETAX_NO_CARD_FILE
;

1257 i‡(
ªs_buf
->ªs_buf.
sw1
 =0x93 &&Ñes_buf->ªs_buf.
sw2
 == 0x03)

1258  -
ETAX_FC_PIN_LOCK
;

1260  -
ETAX_BAD_SW
;

1264 
uch¨
 
x‹_vÆue
 = 0;

1265 
i
;

1266 
i
 = 0; i < 0x8E - 1; i++) {

1267 
x‹_vÆue
 ^
ªs_buf
->ªs_buf.
d©a
[
i
];

1270 i‡(
x‹_vÆue
 !
ªs_buf
->ªs_buf.
d©a
[
i
])

1271  -
ETAX_BAD_XOR
;

1273 
	`mem˝y
(
ªs
, 
ªs_buf
->ªs_buf.
d©a
, 0x8E);

1275 
	`debug_msg
("\nDeclare Duty SUCCESS\n");

1277  
SUCCESS
;

1278 
	}
}

1285 
	$ˇrd_upd©e_c⁄åﬁs
(
upd©e_˘l_öfo
 * 
öfo
)

1287 
ªt
;

1288 
cmd_size
;

1290 
≠du_cmd_£nd
 
cmd_buf
;

1291 
ˇrd_£nd_buf
 *
£nd_buf
;

1292 
ˇrd_ªs_buf
 *
ªs_buf
;

1294 
cmd_buf
.
CLA
 = 0xC0;

1295 
cmd_buf
.
INS
 = 0xF6;

1296 
cmd_buf
.
P1
 = 0x00;

1297 
cmd_buf
.
P2
 = 0x00;

1298 
cmd_buf
.
c⁄d_body
[0] = 0x1D;

1299 
	`mem˝y
(
cmd_buf
.
c⁄d_body
 + 1, (
uch¨
 *)
öfo
, (*info));

1300 
cmd_size
 = 5 + (*
öfo
);

1302 
£nd_buf
 = 
	`¥ï¨e_cmd
(
FISCAL_CARD
, 
CARD_OS_CMD
, 
cmd_size
, &
cmd_buf
);

1303 i‡(
£nd_buf
 =
NULL
)

1304  -
ETAX_NUL_SEND_BUF
;

1306 
ªt
 = 
	`ˇrd_£nd_cmd
(
£nd_buf
);

1307 i‡(
ªt
 < 0)

1308  
ªt
;

1310 
ªs_buf
 = 
	`gë_ªs_buf
();

1311 
ªt
 = 
	`ˇrd_gë_ªs
(
ªs_buf
);

1312 i‡(
ªt
 < 0)

1313  
ªt
;

1319 i‡(!(
ªs_buf
->ªs_buf.
sw1
 =0x90 &&Ñes_buf->ªs_buf.
sw2
 == 0x00))

1320  -
ETAX_BAD_SW
;

1322 
	`debug_msg
("\nUpdate Control SUCCESS\n");

1324  
SUCCESS
;

1325 
	}
}

1331 
	$ˇrd_öput_övoi˚_nb
(
övoi˚_rﬁl_öfo
 * 
öfo
)

1333 
ªt
;

1334 
cmd_size
;

1336 
≠du_cmd_£nd
 
cmd_buf
;

1337 
ˇrd_£nd_buf
 *
£nd_buf
;

1338 
ˇrd_ªs_buf
 *
ªs_buf
;

1340 
cmd_buf
.
CLA
 = 0xC0;

1341 
cmd_buf
.
INS
 = 0xF7;

1342 
cmd_buf
.
P1
 = 0x00;

1343 
cmd_buf
.
P2
 = 0x00;

1344 
cmd_buf
.
c⁄d_body
[0] = 0x16;

1345 
	`mem˝y
(
cmd_buf
.
c⁄d_body
 + 1, (
uch¨
 *)
öfo
, (*info));

1346 
cmd_size
 = 5 + (*
öfo
);

1348 
£nd_buf
 = 
	`¥ï¨e_cmd
(
FISCAL_CARD
, 
CARD_OS_CMD
, 
cmd_size
, &
cmd_buf
);

1349 i‡(
£nd_buf
 =
NULL
)

1350  -
ETAX_NUL_SEND_BUF
;

1352 
ªt
 = 
	`ˇrd_£nd_cmd
(
£nd_buf
);

1353 i‡(
ªt
 < 0)

1354  
ªt
;

1356 
ªs_buf
 = 
	`gë_ªs_buf
();

1357 
ªt
 = 
	`ˇrd_gë_ªs
(
ªs_buf
);

1358 i‡(
ªt
 < 0)

1359  
ªt
;

1365 i‡(!(
ªs_buf
->ªs_buf.
sw1
 =0x90 &&Ñes_buf->ªs_buf.
sw2
 == 0x00))

1366  -
ETAX_BAD_SW
;

1368 
	`debug_msg
("\nInput Invoice NB SUCCESS\n");

1370  
SUCCESS
;

1371 
	}
}

1378 
	$ˇrd_vîify_fisˇl_pö
(
uch¨
 *
ﬁd_pö
, uch¨ * 
√w_pö
)

1380 
ªt
;

1381 
cmd_size
;

1383 
≠du_cmd_£nd
 
cmd_buf
;

1384 
ˇrd_£nd_buf
 *
£nd_buf
;

1385 
ˇrd_ªs_buf
 *
ªs_buf
;

1387 
cmd_buf
.
CLA
 = 0xC0;

1388 
cmd_buf
.
INS
 = 0xF9;

1389 
cmd_buf
.
P1
 = 0x00;

1390 
cmd_buf
.
P2
 = 0x00;

1391 
cmd_buf
.
c⁄d_body
[0] = 0x08;

1392 
	`mem˝y
(
cmd_buf
.
c⁄d_body
 + 1, 
ﬁd_pö
, 8);

1393 
cmd_buf
.
c⁄d_body
[0x08 + 1] = 0x8E;

1394 
cmd_size
 = 6 + 0x08;

1396 
£nd_buf
 = 
	`¥ï¨e_cmd
(
FISCAL_CARD
, 
CARD_OS_CMD
, 
cmd_size
, &
cmd_buf
);

1397 i‡(
£nd_buf
 =
NULL
)

1398  -
ETAX_NUL_SEND_BUF
;

1400 
ªt
 = 
	`ˇrd_£nd_cmd
(
£nd_buf
);

1401 i‡(
ªt
 < 0)

1402  
ªt
;

1404 
ªs_buf
 = 
	`gë_ªs_buf
();

1405 
ªt
 = 
	`ˇrd_gë_ªs
(
ªs_buf
);

1406 i‡(
ªt
 < 0)

1407  
ªt
;

1412 i‡(!(
ªs_buf
->ªs_buf.
sw1
 =0x90 &&Ñes_buf->ªs_buf.
sw2
 == 0x00)) {

1413 i‡(
ªs_buf
->ªs_buf.
sw1
 =0x69 &&Ñes_buf->ªs_buf.
sw2
 == 0x83)

1414  -
ETAX_FC_PIN_LOCK
;

1416  -
ETAX_BAD_SW
;

1420 
	`mem˝y
(
√w_pö
, 
ªs_buf
->ªs_buf.
d©a
, 8);

1422 
	`debug_msg
("\nVerify Fiscal PIN SUCCESS\n");

1424  
SUCCESS
;

1425 
	}
}

1431 
	$ˇrd_daûy_cﬁÀ˘_sign
(
daûy_cﬁÀ˘
 * 
öfo
, 
daûy_cﬁÀ˘_ªs
 * 
ªs
)

1433 
ªt
;

1434 
cmd_size
;

1436 
≠du_cmd_£nd
 
cmd_buf
;

1437 
ˇrd_£nd_buf
 *
£nd_buf
;

1438 
ˇrd_ªs_buf
 *
ªs_buf
;

1441 #ifde‡
CONFIG_CARD_DEBUG


1442 
	`as£π
(
öfo
 !
NULL
);

1443 
	`as£π
(
ªs
 !
NULL
);

1445 i‡(!
öfo
)

1446  -
ETAX_NUL_SEND_BUF
;

1448 i‡(!
ªs
)

1449  -
ETAX_NUL_RES_BUF
;

1452 
cmd_buf
.
CLA
 = 0xC0;

1453 
cmd_buf
.
INS
 = 0xFB;

1454 
cmd_buf
.
P1
 = 0x00;

1455 
cmd_buf
.
P2
 = 0x00;

1456 
cmd_buf
.
c⁄d_body
[0] = 0x41;

1457 
	`mem˝y
(
cmd_buf
.
c⁄d_body
 + 1, (
uch¨
 *)
öfo
, (*info));

1458 
cmd_buf
.
c⁄d_body
[0x41 + 1] = 0x81;

1459 
cmd_size
 = 6 + (*
öfo
);

1461 
£nd_buf
 = 
	`¥ï¨e_cmd
(
FISCAL_CARD
, 
CARD_OS_CMD
, 
cmd_size
, &
cmd_buf
);

1462 i‡(
£nd_buf
 =
NULL
)

1463  -
ETAX_NUL_SEND_BUF
;

1465 
ªt
 = 
	`ˇrd_£nd_cmd
(
£nd_buf
);

1466 i‡(
ªt
 < 0)

1467  
ªt
;

1469 
ªs_buf
 = 
	`gë_ªs_buf
();

1470 
ªt
 = 
	`ˇrd_gë_ªs
(
ªs_buf
);

1471 i‡(
ªt
 < 0)

1472  
ªt
;

1477 i‡(!((
ªs_buf
->ªs_buf.
sw1
 =0x61 &&Ñes_buf->ªs_buf.
sw2
 == 0x81) ||

1478 (
ªs_buf
->ªs_buf.
sw1
 =0x90 &&Ñes_buf->ªs_buf.
sw2
 == 0x00)))

1479  -
ETAX_BAD_SW
;

1482 
uch¨
 
x‹_vÆue
 = 0;

1483 
i
;

1484 
i
 = 0; i < 0x81 - 1; i++) {

1485 
x‹_vÆue
 ^
ªs_buf
->ªs_buf.
d©a
[
i
];

1488 i‡(
x‹_vÆue
 !
ªs_buf
->ªs_buf.
d©a
[
i
])

1489  -
ETAX_BAD_XOR
;

1492 
	`mem˝y
(
ªs
, 
ªs_buf
->ªs_buf.
d©a
, 0x81);

1494 
	`debug_msg
("\nDaily Collect SUCCESS\n");

1496  
SUCCESS
;

1497 
	}
}

1504 
	$ˇrd_d©a_cﬁÀ˘_sign
(
d©a_cﬁÀ˘
 * 
öfo
, 
daûy_cﬁÀ˘_ªs
 * 
ªs
)

1507 
ªt
;

1508 
cmd_size
;

1510 
≠du_cmd_£nd
 
cmd_buf
;

1511 
ˇrd_£nd_buf
 *
£nd_buf
;

1512 
ˇrd_ªs_buf
 *
ªs_buf
;

1514 #ifde‡
CONFIG_CARD_DEBUG


1515 
	`as£π
(
öfo
 !
NULL
);

1516 
	`as£π
(
ªs
 !
NULL
);

1518 i‡(!
sign
)

1519  -
ETAX_NUL_SEND_BUF
;

1521 i‡(!
ªs
)

1522  -
ETAX_NUL_RES_BUF
;

1525 
cmd_buf
.
CLA
 = 0xC0;

1526 
cmd_buf
.
INS
 = 0xFB;

1527 
cmd_buf
.
P1
 = 0x00;

1528 
cmd_buf
.
P2
 = 0x01;

1529 
cmd_buf
.
c⁄d_body
[0] = 0x81;

1530 
	`mem˝y
(
cmd_buf
.
c⁄d_body
 + 1, 
sign
, 128 + 1);

1531 
cmd_buf
.
c⁄d_body
[0x81 + 1] = 0x81;

1532 
cmd_size
 = 6 + 128 + 1;

1534 
£nd_buf
 = 
	`¥ï¨e_cmd
(
FISCAL_CARD
, 
CARD_OS_CMD
, 
cmd_size
, &
cmd_buf
);

1535 i‡(
£nd_buf
 =
NULL
)

1536  -
ETAX_NUL_SEND_BUF
;

1538 
ªt
 = 
	`ˇrd_£nd_cmd
(
£nd_buf
);

1539 i‡(
ªt
 < 0)

1540  
ªt
;

1542 
ªs_buf
 = 
	`gë_ªs_buf
();

1543 
ªt
 = 
	`ˇrd_gë_ªs
(
ªs_buf
);

1544 i‡(
ªt
 < 0)

1545  
ªt
;

1550 i‡(!((
ªs_buf
->ªs_buf.
sw1
 =0x61 &&Ñes_buf->ªs_buf.
sw2
 == 0x81) ||

1551 (
ªs_buf
->ªs_buf.
sw1
 =0x10 &&Ñes_buf->ªs_buf.
sw2
 == 0x00)))

1552  -
ETAX_BAD_SW
;

1555 
uch¨
 
x‹_vÆue
 = 0;

1556 
i
;

1557 
i
 = 0; i < 0x81 - 1; i++) {

1558 
x‹_vÆue
 ^
ªs_buf
->ªs_buf.
d©a
[
i
];

1561 i‡(
x‹_vÆue
 !
ªs_buf
->ªs_buf.
d©a
[
i
])

1562  -
ETAX_BAD_XOR
;

1565 
	`mí˝y
(
ªs
, 
ªs_buf
->ªs_buf.
d©a
, 0x81);

1569  
SUCCESS
;

1570 
	}
}

1577 
	$ˇrd_ªgi°î_sign
(
ªgi°î_öfo
 * 
öfo
)

1579 
ªt
;

1580 
cmd_size
;

1582 
≠du_cmd_£nd
 
cmd_buf
;

1583 
ˇrd_£nd_buf
 *
£nd_buf
;

1584 
ˇrd_ªs_buf
 *
ªs_buf
;

1586 
cmd_buf
.
CLA
 = 0xC0;

1587 
cmd_buf
.
INS
 = 0xE4;

1588 
cmd_buf
.
P1
 = 0x00;

1589 
cmd_buf
.
P2
 = 0x00;

1590 
cmd_buf
.
c⁄d_body
[0] = 0x10;

1591 
	`mem˝y
(
cmd_buf
.
c⁄d_body
 + 1, 
öfo
->
øndom
, 4);

1592 
	`mem˝y
(
cmd_buf
.
c⁄d_body
 + 5, 
öfo
->
ˇrd_nb
, 8);

1593 
	`mem˝y
(
cmd_buf
.
c⁄d_body
 + 13, 
öfo
->
mac1
, 4);

1594 
cmd_buf
.
c⁄d_body
[17] = 0x04;

1595 
cmd_size
 = 22;

1597 
£nd_buf
 = 
	`¥ï¨e_cmd
(
USER_CARD
, 
CARD_OS_CMD
, 
cmd_size
, &
cmd_buf
);

1598 i‡(
£nd_buf
 =
NULL
)

1599  -
ETAX_NUL_SEND_BUF
;

1601 
ªt
 = 
	`ˇrd_£nd_cmd
(
£nd_buf
);

1602 i‡(
ªt
 < 0)

1603  
ªt
;

1605 
ªs_buf
 = 
	`gë_ªs_buf
();

1606 
ªt
 = 
	`ˇrd_gë_ªs
(
ªs_buf
);

1607 i‡(
ªt
 < 0)

1608  
ªt
;

1613 i‡(!((
ªs_buf
->ªs_buf.
sw1
 =0x61 &&Ñes_buf->ªs_buf.
sw2
 == 0x04) ||

1614 (
ªs_buf
->ªs_buf.
sw1
 =0x90 &&Ñes_buf->ªs_buf.
sw2
 == 0x00)))

1615  -
ETAX_BAD_SW
;

1618 
öfo
->
mac2
[0] = 
ªs_buf
->ªs_buf.
d©a
[0];

1619 
öfo
->
mac2
[1] = 
ªs_buf
->ªs_buf.
d©a
[1];

1620 
öfo
->
mac2
[2] = 
ªs_buf
->ªs_buf.
d©a
[2];

1621 
öfo
->
mac2
[3] = 
ªs_buf
->ªs_buf.
d©a
[3];

1623 
	`debug_msg
("\nRegister Sign SUCCESS\n");

1625  
SUCCESS
;

1626 
	}
}

1632 
	$ˇrd_d©a_cﬁÀ˘
(
d©a_cﬁÀ˘
 * 
öfo
)

1634 
ªt
;

1635 
cmd_size
;

1637 
≠du_cmd_£nd
 
cmd_buf
;

1638 
ˇrd_£nd_buf
 *
£nd_buf
;

1639 
ˇrd_ªs_buf
 *
ªs_buf
;

1641 
cmd_buf
.
CLA
 = 0xC0;

1642 
cmd_buf
.
INS
 = 0xE6;

1643 
cmd_buf
.
P1
 = 0x00;

1644 
cmd_buf
.
P2
 = 0x00;

1645 
cmd_buf
.
c⁄d_body
[0] = 0xDC;

1646 
	`mem˝y
(
cmd_buf
.
c⁄d_body
 + 1, (
uch¨
 *)
öfo
, (*info));

1648 
cmd_size
 = 5 + (*
öfo
);

1650 
£nd_buf
 = 
	`¥ï¨e_cmd
(
USER_CARD
, 
CARD_OS_CMD
, 
cmd_size
, &
cmd_buf
);

1651 i‡(
£nd_buf
 =
NULL
)

1652  -
ETAX_NUL_SEND_BUF
;

1654 
ªt
 = 
	`ˇrd_£nd_cmd
(
£nd_buf
);

1655 i‡(
ªt
 < 0)

1656  
ªt
;

1658 
ªs_buf
 = 
	`gë_ªs_buf
();

1659 
ªt
 = 
	`ˇrd_gë_ªs
(
ªs_buf
);

1660 i‡(
ªt
 < 0)

1661  
ªt
;

1666 i‡(!(
ªs_buf
->ªs_buf.
sw1
 =0x90 &&Ñes_buf->ªs_buf.
sw2
 == 0x00))

1667  -
ETAX_BAD_SW
;

1669 
	`debug_msg
("\nData Collect SUCCESS\n");

1671  
SUCCESS
;

1672 
	}
}

1678 
	$ˇrd_ech›Àx_c⁄åﬁs
()

1684  
SUCCESS
;

1685 
	}
}

1691 
	$ˇrd_di°ribuã_övoi˚_nb
(
övoi˚_rﬁl_öfo
 * 
öfo
)

1693 
ªt
;

1694 
cmd_size
;

1696 
≠du_cmd_£nd
 
cmd_buf
;

1697 
ˇrd_£nd_buf
 *
£nd_buf
;

1698 
ˇrd_ªs_buf
 *
ªs_buf
;

1700 
cmd_buf
.
CLA
 = 0xC0;

1701 
cmd_buf
.
INS
 = 0xE9;

1702 
cmd_buf
.
P1
 = 0x00;

1703 
cmd_buf
.
P2
 = 0x00;

1706 
cmd_buf
.
c⁄d_body
[0] = 0x16;

1708 
cmd_size
 = 5;

1710 
£nd_buf
 = 
	`¥ï¨e_cmd
(
USER_CARD
, 
CARD_OS_CMD
, 
cmd_size
, &
cmd_buf
);

1711 i‡(
£nd_buf
 =
NULL
)

1712  -
ETAX_NUL_SEND_BUF
;

1714 
ªt
 = 
	`ˇrd_£nd_cmd
(
£nd_buf
);

1715 i‡(
ªt
 < 0)

1716  
ªt
;

1718 
ªs_buf
 = 
	`gë_ªs_buf
();

1719 
ªt
 = 
	`ˇrd_gë_ªs
(
ªs_buf
);

1720 i‡(
ªt
 < 0)

1721  
ªt
;

1726 if(!(
ªs_buf
->ªs_buf.
sw1
 =0x90 &&Ñes_buf->ªs_buf.
sw2
 == 0x00)) {

1727 i‡(
ªs_buf
->ªs_buf.
sw1
 =0x94 &&Ñes_buf->ªs_buf.
sw2
 == 0x01)

1728  -
ETAX_UC_EMPTY
;

1730  -
ETAX_BAD_SW
;

1734 
	`mem˝y
(
öfo
, 
ªs_buf
->ªs_buf.
d©a
, (*info));

1736 
	`debug_msg
("\nDistrubute Invoice NB SUCCESS\n");

1738  
SUCCESS
;

1739 
	}
}

1743 
	$ˇrd_powî_⁄
(
CARD
)

1745 
ªt
;

1747 
ˇrd_£nd_buf
 *
£nd_buf
;

1748 
ˇrd_ªs_buf
 *
ªs_buf
;

1750 
fisˇl_ˇrd
 * 
ˇrd
;

1753 i‡(
CARD
 =
FISCAL_CARD
) {

1754 
ˇrd
 = 
	`gë_fisˇl_ˇrd
();

1755 } i‡(
CARD
 =
USER_CARD
) {

1756 
ˇrd
 = (
fisˇl_ˇrd
 *)
	`gë_u£r_ˇrd
();

1758  -
ETAX_BAD_CARD_TYPE
;

1761 i‡(
ˇrd
->
powî_m¨k
 =
POSITIVE
)

1762  
SUCCESS
;

1764 
£nd_buf
 = 
	`¥ï¨e_cmd
(
CARD
, 
CARD_PWR_ON_CMD
, 0, 
NULL
);

1765 i‡(
£nd_buf
 =
NULL
)

1766  -
ETAX_NUL_SEND_BUF
;

1768 
ªt
 = 
	`ˇrd_£nd_cmd
(
£nd_buf
);

1769 i‡(
ªt
 < 0)

1770  
ªt
;

1772 
ªs_buf
 = 
	`gë_ªs_buf
();

1773 
ªt
 = 
	`ˇrd_gë_ªs
(
ªs_buf
);

1774 i‡(
ªt
 < 0)

1775  
ªt
;

1777 
	`debug_msg
("\nPower ON SUCCESS!\n");

1780 
ˇrd
->
powî_m¨k
 = 
POSITIVE
;

1782  
SUCCESS
;

1783 
	}
}

1786 
	$ˇrd_powî_off
(
CARD
)

1788 
ªt
;

1790 
ˇrd_£nd_buf
 *
£nd_buf
;

1791 
ˇrd_ªs_buf
 *
ªs_buf
;

1793 
fisˇl_ˇrd
 * 
ˇrd
;

1795 i‡(
CARD
 =
FISCAL_CARD
) {

1796 
ˇrd
 = 
	`gë_fisˇl_ˇrd
();

1797 } i‡(
CARD
 =
USER_CARD
) {

1798 
ˇrd
 = (
fisˇl_ˇrd
 *)
	`gë_u£r_ˇrd
();

1800  -
ETAX_BAD_CARD_TYPE
;

1803 i‡(
ˇrd
->
powî_m¨k
 =
NEGATIVE
)

1804  
SUCCESS
;

1806 
£nd_buf
 = 
	`¥ï¨e_cmd
(
CARD
, 
CARD_PWR_OFF_CMD
, 0, 
NULL
);

1807 i‡(
£nd_buf
 =
NULL
)

1808  -
ETAX_NUL_SEND_BUF
;

1810 
ªt
 = 
	`ˇrd_£nd_cmd
(
£nd_buf
);

1811 i‡(
ªt
 < 0)

1812  
ªt
;

1814 
ªs_buf
 = 
	`gë_ªs_buf
();

1815 
ªt
 = 
	`ˇrd_gë_ªs
(
ªs_buf
);

1816 i‡(
ªt
 < 0)

1817  
ªt
;

1819 
	`debug_msg
("\nPOWER Down SUCCESS!\n");

1822 
ˇrd
->
powî_m¨k
 = 
NEGATIVE
;

1824  
SUCCESS
;

1825 
	}
}

1828 
	$ˇrd_powî_r°
(
CARD
)

1830 
ªt
;

1832 
ˇrd_£nd_buf
 *
£nd_buf
;

1833 
ˇrd_ªs_buf
 *
ªs_buf
;

1835 
£nd_buf
 = 
	`¥ï¨e_cmd
(
CARD
, 
CARD_RST_CMD
, 0, 
NULL
);

1836 i‡(
£nd_buf
 =
NULL
)

1837  -
ETAX_NUL_SEND_BUF
;

1839 
ªt
 = 
	`ˇrd_£nd_cmd
(
£nd_buf
);

1840 i‡(
ªt
 < 0)

1841  
ªt
;

1843 
ªs_buf
 = 
	`gë_ªs_buf
();

1844 
ªt
 = 
	`ˇrd_gë_ªs
(
ªs_buf
);

1845 i‡(
ªt
 < 0)

1846  
ªt
;

1848 i‡(
ªs_buf
->ªs_buf.
d©a
[0] != 0x3B &&Ñes_buf->res_buf.data[1] != 0x7C)

1849  -
ETAX_BAD_SW
;

1851 
	`debug_msg
("\nCard Reset SUCCESS\n");

1853  
SUCCESS
;

1854 
	}
}

1860 
	$ˇrd_devi˚_öô
()

1862 
ªt
;

1863 
fd
;

1865 
fd
 = 
	`›í_u¨t
(
CARD_DEV
, 
O_RDWR
);

1866 i‡(
fd
 < 0) {

1867 
	`debug_msg
("Card Device Init Failed\n");

1868  -
ETAX_OPEN_CARD
;

1871 
ªt
 = 
	`ˇrd_u¨t_£tup
(
fd
);

1872 i‡(
ªt
 < 0) {

1873 
	`˛o£
(
fd
);

1874  
FAIL
;

1877 
ˇrd_dev
 = 
fd
;

1879  
SUCCESS
;

1880 
	}
}

1886 
	$ˇrd_devi˚_°›
()

1888 i‡(
ˇrd_dev
 == 0)

1889  
SUCCESS
;

1891 
	`˛o£
(
ˇrd_dev
);

1893  
SUCCESS
;

1894 
	}
}

1898 
fisˇl_ˇrd
 
	gfisˇl_ˇrd_ba£
 = {

1900 .
powî_m¨k
 = 
NEGATIVE
,

1902 #ifde‡
CONFIG_CARD_DEBUG


1903 .
	gˇrd_£nd_buf
 = 
gë_£nd_buf
,

1904 .
	gˇrd_ªs_buf
 = 
gë_ªs_buf
,

1907 .
	gdevi˚_öô
 = 
ˇrd_devi˚_öô
,

1908 .
	gdevi˚_°›
 = 
ˇrd_devi˚_°›
,

1911 .
	gpowî_⁄
 = 
ˇrd_powî_⁄
,

1912 .
	gpowî_off
 = 
ˇrd_powî_off
,

1913 .
	gpowî_r°
 = 
ˇrd_powî_r°
,

1914 .
	g£À˘_fûe_by_df
 = 
ˇrd_£À˘_fûe_by_df
,

1915 .
	g£À˘_fûe_by_id
 = 
ˇrd_£À˘_fûe_by_id
,

1916 .
	gªad_bö¨y
 = 
ˇrd_ªad_bö¨y
,

1917 .
	gupd©e_bö¨y
 = 
ˇrd_upd©e_bö¨y
,

1918 .
	gªad_ªc‹d
 = 
ˇrd_ªad_ªc‹d
,

1919 .
	gupd©e_ªc‹d
 = 
ˇrd_upd©e_ªc‹d
,

1920 .
	gˇrd_vîify
 = 
ˇrd_vîify_func
,

1921 .
	gexã∫Æ_auth
 = 
ˇrd_exã∫Æ_authítiˇti⁄
,

1922 .
	göã∫Æ_auth
 = 
ˇrd_öã∫Æ_authítiˇti⁄
,

1923 .
	ggë_chÆÀnge
 = 
ˇrd_gë_chÆÀnge
,

1927 .
	ggë_ªgi°î_nb
 = 
ˇrd_gë_ªgi°î_nb
,

1928 .
	gãrmöÆ_ªgi°î
 = 
ˇrd_ãrmöÆ_ªgi°î
,

1929 .
	gissue_övoi˚
 = 
ˇrd_issue_övoi˚
,

1930 .
	gde˛¨e_duty
 = 
ˇrd_de˛¨e_duty
,

1931 .
	gupd©e_c⁄åﬁs
 = 
ˇrd_upd©e_c⁄åﬁs
,

1932 .
	göput_övoi˚_nb
 = 
ˇrd_öput_övoi˚_nb
,

1933 .
	gvîify_fisˇl_pö
 = 
ˇrd_vîify_fisˇl_pö
,

1934 .
	gdaûy_cﬁÀ˘_sign
 = 
ˇrd_daûy_cﬁÀ˘_sign
,

1935 .
	gd©a_cﬁÀ˘_sign
 = 
ˇrd_d©a_cﬁÀ˘_sign
,

1938 
u£r_ˇrd
 
	gu£r_ˇrd_ba£
 = {

1940 .
powî_m¨k
 = 
NEGATIVE
,

1942 #ifde‡
CONFIG_CARD_DEBUG


1943 .
	gˇrd_£nd_buf
 = 
gë_£nd_buf
,

1944 .
	gˇrd_ªs_buf
 = 
gë_ªs_buf
,

1947 .
	gdevi˚_öô
 = 
ˇrd_devi˚_öô
,

1948 .
	gdevi˚_°›
 = 
ˇrd_devi˚_°›
,

1951 .
	gpowî_⁄
 = 
ˇrd_powî_⁄
,

1952 .
	gpowî_off
 = 
ˇrd_powî_off
,

1953 .
	gpowî_r°
 = 
ˇrd_powî_r°
,

1954 .
	g£À˘_fûe_by_df
 = 
ˇrd_£À˘_fûe_by_df
,

1955 .
	g£À˘_fûe_by_id
 = 
ˇrd_£À˘_fûe_by_id
,

1956 .
	gªad_bö¨y
 = 
ˇrd_ªad_bö¨y
,

1957 .
	gupd©e_bö¨y
 = 
ˇrd_upd©e_bö¨y
,

1958 .
	gªad_ªc‹d
 = 
ˇrd_ªad_ªc‹d
,

1959 .
	gupd©e_ªc‹d
 = 
ˇrd_upd©e_ªc‹d
,

1960 .
	gˇrd_vîify
 = 
ˇrd_vîify_func
,

1961 .
	gexã∫Æ_auth
 = 
ˇrd_exã∫Æ_authítiˇti⁄
,

1962 .
	göã∫Æ_auth
 = 
ˇrd_öã∫Æ_authítiˇti⁄
,

1963 .
	ggë_chÆÀnge
 = 
ˇrd_gë_chÆÀnge
,

1966 .
	gªgi°î_sign
 = 
ˇrd_ªgi°î_sign
,

1967 .
	gd©a_cﬁÀ˘
 = 
ˇrd_d©a_cﬁÀ˘
,

1968 .
	gdi°ribuã_övoi˚_nb
 = 
ˇrd_di°ribuã_övoi˚_nb
,

1971 
check_ˇrd
 
	gcheck_ˇrd_ba£
 = {

1973 .
powî_m¨k
 = 
NEGATIVE
,

1975 #ifde‡
CONFIG_CARD_DEBUG


1976 .
	gˇrd_£nd_buf
 = 
gë_£nd_buf
,

1977 .
	gˇrd_ªs_buf
 = 
gë_ªs_buf
,

1980 .
	gdevi˚_öô
 = 
ˇrd_devi˚_öô
,

1981 .
	gdevi˚_°›
 = 
ˇrd_devi˚_°›
,

1984 .
	gpowî_⁄
 = 
ˇrd_powî_⁄
,

1985 .
	gpowî_off
 = 
ˇrd_powî_off
,

1986 .
	gpowî_r°
 = 
ˇrd_powî_r°
,

1987 .
	g£À˘_fûe_by_df
 = 
ˇrd_£À˘_fûe_by_df
,

1988 .
	g£À˘_fûe_by_id
 = 
ˇrd_£À˘_fûe_by_id
,

1989 .
	gªad_bö¨y
 = 
ˇrd_ªad_bö¨y
,

1990 .
	gupd©e_bö¨y
 = 
ˇrd_upd©e_bö¨y
,

1991 .
	gªad_ªc‹d
 = 
ˇrd_ªad_ªc‹d
,

1992 .
	gupd©e_ªc‹d
 = 
ˇrd_upd©e_ªc‹d
,

1993 .
	gˇrd_vîify
 = 
ˇrd_vîify_func
,

1994 .
	gexã∫Æ_auth
 = 
ˇrd_exã∫Æ_authítiˇti⁄
,

1995 .
	göã∫Æ_auth
 = 
ˇrd_öã∫Æ_authítiˇti⁄
,

1996 .
	ggë_chÆÀnge
 = 
ˇrd_gë_chÆÀnge
,

2002 
fisˇl_ˇrd
 * 
	$gë_fisˇl_ˇrd
()

2004  &
fisˇl_ˇrd_ba£
;

2005 
	}
}

2007 
u£r_ˇrd
 * 
	$gë_u£r_ˇrd
()

2009  &
u£r_ˇrd_ba£
;

2010 
	}
}

2012 
check_ˇrd
 * 
	$gë_check_ˇrd
()

2014  &
check_ˇrd_ba£
;

2015 
	}
}

	@fiscal/tax_file_op.c

9 
	~<°dio.h
>

10 
	~<°dlib.h
>

11 
	~<°rög.h
>

12 
	~<uni°d.h
>

13 
	~<sys/ty≥s.h
>

14 
	~<sys/°©.h
>

15 
	~<f˙é.h
>

16 
	~<î∫o.h
>

18 
	~"îr‹.h
"

19 
	~"èx_fûe_›.h
"

20 
	~"èx_sy°em.h
"

21 
	~"fûe_c‹e.h
"

41 
	$èx_fûe_gë_ªÆ_off£t
(
FILE
 * 
Â
, 
off£t
)

43 
ªt
;

44 
i
, 
√xt_pos
;

46 
fûe_hód_node
 
hód_node
;

47 
fûe_ªc‹d_node
 
ªc‹d_node
;

49 
fûe_›î©e
 * 
fûe_›s
 = 
	`gë_fûe_›s
();

51 
ªt
 = 
fûe_›s
->
	`ªad_hód
(
Â
, &
hód_node
);

52 i‡(
ªt
 < 0)

53  
ªt
;

55 
i
 = 0;

56 
√xt_pos
 = 
hód_node
.
fú°_vaûd_ªc‹d
;

57 
√xt_pos
 != 0){

58 
ªt
 = 
fûe_›s
->
	`ªad_ªc‹d
(
Â
, 
√xt_pos
, &
ªc‹d_node
);

59 i‡(
ªt
 < 0)

60  
ªt
;

62 
i
++;

63 i‡(
i
 =
off£t
)

64  
√xt_pos
;

66 
√xt_pos
 = 
ªc‹d_node
.
¥ev_dñ_ªc‹d
;

69  
FAIL
;

70 
	}
}

77 
	$èx_fûe_ªad_u£r
(
off£t
, 
u£r
 * 
ªad_u£r
)

79 
ªt
;

80 
ªÆ_off£t
;

82 
FILE
 * 
Â
;

84 
fûe_ªc‹d_node
 
ªc‹d_node
;

85 
fûe_›î©e
 * 
fûe_›s
 = 
	`gë_fûe_›s
();

87 
Â
 = 
	`f›í
(
USER_FILE
, "rb+");

88 i‡(
Â
 =
NULL
)

89  -
EFILE_OPEN_FAIL
;

91 
ªÆ_off£t
 = 
	`èx_fûe_gë_ªÆ_off£t
(
Â
, 
off£t
);

92 i‡(
ªÆ_off£t
 < 0) {

93 
	`f˛o£
(
Â
);

94  
FAIL
;

97 
ªt
 = 
fûe_›s
->
	`ªad_ªc‹d
(
Â
, 
ªÆ_off£t
, &
ªc‹d_node
);

98 i‡(
ªt
 < 0) {

99 
	`f˛o£
(
Â
);

100  
ªt
;

103 
	`mem˝y
(
ªad_u£r
, 
ªc‹d_node
.
d©a
, (*read_user));

105 
	`f˛o£
(
Â
);

106  
SUCCESS
;

107 
	}
}

114 
	$èx_fûe_föd_u£r
(*
u£r_«me
, 
u£r
 * 
föd_u£r
)

116 
ªt
;

117 
√xt_pos
;

119 
FILE
 * 
Â
;

121 
fûe_hód_node
 
hód_node
;

122 
fûe_ªc‹d_node
 
ªc‹d_node
;

123 
fûe_›î©e
 * 
fûe_›s
 = 
	`gë_fûe_›s
();

125 
u£r
 
tmp_u£r
;

127 
Â
 = 
	`f›í
(
USER_FILE
, "rb+");

128 i‡(
Â
 =
NULL
)

129  -
EFILE_OPEN_FAIL
;

131 
ªt
 = 
fûe_›s
->
	`ªad_hód
(
Â
, &
hód_node
);

132 i‡(
ªt
 < 0) {

133 
	`f˛o£
(
Â
);

134  
ªt
;

137 
√xt_pos
 = 
hód_node
.
fú°_vaûd_ªc‹d
;

138 
√xt_pos
 != 0) {

139 
ªt
 = 
fûe_›s
->
	`ªad_ªc‹d
(
Â
, 
√xt_pos
, &
ªc‹d_node
);

140 i‡(
ªt
 < 0) {

141 
	`f˛o£
(
Â
);

142  
ªt
;

145 
	`mem˝y
(&
tmp_u£r
, 
ªc‹d_node
.
d©a
, (tmp_user));

146 i‡(
	`°rcmp
(
u£r_«me
, 
tmp_u£r
.
«me
) == 0) {

147 *
föd_u£r
 = 
tmp_u£r
;

149 
	`f˛o£
(
Â
);

150  
√xt_pos
;

153 
√xt_pos
 = 
ªc‹d_node
.
√xt_vaûd_ªc‹d
;

156 
	`f˛o£
(
Â
);

157  
FAIL
;

158 
	}
}

164 
	$èx_fûe_≠≥nd_u£r
(
u£r
 * 
√w_u£r
)

166 
ªt
;

167 
FILE
 * 
Â
;

169 
fûe_hód_node
 
hód_node
;

170 
fûe_ªc‹d_node
 
ªc‹d_node
;

171 
fûe_›î©e
 * 
fûe_›s
 = 
	`gë_fûe_›s
();

173 
u£r
 
tmp_u£r
;

175 
Â
 = 
	`f›í
(
USER_FILE
, "rb+");

176 i‡(
Â
 =
NULL
)

177  -
EFILE_OPEN_FAIL
;

179 
ªt
 = 
fûe_›s
->
	`ªad_hód
(
Â
, &
hód_node
);

180 i‡(
ªt
 < 0){

181 
	`f˛o£
(
Â
);

182  
ªt
;

185 i‡(
hód_node
.
ªc‹d_tŸÆ_cou¡
 =hód_node.
max_ªc‹d
) {

186 
	`f˛o£
(
Â
);

187  -
EFILE_REC_FULL
;

190 
ªt
 = 
	`èx_fûe_föd_u£r
(
√w_u£r
->
«me
, &
tmp_u£r
);

191 i‡(
ªt
 =
SUCCESS
) {

192 
	`f˛o£
(
Â
);

193  -
ETAX_USERNAME_IMPLICT
;

196 
	`mem£t
(&
ªc‹d_node
, 0, (record_node));

197 
	`mem˝y
(
ªc‹d_node
.
d©a
, 
√w_u£r
, (*new_user));

199 
ªc‹d_node
.
Êag
 = 
IN_USING
;

201 i‡(
hód_node
.
fú°_dñ_ªc‹d
 == 0) {

202 
ªt
 = 
fûe_›s
->
	`≠≥nd_ªc‹d
(
Â
, &
ªc‹d_node
);

203 i‡(
ªt
 < 0)

204  
ªt
;

206 
ªt
 = 
fûe_›s
->
	`modify_ªc‹d
(
Â
, 
hód_node
.
fú°_dñ_ªc‹d
, &
ªc‹d_node
);

207 i‡(
ªt
 < 0)

208  
ªt
;

211 
	`f˛o£
(
Â
);

212  
SUCCESS
;

213 
	}
}

220 
	$èx_fûe_modify_u£r
(
off£t
, 
u£r
 *user)

222 
ªt
;

223 
FILE
 * 
Â
;

225 
ªÆ_off£t
;

226 
fûe_ªc‹d_node
 
ªc‹d_node
;

227 
fûe_›î©e
 * 
fûe_›s
 = 
	`gë_fûe_›s
();

229 
Â
 = 
	`f›í
(
USER_FILE
, "rb+");

230 i‡(
Â
 =
NULL
)

231  -
EFILE_OPEN_FAIL
;

233 
ªÆ_off£t
 = 
	`èx_fûe_gë_ªÆ_off£t
(
Â
, 
off£t
);

234 i‡(
ªÆ_off£t
 < 0) {

235 
	`f˛o£
(
Â
);

236  
FAIL
;

239 
ªt
 = 
fûe_›s
->
	`ªad_ªc‹d
(
Â
, 
ªÆ_off£t
, &
ªc‹d_node
);

240 i‡(
ªt
 < 0) {

241 
	`f˛o£
(
Â
);

242  
FAIL
;

245 
	`mem˝y
(
ªc‹d_node
.
d©a
, 
u£r
, (*user));

247 
ªt
 = 
fûe_›s
->
	`modify_ªc‹d
(
Â
, 
ªÆ_off£t
, &
ªc‹d_node
);

248 i‡(
ªt
 < 0) {

249 
	`f˛o£
(
Â
);

250  
ªt
;

253 
	`f˛o£
(
Â
);

254  
SUCCESS
;

255 
	}
}

262 
	$èx_fûe_dñëe_u£r
(
off£t
)

264 
ªt
;

265 
ªÆ_off£t
;

266 
FILE
 * 
Â
;

267 
fûe_›î©e
 * 
fûe_›s
 = 
	`gë_fûe_›s
();

269 
Â
 = 
	`f›í
(
USER_FILE
, "rb+");

270 i‡(
Â
 =
NULL
)

271  -
EFILE_OPEN_FAIL
;

273 
ªÆ_off£t
 = 
	`èx_fûe_gë_ªÆ_off£t
(
Â
, 
off£t
);

274 i‡(
ªÆ_off£t
 < 0) {

275 
	`f˛o£
(
Â
);

276  
FAIL
;

279 
ªt
 = 
fûe_›s
->
	`dñëe_ªc‹d
(
Â
, 
ªÆ_off£t
);

280 i‡(
ªt
 < 0) {

281 
	`f˛o£
(
Â
);

282  
ªt
;

285 
	`f˛o£
(
Â
);

286  
SUCCESS
;

287 
	}
}

293 
	$èx_fûe_ßve_mach_öfo
(
machöe_öfo_ªc‹d
 * 
mach_öfo
)

295 
ªt
;

296 
FILE
 * 
Â
;

298 
fûe_hód_node
 
hód_node
;

299 
fûe_ªc‹d_node
 
ªc‹d_node
;

301 
fûe_›î©e
 * 
fûe_›s
 = 
	`gë_fûe_›s
();

303 
machöe_öfo_ªc‹d
 * 
gp_mach_öfo
 = 
	`gë_mach_öfo
();

306 *
gp_mach_öfo
 = *
mach_öfo
;

308 
Â
 = 
	`f›í
(
MACH_INFO_FILE
, "rb+");

309 i‡(
Â
 =
NULL
)

310  -
EFILE_OPEN_FAIL
;

312 
	`mem˝y
(
ªc‹d_node
.
d©a
, 
mach_öfo
, (*mach_info));

314 
ªt
 = 
fûe_›s
->
	`ªad_hód
(
Â
, &
hód_node
);

315 i‡(
ªt
 < 0)

316 
Áû
;

318 i‡(
hód_node
.
ªc‹d_vaûd_cou¡
 == 0) {

319 
ªt
 = 
fûe_›s
->
	`≠≥nd_ªc‹d
(
Â
, &
ªc‹d_node
);

320 i‡(
ªt
 < 0)

321 
Áû
;

323 
ªt
 = 
fûe_›s
->
	`modify_ªc‹d
(
Â
, 1, &
ªc‹d_node
);

324 i‡(
ªt
 < 0)

325 
Áû
;

328 
ªt
 = 
SUCCESS
;

330 
Áû
:

331 
	`f˛o£
(
Â
);

332  
ªt
;

333 
	}
}

340 
	$èx_fûe_ªad_mach_öfo
(
machöe_öfo_ªc‹d
 * 
mach_öfo
)

342 
ªt
;

343 
FILE
 * 
Â
;

345 
fûe_ªc‹d_node
 
ªc‹d_node
;

346 
fûe_›î©e
 * 
fûe_›s
 = 
	`gë_fûe_›s
();

348 
Â
 = 
	`f›í
(
MACH_INFO_FILE
, "rb+");

349 i‡(
Â
 =
NULL
)

350  
EFILE_OPEN_FAIL
;

352 
	`mem£t
(&
ªc‹d_node
, 0, (record_node));

353 
ªt
 = 
fûe_›s
->
	`ªad_ªc‹d
(
Â
, 1, &
ªc‹d_node
);

354 i‡(
ªt
 < 0){

355 
	`f˛o£
(
Â
);

356  
ªt
;

359 
	`mem˝y
(
mach_öfo
, 
ªc‹d_node
.
d©a
, (*mach_info));

361 
	`f˛o£
(
Â
);

362  
SUCCESS
;

363 
	}
}

369 
	$èx_fûe_ßve_sys_cfg
(
èx_sys_c⁄fig_ªc‹d
 * 
sys_cfg
)

371 
ªt
;

372 
FILE
 * 
Â
;

374 
fûe_hód_node
 
hód_node
;

375 
fûe_ªc‹d_node
 
ªc‹d_node
;

377 
fûe_›î©e
 * 
fûe_›s
 = 
	`gë_fûe_›s
();

378 
èx_sys_c⁄fig_ªc‹d
 * 
gp_sys_cfg
 = 
	`gë_sys_c⁄fig
();

381 *
gp_sys_cfg
 = *
sys_cfg
;

383 
Â
 = 
	`f›í
(
SYS_CFG_FILE
, "rb+");

384 i‡(
Â
 =
NULL
)

385  -
EFILE_OPEN_FAIL
;

387 
	`mem£t
(&
ªc‹d_node
, 0, (record_node));

388 
	`mem˝y
(
ªc‹d_node
.
d©a
, 
sys_cfg
, (*sys_cfg));

390 
ªt
 = 
fûe_›s
->
	`ªad_hód
(
Â
, &
hód_node
);

391 i‡(
ªt
 < 0)

392 
Áû
;

394 i‡(
hód_node
.
ªc‹d_vaûd_cou¡
 == 0) {

396 
ªt
 = 
fûe_›s
->
	`≠≥nd_ªc‹d
(
Â
, &
ªc‹d_node
);

397 i‡(
ªt
 < 0)

398 
Áû
;

400 
ªt
 = 
fûe_›s
->
	`modify_ªc‹d
(
Â
, 1, &
ªc‹d_node
);

401 i‡(
ªt
 < 0)

402 
Áû
;

405 
ªt
 = 
SUCCESS
;

407 
Áû
:

408 
	`f˛o£
(
Â
);

409  
ªt
;

410 
	}
}

416 
	$èx_fûe_ªad_sys_cfg
(
èx_sys_c⁄fig_ªc‹d
 * 
sys_cfg
)

418 
ªt
;

419 
FILE
 * 
Â
;

421 
fûe_ªc‹d_node
 
ªc‹d_node
;

423 
fûe_›î©e
 * 
fûe_›s
 = 
	`gë_fûe_›s
();

425 
Â
 = 
	`f›í
(
SYS_CFG_FILE
, "rb+");

426 i‡(
Â
 =
NULL
)

427  
EFILE_OPEN_FAIL
;

429 
	`mem£t
(&
ªc‹d_node
, 0, (record_node));

430 
ªt
 = 
fûe_›s
->
	`ªad_ªc‹d
(
Â
, 1, &
ªc‹d_node
);

431 i‡(
ªt
 < 0){

432 
	`f˛o£
(
Â
);

433  
ªt
;

436 
	`mem˝y
(
sys_cfg
, 
ªc‹d_node
.
d©a
, (*sys_cfg));

438 
	`f˛o£
(
Â
);

439  
SUCCESS
;

440 
	}
}

446 
	$èx_fûe_ßve_fis_cfg
(
èx_sys_fis_c⁄fig_ªc‹d
 * 
fis_cfg
)

448 
ªt
;

449 
FILE
 * 
Â
;

450 
fûe_hód_node
 
hód_node
;

451 
fûe_ªc‹d_node
 
ªc‹d_node
;

453 
fûe_›î©e
 * 
fûe_›s
 = 
	`gë_fûe_›s
();

455 
èx_sys_fis_c⁄fig_ªc‹d
 * 
gp_fis_cfg
 = 
	`gë_fis_c⁄fig
();

458 *
gp_fis_cfg
 = *
fis_cfg
;

460 
Â
 = 
	`f›í
(
FIS_CFG_FILE
, "rb+");

461 i‡(
Â
 =
NULL
)

462  -
EFILE_OPEN_FAIL
;

464 
	`mem£t
(&
ªc‹d_node
, 0, (record_node));

465 
	`mem˝y
(
ªc‹d_node
.
d©a
, 
fis_cfg
, (*fis_cfg));

467 
ªt
 = 
fûe_›s
->
	`ªad_hód
(
Â
, &
hód_node
);

468 i‡(
ªt
 < 0)

469 
Áû
;

471 i‡(
hód_node
.
ªc‹d_vaûd_cou¡
 == 0) {

472 
ªt
 = 
fûe_›s
->
	`≠≥nd_ªc‹d
(
Â
, &
ªc‹d_node
);

473 i‡(
ªt
 < 0)

474 
Áû
;

476 
ªt
 = 
fûe_›s
->
	`modify_ªc‹d
(
Â
, 1, &
ªc‹d_node
);

477 i‡(
ªt
 < 0)

478 
Áû
;

481 
ªt
 = 
SUCCESS
;

483 
Áû
:

484 
	`f˛o£
(
Â
);

485  
ªt
;

486 
	}
}

492 
	$èx_fûe_ªad_fis_cfg
(
èx_sys_fis_c⁄fig_ªc‹d
 * 
fis_cfg
)

494 
ªt
;

495 
FILE
 * 
Â
;

497 
fûe_ªc‹d_node
 
ªc‹d_node
;

498 
fûe_›î©e
 * 
fûe_›s
 = 
	`gë_fûe_›s
();

500 
Â
 = 
	`f›í
(
FIS_CFG_FILE
, "rb+");

501 i‡(
Â
 =
NULL
)

502  
EFILE_OPEN_FAIL
;

504 
	`mem£t
(&
ªc‹d_node
, 0, (record_node));

505 
ªt
 = 
fûe_›s
->
	`ªad_ªc‹d
(
Â
, 1, &
ªc‹d_node
);

506 i‡(
ªt
 < 0) {

507 
	`f˛o£
(
Â
);

508  
ªt
;

511 
	`mem˝y
(
fis_cfg
, 
ªc‹d_node
.
d©a
, (*fis_cfg));

513 
	`f˛o£
(
Â
);

514  
SUCCESS
;

515 
	}
}

521 
	$èx_fûe_ßve_¥Ÿe˘
(
èx_sys_¥Ÿe˘_ªc‹d
 * 
¥Ÿe˘_ªc
)

523 
ªt
;

524 
FILE
 * 
Â
;

525 
fûe_hód_node
 
hód_node
;

526 
fûe_ªc‹d_node
 
ªc‹d_node
;

528 
fûe_›î©e
 * 
fûe_›s
 = 
	`gë_fûe_›s
();

529 
èx_sys_¥Ÿe˘_ªc‹d
 * 
gp_¥Ÿe˘_ªc
 = 
	`gë_¥Ÿe˘_ªc‹d
();

532 *
gp_¥Ÿe˘_ªc
 = *
¥Ÿe˘_ªc
;

534 
Â
 = 
	`f›í
(
PROTECT_FILE
, "rb+");

535 i‡(
Â
 =
NULL
)

536  -
EFILE_OPEN_FAIL
;

539 
	`mem£t
(&
ªc‹d_node
, 0, (record_node));

540 
	`mem˝y
(
ªc‹d_node
.
d©a
, 
¥Ÿe˘_ªc
, (*protect_rec));

542 
ªt
 = 
fûe_›s
->
	`ªad_hód
(
Â
, &
hód_node
);

543 i‡(
ªt
 < 0)

544 
Áû
;

546 i‡(
hód_node
.
ªc‹d_vaûd_cou¡
 == 0) {

547 
ªt
 = 
fûe_›s
->
	`≠≥nd_ªc‹d
(
Â
, &
ªc‹d_node
);

548 i‡(
ªt
 < 0)

549 
Áû
;

551 
ªt
 = 
fûe_›s
->
	`modify_ªc‹d
(
Â
, 1, &
ªc‹d_node
);

552 i‡(
ªt
 < 0)

553 
Áû
;

556 
ªt
 = 
SUCCESS
;

558 
Áû
:

559 
	`f˛o£
(
Â
);

560  
ªt
;

561 
	}
}

567 
	$èx_fûe_ªad_¥Ÿe˘
(
èx_sys_¥Ÿe˘_ªc‹d
 * 
¥Ÿe˘_ªc
)

569 
ªt
;

570 
FILE
 * 
Â
;

572 
fûe_ªc‹d_node
 
ªc‹d_node
;

574 
fûe_›î©e
 * 
fûe_›s
 = 
	`gë_fûe_›s
();

576 
Â
 = 
	`f›í
(
PROTECT_FILE
, "rb+");

577 i‡(
Â
 =
NULL
)

578  
EFILE_OPEN_FAIL
;

580 
	`mem£t
(&
ªc‹d_node
, 0, (record_node));

581 
ªt
 = 
fûe_›s
->
	`ªad_ªc‹d
(
Â
, 1, &
ªc‹d_node
);

582 i‡(
ªt
 < 0){

583 
	`f˛o£
(
Â
);

584  
ªt
;

587 
	`mem˝y
(
¥Ÿe˘_ªc
, 
ªc‹d_node
.
d©a
, (*protect_rec));

589 
	`f˛o£
(
Â
);

590  
SUCCESS
;

591 
	}
}

597 
	$èx_fûe_ªad_pö
(
èx_sys_pö_ªc‹d
 * 
pö
)

599 
ªt
;

600 
FILE
 * 
Â
;

602 
fûe_ªc‹d_node
 
ªc‹d_node
;

603 
fûe_›î©e
 * 
fûe_›s
 = 
	`gë_fûe_›s
();

605 
Â
 = 
	`f›í
(
PIN_FILE
, "rb+");

606 i‡(
Â
 =
NULL
)

607  
EFILE_OPEN_FAIL
;

609 
	`mem£t
(&
ªc‹d_node
, 0, (record_node));

610 
ªt
 = 
fûe_›s
->
	`ªad_ªc‹d
(
Â
, 1, &
ªc‹d_node
);

611 i‡(
ªt
 < 0) {

612 
	`f˛o£
(
Â
);

613  
ªt
;

616 
	`mem˝y
(
pö
, 
ªc‹d_node
.
d©a
, (*pin));

618 
	`f˛o£
(
Â
);

619  
SUCCESS
;

620 
	}
}

626 
	$èx_fûe_ßve_pö
(
èx_sys_pö_ªc‹d
 *
pö
)

628 
ªt
;

629 
FILE
 * 
Â
;

630 
fûe_hód_node
 
hód_node
;

631 
fûe_ªc‹d_node
 
ªc‹d_node
;

632 
èx_sys_pö_ªc‹d
 
‹i_pö
;

634 
fûe_›î©e
 * 
fûe_›s
 = 
	`gë_fûe_›s
();

635 
èx_sys_pö_ªc‹d
 * 
gp_pö
 = 
	`gë_pö
();

638 *
gp_pö
 = *
pö
;

640 
Â
 = 
	`f›í
(
PIN_FILE
, "rb+");

641 i‡(
Â
 =
NULL
)

642  -
EFILE_OPEN_FAIL
;

645 
	`mem£t
(&
ªc‹d_node
, 0, (record_node));

646 
	`mem˝y
(
ªc‹d_node
.
d©a
, 
pö
, (*pin));

648 
ªt
 = 
fûe_›s
->
	`ªad_hód
(
Â
, &
hód_node
);

649 i‡(
ªt
 < 0)

650 
Áû
;

652 i‡(
hód_node
.
ªc‹d_vaûd_cou¡
 == 0) {

653 
ªt
 = 
fûe_›s
->
	`≠≥nd_ªc‹d
(
Â
, &
ªc‹d_node
);

654 i‡(
ªt
 < 0)

655 
Áû
;

658 
ªt
 = 
	`èx_fûe_ªad_pö
(&
‹i_pö
);

659 i‡(
ªt
 < 0)

660 
Áû
;

662 
ªt
 = 
	`èx_fûe_ßve_‹igö_pö
(&
‹i_pö
);

663 i‡(
ªt
 < 0)

664 
Áû
;

666 
ªt
 = 
fûe_›s
->
	`modify_ªc‹d
(
Â
, 1, &
ªc‹d_node
);

667 i‡(
ªt
 < 0)

668 
Áû
;

671 
ªt
 = 
SUCCESS
;

673 
Áû
:

674 
	`f˛o£
(
Â
);

675  
ªt
;

676 
	}
}

682 
	$èx_fûe_ßve_‹igö_pö
(
èx_sys_pö_ªc‹d
 *
pö
)

684 
ªt
;

685 
FILE
 * 
Â
;

686 
fûe_hód_node
 
hód_node
;

687 
fûe_ªc‹d_node
 
ªc‹d_node
;

689 
fûe_›î©e
 * 
fûe_›s
 = 
	`gë_fûe_›s
();

690 
èx_sys_pö_ªc‹d
 * 
gp_‹igö_pö
 = 
	`gë_‹igö_pö
();

693 *
gp_‹igö_pö
 = *
pö
;

695 
Â
 = 
	`f›í
(
ORIGIN_PIN_FILE
, "rb+");

696 i‡(
Â
 =
NULL
)

697  -
EFILE_OPEN_FAIL
;

700 
	`mem£t
(&
ªc‹d_node
, 0, (record_node));

701 
	`mem˝y
(
ªc‹d_node
.
d©a
, 
pö
, (*pin));

703 
ªt
 = 
fûe_›s
->
	`ªad_hód
(
Â
, &
hód_node
);

704 i‡(
ªt
 < 0)

705 
Áû
;

707 i‡(
hód_node
.
ªc‹d_vaûd_cou¡
 == 0) {

709 
ªt
 = 
fûe_›s
->
	`≠≥nd_ªc‹d
(
Â
, &
ªc‹d_node
);

710 i‡(
ªt
 < 0)

711 
Áû
;

713 
ªt
 = 
fûe_›s
->
	`modify_ªc‹d
(
Â
, 1, &
ªc‹d_node
);

714 i‡(
ªt
 < 0)

715 
Áû
;

718 
ªt
 = 
SUCCESS
;

719 
Áû
:

720 
	`f˛o£
(
Â
);

721  
ªt
;

722 
	}
}

728 
	$èx_fûe_ªad_‹igö_pö
(
èx_sys_pö_ªc‹d
 * 
‹igö_pö
)

730 
ªt
;

731 
FILE
 * 
Â
;

733 
fûe_ªc‹d_node
 
ªc‹d_node
;

734 
fûe_›î©e
 * 
fûe_›s
 = 
	`gë_fûe_›s
();

736 
Â
 = 
	`f›í
(
ORIGIN_PIN_FILE
, "rb+");

737 i‡(
Â
 =
NULL
)

738  
EFILE_OPEN_FAIL
;

740 
	`mem£t
(&
ªc‹d_node
, 0, (record_node));

741 
ªt
 = 
fûe_›s
->
	`ªad_ªc‹d
(
Â
, 1, &
ªc‹d_node
);

742 i‡(
ªt
 < 0) {

743 
	`f˛o£
(
Â
);

744  
ªt
;

747 
	`mem˝y
(
‹igö_pö
, 
ªc‹d_node
.
d©a
, (*origin_pin));

749 
	`f˛o£
(
Â
);

750  
SUCCESS
;

751 
	}
}

757 
	$èx_fûe_ßve_≠p_öfo
(
èx_sys_≠p_öfo
 * 
≠p_öfo
)

759 
ªt
;

760 
FILE
 * 
Â
;

762 
fûe_hód_node
 
hód_node
;

763 
fûe_ªc‹d_node
 
ªc‹d_node
;

765 
fûe_›î©e
 * 
fûe_›s
 = 
	`gë_fûe_›s
();

766 
èx_sys_≠p_öfo
 * 
gp_≠p_öfo
 = 
	`gë_sys_≠p_öfo
();

769 *
gp_≠p_öfo
 = *
≠p_öfo
;

771 
Â
 = 
	`f›í
(
APP_FILE
, "rb+");

772 i‡(
Â
 =
NULL
)

773  -
EFILE_OPEN_FAIL
;

776 
	`mem£t
(&
ªc‹d_node
, 0, (record_node));

777 
	`mem˝y
(
ªc‹d_node
.
d©a
, 
≠p_öfo
, (*app_info));

779 
ªt
 = 
fûe_›s
->
	`ªad_hód
(
Â
, &
hód_node
);

780 i‡(
ªt
 < 0)

781 
Áû
;

783 i‡(
hód_node
.
ªc‹d_vaûd_cou¡
 == 0) {

785 
ªt
 = 
fûe_›s
->
	`≠≥nd_ªc‹d
(
Â
, &
ªc‹d_node
);

786 i‡(
ªt
 < 0)

787 
Áû
;

789 
ªt
 = 
fûe_›s
->
	`modify_ªc‹d
(
Â
, 1, &
ªc‹d_node
);

790 i‡(
ªt
 < 0)

791 
Áû
;

794 
ªt
 = 
SUCCESS
;

795 
Áû
:

796 
	`f˛o£
(
Â
);

797  
ªt
;

798 
	}
}

804 
	$èx_fûe_ªad_≠p_öfo
(
èx_sys_≠p_öfo
 * 
≠p_öfo
)

806 
ªt
;

807 
FILE
 * 
Â
;

809 
fûe_ªc‹d_node
 
ªc‹d_node
;

810 
fûe_›î©e
 * 
fûe_›s
 = 
	`gë_fûe_›s
();

812 
Â
 = 
	`f›í
(
APP_FILE
, "rb+");

813 i‡(
Â
 =
NULL
)

814  
EFILE_OPEN_FAIL
;

816 
	`mem£t
(&
ªc‹d_node
, 0, (record_node));

817 
ªt
 = 
fûe_›s
->
	`ªad_ªc‹d
(
Â
, 1, &
ªc‹d_node
);

818 i‡(
ªt
 < 0) {

819 
	`f˛o£
(
Â
);

820  
ªt
;

823 
	`mem˝y
(
≠p_öfo
, 
ªc‹d_node
.
d©a
, (*app_info));

825 
	`f˛o£
(
Â
);

826  
SUCCESS
;

827 
	}
}

833 
	$èx_fûe_ßve_his_≠p_öfo
(
èx_sys_his_≠p_öfo
 * 
his_≠p_öfo
)

835 
ªt
;

836 
FILE
 * 
Â
;

838 
fûe_hód_node
 
hód_node
;

839 
fûe_ªc‹d_node
 
ªc‹d_node
;

840 
fûe_›î©e
 * 
fûe_›s
 = 
	`gë_fûe_›s
();

842 
Â
 = 
	`f›í
(
HISTORY_APP_FILE
, "rb+");

843 i‡(
Â
 =
NULL
)

844  -
EFILE_OPEN_FAIL
;

847 
	`mem£t
(&
ªc‹d_node
, 0, (record_node));

848 
	`mem˝y
(
ªc‹d_node
.
d©a
, 
his_≠p_öfo
, (*his_app_info));

850 
ªt
 = 
fûe_›s
->
	`ªad_hód
(
Â
, &
hód_node
);

851 i‡(
ªt
 < 0)

852 
Áû
;

854 i‡(
hód_node
.
ªc‹d_vaûd_cou¡
 == 0) {

856 
ªt
 = 
fûe_›s
->
	`≠≥nd_ªc‹d
(
Â
, &
ªc‹d_node
);

857 i‡(
ªt
 < 0)

858 
Áû
;

860 
ªt
 = 
fûe_›s
->
	`modify_ªc‹d
(
Â
, 1, &
ªc‹d_node
);

861 i‡(
ªt
 < 0)

862 
Áû
;

865 
ªt
 = 
SUCCESS
;

867 
Áû
:

868 
	`f˛o£
(
Â
);

869  
ªt
;

870 
	}
}

876 
	$èx_fûe_ªad_his_≠p_öfo
(
èx_sys_his_≠p_öfo
 * 
his_≠p_öfo
)

878 
ªt
;

879 
FILE
 * 
Â
;

881 
fûe_ªc‹d_node
 
ªc‹d_node
;

882 
fûe_›î©e
 * 
fûe_›s
 = 
	`gë_fûe_›s
();

884 
Â
 = 
	`f›í
(
APP_FILE
, "rb+");

885 i‡(
Â
 =
NULL
)

886  
EFILE_OPEN_FAIL
;

888 
	`mem£t
(&
ªc‹d_node
, 0, (record_node));

889 
ªt
 = 
fûe_›s
->
	`ªad_ªc‹d
(
Â
, 1, &
ªc‹d_node
);

890 i‡(
ªt
 < 0) {

891 
	`f˛o£
(
Â
);

892  
ªt
;

895 
	`mem˝y
(
his_≠p_öfo
, 
ªc‹d_node
.
d©a
, (*his_app_info));

897 
	`f˛o£
(
Â
);

898  
SUCCESS
;

899 
	}
}

905 
	$èx_fûe_ßve_amou¡
(
èx_sys_amou¡_ªc‹d
 * 
amou¡_ªc
)

907 
ªt
;

908 
FILE
 * 
Â
;

910 
fûe_hód_node
 
hód_node
;

911 
fûe_ªc‹d_node
 
ªc‹d_node
;

912 
fûe_›î©e
 * 
fûe_›s
 = 
	`gë_fûe_›s
();

914 
Â
 = 
	`f›í
(
AMOUNT_FILE
, "rb+");

915 i‡(
Â
 =
NULL
)

916  -
EFILE_OPEN_FAIL
;

918 
	`mem£t
(&
ªc‹d_node
, 0, (record_node));

919 
	`mem˝y
(
ªc‹d_node
.
d©a
, 
amou¡_ªc
, (*amount_rec));

921 
ªt
 = 
fûe_›s
->
	`ªad_hód
(
Â
, &
hód_node
);

922 i‡(
ªt
 < 0)

923 
Áû
;

925 i‡(
hód_node
.
ªc‹d_vaûd_cou¡
 == 0) {

926 
ªt
 = 
fûe_›s
->
	`≠≥nd_ªc‹d
(
Â
, &
ªc‹d_node
);

927 i‡(
ªt
 < 0)

928 
Áû
;

930 
ªt
 = 
fûe_›s
->
	`modify_ªc‹d
(
Â
, 1, &
ªc‹d_node
);

931 i‡(
ªt
 < 0)

932 
Áû
;

935 
ªt
 = 
SUCCESS
;

937 
Áû
:

938 
	`f˛o£
(
Â
);

939  
ªt
;

940 
	}
}

946 
	$èx_fûe_ªad_amou¡
(
èx_sys_amou¡_ªc‹d
 * 
amou¡_ªc
)

948 
ªt
;

949 
FILE
 * 
Â
;

951 
fûe_ªc‹d_node
 
ªc‹d_node
;

952 
fûe_hód_node
 
hód_node
;

953 
fûe_›î©e
 * 
fûe_›s
 = 
	`gë_fûe_›s
();

955 
Â
 = 
	`f›í
(
AMOUNT_FILE
, "rb+");

956 i‡(
Â
 =
NULL
)

957  -
EFILE_OPEN_FAIL
;

959 
ªt
 = 
fûe_›s
->
	`ªad_hód
(
Â
, &
hód_node
);

960 i‡(
ªt
 < 0) {

961 
	`f˛o£
(
Â
);

962  
ªt
;

965 i‡(
hód_node
.
ªc‹d_vaûd_cou¡
 == 0) {

966 
	`f˛o£
(
Â
);

967  -
EFILE_NO_REC
;

970 
	`mem£t
(&
ªc‹d_node
, 0, (record_node));

971 
ªt
 = 
fûe_›s
->
	`ªad_ªc‹d
(
Â
, 1, &
ªc‹d_node
);

972 i‡(
ªt
 < 0) {

973 
	`f˛o£
(
Â
);

974  
ªt
;

977 
	`mem˝y
(
amou¡_ªc
, 
ªc‹d_node
.
d©a
, (amount_rec));

979 
	`f˛o£
(
Â
);

980  
SUCCESS
;

981 
	}
}

987 
	$èx_fûe_ßve_buyed_rﬁl
(
èx_sys_buy_rﬁl_ªc‹d
 * 
buyed_rﬁl
)

989 
ªt
;

990 
FILE
 * 
Â
;

992 
fûe_hód_node
 
hód_node
;

993 
fûe_ªc‹d_node
 
ªc‹d_node
;

994 
fûe_›î©e
 * 
fûe_›s
 = 
	`gë_fûe_›s
();

996 
Â
 = 
	`f›í
(
BUYED_ROLL_FILE
, "rb+");

997 i‡(
Â
 =
NULL
)

998  -
EFILE_OPEN_FAIL
;

1000 
	`mem£t
(&
ªc‹d_node
, 0, (record_node));

1001 
	`mem˝y
(
ªc‹d_node
.
d©a
, 
buyed_rﬁl
, (*buyed_roll));

1003 
ªt
 = 
fûe_›s
->
	`ªad_hód
(
Â
, &
hód_node
);

1004 i‡(
ªt
 < 0)

1005 
Áû
;

1007 i‡(
hód_node
.
ªc‹d_vaûd_cou¡
 == 0) {

1008 
ªt
 = 
fûe_›s
->
	`≠≥nd_ªc‹d
(
Â
, &
ªc‹d_node
);

1009 i‡(
ªt
 < 0)

1010 
Áû
;

1012 
ªt
 = 
fûe_›s
->
	`modify_ªc‹d
(
Â
, 1, &
ªc‹d_node
);

1013 i‡(
ªt
 < 0)

1014 
Áû
;

1017 
ªt
 = 
SUCCESS
;

1019 
Áû
:

1020 
	`f˛o£
(
Â
);

1021  
ªt
;

1022 
	}
}

1028 
	$èx_fûe_ªad_buyed_rﬁl
(
èx_sys_buy_rﬁl_ªc‹d
 * 
buyed_rﬁl
)

1030 
ªt
;

1031 
FILE
 * 
Â
;

1033 
fûe_ªc‹d_node
 
ªc‹d_node
;

1034 
fûe_›î©e
 * 
fûe_›s
 = 
	`gë_fûe_›s
();

1036 
Â
 = 
	`f›í
(
AMOUNT_FILE
, "rb+");

1037 i‡(
Â
 =
NULL
)

1038  
EFILE_OPEN_FAIL
;

1040 
	`mem£t
(&
ªc‹d_node
, 0, (record_node));

1041 
ªt
 = 
fûe_›s
->
	`ªad_ªc‹d
(
Â
, 1, &
ªc‹d_node
);

1042 i‡(
ªt
 < 0) {

1043 
	`f˛o£
(
Â
);

1044  
ªt
;

1047 
	`mem˝y
(
buyed_rﬁl
, 
ªc‹d_node
.
d©a
, (*buyed_roll));

1049 
	`f˛o£
(
Â
);

1050  
SUCCESS
;

1051 
	}
}

1057 
	$èx_fûe_ßve_œ°_di°
(
èx_sys_övoi˚_rﬁl_ªc‹d
 * 
di°_rﬁl_ªc
)

1059 
ªt
;

1060 
FILE
 * 
Â
;

1062 
fûe_hód_node
 
hód_node
;

1063 
fûe_ªc‹d_node
 
ªc‹d_node
;

1064 
fûe_›î©e
 * 
fûe_›s
 = 
	`gë_fûe_›s
();

1066 
Â
 = 
	`f›í
(
LAST_DIST_FILE
, "rb+");

1067 i‡(
Â
 =
NULL
)

1068  -
EFILE_OPEN_FAIL
;

1070 
	`mem£t
(&
ªc‹d_node
, 0, (record_node));

1071 
	`mem˝y
(
ªc‹d_node
.
d©a
, 
di°_rﬁl_ªc
, (*dist_roll_rec));

1073 
ªt
 = 
fûe_›s
->
	`ªad_hód
(
Â
, &
hód_node
);

1074 i‡(
ªt
 < 0)

1075 
Áû
;

1077 i‡(
hód_node
.
ªc‹d_vaûd_cou¡
 == 0) {

1078 
ªt
 = 
fûe_›s
->
	`≠≥nd_ªc‹d
(
Â
, &
ªc‹d_node
);

1079 i‡(
ªt
 < 0)

1080 
Áû
;

1082 
ªt
 = 
fûe_›s
->
	`modify_ªc‹d
(
Â
, 1, &
ªc‹d_node
);

1083 i‡(
ªt
 < 0)

1084 
Áû
;

1087 
ªt
 = 
SUCCESS
;

1089 
Áû
:

1090 
	`f˛o£
(
Â
);

1091  
ªt
;

1092 
	}
}

1098 
	$èx_fûe_ªad_œ°_di°
(
èx_sys_övoi˚_rﬁl_ªc‹d
 * 
di°_rﬁl_ªc
)

1100 
ªt
;

1101 
FILE
 * 
Â
;

1103 
fûe_ªc‹d_node
 
ªc‹d_node
;

1104 
fûe_›î©e
 * 
fûe_›s
 = 
	`gë_fûe_›s
();

1106 
Â
 = 
	`f›í
(
AMOUNT_FILE
, "rb+");

1107 i‡(
Â
 =
NULL
)

1108  
EFILE_OPEN_FAIL
;

1110 
	`mem£t
(&
ªc‹d_node
, 0, (record_node));

1111 
ªt
 = 
fûe_›s
->
	`ªad_ªc‹d
(
Â
, 1, &
ªc‹d_node
);

1112 i‡(
ªt
 < 0) {

1113 
	`f˛o£
(
Â
);

1114  
ªt
;

1117 
	`mem˝y
(
di°_rﬁl_ªc
, 
ªc‹d_node
.
d©a
, (*dist_roll_rec));

1119 
	`f˛o£
(
Â
);

1120  
SUCCESS
;

1121 
	}
}

1127 
	$èx_fûe_ßve_cur_rﬁl
(
èx_sys_buy_rﬁl_ªc‹d
 * 
cur_rﬁl_ªc‹d
)

1129 
ªt
;

1130 
FILE
 * 
Â
;

1132 
fûe_hód_node
 
hód_node
;

1133 
fûe_ªc‹d_node
 
ªc‹d_node
;

1134 
fûe_›î©e
 * 
fûe_›s
 = 
	`gë_fûe_›s
();

1135 
èx_sys_buy_rﬁl_ªc‹d
 *
gp_cur_rﬁl
 = 
	`gë_cur_rﬁl
();

1137 *
gp_cur_rﬁl
 = *
cur_rﬁl_ªc‹d
;

1139 
Â
 = 
	`f›í
(
CUR_ROLL_FILE
, "rb+");

1140 i‡(
Â
 =
NULL
)

1141  -
EFILE_OPEN_FAIL
;

1143 
	`mem£t
(&
ªc‹d_node
, 0, (record_node));

1144 
	`mem˝y
(
ªc‹d_node
.
d©a
, 
cur_rﬁl_ªc‹d
, (*cur_roll_record));

1146 
ªt
 = 
fûe_›s
->
	`ªad_hód
(
Â
, &
hód_node
);

1147 i‡(
ªt
 < 0)

1148 
Áû
;

1150 i‡(
hód_node
.
ªc‹d_vaûd_cou¡
 == 0) {

1151 
ªt
 = 
fûe_›s
->
	`≠≥nd_ªc‹d
(
Â
, &
ªc‹d_node
);

1152 i‡(
ªt
 < 0)

1153 
Áû
;

1155 
ªt
 = 
fûe_›s
->
	`modify_ªc‹d
(
Â
, 1, &
ªc‹d_node
);

1156 i‡(
ªt
 < 0)

1157 
Áû
;

1160 
ªt
 = 
SUCCESS
;

1162 
Áû
:

1163 
	`f˛o£
(
Â
);

1164  
ªt
;

1165 
	}
}

1171 
	$èx_fûe_ªad_cur_rﬁl
(
èx_sys_buy_rﬁl_ªc‹d
 * 
cur_rﬁl_ªc‹d
)

1173 
ªt
;

1174 
FILE
 * 
Â
;

1176 
fûe_ªc‹d_node
 
ªc‹d_node
;

1177 
fûe_›î©e
 * 
fûe_›s
 = 
	`gë_fûe_›s
();

1179 
Â
 = 
	`f›í
(
CUR_ROLL_FILE
, "rb+");

1180 i‡(
Â
 =
NULL
)

1181  
EFILE_OPEN_FAIL
;

1183 
	`mem£t
(&
ªc‹d_node
, 0, (record_node));

1184 
ªt
 = 
fûe_›s
->
	`ªad_ªc‹d
(
Â
, 1, &
ªc‹d_node
);

1185 i‡(
ªt
 < 0) {

1186 
	`f˛o£
(
Â
);

1187  
ªt
;

1190 
	`mem˝y
(
cur_rﬁl_ªc‹d
, 
ªc‹d_node
.
d©a
, (*cur_roll_record));

1192 
	`f˛o£
(
Â
);

1193  
SUCCESS
;

1194 
	}
}

1200 
	$èx_fûe_ßve_¸ 
(
èx_sys_cur_rﬁl_À·_ªc‹d
 *
cur_rﬁl_À·
)

1202 
ªt
;

1203 
FILE
 * 
Â
;

1205 
fûe_hód_node
 
hód_node
;

1206 
fûe_ªc‹d_node
 
ªc‹d_node
;

1207 
fûe_›î©e
 * 
fûe_›s
 = 
	`gë_fûe_›s
();

1208 
èx_sys_cur_rﬁl_À·_ªc‹d
 *
gp_cur_rﬁl_À·
 = 
	`gë_cur_rﬁl_À·
();

1210 *
gp_cur_rﬁl_À·
 = *
cur_rﬁl_À·
;

1212 
Â
 = 
	`f›í
(
CRLN_FILE
, "rb+");

1213 i‡(
Â
 =
NULL
)

1214  -
EFILE_OPEN_FAIL
;

1216 
	`mem£t
(&
ªc‹d_node
, 0, (record_node));

1217 
	`mem˝y
(
ªc‹d_node
.
d©a
, 
cur_rﬁl_À·
, (*cur_roll_left));

1219 
ªt
 = 
fûe_›s
->
	`ªad_hód
(
Â
, &
hód_node
);

1220 i‡(
ªt
 < 0)

1221 
Áû
;

1223 i‡(
hód_node
.
ªc‹d_vaûd_cou¡
 == 0) {

1224 
ªt
 = 
fûe_›s
->
	`≠≥nd_ªc‹d
(
Â
, &
ªc‹d_node
);

1225 i‡(
ªt
 < 0)

1226 
Áû
;

1228 
ªt
 = 
fûe_›s
->
	`modify_ªc‹d
(
Â
, 1, &
ªc‹d_node
);

1229 i‡(
ªt
 < 0)

1230 
Áû
;

1233 
ªt
 = 
SUCCESS
;

1235 
Áû
:

1236 
	`f˛o£
(
Â
);

1237  
ªt
;

1238 
	}
}

1244 
	$èx_fûe_ªad_¸ 
(
èx_sys_cur_rﬁl_À·_ªc‹d
 * 
cur_rﬁl_À·
)

1246 
ªt
;

1247 
FILE
 * 
Â
;

1249 
fûe_ªc‹d_node
 
ªc‹d_node
;

1250 
fûe_›î©e
 * 
fûe_›s
 = 
	`gë_fûe_›s
();

1252 
Â
 = 
	`f›í
(
CRLN_FILE
, "rb+");

1253 i‡(
Â
 =
NULL
)

1254  
EFILE_OPEN_FAIL
;

1256 
	`mem£t
(&
ªc‹d_node
, 0, (record_node));

1257 
ªt
 = 
fûe_›s
->
	`ªad_ªc‹d
(
Â
, 1, &
ªc‹d_node
);

1258 i‡(
ªt
 < 0) {

1259 
	`f˛o£
(
Â
);

1260  
ªt
;

1263 
	`mem˝y
(
cur_rﬁl_À·
, 
ªc‹d_node
.
d©a
, (*cur_roll_left));

1265 
	`f˛o£
(
Â
);

1266  
SUCCESS
;

1267 
	}
}

1273 
	$èx_fûe_ßve_övoi˚_cfg
(
èx_sys_id_cfg_ªc‹d
 * 
övoi˚_cfg_ªc
)

1275 
ªt
;

1276 
FILE
 * 
Â
;

1278 
fûe_hód_node
 
hód_node
;

1279 
fûe_ªc‹d_node
 
ªc‹d_node
;

1280 
fûe_›î©e
 * 
fûe_›s
 = 
	`gë_fûe_›s
();

1282 
Â
 = 
	`f›í
(
INVOICE_ID_CFG_FILE
, "rb+");

1283 i‡(
Â
 =
NULL
)

1284  -
EFILE_OPEN_FAIL
;

1286 
	`mem£t
(&
ªc‹d_node
, 0, (record_node));

1287 
	`mem˝y
(
ªc‹d_node
.
d©a
, 
övoi˚_cfg_ªc
, (*invoice_cfg_rec));

1289 
ªt
 = 
fûe_›s
->
	`ªad_hód
(
Â
, &
hód_node
);

1290 i‡(
ªt
 < 0)

1291 
Áû
;

1293 i‡(
hód_node
.
ªc‹d_vaûd_cou¡
 == 0) {

1294 
ªt
 = 
fûe_›s
->
	`≠≥nd_ªc‹d
(
Â
, &
ªc‹d_node
);

1295 i‡(
ªt
 < 0)

1296 
Áû
;

1298 
ªt
 = 
fûe_›s
->
	`modify_ªc‹d
(
Â
, 1, &
ªc‹d_node
);

1299 i‡(
ªt
 < 0)

1300 
Áû
;

1303 
ªt
 = 
SUCCESS
;

1305 
Áû
:

1306 
	`f˛o£
(
Â
);

1307  
ªt
;

1308 
	}
}

1314 
	$èx_fûe_ªad_övoi˚_cfg
(
èx_sys_id_cfg_ªc‹d
 * 
övoi˚_cfg_ªc
)

1316 
ªt
;

1317 
FILE
 * 
Â
;

1319 
fûe_ªc‹d_node
 
ªc‹d_node
;

1320 
fûe_›î©e
 * 
fûe_›s
 = 
	`gë_fûe_›s
();

1322 
Â
 = 
	`f›í
(
INVOICE_ID_CFG_FILE
, "rb+");

1323 i‡(
Â
 =
NULL
)

1324  
EFILE_OPEN_FAIL
;

1326 
	`mem£t
(&
ªc‹d_node
, 0, (record_node));

1327 
ªt
 = 
fûe_›s
->
	`ªad_ªc‹d
(
Â
, 1, &
ªc‹d_node
);

1328 i‡(
ªt
 < 0) {

1329 
	`f˛o£
(
Â
);

1330  
ªt
;

1333 
	`mem˝y
(
övoi˚_cfg_ªc
, 
ªc‹d_node
.
d©a
, (*invoice_cfg_rec));

1335 
	`f˛o£
(
Â
);

1336  
SUCCESS
;

1337 
	}
}

1343 
	$èx_fûe_ßve_£c_övoi˚
()

1348  
SUCCESS
;

1349 
	}
}

1355 
	$èx_fûe_ªad_£c_övoi˚
()

1361  
SUCCESS
;

1362 
	}
}

1374 
	$èx_fûe_≠≥nd_daûy_cﬁÀ˘
(
èx_sys_daûy_cﬁÀ˘_ªc‹d
 * 
daûy_cﬁÀ˘_ªc
)

1376 
ªt
;

1377 
FILE
 * 
Â
;

1379 
fûe_hód_node
 
hód_node
;

1380 
fûe_ªc‹d_node
 
ªc‹d_node
;

1381 
fûe_›î©e
 * 
fûe_›s
 = 
	`gë_fûe_›s
();

1383 
Â
 = 
	`f›í
(
DAILY_COLLECT_FILE
, "rb+");

1384 i‡(
Â
 =
NULL
)

1385  -
EFILE_OPEN_FAIL
;

1387 
	`mem£t
(&
ªc‹d_node
, 0, (record_node));

1388 
	`mem˝y
(
ªc‹d_node
.
d©a
, 
daûy_cﬁÀ˘_ªc
, (*daily_collect_rec));

1390 
ªt
 = 
fûe_›s
->
	`ªad_hód
(
Â
, &
hód_node
);

1391 i‡(
ªt
 < 0)

1392 
Áû
;

1394 i‡(
hód_node
.
ªc‹d_tŸÆ_cou¡
 =hód_node.
max_ªc‹d
) {

1395 
ªt
 = -
EFILE_REC_FULL
;

1396 
Áû
;

1399 
ªt
 = 
fûe_›s
->
	`≠≥nd_ªc‹d
(
Â
, &
ªc‹d_node
);

1400 i‡(
ªt
 < 0)

1401 
Áû
;

1403 
ªt
 = 
SUCCESS
;

1404 
Áû
:

1405 
	`f˛o£
(
Â
);

1406  
ªt
;

1407 
	}
}

1418 
	$èx_fûe_modify_daûy_cﬁÀ˘
(
off£t
,

1419 
èx_sys_daûy_cﬁÀ˘_ªc‹d
 * 
daûy_cﬁÀ˘_ªc
)

1421 
ªt
;

1422 
FILE
 * 
Â
;

1424 
fûe_ªc‹d_node
 
ªc‹d_node
;

1425 
fûe_›î©e
 * 
fûe_›s
 = 
	`gë_fûe_›s
();

1427 
Â
 = 
	`f›í
(
DAILY_COLLECT_FILE
, "rb+");

1428 i‡(
Â
 =
NULL
)

1429  -
EFILE_OPEN_FAIL
;

1431 
	`mem£t
(&
ªc‹d_node
, 0, (record_node));

1432 
ªt
 = 
fûe_›s
->
	`ªad_ªc‹d
(
Â
, 
off£t
, &
ªc‹d_node
);

1433 i‡(
ªt
 < 0)

1434 
Áû
;

1436 
	`mem˝y
(
ªc‹d_node
.
d©a
, 
daûy_cﬁÀ˘_ªc
, (*daily_collect_rec));

1438 
ªt
 = 
fûe_›s
->
	`modify_ªc‹d
(
Â
, 
off£t
, &
ªc‹d_node
);

1439 i‡(
ªt
 < 0)

1440 
Áû
;

1442 
ªt
 = 
SUCCESS
;

1444 
Áû
:

1445 
	`f˛o£
(
Â
);

1446  
ªt
;

1447 
	}
}

1454 
	$èx_fûe_ªad_daûy_cﬁÀ˘
(
off£t
,

1455 
èx_sys_daûy_cﬁÀ˘_ªc‹d
 * 
daûy_cﬁÀ˘_ªc
)

1457 
ªt
;

1458 
FILE
 * 
Â
;

1460 
fûe_ªc‹d_node
 
ªc‹d_node
;

1461 
fûe_›î©e
 * 
fûe_›s
 = 
	`gë_fûe_›s
();

1463 
Â
 = 
	`f›í
(
DAILY_COLLECT_FILE
, "rb+");

1464 i‡(
Â
 =
NULL
)

1465  -
EFILE_OPEN_FAIL
;

1467 
	`mem£t
(&
ªc‹d_node
, 0, (record_node));

1468 
ªt
 = 
fûe_›s
->
	`ªad_ªc‹d
(
Â
, 
off£t
, &
ªc‹d_node
);

1469 i‡(
ªt
 < 0) {

1470 
	`f˛o£
(
Â
);

1471  
ªt
;

1474 
	`mem˝y
(
daûy_cﬁÀ˘_ªc
, 
ªc‹d_node
.
d©a
, (*daily_collect_rec));

1476 
	`f˛o£
(
Â
);

1477  
SUCCESS
;

1478 
	}
}

1486 
	$èx_fûe_föd_daûy_cﬁÀ˘
(
bcd_d©e
 * 
d©e
,

1487 
èx_sys_daûy_cﬁÀ˘_ªc‹d
 * 
daûy_cﬁÀ˘_ªc
)

1489 
ªt
;

1490 
i
, 
tŸÆ_ªc
;

1491 
FILE
 * 
Â
;

1493 
fûe_hód_node
 
hód_node
;

1494 
fûe_ªc‹d_node
 
ªc‹d_node
;

1495 
èx_sys_daûy_cﬁÀ˘_ªc‹d
 
tmp_ªc
;

1497 
π_›î©e
 * 
π_›s
 = 
	`gë_π_›s
();

1498 
fûe_›î©e
 * 
fûe_›s
 = 
	`gë_fûe_›s
();

1500 
Â
 = 
	`f›í
(
DAILY_COLLECT_FILE
, "rb+");

1501 i‡(
Â
 =
NULL
)

1502  -
EFILE_OPEN_FAIL
;

1504 
	`mem£t
(&
hód_node
, 0, (head_node));

1505 
ªt
 = 
fûe_›s
->
	`ªad_hód
(
Â
, &
hód_node
);

1506 i‡(
ªt
 < 0)

1507 
Áû
;

1509 
tŸÆ_ªc
 = 
hód_node
.
ªc‹d_vaûd_cou¡
;

1511 
i
 = 0; i < 
tŸÆ_ªc
; i++) {

1512 
ªt
 = 
fûe_›s
->
	`ªad_ªc‹d
(
Â
, 
i
 + 1, &
ªc‹d_node
);

1513 i‡(
ªt
 < 0)

1514 
Áû
;

1516 
	`mem˝y
(&
tmp_ªc
, 
ªc‹d_node
.
d©a
, (tmp_rec));

1517 i‡(
π_›s
->
	`cmp_bcd_d©e
(
d©e
, &
tmp_ªc
.
cur_d©e
) == 0) {

1518 *
daûy_cﬁÀ˘_ªc
 = 
tmp_ªc
;

1520 
	`f˛o£
(
Â
);

1521  
i
 + 1;

1525 
ªt
 = -
EFILE_NO_REC
;

1527 
Áû
:

1529 
	`f˛o£
(
Â
);

1530  
ªt
;

1531 
	}
}

1538 
	$èx_fûe_föd_chk_daûy_idx
(
èx_sys_check_idx
 *
chk_öx
)

1540 
ªt
;

1541 
i
, 
tŸÆ_ªc
;

1542 
°¨t_found
;

1543 
FILE
 * 
Â
;

1545 
fûe_hód_node
 
hód_node
;

1546 
fûe_ªc‹d_node
 
ªc‹d_node
;

1547 
èx_sys_daûy_cﬁÀ˘_ªc‹d
 
tmp_ªc
;

1548 
π_›î©e
 * 
π_›s
 = 
	`gë_π_›s
();

1549 
fûe_›î©e
 * 
fûe_›s
 = 
	`gë_fûe_›s
();

1551 
Â
 = 
	`f›í
(
DAILY_COLLECT_FILE
, "rb+");

1552 i‡(
Â
 =
NULL
)

1553  -
EFILE_OPEN_FAIL
;

1555 
	`mem£t
(&
hód_node
, 0, (head_node));

1556 
ªt
 = 
fûe_›s
->
	`ªad_hód
(
Â
, &
hód_node
);

1557 i‡(
ªt
 < 0)

1558 
Áû
;

1560 
tŸÆ_ªc
 = 
hód_node
.
ªc‹d_vaûd_cou¡
;

1562 
°¨t_found
 = 0;

1563 
i
 = 0; i < 
tŸÆ_ªc
; i++) {

1564 
ªt
 = 
fûe_›s
->
	`ªad_ªc‹d
(
Â
, 
i
 + 1, &
ªc‹d_node
);

1565 i‡(
ªt
 < 0)

1566 
Áû
;

1568 
	`mem˝y
(&
tmp_ªc
, 
ªc‹d_node
.
d©a
, (tmp_rec));

1569 i‡(
π_›s
->
	`cmp_bcd_d©e
(&
tmp_ªc
.
cur_d©e
, &
chk_öx
->
°¨t_d©e
) < 0)

1572 i‡((
π_›s
->
	`cmp_bcd_d©e
(&
tmp_ªc
.
cur_d©e
, &
chk_öx
->
°¨t_d©e
) >= 0)

1573 && (
π_›s
->
	`cmp_bcd_d©e
(&
tmp_ªc
.
cur_d©e
, &
chk_öx
->
íd_d©e
) <= 0)) {

1574 i‡(
°¨t_found
 == 0) {

1575 
chk_öx
->
°¨t_off£t
 = 
i
 + 1;

1576 
°¨t_found
 = 1;

1578 
chk_öx
->
ªc_num
 ++;

1579 
chk_öx
->
íd_off£t
 = 
i
 + 1;

1583 i‡(
°¨t_found
 == 0)

1584 
ªt
 = -
EFILE_NO_REC
;

1586 
ªt
 = 
SUCCESS
;

1588 
Áû
:

1590 
	`f˛o£
(
Â
);

1591  
ªt
;

1592 
	}
}

1599 
	$èx_fûe_föd_≥riod_cﬁÀ˘
(
èx_sys_≥riod_cﬁÀ˘_ªc‹d
 * 
cﬁÀ˘_ªc
)

1601 
ªt
;

1602 
i
, 
j
, 
cou¡
, 
tŸÆ_ªc
;

1603 
FILE
 * 
Â
;

1605 
fûe_hód_node
 
hód_node
;

1606 
fûe_ªc‹d_node
 
ªc‹d_node
;

1607 
èx_sys_daûy_cﬁÀ˘_ªc‹d
 
tmp_ªc
;

1608 
π_›î©e
 * 
π_›s
 = 
	`gë_π_›s
();

1609 
fûe_›î©e
 * 
fûe_›s
 = 
	`gë_fûe_›s
();

1611 
Â
 = 
	`f›í
(
DAILY_COLLECT_FILE
, "rb+");

1612 i‡(
Â
 =
NULL
)

1613  -
EFILE_OPEN_FAIL
;

1615 
	`mem£t
(&
hód_node
, 0, (head_node));

1616 
ªt
 = 
fûe_›s
->
	`ªad_hód
(
Â
, &
hód_node
);

1617 i‡(
ªt
 < 0)

1618 
Áû
;

1620 
tŸÆ_ªc
 = 
hód_node
.
ªc‹d_vaûd_cou¡
;

1622 
cou¡
 = 0;

1623 
i
 = 
tŸÆ_ªc
; i > 0; i--) {

1624 
ªt
 = 
fûe_›s
->
	`ªad_ªc‹d
(
Â
, 
i
, &
ªc‹d_node
);

1625 i‡(
ªt
 < 0)

1626 
Áû
;

1628 
	`mem˝y
(&
tmp_ªc
, 
ªc‹d_node
.
d©a
, (*
cﬁÀ˘_ªc
));

1629 i‡(
π_›s
->
	`cmp_bcd_d©e
(&
cﬁÀ˘_ªc
->
íd_d©e
, &
tmp_ªc
.
cur_d©e
) < 0)

1632 i‡(
π_›s
->
	`cmp_bcd_d©e
(&
cﬁÀ˘_ªc
->
°¨t_d©e
, &
tmp_ªc
.
cur_d©e
) > 0)

1635 i‡(
π_›s
->
	`cmp_bcd_d©e
(&
cﬁÀ˘_ªc
->
íd_d©e
, &
tmp_ªc
.
cur_d©e
) >= 0 &&

1636 
π_›s
->
	`cmp_bcd_d©e
(&
cﬁÀ˘_ªc
->
°¨t_d©e
, &
tmp_ªc
.
cur_d©e
) <= 0) {

1638 
cﬁÀ˘_ªc
->
vÆid_cou¡
 +
tmp_ªc
.valid_count;

1639 
cﬁÀ˘_ªc
->
ªtu∫_cou¡
 +
tmp_ªc
.return_count;

1640 
cﬁÀ˘_ªc
->
•oû_cou¡
 +
tmp_ªc
.spoil_count;

1642 
j
 = 0; j < 
MAX_USER_TAXRATE
; j++) {

1643 
cﬁÀ˘_ªc
->
amt_vÆid
 +
tmp_ªc
.amt_vÆid[
j
];

1644 
cﬁÀ˘_ªc
->
amt_ªtu∫
 +
tmp_ªc
.amt_ªtu∫[
j
];

1647 
cou¡
 ++;

1651 i‡(
cou¡
 == 0)

1652 
ªt
 = -
EFILE_NO_REC
;

1654 
ªt
 = 
SUCCESS
;

1656 
Áû
:

1658 
	`f˛o£
(
Â
);

1659  
ªt
;

1660 
	}
}

1667 
	$èx_fûe_≠≥nd_de˛¨e_duty
(
èx_sys_de˛¨e_duty_ªc‹d
 * 
de˛¨e_duty_ªc
)

1669 
ªt
;

1670 
FILE
 * 
Â
;

1672 
fûe_hód_node
 
hód_node
;

1673 
fûe_ªc‹d_node
 
ªc‹d_node
;

1674 
fûe_›î©e
 * 
fûe_›s
 = 
	`gë_fûe_›s
();

1676 
Â
 = 
	`f›í
(
DECLARE_DUTY_FILE
, "rb+");

1677 i‡(
Â
 =
NULL
)

1678  -
EFILE_OPEN_FAIL
;

1680 
	`mem£t
(&
ªc‹d_node
, 0, (record_node));

1681 
	`mem˝y
(
ªc‹d_node
.
d©a
, 
de˛¨e_duty_ªc
, (*declare_duty_rec));

1683 
ªt
 = 
fûe_›s
->
	`ªad_hód
(
Â
, &
hód_node
);

1684 i‡(
ªt
 < 0)

1685 
Áû
;

1687 i‡(
hód_node
.
ªc‹d_tŸÆ_cou¡
 =hód_node.
max_ªc‹d
)

1688  -
EFILE_REC_FULL
;

1690 
ªt
 = 
fûe_›s
->
	`≠≥nd_ªc‹d
(
Â
, &
ªc‹d_node
);

1691 i‡(
ªt
 < 0)

1692 
Áû
;

1694 
ªt
 = 
SUCCESS
;

1696 
Áû
:

1697 
	`f˛o£
(
Â
);

1698  
ªt
;

1699 
	}
}

1706 
	$èx_fûe_modify_de˛¨e_duty
(
off£t
, 
èx_sys_de˛¨e_duty_ªc‹d
 * 
de˛¨e_duty_ªc
)

1711  
SUCCESS
;

1712 
	}
}

1719 
	$èx_fûe_ªad_de˛¨e_duty
(
off£t
,

1720 
èx_sys_de˛¨e_duty_ªc‹d
 * 
de˛¨e_duty_ªc
)

1722 
ªt
;

1723 
FILE
 * 
Â
;

1725 
fûe_ªc‹d_node
 
ªc‹d_node
;

1726 
fûe_›î©e
 * 
fûe_›s
 = 
	`gë_fûe_›s
();

1728 
Â
 = 
	`f›í
(
DECLARE_DUTY_FILE
, "rb+");

1729 i‡(
Â
 =
NULL
)

1730  -
EFILE_OPEN_FAIL
;

1732 
	`mem£t
(&
ªc‹d_node
, 0, (record_node));

1733 
ªt
 = 
fûe_›s
->
	`ªad_ªc‹d
(
Â
, 
off£t
, &
ªc‹d_node
);

1734 i‡(
ªt
 < 0) {

1735 
	`f˛o£
(
Â
);

1736  
ªt
;

1739 
	`mem˝y
(
de˛¨e_duty_ªc
, 
ªc‹d_node
.
d©a
, (*declare_duty_rec));

1741 
	`f˛o£
(
Â
);

1742  
SUCCESS
;

1743 
	}
}

1750 
	$èx_fûe_föd_de˛¨e_duty
(
bcd_d©e
 * 
d©e
,

1751 
èx_sys_de˛¨e_duty_ªc‹d
 * 
de˛¨e_duty_ªc
)

1753 
ªt
;

1754 
i
, 
tŸÆ_ªc
;

1755 
FILE
 * 
Â
;

1757 
fûe_hód_node
 
hód_node
;

1758 
fûe_ªc‹d_node
 
ªc‹d_node
;

1759 
èx_sys_de˛¨e_duty_ªc‹d
 
tmp_ªc
;

1761 
π_›î©e
 * 
π_›s
 = 
	`gë_π_›s
();

1762 
fûe_›î©e
 * 
fûe_›s
 = 
	`gë_fûe_›s
();

1764 
Â
 = 
	`f›í
(
DECLARE_DUTY_FILE
, "rb+");

1765 i‡(
Â
 =
NULL
)

1766  -
EFILE_OPEN_FAIL
;

1768 
	`mem£t
(&
hód_node
, 0, (head_node));

1769 
ªt
 = 
fûe_›s
->
	`ªad_hód
(
Â
, &
hód_node
);

1770 i‡(
ªt
 < 0)

1771 
Áû
;

1773 
tŸÆ_ªc
 = 
hód_node
.
ªc‹d_vaûd_cou¡
;

1775 
i
 = 0; i < 
tŸÆ_ªc
; i++) {

1776 
ªt
 = 
fûe_›s
->
	`ªad_ªc‹d
(
Â
, 
i
 + 1, &
ªc‹d_node
);

1777 i‡(
ªt
 < 0)

1778 
Áû
;

1780 
	`mem˝y
(&
tmp_ªc
, 
ªc‹d_node
.
d©a
, (*
de˛¨e_duty_ªc
));

1781 i‡(
π_›s
->
	`cmp_bcd_d©e
(
d©e
, &
tmp_ªc
.
cur_d©e
) == 0) {

1782 *
de˛¨e_duty_ªc
 = 
tmp_ªc
;

1784 
	`f˛o£
(
Â
);

1785  
i
 + 1;

1789 
ªt
 = -
EFILE_NO_REC
;

1791 
Áû
:

1792 
	`f˛o£
(
Â
);

1793  
ªt
;

1794 
	}
}

1801 
	$èx_fûe_föd_chk_de˛¨e_idx
(
èx_sys_check_idx
 *
chk_öx
)

1803 
ªt
;

1804 
i
, 
tŸÆ_ªc
;

1805 
°¨t_found
;

1806 
FILE
 * 
Â
;

1808 
fûe_hód_node
 
hód_node
;

1809 
fûe_ªc‹d_node
 
ªc‹d_node
;

1810 
èx_sys_de˛¨e_duty_ªc‹d
 
tmp_ªc
;

1811 
π_›î©e
 * 
π_›s
 = 
	`gë_π_›s
();

1812 
fûe_›î©e
 * 
fûe_›s
 = 
	`gë_fûe_›s
();

1814 
Â
 = 
	`f›í
(
DAILY_COLLECT_FILE
, "rb+");

1815 i‡(
Â
 =
NULL
)

1816  -
EFILE_OPEN_FAIL
;

1818 
	`mem£t
(&
hód_node
, 0, (head_node));

1819 
ªt
 = 
fûe_›s
->
	`ªad_hód
(
Â
, &
hód_node
);

1820 i‡(
ªt
 < 0)

1821 
Áû
;

1823 
tŸÆ_ªc
 = 
hód_node
.
ªc‹d_vaûd_cou¡
;

1825 
°¨t_found
 = 0;

1826 
i
 = 0; i < 
tŸÆ_ªc
; i++) {

1827 
ªt
 = 
fûe_›s
->
	`ªad_ªc‹d
(
Â
, 
i
 + 1, &
ªc‹d_node
);

1828 i‡(
ªt
 < 0)

1829 
Áû
;

1831 
	`mem˝y
(&
tmp_ªc
, 
ªc‹d_node
.
d©a
, (tmp_rec));

1832 i‡(
π_›s
->
	`cmp_bcd_d©e
(&
tmp_ªc
.
cur_d©e
, &
chk_öx
->
°¨t_d©e
) < 0)

1835 i‡((
π_›s
->
	`cmp_bcd_d©e
(&
tmp_ªc
.
cur_d©e
, &
chk_öx
->
°¨t_d©e
) >= 0)

1836 && (
π_›s
->
	`cmp_bcd_d©e
(&
tmp_ªc
.
cur_d©e
, &
chk_öx
->
íd_d©e
) <= 0)) {

1837 i‡(
°¨t_found
 == 0) {

1838 
chk_öx
->
°¨t_off£t
 = 
i
 + 1;

1839 
°¨t_found
 = 1;

1841 
chk_öx
->
ªc_num
 ++;

1842 
chk_öx
->
íd_off£t
 = 
i
 + 1;

1846 i‡(
°¨t_found
 == 0)

1847 
ªt
 = -
EFILE_NO_REC
;

1849 
ªt
 = 
SUCCESS
;

1851 
Áû
:

1853 
	`f˛o£
(
Â
);

1854  
ªt
;

1855 
	}
}

1862 
	$èx_fûe_≠≥nd_di°_rﬁl
(
èx_sys_övoi˚_rﬁl_ªc‹d
 *
di°_rﬁl_ªc
)

1864 
ªt
;

1865 
FILE
 * 
Â
;

1867 
fûe_hód_node
 
hód_node
;

1868 
fûe_ªc‹d_node
 
ªc‹d_node
;

1869 
fûe_›î©e
 * 
fûe_›s
 = 
	`gë_fûe_›s
();

1871 
Â
 = 
	`f›í
(
DIST_ROLL_FILE
, "rb+");

1872 i‡(
Â
 =
NULL
)

1873  -
EFILE_OPEN_FAIL
;

1875 
	`mem£t
(&
ªc‹d_node
, 0, (record_node));

1876 
	`mem˝y
(
ªc‹d_node
.
d©a
, 
di°_rﬁl_ªc
, (*dist_roll_rec));

1878 
ªt
 = 
fûe_›s
->
	`ªad_hód
(
Â
, &
hód_node
);

1879 i‡(
ªt
 < 0) {

1880 
	`f˛o£
(
Â
);

1881  
ªt
;

1884 i‡(
hód_node
.
ªc‹d_tŸÆ_cou¡
 =hód_node.
max_ªc‹d
)

1885  -
EFILE_REC_FULL
;

1887 
ªt
 = 
fûe_›s
->
	`≠≥nd_ªc‹d
(
Â
, &
ªc‹d_node
);

1888 i‡(
ªt
 < 0) {

1889 
	`f˛o£
(
Â
);

1890  
ªt
;

1893 
	`f˛o£
(
Â
);

1894  
SUCCESS
;

1895 
	}
}

1902 
	$èx_fûe_modify_di°_rﬁl
(
ödex
,

1903 
èx_sys_övoi˚_rﬁl_ªc‹d
* 
di°_rﬁl_ªc
)

1908  
SUCCESS
;

1909 
	}
}

1916 
	$èx_fûe_ªad_di°_rﬁl
(
off£t
,

1917 
èx_sys_övoi˚_rﬁl_ªc‹d
* 
di°_rﬁl_ªc
)

1919 
ªt
;

1920 
FILE
 * 
Â
;

1922 
fûe_ªc‹d_node
 
ªc‹d_node
;

1923 
fûe_›î©e
 * 
fûe_›s
 = 
	`gë_fûe_›s
();

1925 
Â
 = 
	`f›í
(
DIST_ROLL_FILE
, "rb+");

1926 i‡(
Â
 =
NULL
)

1927  -
EFILE_OPEN_FAIL
;

1929 
	`mem£t
(&
ªc‹d_node
, 0, (record_node));

1930 
ªt
 = 
fûe_›s
->
	`ªad_ªc‹d
(
Â
, 
off£t
, &
ªc‹d_node
);

1931 i‡(
ªt
 < 0) {

1932 
	`f˛o£
(
Â
);

1933  
ªt
;

1936 
	`mem˝y
(
di°_rﬁl_ªc
, 
ªc‹d_node
.
d©a
, (*dist_roll_rec));

1938 
	`f˛o£
(
Â
);

1939  
SUCCESS
;

1940 
	}
}

1947 
	$èx_fûe_≠≥nd_övoi˚_dëaû
(
èx_sys_övoi˚_dëaû_ªc‹d
 * 
öv_dëaû_ªc
)

1949 
ªt
;

1950 
ödex
;

1951 
«me
[
MAX_FILE_NAME_SIZE
] = {0};

1952 
FILE
 *
Â
;

1954 
fûe_hód_node
 
hód_node
;

1955 
fûe_ªc‹d_node
 
ªc‹d_node
;

1956 
èx_sys_id_cfg_ªc‹d
 
cfg_ªc‹d
;

1957 
fûe_›î©e
 *
fûe_›s
 = 
	`gë_fûe_›s
();

1959 
ªt
 = 
	`èx_fûe_ªad_övoi˚_cfg
(&
cfg_ªc‹d
);

1960 i‡(
ªt
 < 0)

1961  
ªt
;

1963 
ödex
 = 
cfg_ªc‹d
.
id_ödex
;

1964 
	`¢¥ötf
(
«me
, 
MAX_FILE_NAME_SIZE
, "%s%s%d%s", 
INVOICE_DETAIL_PATH
,

1965 
INVOICE_DETAIL_PREFIX
, 
ödex
, 
INVOICE_DETAIL_SUFFIX
);

1967 
Â
 = 
	`f›í
(
«me
, "rb+");

1968 i‡(
Â
 =
NULL
) {

1969 
	`f˛o£
(
Â
);

1970  -
EFILE_OPEN_FAIL
;

1973 
ªt
 = 
fûe_›s
->
	`ªad_hód
(
Â
, &
hód_node
);

1974 i‡(
ªt
 < 0)

1975 
Áû
;

1977 i‡(
hód_node
.
ªc‹d_tŸÆ_cou¡
 =hód_node.
max_ªc‹d
) {

1978 i‡(
ödex
 < 10)

1979 
ödex
++;

1981 
ödex
 = 1;

1983 
cfg_ªc‹d
.
id_ödex
 = 
ödex
;

1986 
	`f˛o£
(
Â
);

1988 
ªt
 = 
	`èx_fûe_ßve_övoi˚_cfg
(&
cfg_ªc‹d
);

1989 i‡(
ªt
 < 0)

1990 
Áû
;

1992 
	`mem£t
(
«me
, 0, 
MAX_FILE_NAME_SIZE
);

1993 
	`¢¥ötf
(
«me
, 
MAX_FILE_NAME_SIZE
, "%s%s%d%s", 
INVOICE_DETAIL_PATH
,

1994 
INVOICE_DETAIL_PREFIX
, 
ödex
, 
INVOICE_DETAIL_SUFFIX
);

1996 
	`èx_fûe_˛ór
(
«me
);

1998 
Â
 = 
	`f›í
(
«me
, "rb+");

1999 i‡(
Â
 =
NULL
) {

2000 
	`f˛o£
(
Â
);

2001  -
EFILE_OPEN_FAIL
;

2005 
	`mem£t
(&
ªc‹d_node
, 0, (record_node));

2006 
	`mem˝y
(
ªc‹d_node
.
d©a
, 
öv_dëaû_ªc
, (*inv_detail_rec));

2008 
ªt
 = 
fûe_›s
->
	`≠≥nd_ªc‹d
(
Â
, &
ªc‹d_node
);

2009 i‡(
ªt
 < 0)

2010 
Áû
;

2012 
ªt
 = 
SUCCESS
;

2014 
Áû
:

2015 
	`f˛o£
(
Â
);

2016  
ªt
;

2017 
	}
}

2025 
	$èx_fûe_modify_övoi˚_dëaû
(
ödex
, 
off£t
,

2026 
èx_sys_övoi˚_dëaû_ªc‹d
 * 
öv_dëaû_ªc
)

2030  
SUCCESS
;

2031 
	}
}

2039 
	$èx_fûe_ªad_övoi˚_dëaû
(
ödex
, 
off£t
,

2040 
èx_sys_övoi˚_dëaû_ªc‹d
 * 
öv_dëaû_ªc
)

2042 
ªt
;

2043 
«me
[
MAX_FILE_NAME_SIZE
] = {0};

2044 
FILE
 *
Â
;

2046 
fûe_ªc‹d_node
 
ªc‹d_node
;

2047 
fûe_›î©e
 *
fûe_›s
 = 
	`gë_fûe_›s
();

2049 
	`¢¥ötf
(
«me
, 
MAX_FILE_NAME_SIZE
, "%s%s%d%s", 
INVOICE_DETAIL_PATH
,

2050 
INVOICE_DETAIL_PREFIX
, 
ödex
, 
INVOICE_DETAIL_SUFFIX
);

2052 
Â
 = 
	`f›í
(
«me
, "rb+");

2053 i‡(
Â
 =
NULL
)

2054  -
EFILE_OPEN_FAIL
;

2056 
	`mem£t
(&
ªc‹d_node
, 0, (record_node));

2057 
ªt
 = 
fûe_›s
->
	`ªad_ªc‹d
(
Â
, 
off£t
, &
ªc‹d_node
);

2058 i‡(
ªt
 < 0) {

2059 
	`f˛o£
(
Â
);

2060  
ªt
;

2063 
	`mem˝y
(
öv_dëaû_ªc
, 
ªc‹d_node
.
d©a
, (*inv_detail_rec));

2065 
	`f˛o£
(
Â
);

2066  
SUCCESS
;

2067 
	}
}

2075 
	$èx_fûe_föd_övoi˚_dëaû
(
uöt
 *
öv_nb
,

2076 
èx_sys_övoi˚_dëaû_ªc‹d
 *
dëaû_ªc
)

2078 
ªt
;

2079 
ödex
, 
¥ev
;

2080 
«me
[
MAX_FILE_NAME_SIZE
] = {0};

2082 
FILE
 *
Â
;

2083 
fûe_hód_node
 
hód_node
;

2084 
fûe_ªc‹d_node
 
ªc‹d_node
;

2085 
èx_sys_id_cfg_ªc‹d
 
cfg_ªc‹d
;

2086 
èx_sys_övoi˚_dëaû_ªc‹d
 
tmp_dëaû
;

2087 
fûe_›î©e
 *
fûe_›s
 = 
	`gë_fûe_›s
();

2089 
ªt
 = 
	`èx_fûe_ªad_övoi˚_cfg
(&
cfg_ªc‹d
);

2090 i‡(
ªt
 < 0)

2091  
ªt
;

2093 
ödex
 = 
cfg_ªc‹d
.
id_ödex
;

2094 
	`¢¥ötf
(
«me
, 
MAX_FILE_NAME_SIZE
, "%s%s%d%s", 
INVOICE_DETAIL_PATH
,

2095 
INVOICE_DETAIL_PREFIX
, 
ödex
, 
INVOICE_DETAIL_SUFFIX
);

2097 
Â
 = 
	`f›í
(
«me
, "rb+");

2098 i‡(
Â
 =
NULL
) {

2099 
	`f˛o£
(
Â
);

2100  -
EFILE_OPEN_FAIL
;

2103 
ªt
 = 
fûe_›s
->
	`ªad_hód
(
Â
, &
hód_node
);

2104 i‡(
ªt
 < 0)

2105 
Áû
;

2107 i‡(
hód_node
.
ªc‹d_vaûd_cou¡
 == 0)

2108  -
EFILE_NO_REC
;

2110 
¥ev
 = 
hód_node
.
œ°_vaûd_ªc‹d
;

2112 
ªt
 = 
fûe_›s
->
	`ªad_ªc‹d
(
Â
, 
¥ev
, &
ªc‹d_node
);

2113 i‡(
ªt
 < 0)

2114 
Áû
;

2116 
	`mem˝y
(&
tmp_dëaû
, 
ªc‹d_node
.
d©a
, (tmp_detail));

2117 i‡(
tmp_dëaû
.
dëaû_öv_num
 =*
öv_nb
) {

2118 *
dëaû_ªc
 = 
tmp_dëaû
;

2120 
ªt
 = 
SUCCESS
;

2122 } i‡(
tmp_dëaû
.
dëaû_‹i_öv_num
 =*
öv_nb
) {

2123 *
dëaû_ªc
 = 
tmp_dëaû
;

2125 
ªt
 = -
ETAX_INV_HAS_RETURNED
;

2129 
¥ev
 = 
ªc‹d_node
.
¥ev_vaûd_ªc‹d
;

2130 i‡(
¥ev
 == 0) {

2131 i‡(
ödex
 == 1)

2132 
ödex
 = 10;

2134 
ödex
 --;

2136 
	`f˛o£
(
Â
);

2138 
	`¢¥ötf
(
«me
, 
MAX_FILE_NAME_SIZE
, "%s%s%d%s", 
INVOICE_DETAIL_PATH
,

2139 
INVOICE_DETAIL_PREFIX
, 
ödex
, 
INVOICE_DETAIL_SUFFIX
);

2141 
Â
 = 
	`f›í
(
«me
, "rb+");

2142 i‡(
Â
 =
NULL
)

2143  -
EFILE_OPEN_FAIL
;

2145 
ªt
 = 
fûe_›s
->
	`ªad_hód
(
Â
, &
hód_node
);

2146 i‡(
ªt
 < 0)

2147 
Áû
;

2149 i‡(
hód_node
.
ªc‹d_vaûd_cou¡
 == 0) {

2150 
ªt
 = -
EFILE_NO_REC
;

2151 
Áû
;

2154 
¥ev
 = 
hód_node
.
œ°_vaûd_ªc‹d
;

2159 *
öv_nb
 = ((
ödex
 & 0xffffË<< 16Ë| (
¥ev
 & 0xffff);

2161 
Áû
:

2162 
	`f˛o£
(
Â
);

2164  
ªt
;

2165 
	}
}

2172 
	$èx_fûe_föd_chk_övoi˚_idx
(
èx_sys_check_idx
 *
chk_öx
)

2174 
ªt
;

2175 
ödex
, 
¥ev
, 
íd_found
;

2176 
«me
[
MAX_FILE_NAME_SIZE
] = {0};

2178 
FILE
 *
Â
;

2180 
fûe_hód_node
 
hód_node
;

2181 
fûe_ªc‹d_node
 
ªc‹d_node
;

2182 
èx_sys_id_cfg_ªc‹d
 
cfg_ªc‹d
;

2183 
èx_sys_övoi˚_dëaû_ªc‹d
 
tmp_dëaû
;

2184 
fûe_›î©e
 *
fûe_›s
 = 
	`gë_fûe_›s
();

2185 
π_›î©e
 * 
π_›s
 = 
	`gë_π_›s
();

2187 
ªt
 = 
	`èx_fûe_ªad_övoi˚_cfg
(&
cfg_ªc‹d
);

2188 i‡(
ªt
 < 0)

2189  
ªt
;

2191 
ödex
 = 
cfg_ªc‹d
.
id_ödex
;

2192 
	`¢¥ötf
(
«me
, 
MAX_FILE_NAME_SIZE
, "%s%s%d%s", 
INVOICE_DETAIL_PATH
,

2193 
INVOICE_DETAIL_PREFIX
, 
ödex
, 
INVOICE_DETAIL_SUFFIX
);

2195 
Â
 = 
	`f›í
(
«me
, "rb+");

2196 i‡(
Â
 =
NULL
) {

2197 
	`f˛o£
(
Â
);

2198  -
EFILE_OPEN_FAIL
;

2201 
ªt
 = 
fûe_›s
->
	`ªad_hód
(
Â
, &
hód_node
);

2202 i‡(
ªt
 < 0)

2203 
Áû
;

2205 i‡(
hód_node
.
ªc‹d_vaûd_cou¡
 == 0)

2206  -
EFILE_NO_REC
;

2208 
íd_found
 = 0;

2209 
¥ev
 = 
hód_node
.
œ°_vaûd_ªc‹d
;

2211 
ªt
 = 
fûe_›s
->
	`ªad_ªc‹d
(
Â
, 
¥ev
, &
ªc‹d_node
);

2212 i‡(
ªt
 < 0)

2213 
Áû
;

2215 
	`mem˝y
(&
tmp_dëaû
, 
ªc‹d_node
.
d©a
, (tmp_detail));

2216 i‡((
π_›s
->
	`cmp_bcd_d©e
(&
tmp_dëaû
.
dëaû_d©e
, &
chk_öx
->
íd_d©e
) <= 0)

2217 && (
π_›s
->
	`cmp_bcd_d©e
(&
tmp_dëaû
.
dëaû_d©e
, &
chk_öx
->
°¨t_d©e
) >=0)) {

2218 i‡(
íd_found
 == 0) {

2219 
chk_öx
->
íd_off£t
 = ((
ödex
 & 0xffffË<< 16Ë| (
¥ev
 & 0xffff);

2220 
íd_found
 = 1;

2223 
chk_öx
->
ªc_num
 ++;

2224 
chk_öx
->
°¨t_off£t
 = ((
ödex
 & 0xffffË<< 16Ë| (
¥ev
 & 0xffff);

2226 i‡(
π_›s
->
	`cmp_bcd_d©e
(&
tmp_dëaû
.
dëaû_d©e
, &
chk_öx
->
°¨t_d©e
) < 0)

2230 
¥ev
 = 
ªc‹d_node
.
¥ev_vaûd_ªc‹d
;

2231 i‡(
¥ev
 == 0) {

2232 i‡(
ödex
 == 1)

2233 
ödex
 = 10;

2235 
ödex
 --;

2237 
	`f˛o£
(
Â
);

2239 
	`¢¥ötf
(
«me
, 
MAX_FILE_NAME_SIZE
, "%s%s%d%s", 
INVOICE_DETAIL_PATH
,

2240 
INVOICE_DETAIL_PREFIX
, 
ödex
, 
INVOICE_DETAIL_SUFFIX
);

2242 
Â
 = 
	`f›í
(
«me
, "rb+");

2243 i‡(
Â
 =
NULL
)

2244  -
EFILE_OPEN_FAIL
;

2246 
ªt
 = 
fûe_›s
->
	`ªad_hód
(
Â
, &
hód_node
);

2247 i‡(
ªt
 < 0)

2248  
ªt
;

2250 i‡(
hód_node
.
ªc‹d_vaûd_cou¡
 == 0)

2251  -
EFILE_NO_REC
;

2253 
¥ev
 = 
hód_node
.
œ°_vaûd_ªc‹d
;

2257 i‡(
íd_found
 == 1)

2258 
ªt
 = 
SUCCESS
;

2260 
ªt
 = -
EFILE_NO_REC
;

2262 
Áû
:

2263 
	`f˛o£
(
Â
);

2264  
ªt
;

2265 
	}
}

2271 
	$èx_fûe_≠≥nd_today_id
(
èx_sys_today_id_ªc‹d
 * 
today_id_ªc
)

2273 
ªt
;

2274 
FILE
 * 
Â
;

2276 
fûe_hód_node
 
hód_node
;

2277 
fûe_ªc‹d_node
 
ªc‹d_node
;

2278 
fûe_›î©e
 * 
fûe_›s
 = 
	`gë_fûe_›s
();

2280 
Â
 = 
	`f›í
(
TODAY_ID_FILE
, "rb+");

2281 i‡(
Â
 =
NULL
)

2282  -
EFILE_OPEN_FAIL
;

2284 
	`mem£t
(&
ªc‹d_node
, 0, (record_node));

2285 
	`mem˝y
(
ªc‹d_node
.
d©a
, 
today_id_ªc
, (*today_id_rec));

2287 
ªt
 = 
fûe_›s
->
	`ªad_hód
(
Â
, &
hód_node
);

2288 i‡(
ªt
 < 0)

2289 
Áû
;

2291 i‡(
hód_node
.
ªc‹d_tŸÆ_cou¡
 =hód_node.
max_ªc‹d
)

2292  -
EFILE_REC_FULL
;

2294 
ªt
 = 
fûe_›s
->
	`≠≥nd_ªc‹d
(
Â
, &
ªc‹d_node
);

2295 i‡(
ªt
 < 0)

2296 
Áû
;

2298 
ªt
 = 
SUCCESS
;

2300 
Áû
:

2301 
	`f˛o£
(
Â
);

2302  
ªt
;

2303 
	}
}

2310 
	$èx_fûe_modify_today_id
(
off£t
, 
èx_sys_today_id_ªc‹d
 * 
today_id_ªc
)

2315  
SUCCESS
;

2316 
	}
}

2323 
	$èx_fûe_ªad_today_id
(
off£t
, 
èx_sys_today_id_ªc‹d
 * 
today_id_ªc
)

2325 
ªt
;

2326 
FILE
 * 
Â
;

2328 
fûe_ªc‹d_node
 
ªc‹d_node
;

2329 
fûe_›î©e
 * 
fûe_›s
 = 
	`gë_fûe_›s
();

2331 
Â
 = 
	`f›í
(
TODAY_ID_FILE
, "rb+");

2332 i‡(
Â
 =
NULL
)

2333  -
EFILE_OPEN_FAIL
;

2335 
	`mem£t
(&
ªc‹d_node
, 0, (record_node));

2336 
ªt
 = 
fûe_›s
->
	`ªad_ªc‹d
(
Â
, 
off£t
, &
ªc‹d_node
);

2337 i‡(
ªt
 < 0) {

2338 
	`f˛o£
(
Â
);

2339  
ªt
;

2342 
	`mem˝y
(
today_id_ªc
, 
ªc‹d_node
.
d©a
, (*today_id_rec));

2344 
	`f˛o£
(
Â
);

2345  
SUCCESS
;

2346 
	}
}

2353 
	$èx_fûe_föd_today_id
(
uöt
 
övoi˚_num
, 
èx_sys_today_id_ªc‹d
 *
today_id_ªc
)

2358  
SUCCESS
;

2359 
	}
}

2365 
	$èx_fûe_≠≥nd_cur_rﬁl_id
(
èx_sys_cur_rﬁl_id_ªc‹d
 * 
cur_rﬁl_id_ªc
)

2367 
ªt
;

2368 
FILE
 * 
Â
;

2370 
fûe_hód_node
 
hód_node
;

2371 
fûe_ªc‹d_node
 
ªc‹d_node
;

2372 
fûe_›î©e
 * 
fûe_›s
 = 
	`gë_fûe_›s
();

2374 
Â
 = 
	`f›í
(
CUR_ROLL_FILE
, "rb+");

2375 i‡(
Â
 =
NULL
)

2376  -
EFILE_OPEN_FAIL
;

2378 
	`mem£t
(&
ªc‹d_node
, 0, (record_node));

2379 
	`mem˝y
(
ªc‹d_node
.
d©a
, 
cur_rﬁl_id_ªc
, (*cur_roll_id_rec));

2381 
ªt
 = 
fûe_›s
->
	`ªad_hód
(
Â
, &
hód_node
);

2382 i‡(
ªt
 < 0)

2383 
Áû
;

2385 i‡(
hód_node
.
ªc‹d_tŸÆ_cou¡
 =hód_node.
max_ªc‹d
)

2386  -
EFILE_REC_FULL
;

2388 
ªt
 = 
fûe_›s
->
	`≠≥nd_ªc‹d
(
Â
, &
ªc‹d_node
);

2389 i‡(
ªt
 < 0)

2390 
Áû
;

2392 
ªt
 = 
SUCCESS
;

2394 
Áû
:

2395 
	`f˛o£
(
Â
);

2396  
ªt
;

2397 
	}
}

2404 
	$èx_fûe_modify_cur_rﬁl_id
(
off£t
,

2405 
èx_sys_cur_rﬁl_id_ªc‹d
 * 
cur_rﬁl_id_ªc
)

2410  
SUCCESS
;

2411 
	}
}

2418 
	$èx_fûe_ªad_cur_rﬁl_id
(
off£t
,

2419 
èx_sys_cur_rﬁl_id_ªc‹d
 * 
cur_rﬁl_id_ªc
)

2421 
ªt
;

2422 
FILE
 * 
Â
;

2424 
fûe_ªc‹d_node
 
ªc‹d_node
;

2425 
fûe_›î©e
 * 
fûe_›s
 = 
	`gë_fûe_›s
();

2427 
Â
 = 
	`f›í
(
CUR_ROLL_FILE
, "rb+");

2428 i‡(
Â
 =
NULL
)

2429  -
EFILE_OPEN_FAIL
;

2431 
	`mem£t
(&
ªc‹d_node
, 0, (record_node));

2432 
ªt
 = 
fûe_›s
->
	`ªad_ªc‹d
(
Â
, 
off£t
, &
ªc‹d_node
);

2433 i‡(
ªt
 < 0) {

2434 
	`f˛o£
(
Â
);

2435  
ªt
;

2438 
	`mem˝y
(
cur_rﬁl_id_ªc
, 
ªc‹d_node
.
d©a
, (*cur_roll_id_rec));

2440 
	`f˛o£
(
Â
);

2441  
SUCCESS
;

2442 
	}
}

2449 
	$èx_fûe_föd_cur_rﬁl_id
(
uöt
 
övoi˚_num
,

2450 
èx_sys_cur_rﬁl_id_ªc‹d
 *
cur_rﬁl_ªc
)

2455  
SUCCESS
;

2456 
	}
}

2462 
	$èx_fûe_≠≥nd_u£d_rﬁl_id
(
èx_sys_u£d_rﬁl_id_ªc‹d
 *
u£d_rﬁl_ªc‹d
)

2464 
ªt
;

2465 
FILE
 * 
Â
;

2467 
fûe_hód_node
 
hód_node
;

2468 
fûe_ªc‹d_node
 
ªc‹d_node
;

2469 
fûe_›î©e
 * 
fûe_›s
 = 
	`gë_fûe_›s
();

2471 
Â
 = 
	`f›í
(
ROLL_COLLECT_FILE
, "rb+");

2472 i‡(
Â
 =
NULL
)

2473  -
EFILE_OPEN_FAIL
;

2475 
	`mem£t
(&
ªc‹d_node
, 0, (record_node));

2476 
	`mem˝y
(
ªc‹d_node
.
d©a
, 
u£d_rﬁl_ªc‹d
, (*used_roll_record));

2478 
ªt
 = 
fûe_›s
->
	`ªad_hód
(
Â
, &
hód_node
);

2479 i‡(
ªt
 < 0)

2480 
Áû
;

2482 i‡(
hód_node
.
ªc‹d_tŸÆ_cou¡
 =hód_node.
max_ªc‹d
)

2483  -
EFILE_REC_FULL
;

2485 
ªt
 = 
fûe_›s
->
	`≠≥nd_ªc‹d
(
Â
, &
ªc‹d_node
);

2486 i‡(
ªt
 < 0)

2487 
Áû
;

2489 
Áû
:

2490 
	`f˛o£
(
Â
);

2491  
ªt
;

2492 
	}
}

2499 
	$èx_fûe_ªad_u£d_rﬁl_id
(
off£t
,

2500 
èx_sys_u£d_rﬁl_id_ªc‹d
 *
u£d_rﬁl_ªc‹d
)

2502 
ªt
;

2503 
FILE
 * 
Â
;

2505 
fûe_ªc‹d_node
 
ªc‹d_node
;

2506 
fûe_›î©e
 * 
fûe_›s
 = 
	`gë_fûe_›s
();

2508 
Â
 = 
	`f›í
(
ROLL_COLLECT_FILE
, "rb+");

2509 i‡(
Â
 =
NULL
)

2510  -
EFILE_OPEN_FAIL
;

2512 
	`mem£t
(&
ªc‹d_node
, 0, (record_node));

2513 
ªt
 = 
fûe_›s
->
	`ªad_ªc‹d
(
Â
, 
off£t
, &
ªc‹d_node
);

2514 i‡(
ªt
 < 0) {

2515 
	`f˛o£
(
Â
);

2516  
ªt
;

2519 
	`mem˝y
(
u£d_rﬁl_ªc‹d
, 
ªc‹d_node
.
d©a
, (*used_roll_record));

2521 
	`f˛o£
(
Â
);

2522  
SUCCESS
;

2523 
	}
}

2530 
	$èx_fûe_modify_u£d_rﬁl_id
(
off£t
,

2531 
èx_sys_u£d_rﬁl_id_ªc‹d
 *
u£d_rﬁl_ªc‹d
)

2536  
SUCCESS
;

2537 
	}
}

2545 
	$èx_fûe_föd_u£d_rﬁl_id
(
uöt
 
övoi˚_num
,

2546 
èx_sys_u£d_rﬁl_id_ªc‹d
 * 
u£d_rﬁl_ªc‹d
)

2548 
ªt
;

2549 
tŸÆ_ªc
 = 0;

2550 
FILE
 * 
Â
;

2551 
fûe_hód_node
 
hód_node
;

2552 
fûe_ªc‹d_node
 
ªc‹d_node
;

2553 
èx_sys_u£d_rﬁl_id_ªc‹d
 
tmp_ªc
;

2554 
fûe_›î©e
 * 
fûe_›s
 = 
	`gë_fûe_›s
();

2556 
Â
 = 
	`f›í
(
ROLL_COLLECT_FILE
, "rb+");

2557 i‡(
Â
 =
NULL
)

2558  -
EFILE_OPEN_FAIL
;

2560 
	`mem£t
(&
hód_node
, 0, (head_node));

2561 
ªt
 = 
fûe_›s
->
	`ªad_hód
(
Â
, &
hód_node
);

2562 i‡(
ªt
 < 0)

2563 
Áû
;

2565 
tŸÆ_ªc
 = 
hód_node
.
ªc‹d_vaûd_cou¡
;

2567 
i
;

2568 
i
 = 
tŸÆ_ªc
; i > 0; i--) {

2569 
ªt
 = 
fûe_›s
->
	`ªad_ªc‹d
(
Â
, 
i
, &
ªc‹d_node
);

2570 i‡(
ªt
 < 0)

2571 
Áû
;

2573 
	`mem˝y
(&
tmp_ªc
, 
ªc‹d_node
.
d©a
, (tmp_rec));

2575 i‡(
övoi˚_num
 >
tmp_ªc
.
°¨t_num
 && invoi˚_num <tmp_ªc.
íd_num
){

2576 *
u£d_rﬁl_ªc‹d
 = 
tmp_ªc
;

2581 
ªt
 = 
SUCCESS
;

2583 
Áû
:

2584 
	`f˛o£
(
Â
);

2585  
ªt
;

2586 
	}
}

2592 
	$èx_fûe_¸ót_fisˇl_fûe
()

2594 
ªt
;

2595 
ödex
;

2596 
«me
[
MAX_FILE_NAME_SIZE
] = {0};

2598 
fûe_›î©e
 * 
fûe_›s
 = 
	`gë_fûe_›s
();

2600 
ªt
 = 
fûe_›s
->
	`¸ót_dú
(
FIS_FILE_PATH
);

2601 i‡(
ªt
 < 0)

2602  
ªt
;

2604 
ªt
 = 
fûe_›s
->
	`¸ót_fûe
(
PROTECT_FILE
, 
PROTECT_FILE_MODE
, 
PROTECT_REC_NUM
);

2605 i‡(
ªt
 < 0)

2606  
ªt
;

2608 
ªt
 = 
fûe_›s
->
	`¸ót_dú
(
INVOICE_DETAIL_PATH
);

2609 i‡(
ªt
 < 0)

2610  
ªt
;

2612 
ªt
 = 
fûe_›s
->
	`¸ót_fûe
(
INVOICE_ID_CFG_FILE
, 
INVOICE_ID_CFG_FILE_MODE
, 
INVOICE_ID_CFG_REC_NUM
);

2613 i‡(
ªt
 < 0)

2614  
ªt
;

2616 
èx_sys_id_cfg_ªc‹d
 
cfg_ªc‹d
;

2617 
cfg_ªc‹d
.
id_ödex
 = 1;

2618 
ªt
 = 
	`èx_fûe_ßve_övoi˚_cfg
(&
cfg_ªc‹d
);

2619 i‡(
ªt
 < 0) {

2620  
ªt
;

2623 
ödex
 = 0; index < 
MAX_ID_FILE_NUM
; index++) {

2624 
	`¢¥ötf
(
«me
, 
MAX_FILE_NAME_SIZE
, "%s%s%d%s", 
INVOICE_DETAIL_PATH
,

2625 
INVOICE_DETAIL_PREFIX
, 
ödex
 + 1, 
INVOICE_DETAIL_SUFFIX
);

2626 
ªt
 = 
fûe_›s
->
	`¸ót_fûe
(
«me
, 
INVOICE_DETAIL_FILE_MODE
, 
INVOICE_DETAIL_REC_NUM
);

2627 i‡(
ªt
 < 0)

2628  
ªt
;

2631 
ªt
 = 
fûe_›s
->
	`¸ót_fûe
(
DAILY_COLLECT_FILE
, 
DAILY_COLLECT_FILE_MODE
, 
DAILY_COLLECT_REC_NUM
);

2632 i‡(
ªt
 < 0)

2633  
ªt
;

2635 
ªt
 = 
fûe_›s
->
	`¸ót_fûe
(
ROLL_COLLECT_FILE
, 
ROLL_COLLECT_FILE_MODE
, 
ROLL_COLLECT_REC_NUM
);

2636 i‡(
ªt
 < 0)

2637  
ªt
;

2639 
ªt
 = 
fûe_›s
->
	`¸ót_fûe
(
PIN_FILE
, 
PIN_FILE_MODE
, 
PIN_REC_NUM
);

2640 i‡(
ªt
 < 0)

2641  
ªt
;

2643 
ªt
 = 
fûe_›s
->
	`¸ót_fûe
(
ORIGIN_PIN_FILE
, 
ORIGIN_PIN_FILE_MODE
, 
ORIGIN_PIN_REC_NUM
);

2644 i‡(
ªt
 < 0)

2645  
ªt
;

2647 
ªt
 = 
fûe_›s
->
	`¸ót_fûe
(
APP_FILE
, 
APP_FILE_MODE
, 
APP_FILE_REC_NUM
);

2648 i‡(
ªt
 < 0)

2649  
ªt
;

2651 
ªt
 = 
fûe_›s
->
	`¸ót_fûe
(
HISTORY_APP_FILE
, 
HISTORY_APP_FILE_MODE
, 
HISTORY_APP_REC_NUM
);

2652 i‡(
ªt
 < 0)

2653  
ªt
;

2655 
ªt
 = 
fûe_›s
->
	`¸ót_fûe
(
CUR_ROLL_FILE
, 
CUR_ROLL_FILE_MODE
, 
CUR_ROLL_REC_NUM
);

2656 i‡(
ªt
 < 0)

2657  
ªt
;

2659 
ªt
 = 
fûe_›s
->
	`¸ót_fûe
(
DIST_ROLL_FILE
, 
DIST_ROLL_FILE_MODE
, 
DIST_ROLL_REC_NUM
);

2660 i‡(
ªt
 < 0)

2661  
ªt
;

2663 
ªt
 = 
fûe_›s
->
	`¸ót_fûe
(
LAST_DIST_FILE
, 
LAST_DIST_FILE_MODE
, 
LAST_DIST_REC_NUM
);

2664 i‡(
ªt
 < 0)

2665  
ªt
;

2667 
ªt
 = 
fûe_›s
->
	`¸ót_fûe
(
TODAY_ID_FILE
, 
TODAY_ID_FILE_MODE
, 
TODAY_ID_REC_NUM
);

2668 i‡(
ªt
 < 0)

2669  
ªt
;

2671 
ªt
 = 
fûe_›s
->
	`¸ót_fûe
(
ROLL_ID_FILE
, 
ROLL_ID_FILE_MODE
, 
ROLL_ID_REC_NUM
);

2672 i‡(
ªt
 < 0)

2673  
ªt
;

2675 
ªt
 = 
fûe_›s
->
	`¸ót_fûe
(
DECLARE_DUTY_FILE
, 
DECLARE_DUTY_FILE_MODE
, 
DECLARE_DUTY_REC_NUM
);

2676 i‡(
ªt
 < 0)

2677  
ªt
;

2679 
ªt
 = 
fûe_›s
->
	`¸ót_fûe
(
FIS_CFG_FILE
, 
FIS_CFG_FILE_MODE
, 
FIS_CFG_REC_NUM
);

2680 i‡(
ªt
 < 0)

2681  
ªt
;

2683 
ªt
 = 
fûe_›s
->
	`¸ót_fûe
(
CRLN_FILE
, 
CRLN_FILE_MODE
, 
CRLN_REC_NUM
);

2684 i‡(
ªt
 < 0)

2685  
ªt
;

2687 
ªt
 = 
fûe_›s
->
	`¸ót_fûe
(
SEC_INVOICE_FILE
, 
SEC_INVOICE_FILE_MODE
, 
SEC_INVOICE_REC_NUM
);

2688 i‡(
ªt
 < 0)

2689  
ªt
;

2691 
ªt
 = 
fûe_›s
->
	`¸ót_fûe
(
AMOUNT_FILE
, 
AMOUNT_FILE_MODE
, 
AMOUNT_FILE_REC_NUM
);

2692 i‡(
ªt
 < 0)

2693  
ªt
;

2695  
SUCCESS
;

2696 
	}
}

2711 
	$èx_fûe_ªad_œ°_ªc‹d
(c⁄° *
fûíame
, 
uch¨
 *
buf
, 
size
)

2713 
ªt
;

2714 
off£t
;

2716 
FILE
 * 
Â
;

2718 
fûe_hód_node
 
hód_node
;

2719 
fûe_ªc‹d_node
 
ªc‹d_node
;

2720 
fûe_›î©e
 * 
fûe_›s
 = 
	`gë_fûe_›s
();

2722 
	`mem£t
(&
hód_node
, 0, (head_node));

2723 
	`mem£t
(&
ªc‹d_node
, 0, (record_node));

2725 
Â
 = 
	`f›í
(
fûíame
, "rb+");

2726 i‡(
Â
 =
NULL
)

2727  -
EFILE_OPEN_FAIL
;

2729 
ªt
 = 
fûe_›s
->
	`ªad_hód
(
Â
, &
hód_node
);

2730 i‡(
ªt
 < 0)

2731 
Áû
;

2733 i‡(
hód_node
.
ªc‹d_vaûd_cou¡
 == 0) {

2734 
ªt
 = -
EFILE_NO_REC
;

2735 
Áû
;

2738 
off£t
 = 
hód_node
.
œ°_vaûd_ªc‹d
;

2739 
ªt
 = 
fûe_›s
->
	`ªad_ªc‹d
(
Â
, 
off£t
, &
ªc‹d_node
);

2740 i‡(
ªt
 < 0)

2741 
Áû
;

2743 
	`mem˝y
(
buf
, 
ªc‹d_node
.
d©a
, 
size
);

2745 
ªt
 = 
SUCCESS
;

2747 
Áû
:

2748 
	`f˛o£
(
Â
);

2749  
ªt
;

2750 
	}
}

2759 
	$èx_fûe_modify_œ°_ªc‹d
(c⁄° *
fûíame
, 
uch¨
 *
buf
, 
size
)

2761 
ªt
;

2762 
off£t
;

2763 
FILE
 * 
Â
;

2765 
fûe_hód_node
 
hód_node
;

2766 
fûe_ªc‹d_node
 
ªc‹d_node
;

2767 
fûe_›î©e
 * 
fûe_›s
 = 
	`gë_fûe_›s
();

2769 
Â
 = 
	`f›í
(
fûíame
, "rb+");

2770 i‡(
Â
 =
NULL
)

2771  -
EFILE_OPEN_FAIL
;

2773 
ªt
 = 
fûe_›s
->
	`ªad_hód
(
Â
, &
hód_node
);

2774 i‡(
ªt
 < 0)

2775 
Áû
;

2777 
off£t
 = 
hód_node
.
œ°_vaûd_ªc‹d
;

2779 
ªt
 = 
fûe_›s
->
	`ªad_ªc‹d
(
Â
, 
off£t
, &
ªc‹d_node
);

2780 i‡(
ªt
 < 0)

2781 
Áû
;

2783 
	`mem˝y
(
ªc‹d_node
.
d©a
, 
buf
, 
size
);

2784 
ªt
 = 
fûe_›s
->
	`modify_ªc‹d
(
Â
, 
off£t
, &
ªc‹d_node
);

2785 i‡(
ªt
 < 0)

2786 
Áû
;

2788 
ªt
 = 
SUCCESS
;

2790 
Áû
:

2791 
	`f˛o£
(
Â
);

2792  
ªt
;

2793 
	}
}

2802 
	$èx_fûe_ªad_fú°_ªc‹d
(c⁄° *
fûíame
, 
uch¨
 *
buf
, 
size
)

2804 
ªt
;

2805 
off£t
;

2807 
FILE
 * 
Â
;

2809 
fûe_hód_node
 
hód_node
;

2810 
fûe_ªc‹d_node
 
ªc‹d_node
;

2811 
fûe_›î©e
 * 
fûe_›s
 = 
	`gë_fûe_›s
();

2813 
Â
 = 
	`f›í
(
fûíame
, "rb+");

2814 i‡(
Â
 =
NULL
)

2815  -
EFILE_OPEN_FAIL
;

2817 
ªt
 = 
fûe_›s
->
	`ªad_hód
(
Â
, &
hód_node
);

2818 i‡(
ªt
 < 0)

2819 
Áû
;

2821 
off£t
 = 
hód_node
.
fú°_vaûd_ªc‹d
;

2822 
ªt
 = 
fûe_›s
->
	`ªad_ªc‹d
(
Â
, 
off£t
, &
ªc‹d_node
);

2823 i‡(
ªt
 < 0)

2824 
Áû
;

2826 
	`mem˝y
(
buf
, 
ªc‹d_node
.
d©a
, 
size
);

2828 
ªt
 = 
SUCCESS
;

2829 
Áû
:

2830 
	`f˛o£
(
Â
);

2831  
ªt
;

2832 
	}
}

2838 
	$èx_fûe_gë_ªc_num
(c⁄° *
fûíame
)

2840 
ªt
;

2841 
FILE
 * 
Â
;

2843 
fûe_hód_node
 
hód_node
;

2844 
fûe_›î©e
 * 
fûe_›s
 = 
	`gë_fûe_›s
();

2846 
Â
 = 
	`f›í
(
fûíame
, "rb+");

2847 i‡(
Â
 =
NULL
)

2848  -
EFILE_OPEN_FAIL
;

2850 
ªt
 = 
fûe_›s
->
	`ªad_hód
(
Â
, &
hód_node
);

2851 i‡(
ªt
 < 0) {

2852 
	`f˛o£
(
Â
);

2853  
ªt
;

2856 
	`f˛o£
(
Â
);

2857  
hód_node
.
ªc‹d_vaûd_cou¡
;

2858 
	}
}

2865 
	$èx_fûe_dñ_ªc‹d
(c⁄° *
fûíame
, 
off£t
)

2867 
ªt
;

2868 
ªÆ_off£t
 = 0;

2869 
FILE
 * 
Â
;

2871 
fûe_›î©e
 * 
fûe_›s
 = 
	`gë_fûe_›s
();

2873 
Â
 = 
	`f›í
(
fûíame
, "rb+");

2874 i‡(
Â
 =
NULL
)

2875  -
EFILE_OPEN_FAIL
;

2877 
ªÆ_off£t
 = 
	`èx_fûe_gë_ªÆ_off£t
(
Â
, 
off£t
);

2878 i‡(
ªÆ_off£t
 < 0) {

2879 
	`debug_msg
("[TAX_FILE]: getÑeal offset failed!\n");

2880  
FAIL
;

2883 
ªt
 = 
fûe_›s
->
	`dñëe_ªc‹d
(
Â
, 
ªÆ_off£t
);

2884 i‡(
ªt
 < 0) {

2885 
	`f˛o£
(
Â
);

2886  
ªt
;

2889 
	`f˛o£
(
Â
);

2890  
SUCCESS
;

2891 
	}
}

2897 
	$èx_fûe_˛ór
(c⁄° *
fûíame
)

2899 
ªt
;

2901 
fûe_›î©e
 * 
fûe_›s
 = 
	`gë_fûe_›s
();

2904 
ªt
 = 
fûe_›s
->
	`˛ór_ªc‹d
(
fûíame
);

2905 i‡(
ªt
 < 0)

2906  
FAIL
;

2908  
SUCCESS
;

2909 
	}
}

2917 
	$èx_fûe_ãrm_˛ór
()

2919 
ªt
;

2920 
cmd
[50] = {0};

2922 
	`•rötf
(
cmd
, "rm -r‡%s", 
FIS_FILE_PATH
);

2924 
ªt
 = 
	`sy°em
(
cmd
);

2925 i‡(
ªt
 != 0)

2926  
FAIL
;

2928  
SUCCESS
;

2929 
	}
}

2936 
	$èx_fûe_is_em±y
(c⁄° *
fûíame
)

2938 
ªt
;

2939 
FILE
 * 
Â
;

2941 
fûe_hód_node
 
hód_node
;

2942 
fûe_›î©e
 * 
fûe_›s
 = 
	`gë_fûe_›s
();

2944 
Â
 = 
	`f›í
(
fûíame
, "rb+");

2945 i‡(
Â
 =
NULL
)

2946  -
EFILE_OPEN_FAIL
;

2948 
ªt
 = 
fûe_›s
->
	`ªad_hód
(
Â
, &
hód_node
);

2949 i‡(
ªt
 < 0) {

2950  
ªt
;

2953 
	`f˛o£
(
Â
);

2955 i‡(
hód_node
.
ªc‹d_vaûd_cou¡
 == 0)

2956  
POSITIVE
;

2958  
NEGATIVE
;

2959 
	}
}

2966 
	$èx_fûe_is_fuŒ
(c⁄° *
fûíame
)

2968 
ªt
;

2969 
FILE
 * 
Â
;

2971 
fûe_hód_node
 
hód_node
;

2972 
fûe_›î©e
 * 
fûe_›s
 = 
	`gë_fûe_›s
();

2974 
Â
 = 
	`f›í
(
fûíame
, "rb+");

2975 i‡(
Â
 =
NULL
)

2976  -
EFILE_OPEN_FAIL
;

2978 
ªt
 = 
fûe_›s
->
	`ªad_hód
(
Â
, &
hód_node
);

2979 i‡(
ªt
 < 0) {

2980 
	`f˛o£
(
Â
);

2981  
ªt
;

2984 
	`f˛o£
(
Â
);

2986 i‡(
hód_node
.
ªc‹d_tŸÆ_cou¡
 =hód_node.
max_ªc‹d
)

2987  
POSITIVE
;

2989  
NEGATIVE
;

2990 
	}
}

3000 
	$èx_fûe_ªad_¥ev_ªc‹d
(
FILE
 *
Â
, 
off£t
, 
uch¨
 *
buf
, 
size
)

3002 
ªt
;

3003 
ªÆ_off£t
;

3004 
fûe_ªc‹d_node
 
ªc‹d_node
;

3006 
fûe_›î©e
 *
fûe_›s
 = 
	`gë_fûe_›s
();

3008 
ªÆ_off£t
 = 
	`èx_fûe_gë_ªÆ_off£t
(
Â
, 
off£t
);

3009 i‡(
ªÆ_off£t
 < 0) {

3010 
	`debug_msg
("[TAX_FILE]: getÑeal offset failed!\n");

3011  
FAIL
;

3014 
ªt
 = 
fûe_›s
->
	`ªad_ªc‹d
(
Â
, 
ªÆ_off£t
, &
ªc‹d_node
);

3015 i‡(
ªt
 < 0)

3016 
Áû
;

3018 
ªÆ_off£t
 = 
ªc‹d_node
.
¥ev_vaûd_ªc‹d
;

3020 
ªt
 = 
fûe_›s
->
	`ªad_ªc‹d
(
Â
, 
ªÆ_off£t
, &
ªc‹d_node
);

3021 i‡(
ªt
 < 0)

3022 
Áû
;

3024 
	`mem˝y
(
buf
, 
ªc‹d_node
.
d©a
, 
size
);

3026 
ªt
 = 
SUCCESS
;

3027 
Áû
:

3028 
	`f˛o£
(
Â
);

3029  
ªt
;

3030 
	}
}

3040 
	$èx_fûe_ªad_√xt_ªc‹d
(
FILE
 *
Â
, 
off£t
, 
uch¨
 *
buf
, 
size
)

3042 
ªt
;

3043 
ªÆ_off£t
;

3045 
fûe_ªc‹d_node
 
ªc‹d_node
;

3046 
fûe_›î©e
 *
fûe_›s
 = 
	`gë_fûe_›s
();

3048 
ªÆ_off£t
 = 
	`èx_fûe_gë_ªÆ_off£t
(
Â
, 
off£t
);

3049 i‡(
ªÆ_off£t
 < 0) {

3050 
	`debug_msg
("[TAX_FILE]: getÑeal offset failed!\n");

3051  
FAIL
;

3054 
ªt
 = 
fûe_›s
->
	`ªad_ªc‹d
(
Â
, 
ªÆ_off£t
, &
ªc‹d_node
);

3055 i‡(
ªt
 < 0)

3056 
Áû
;

3058 
ªÆ_off£t
 = 
ªc‹d_node
.
√xt_vaûd_ªc‹d
;

3060 
ªt
 = 
fûe_›s
->
	`ªad_ªc‹d
(
Â
, 
ªÆ_off£t
, &
ªc‹d_node
);

3061 i‡(
ªt
 < 0)

3062 
Áû
;

3064 
	`mem˝y
(
buf
, 
ªc‹d_node
.
d©a
, 
size
);

3066 
ªt
 = 
SUCCESS
;

3067 
Áû
:

3068 
	`f˛o£
(
Â
);

3069  
ªt
;

3070 
	}
}

3079 
	$maö
()

3081 
íd
 = 0;

3082 
u£r
 
√w_u£r
;

3084 
	`mem£t
(&
√w_u£r
, 0, (new_user));

3085 
√w_u£r
.
id
 = 0;

3086 
√w_u£r
.
Àvñ
 = 
DEVELOP_USER
;

3087 
	`°r˝y
(
√w_u£r
.
«me
, "debug");

3088 
	`°r˝y
(
√w_u£r
.
∑sswd
, "789456");

3090 
	`èx_fûe_≠≥nd_u£r
(&
√w_u£r
);

3092 
	`mem£t
(&
√w_u£r
, 0, (new_user));

3093 
√w_u£r
.
id
 = 0;

3094 
√w_u£r
.
Àvñ
 = 
DEVELOP_USER
;

3095 
	`°r˝y
(
√w_u£r
.
«me
, "manager");

3096 
	`°r˝y
(
√w_u£r
.
∑sswd
, "789456");

3098 
	`èx_fûe_≠≥nd_u£r
(&
√w_u£r
);

3101 
	}
}

	@fiscal/tax_system.c

9 
	~<°dio.h
>

10 
	~<uni°d.h
>

11 
	~<°dlib.h
>

12 
	~<°rög.h
>

13 
	~<sys/ty≥s.h
>

14 
	~<sys/°©.h
>

15 
	~<f˙é.h
>

16 
	~<°rög.h
>

17 
	~<as£π.h
>

19 
	~"comm⁄.h
"

20 
	~"c⁄fig.h
"

21 
	~"îr‹.h
"

22 
	~"powî.h
"

24 
	~"èx_fûe_›.h
"

25 
	~"èx_ˇrd_ba£.h
"

26 
	~"èx_sy°em.h
"

32 
èx_sys_≠p_öfo
 
	gg_sys_≠p_öfo
;

33 
èx_sys_pö_ªc‹d
 
	gg_pö
;

34 
èx_sys_pö_ªc‹d
 
	gg_‹igö_pö
;

35 
machöe_öfo_ªc‹d
 
	gg_mach_öfo
;

36 
èx_sys_c⁄fig_ªc‹d
 
	gg_sys_c⁄fig
;

37 
èx_sys_fis_c⁄fig_ªc‹d
 
	gg_fis_c⁄fig
;

38 
èx_sys_buy_rﬁl_ªc‹d
 
	gg_cur_rﬁl
;

39 
èx_sys_¥Ÿe˘_ªc‹d
 
	gg_¥Ÿe˘_ªc‹d
;

40 
èx_sys_cur_rﬁl_À·_ªc‹d
 
	gg_cur_rﬁl_À·
;

48 
	$èx_å™s_issue_övoi˚
(
mode
, 
èx_sys_issue_övoi˚
 * 
sys_övoi˚
,

49 
issue_övoi˚
 * 
ˇrd_övoi˚
)

51 
uch¨
 * 
±r
;

52 
uch¨
 
x‹_vÆue
 = 0;

59 i‡(
mode
 == 0)

60 
sys_to_ˇrd
;

61 i‡(
mode
 == 1)

62 
ˇrd_to_sys
;

64  
FAIL
;

66 
sys_to_ˇrd
:

67 
	`mem˝y
(
ˇrd_övoi˚
->
d©e
, &
sys_övoi˚
->date, 4);

68 
ˇrd_övoi˚
->
övoi˚_ty≥
 = 
sys_övoi˚
->invoice_type;

69 
	`íd_covî_öt
(
ˇrd_övoi˚
->
övoi˚_num
, (
uch¨
 *)&
sys_övoi˚
->invoice_num);

71 
i
;

72 
i
 = 0; i < 
MAX_USER_TAXRATE
; i++) {

73 
ˇrd_övoi˚
->
èx_ty≥
[
i
].
ödex
 = 
sys_övoi˚
->
ôem
[i].index;

74 
	`íd_covî_öt
(
ˇrd_övoi˚
->
èx_ty≥
[
i
].
amou¡
, (
uch¨
 *)&(
sys_övoi˚
->
ôem
[i].amount));

77 
	`íd_covî_öt
(
ˇrd_övoi˚
->
amt_tŸÆ
, (
uch¨
 *)&
sys_övoi˚
->amt_total);

80 
±r
 = (
uch¨
 *)
ˇrd_övoi˚
;

81 
i
 = 0; i < (
issue_övoi˚
) - 1; i++) {

82 
x‹_vÆue
 ^*
±r
++;

85 
ˇrd_övoi˚
->
x‹_vÆue
 = xor_value;

89 
ˇrd_to_sys
:

90 
	`mem˝y
(&
sys_övoi˚
->
d©e
, 
ˇrd_övoi˚
->date, 4);

91 
sys_övoi˚
->
övoi˚_ty≥
 = 
ˇrd_övoi˚
->invoice_type;

92 
	`íd_covî_öt
((
uch¨
 *)&
sys_övoi˚
->
övoi˚_num
, 
ˇrd_övoi˚
->invoice_num);

94 
i
 = 0; i < 
MAX_USER_TAXRATE
; i++) {

95 
sys_övoi˚
->
ôem
[
i
].
ödex
 =
ˇrd_övoi˚
->
èx_ty≥
[i].index;

96 
	`íd_covî_öt
((
uch¨
 *)&(
sys_övoi˚
->
ôem
[
i
].
amou¡
), 
ˇrd_övoi˚
->
èx_ty≥
[i].amount);

99 
	`íd_covî_öt
((
uch¨
 *)&
sys_övoi˚
->
amt_tŸÆ
, 
ˇrd_övoi˚
->amt_total);

102 
	}
}

107 
	$èx_å™s_ö•e˘_övoi˚
(
mode
, 
èx_sys_ö•e˘_övoi˚
 *
sys_ö•e˘
,

108 
ö•e˘_övoi˚
 * 
ˇrd_ö•e˘
)

115 i‡(
mode
 == 0)

116 
sys_to_ˇrd
;

117 i‡(
mode
 == 1)

118 
ˇrd_to_sys
;

120  
FAIL
;

122 
sys_to_ˇrd
:

123 
ˇrd_ö•e˘
->
övoi˚_ty≥
 = 
sys_ö•e˘
->
ty≥
;

124 
	`mem˝y
(
ˇrd_ö•e˘
->
d©e
, &
sys_ö•e˘
->date, 4);

125 
	`mem˝y
(
ˇrd_ö•e˘
->
fisˇl_code
, 
sys_ö•e˘
->fiscal_code, 20);

126 
	`íd_covî_öt
(
ˇrd_ö•e˘
->
övoi˚_num
, (
uch¨
 *)&
sys_ö•e˘
->invoice_num);

127 
	`íd_covî_öt
(
ˇrd_ö•e˘
->
‹i_övoi˚_num
, (
uch¨
 *)&
sys_ö•e˘
->
‹igö_öv_num
);

128 
	`íd_covî_öt
(
ˇrd_ö•e˘
->
amt_tŸÆ
, (
uch¨
 *)&
sys_ö•e˘
->amt_total);

132 
ˇrd_to_sys
:

133 
sys_ö•e˘
->
ty≥
 = 
ˇrd_ö•e˘
->
övoi˚_ty≥
;

134 
	`mem˝y
(&
sys_ö•e˘
->
d©e
, 
ˇrd_ö•e˘
, 4);

135 
	`mem˝y
(
sys_ö•e˘
->
fisˇl_code
, 
ˇrd_ö•e˘
->fiscal_code, 20);

136 
	`íd_covî_öt
((
uch¨
*)&
sys_ö•e˘
->
övoi˚_num
, 
ˇrd_ö•e˘
->invoice_num);

137 
	`íd_covî_öt
((
uch¨
*)&
sys_ö•e˘
->
‹igö_öv_num
, 
ˇrd_ö•e˘
->
‹i_övoi˚_num
);

138 
	`íd_covî_öt
((
uch¨
*)&
sys_ö•e˘
->
amt_tŸÆ
, 
ˇrd_ö•e˘
->amt_total);

141 
	}
}

151 
	$èx_å™s_de˛¨e_duty
(
mode
, 
èx_sys_de˛¨e_duty_ªc‹d
 * 
sys_de˛¨e_duty
,

152 
de˛¨e_duty
 * 
ˇrd_de˛¨e_duty
, 
de˛¨e_ªs
 * 
ªs
)

154 
uch¨
 *
±r
;

155 
uch¨
 
x‹_vÆue
 = 0;

157 i‡(
mode
 == 0)

158 
sys_to_ˇrd
;

159 i‡(
mode
 == 1)

160 
ˇrd_to_sys
;

164 
sys_to_ˇrd
:

165 
	`mem˝y
(
ˇrd_de˛¨e_duty
->
°¨t_d©e
, &
sys_de˛¨e_duty
->start_date, 4);

166 
	`mem˝y
(
ˇrd_de˛¨e_duty
->
íd_d©e
, &
sys_de˛¨e_duty
->end_date, 4);

168 
	`íd_covî_öt
(
ˇrd_de˛¨e_duty
->
vÆid_cou¡
, (
uch¨
 *)&
sys_de˛¨e_duty
->valid_count);

169 
	`íd_covî_sh‹t
(
ˇrd_de˛¨e_duty
->
ªtu∫_cou¡
, (
uch¨
 *)&
sys_de˛¨e_duty
->return_count);

170 
	`íd_covî_sh‹t
(
ˇrd_de˛¨e_duty
->
•oû_cou¡
, (
uch¨
 *)&
sys_de˛¨e_duty
->spoil_count);

172 
	`mem˝y
(
ˇrd_de˛¨e_duty
->
èx_ödex
, 
sys_de˛¨e_duty
->tax_index, 6);

174 
i
;

175 
i
 = 0; i < 
MAX_USER_TAXRATE
; i++) {

176 
	`íd_covî_öt
(
ˇrd_de˛¨e_duty
->
amt_vÆid
[
i
].
amou¡
, (
uch¨
 *)&
sys_de˛¨e_duty
->amt_valid[i]);

177 
	`íd_covî_öt
(
ˇrd_de˛¨e_duty
->
amt_ªtu∫
[
i
].
amou¡
, (
uch¨
 *)&
sys_de˛¨e_duty
->amt_return[i]);

181 
±r
 = (
uch¨
 *)
ˇrd_de˛¨e_duty
;

182 
i
 = 0; i < (
de˛¨e_duty
) - 1; i++) {

183 
x‹_vÆue
 ^*
±r
++;

186 
ˇrd_de˛¨e_duty
->
x‹_vÆue
 = xor_value;

190 
ˇrd_to_sys
:

191 
	`mem˝y
(&
sys_de˛¨e_duty
->
°¨t_d©e
, 
ˇrd_de˛¨e_duty
->start_date, 4);

192 
	`mem˝y
(&
sys_de˛¨e_duty
->
íd_d©e
, 
ˇrd_de˛¨e_duty
->end_date, 4);

194 
	`íd_covî_öt
((
uch¨
 *)&
sys_de˛¨e_duty
->
vÆid_cou¡
, 
ˇrd_de˛¨e_duty
->valid_count);

195 
	`íd_covî_sh‹t
((
uch¨
 *)&
sys_de˛¨e_duty
->
ªtu∫_cou¡
, 
ˇrd_de˛¨e_duty
->return_count);

196 
	`íd_covî_sh‹t
((
uch¨
 *)&
sys_de˛¨e_duty
->
•oû_cou¡
, 
ˇrd_de˛¨e_duty
->spoil_count);

198 
	`mem˝y
(
sys_de˛¨e_duty
->
èx_ödex
, 
ˇrd_de˛¨e_duty
->tax_index, 6);

200 
i
 = 0; i < 
MAX_USER_TAXRATE
; i++) {

201 
	`íd_covî_öt
((
uch¨
 *)&
sys_de˛¨e_duty
->
amt_vÆid
[
i
], 
ˇrd_de˛¨e_duty
->amt_vÆid[i].
amou¡
);

202 
	`íd_covî_öt
((
uch¨
 *)&
sys_de˛¨e_duty
->
amt_ªtu∫
[
i
], 
ˇrd_de˛¨e_duty
->amt_ªtu∫[i].
amou¡
);

206 
	`íd_covî_öt
((
uch¨
 *)&
sys_de˛¨e_duty
->
tŸÆ_vÆid
, 
ªs
->total_valid);

207 
	`íd_covî_öt
((
uch¨
 *)&
sys_de˛¨e_duty
->
tŸÆ_ªtu∫
, 
ªs
->total_return);

209 
sys_de˛¨e_duty
->
°©us
 = 
ªs
->status;

210 
	`mem˝y
(
sys_de˛¨e_duty
->
mac1
, 
ªs
->mac1, 4);

211 
	`mem˝y
(
sys_de˛¨e_duty
->
sign
, 
ªs
->sign, 128);

214 
	}
}

222 
	$èx_å™s_d©a_cﬁÀ˘
(
mode
, 
de˛¨e_duty
 * 
ˇrd_de˛¨e_duty
,

223 
de˛¨e_ªs
 * 
ˇrd_de˛¨e_ªs
,

224 
d©a_cﬁÀ˘
 * 
ˇrd_d©a_cﬁÀ˘
)

226 
i
;

227 
uch¨
 *
±r
;

228 
uch¨
 
x‹_vÆue
 = 0;

230 
èx_sys_≠p_öfo
 * 
gp_≠p_öfo
 = 
	`gë_sys_≠p_öfo
();

232 i‡(
mode
 == 0)

233 
sys_to_ˇrd
;

234 i‡(
mode
 == 1)

235 
ˇrd_to_sys
;

239 
sys_to_ˇrd
:

240 
	`mem˝y
(
ˇrd_d©a_cﬁÀ˘
->
ˇrd_num
, 
gp_≠p_öfo
->
fisˇl_ˇrd_nb
, 8);

241 
	`mem˝y
((*)
ˇrd_d©a_cﬁÀ˘
 + 8, 
ˇrd_de˛¨e_duty
, 70);

242 
	`mem˝y
((*)
ˇrd_d©a_cﬁÀ˘
 + 78, 
ˇrd_de˛¨e_ªs
, 141);

245 
	`mem˝y
(
ˇrd_d©a_cﬁÀ˘
->
°¨t_d©e
, &
sys_de˛¨e_duty
->start_date, 4);

246 
	`mem˝y
(
ˇrd_d©a_cﬁÀ˘
->
íd_d©e
, &
sys_de˛¨e_duty
->end_date, 4);

248 
	`íd_covî_öt
(
ˇrd_d©a_cﬁÀ˘
->
vÆid_cou¡
, (
uch¨
 *)&
sys_de˛¨e_duty
->valid_count);

249 
	`íd_covî_sh‹t
(
ˇrd_d©a_cﬁÀ˘
->
ªtu∫_cou¡
, (
uch¨
 *)&
sys_de˛¨e_duty
->return_count);

250 
	`íd_covî_sh‹t
(
ˇrd_d©a_cﬁÀ˘
->
•oû_cou¡
, (
uch¨
 *)&
sys_de˛¨e_duty
->spoil_count);

252 
	`mem˝y
(
ˇrd_d©a_cﬁÀ˘
->
èx_ödex
, 
sys_de˛¨e_duty
->tax_index, 6);

254 
i
 = 0; i < 
MAX_USER_TAXRATE
; i++) {

255 
	`íd_covî_öt
(
ˇrd_d©a_cﬁÀ˘
->
amt_vÆid
[
i
].
amou¡
, (
uch¨
 *)&
sys_de˛¨e_duty
->amt_valid[i]);

256 
	`íd_covî_öt
(
ˇrd_d©a_cﬁÀ˘
->
amt_ªtu∫
[
i
].
amou¡
, (
uch¨
 *)&
sys_de˛¨e_duty
->amt_return[i]);

259 
ˇrd_d©a_cﬁÀ˘
->
°©us
 = 
sys_de˛¨e_ªs
->status;

260 
	`mem˝y
(
ˇrd_d©a_cﬁÀ˘
->
mac1
, 
sys_de˛¨e_ªs
->mac1, 4);

261 
	`mem˝y
(
ˇrd_d©a_cﬁÀ˘
->
sign
, 
sys_de˛¨e_ªs
->sign, 128);

265 
±r
 = (
uch¨
 *)
ˇrd_d©a_cﬁÀ˘
;

266 
i
 = 0; i < (
d©a_cﬁÀ˘
) - 1; i++) {

267 
x‹_vÆue
 ^*
±r
++;

270 
ˇrd_d©a_cﬁÀ˘
->
x‹_vÆue
 = xor_value;

274 
ˇrd_to_sys
:

280 
	}
}

289 
	$èx_å™s_daûy_cﬁÀ˘
(
mode
, 
èx_sys_daûy_cﬁÀ˘_ªc‹d
 * 
sys_daûy_cﬁÀ˘
,

290 
daûy_cﬁÀ˘
 * 
ˇrd_daûy_cﬁÀ˘
, 
daûy_cﬁÀ˘_ªs
 * 
ªs
)

292 
uch¨
 *
±r
;

293 
uch¨
 
x‹_vÆue
 = 0;

295 i‡(
mode
 == 0)

296 
sys_to_ˇrd
;

297 i‡(
mode
 == 1)

298 
ˇrd_to_sys
;

302 
sys_to_ˇrd
:

303 
	`mem˝y
(
ˇrd_daûy_cﬁÀ˘
->
cur_d©e
, &
sys_daûy_cﬁÀ˘
->cur_date, 4);

304 
	`íd_covî_sh‹t
(
ˇrd_daûy_cﬁÀ˘
->
vÆid_cou¡
, (
uch¨
 *)&
sys_daûy_cﬁÀ˘
->valid_count);

305 
	`íd_covî_sh‹t
(
ˇrd_daûy_cﬁÀ˘
->
ªtu∫_cou¡
, (
uch¨
 *)&
sys_daûy_cﬁÀ˘
->return_count);

306 
	`íd_covî_sh‹t
(
ˇrd_daûy_cﬁÀ˘
->
•oû_cou¡
, (
uch¨
 *)&
sys_daûy_cﬁÀ˘
->spoil_count);

308 
	`mem˝y
(
ˇrd_daûy_cﬁÀ˘
->
èx_ödex
, 
sys_daûy_cﬁÀ˘
->tax_index, 6);

310 
i
;

311 
i
 = 0; i < 
MAX_USER_TAXRATE
; i++) {

312 
	`íd_covî_öt
(
ˇrd_daûy_cﬁÀ˘
->
amt_vÆid
[
i
].
amou¡
, (
uch¨
 *)&
sys_daûy_cﬁÀ˘
->amt_valid[i]);

313 
	`íd_covî_öt
(
ˇrd_daûy_cﬁÀ˘
->
amt_ªtu∫
[
i
].
amou¡
, (
uch¨
 *)&
sys_daûy_cﬁÀ˘
->amt_return[i]);

317 
±r
 = (
uch¨
 *)
ˇrd_daûy_cﬁÀ˘
;

318 
i
 = 0; i < (
daûy_cﬁÀ˘
)- 1; i++)

319 
x‹_vÆue
 ^*
±r
++;

321 
ˇrd_daûy_cﬁÀ˘
->
x‹_vÆue
 = xor_value;

325 
ˇrd_to_sys
:

326 
	`mem˝y
(&
sys_daûy_cﬁÀ˘
->
cur_d©e
, 
ˇrd_daûy_cﬁÀ˘
->cur_date, 4);

327 
	`íd_covî_sh‹t
((
uch¨
 *)&
sys_daûy_cﬁÀ˘
->
vÆid_cou¡
, 
ˇrd_daûy_cﬁÀ˘
->valid_count);

328 
	`íd_covî_sh‹t
((
uch¨
 *)&
sys_daûy_cﬁÀ˘
->
ªtu∫_cou¡
, 
ˇrd_daûy_cﬁÀ˘
->return_count);

329 
	`íd_covî_sh‹t
((
uch¨
 *)&
sys_daûy_cﬁÀ˘
->
•oû_cou¡
, 
ˇrd_daûy_cﬁÀ˘
->spoil_count);

331 
	`mem˝y
(
sys_daûy_cﬁÀ˘
->
èx_ödex
, 
ˇrd_daûy_cﬁÀ˘
->tax_index, 6);

333 
i
 = 0; i < 
MAX_USER_TAXRATE
; i++) {

334 
	`íd_covî_öt
((
uch¨
 *)&
sys_daûy_cﬁÀ˘
->
amt_vÆid
[
i
], 
ˇrd_daûy_cﬁÀ˘
->amt_vÆid[i].
amou¡
);

335 
	`íd_covî_öt
((
uch¨
 *)&
sys_daûy_cﬁÀ˘
->
amt_ªtu∫
[
i
], 
ˇrd_daûy_cﬁÀ˘
->amt_ªtu∫[i].
amou¡
);

339 
	`mem˝y
(
sys_daûy_cﬁÀ˘
->
sign
, 
ªs
->sign, 128);

342 
	}
}

351 
	$èx_å™s_övoi˚_rﬁl
(
mode
, 
èx_sys_övoi˚_rﬁl_ªc‹d
 * 
sys_övoi˚_rﬁl
,

352 
övoi˚_rﬁl_öfo
 * 
ˇrd_övoi˚_rﬁl
)

354 i‡(
mode
 == 0)

355 
sys_to_ˇrd
;

356 i‡(
mode
 == 1)

357 
ˇrd_to_sys
;

361 
sys_to_ˇrd
:

362 
	`mem˝y
(
ˇrd_övoi˚_rﬁl
->
övoi˚_code
, 
sys_övoi˚_rﬁl
->invoice_code, 10);

363 
	`íd_covî_öt
(
ˇrd_övoi˚_rﬁl
->
°¨t_num
, (
uch¨
 *)&
sys_övoi˚_rﬁl
->start_num);

364 
	`íd_covî_öt
(
ˇrd_övoi˚_rﬁl
->
íd_num
, (
uch¨
 *)&
sys_övoi˚_rﬁl
->end_num);

365 
	`mem˝y
(
ˇrd_övoi˚_rﬁl
->
mac
, 
sys_övoi˚_rﬁl
->mac, 4);

369 
ˇrd_to_sys
:

370 
	`mem˝y
(
sys_övoi˚_rﬁl
->
övoi˚_code
, 
ˇrd_övoi˚_rﬁl
->invoice_code, 10);

371 
	`íd_covî_öt
((
uch¨
 *)&
sys_övoi˚_rﬁl
->
°¨t_num
, 
ˇrd_övoi˚_rﬁl
->start_num);

372 
	`íd_covî_öt
((
uch¨
 *)&
sys_övoi˚_rﬁl
->
íd_num
, 
ˇrd_övoi˚_rﬁl
->end_num);

373 
	`mem˝y
(
sys_övoi˚_rﬁl
->
mac
, 
ˇrd_övoi˚_rﬁl
->mac, 4);

376 
	}
}

384 
	$èx_å™s_buy_rﬁl
(
mode
, 
èx_sys_buy_rﬁl_ªc‹d
 * 
sys_buy_rﬁl
,

385 
buy_rﬁl_öfo
 * 
ˇrd_buy_rﬁl
)

387 i‡(
mode
 == 0)

388 
sys_to_ˇrd
;

389 i‡(
mode
 == 1)

390 
ˇrd_to_sys
;

394 
sys_to_ˇrd
:

395 
	`mem˝y
(
ˇrd_buy_rﬁl
->
övoi˚_code
, 
sys_buy_rﬁl
->invoice_code, 10);

396 
	`íd_covî_öt
(
ˇrd_buy_rﬁl
->
°¨t_num
, (
uch¨
 *)&
sys_buy_rﬁl
->start_num);

397 
	`íd_covî_öt
(
ˇrd_buy_rﬁl
->
íd_num
, (
uch¨
 *)&
sys_buy_rﬁl
->end_num);

398 
	`íd_covî_sh‹t
(
ˇrd_buy_rﬁl
->
rﬁl_num
, (
uch¨
 *)&
sys_buy_rﬁl
->roll_num);

402 
ˇrd_to_sys
:

403 
	`mem˝y
(
sys_buy_rﬁl
->
övoi˚_code
, 
ˇrd_buy_rﬁl
->invoice_code, 10);

404 
	`íd_covî_öt
((
uch¨
 *)&
sys_buy_rﬁl
->
°¨t_num
, 
ˇrd_buy_rﬁl
->start_num);

405 
	`íd_covî_öt
((
uch¨
 *)&
sys_buy_rﬁl
->
íd_num
, 
ˇrd_buy_rﬁl
->end_num);

406 
	`íd_covî_sh‹t
((
uch¨
 *)&
sys_buy_rﬁl
->
rﬁl_num
, 
ˇrd_buy_rﬁl
->roll_num);

409 
	}
}

415 
	$is_fisˇl_ˇrd_ªady
()

417 
ªt
;

418 
uch¨
 
ªs
;

420 
fisˇl_ˇrd
 * fiscal_card;

422 
fisˇl_ˇrd
 = 
	`gë_fisˇl_ˇrd
();

423 i‡(!
fisˇl_ˇrd
)

424  -
ETAX_NUL_FISCAL_CARD
;

426 
ªt
 = 
fisˇl_ˇrd
->
	`£À˘_fûe_by_df
(
FISCAL_CARD
, 
TSAM01
);

427 i‡(
ªt
 < 0)

428  
ªt
;

430 
ªt
 = 
fisˇl_ˇrd
->
	`£À˘_fûe_by_id
(
FISCAL_CARD
, 
EF02
);

431 i‡(
ªt
 < 0)

432  
ªt
;

434 
ªt
 = 
fisˇl_ˇrd
->
	`ªad_bö¨y
(
FISCAL_CARD
, 0, 1, &
ªs
);

435 i‡(
ªt
 < 0)

436  
ªt
;

438 i‡(
ªs
 == 0x00)

439  
POSITIVE
;

441  
NEGATIVE
;

442 
	}
}

448 
	$is_fisˇl_ˇrd_ªgi°î
()

450 
ªt
;

451 
uch¨
 
ªs
;

453 
fisˇl_ˇrd
 * fiscal_card;

455 
fisˇl_ˇrd
 = 
	`gë_fisˇl_ˇrd
();

456 i‡(!
fisˇl_ˇrd
)

457  -
ETAX_NUL_FISCAL_CARD
;

459 
ªt
 = 
fisˇl_ˇrd
->
	`£À˘_fûe_by_df
(
FISCAL_CARD
, 
TSAM01
);

460 i‡(
ªt
 < 0)

461  
ªt
;

463 
ªt
 = 
fisˇl_ˇrd
->
	`£À˘_fûe_by_id
(
FISCAL_CARD
, 
EF02
);

464 i‡(
ªt
 < 0)

465  
ªt
;

467 
ªt
 = 
fisˇl_ˇrd
->
	`ªad_bö¨y
(
FISCAL_CARD
, 1, 1, &
ªs
);

468 i‡(
ªt
 < 0)

469  
ªt
;

471 i‡(
ªs
 == 0x01)

472  
NEGATIVE
;

474  
POSITIVE
;

475 
	}
}

481 
	$fisˇl_ˇrd_powî_⁄
()

483 
ªt
;

484 
fisˇl_ˇrd
 *fiscal_card;

486 
fisˇl_ˇrd
 = 
	`gë_fisˇl_ˇrd
();

488 
ªt
 = 
fisˇl_ˇrd
->
	`powî_⁄
(
FISCAL_CARD
);

489 i‡(
ªt
 < 0)

490  
ªt
;

492 
ªt
 = 
fisˇl_ˇrd
->
	`powî_r°
(
FISCAL_CARD
);

493 i‡(
ªt
 !
SUCCESS
) {

494 
fisˇl_ˇrd
->
	`powî_off
(
FISCAL_CARD
);

495  
ªt
;

498  
SUCCESS
;

499 
	}
}

505 
	$fisˇl_ˇrd_gë_machöe_nb
(
uch¨
 *
ªs
)

507 
ªt
;

509 
fisˇl_ˇrd
 * fiscal_card;

511 
fisˇl_ˇrd
 = 
	`gë_fisˇl_ˇrd
();

512 i‡(!
fisˇl_ˇrd
)

513  -
ETAX_NUL_FISCAL_CARD
;

515 
ªt
 = 
fisˇl_ˇrd
->
	`£À˘_fûe_by_df
(
FISCAL_CARD
, 
TSAM01
);

516 i‡(
ªt
 < 0)

517  
ªt
;

519 
ªt
 = 
fisˇl_ˇrd
->
	`£À˘_fûe_by_id
(
FISCAL_CARD
, 
EF02
);

520 i‡(
ªt
 < 0)

521  
ªt
;

523 
ªt
 = 
fisˇl_ˇrd
->
	`ªad_bö¨y
(
FISCAL_CARD
, 10, 8, 
ªs
);

524 i‡(
ªt
 < 0)

525  
ªt
;

527  
SUCCESS
;

528 
	}
}

535 
	$fisˇl_ˇrd_gë_ˇrd_nb
(
uch¨
 *
ªs
)

537 
ªt
;

539 
fisˇl_ˇrd
 * fiscal_card;

541 
fisˇl_ˇrd
 = 
	`gë_fisˇl_ˇrd
();

542 i‡(!
fisˇl_ˇrd
)

543  -
ETAX_NUL_FISCAL_CARD
;

545 
ªt
 = 
fisˇl_ˇrd
->
	`£À˘_fûe_by_df
(
FISCAL_CARD
, 
TSAM01
);

546 i‡(
ªt
 < 0)

547  
ªt
;

549 
ªt
 = 
fisˇl_ˇrd
->
	`£À˘_fûe_by_id
(
FISCAL_CARD
, 
EF02
);

550 i‡(
ªt
 < 0)

551  
ªt
;

553 
ªt
 = 
fisˇl_ˇrd
->
	`ªad_bö¨y
(
FISCAL_CARD
, 2, 8, 
ªs
);

554 i‡(
ªt
 < 0)

555  
ªt
;

557  
SUCCESS
;

558 
	}
}

564 
	$fisˇl_ˇrd_gë_èx∑yî_nb
(
uch¨
 *
ªs
)

566 
ªt
;

568 
fisˇl_ˇrd
 * fiscal_card;

570 
fisˇl_ˇrd
 = 
	`gë_fisˇl_ˇrd
();

571 i‡(!
fisˇl_ˇrd
)

572  -
ETAX_NUL_FISCAL_CARD
;

574 
ªt
 = 
fisˇl_ˇrd
->
	`£À˘_fûe_by_df
(
FISCAL_CARD
, 
TSAM01
);

575 i‡(
ªt
 < 0)

576  
ªt
;

578 
ªt
 = 
fisˇl_ˇrd
->
	`£À˘_fûe_by_id
(
FISCAL_CARD
, 
EF02
);

579 i‡(
ªt
 < 0)

580  
ªt
;

582 
ªt
 = 
fisˇl_ˇrd
->
	`ªad_bö¨y
(
FISCAL_CARD
, 18, 8, 
ªs
);

583 i‡(
ªt
 < 0)

584  
ªt
;

586  
SUCCESS
;

587 
	}
}

594 
	$fisˇl_ˇrd_gë_övoi˚_öfo
(
öput_övoi˚_öfo
 * 
öv_öfo
)

596 
ªt
;

597 
fisˇl_ˇrd
 * fiscal_card;

599 
fisˇl_ˇrd
 = 
	`gë_fisˇl_ˇrd
();

600 i‡(!
fisˇl_ˇrd
)

601  -
ETAX_NUL_FISCAL_CARD
;

603 
ªt
 = 
fisˇl_ˇrd
->
	`£À˘_fûe_by_df
(
FISCAL_CARD
, 
TSAM01
);

604 i‡(
ªt
 < 0)

605  
ªt
;

607 
ªt
 = 
fisˇl_ˇrd
->
	`£À˘_fûe_by_id
(
FISCAL_CARD
, 
EF05
);

608 i‡(
ªt
 < 0)

609  
ªt
;

611 
ªt
 = 
fisˇl_ˇrd
->
	`ªad_bö¨y
(
FISCAL_CARD
, 0, 19, (
uch¨
 *)
öv_öfo
);

612 i‡(
ªt
 < 0)

613  
ªt
;

615  
SUCCESS
;

616 
	}
}

624 
	$fisˇl_ˇrd_upd©e_övoi˚_öfo
(
öput_övoi˚_öfo
 * 
öv_öfo
)

626 
ªt
;

628 
fisˇl_ˇrd
 * fiscal_card;

630 
fisˇl_ˇrd
 = 
	`gë_fisˇl_ˇrd
();

631 i‡(!
fisˇl_ˇrd
)

632  -
ETAX_NUL_FISCAL_CARD
;

634 
ªt
 = 
fisˇl_ˇrd
->
	`£À˘_fûe_by_df
(
FISCAL_CARD
, 
TSAM01
);

635 i‡(
ªt
 < 0)

636  
ªt
;

638 
ªt
 = 
fisˇl_ˇrd
->
	`£À˘_fûe_by_id
(
FISCAL_CARD
, 
EF05
);

639 i‡(
ªt
 < 0)

640  
ªt
;

642 
ªt
 = 
fisˇl_ˇrd
->
	`upd©e_bö¨y
(
FISCAL_CARD
, 0, 19, (
uch¨
 *)
öv_öfo
);

643 i‡(
ªt
 < 0)

644  
ªt
;

646  
SUCCESS
;

647 
	}
}

654 
	$fisˇl_ˇrd_gë_èx∑yî_«me
(
uch¨
 *
buf
)

656 
ªt
;

657 
fisˇl_ˇrd
 * fiscal_card;

659 
fisˇl_ˇrd
 = 
	`gë_fisˇl_ˇrd
();

660 i‡(!
fisˇl_ˇrd
)

661  -
ETAX_NUL_FISCAL_CARD
;

663 
ªt
 = 
fisˇl_ˇrd
->
	`£À˘_fûe_by_df
(
FISCAL_CARD
, 
TSAM01
);

664 i‡(
ªt
 < 0)

665  
ªt
;

667 
ªt
 = 
fisˇl_ˇrd
->
	`£À˘_fûe_by_id
(
FISCAL_CARD
, 
EF02
);

668 i‡(
ªt
 < 0)

669  
ªt
;

671 
ªt
 = 
fisˇl_ˇrd
->
	`ªad_bö¨y
(
FISCAL_CARD
, 0x39, 40, 
buf
);

672 i‡(
ªt
 < 0)

673  
ªt
;

675  
SUCCESS
;

676 
	}
}

683 
	$fisˇl_ˇrd_gë_≠p_öfo
(
èx_sys_≠p_öfo
 * 
≠p_öfo
)

685 
ªt
;

687 
fisˇl_ˇrd
 * fiscal_card;

689 
fisˇl_ˇrd
 = 
	`gë_fisˇl_ˇrd
();

690 i‡(!
fisˇl_ˇrd
)

691  -
ETAX_NUL_FISCAL_CARD
;

693 
ªt
 = 
	`fisˇl_ˇrd_gë_ˇrd_nb
(
≠p_öfo
->
fisˇl_ˇrd_nb
);

694 i‡(
ªt
 < 0)

695  
ªt
;

701 
ªt
 = 
fisˇl_ˇrd
->
	`£À˘_fûe_by_df
(
FISCAL_CARD
, 
TSAM01
);

702 i‡(
ªt
 < 0)

703  
ªt
;

705 
ªt
 = 
fisˇl_ˇrd
->
	`£À˘_fûe_by_id
(
FISCAL_CARD
, 
EF02
);

706 i‡(
ªt
 < 0)

707  
ªt
;

710 
ªt
 = 
fisˇl_ˇrd
->
	`ªad_bö¨y
(
FISCAL_CARD
, 0x2e, 4, (
uch¨
 *)&
≠p_öfo
->
≠p_°¨t_d©e
);

711 i‡(
ªt
 < 0)

712  
ªt
;

715 
ªt
 = 
fisˇl_ˇrd
->
	`ªad_bö¨y
(
FISCAL_CARD
, 0x32, 4, (
uch¨
 *)&
≠p_öfo
->
≠p_vaûd_d©e
);

716 i‡(
ªt
 < 0)

717  
ªt
;

720 
ªt
 = 
fisˇl_ˇrd
->
	`ªad_bö¨y
(
FISCAL_CARD
, 0x39, 40, (
uch¨
 *)
≠p_öfo
->
èx∑yî_«me
);

721 i‡(
ªt
 < 0)

722  
ªt
;

723 
≠p_öfo
->
èx∑yî_«me
[40] = '\0';

726 
ªt
 = 
fisˇl_ˇrd
->
	`ªad_bö¨y
(
FISCAL_CARD
, 18, 8, 
≠p_öfo
->
èx∑yî_nb
);

727 i‡(
ªt
 < 0)

728  
ªt
;

731 
ªt
 = 
fisˇl_ˇrd
->
	`ªad_bö¨y
(
FISCAL_CARD
, 26, 4, 
≠p_öfo
->
èx∑yî_id
);

732 i‡(
ªt
 < 0)

733  
ªt
;

736 
ªt
 = 
fisˇl_ˇrd
->
	`ªad_bö¨y
(
FISCAL_CARD
, 97, 4, 
≠p_öfo
->
offi˚_code
);

737 i‡(
ªt
 < 0)

738  
ªt
;

741 
ªt
 = 
fisˇl_ˇrd
->
	`ªad_bö¨y
(
FISCAL_CARD
, 101, 1, &
≠p_öfo
->
de˛¨e_mode
);

742 i‡(
ªt
 < 0)

743  
ªt
;

748 
ªt
 = 
fisˇl_ˇrd
->
	`£À˘_fûe_by_df
(
FISCAL_CARD
, 
TSAM01
);

749 i‡(
ªt
 < 0)

750  
ªt
;

752 
ªt
 = 
fisˇl_ˇrd
->
	`£À˘_fûe_by_id
(
FISCAL_CARD
, 
EF01
);

753 i‡(
ªt
 < 0)

754  
ªt
;

757 
ªt
 = 
fisˇl_ˇrd
->
	`ªad_bö¨y
(
FISCAL_CARD
, 0, 4, (
uch¨
 *)&
≠p_öfo
->
issue_limô_d©e
);

758 i‡(
ªt
 < 0)

759  
ªt
;

762 
ªt
 = 
fisˇl_ˇrd
->
	`ªad_bö¨y
(
FISCAL_CARD
, 4, 4, (
uch¨
 *)&
≠p_öfo
->
sögÀ_övoi˚_limô
);

763 i‡(
ªt
 < 0)

764  
ªt
;

767 
ªt
 = 
	`íd_covî_öt
((
uch¨
*)&
≠p_öfo
->
sögÀ_övoi˚_limô
, (uchar *)&app_info->single_invoice_limit);

768 i‡(
ªt
 < 0)

769  
ªt
;

772 
ªt
 = 
fisˇl_ˇrd
->
	`ªad_bö¨y
(
FISCAL_CARD
, 8, 4, (
uch¨
 *)&
≠p_öfo
->
tŸÆ_övoi˚_limô
);

773 i‡(
ªt
 < 0)

774  
ªt
;

777 
ªt
 = 
	`íd_covî_öt
((
uch¨
 *)&
≠p_öfo
->
tŸÆ_övoi˚_limô
, (uchar *)&app_info->total_invoice_limit);

778 i‡(
ªt
 < 0)

779  
ªt
;

782 
ªt
 = 
fisˇl_ˇrd
->
	`ªad_bö¨y
(
FISCAL_CARD
, 12, 4, (
uch¨
 *)&
≠p_öfo
->
ªtu∫_övoi˚_limô
);

783 i‡(
ªt
 < 0)

784  
ªt
;

787 
ªt
 = 
	`íd_covî_öt
((
uch¨
 *)&
≠p_öfo
->
ªtu∫_övoi˚_limô
, (uchar *)&app_info->return_invoice_limit);

788 i‡(
ªt
 < 0)

789  
ªt
;

792 
ªt
 = 
fisˇl_ˇrd
->
	`ªad_bö¨y
(
FISCAL_CARD
, 22, 1, &
≠p_öfo
->
dëaû_mode
);

793 i‡(
ªt
 < 0)

794  
ªt
;

797 
ªt
 = 
fisˇl_ˇrd
->
	`ªad_bö¨y
(
FISCAL_CARD
, 16, 
MAX_USER_TAXRATE
, 
≠p_öfo
->
èx_ödex
);

798 i‡(
ªt
 < 0)

799  
ªt
;

804 
i
 = 0, 
j
 = 0;

805 
uch¨
 
ödex_tmp
[
MAX_USER_TAXRATE
];

806 
i
 = 0; i < 
MAX_USER_TAXRATE
; i++) {

807 i‡(
≠p_öfo
->
èx_ödex
[
i
] != 0) {

808 
ödex_tmp
[
j
++] = 
≠p_öfo
->
èx_ödex
[
i
];

812 
≠p_öfo
->
èx_ôem_nb
 = 
j
;

813 
	`mem£t
(
≠p_öfo
->
èx_ödex
, 0, 
MAX_USER_TAXRATE
);

814 
	`mem˝y
(
≠p_öfo
->
èx_ödex
, 
ödex_tmp
,áµ_öfo->
èx_ôem_nb
);

819  
SUCCESS
;

820 
	}
}

827 
	$fisˇl_ˇrd_gë_èx_ödex
(
uch¨
 *
èx_ödex
)

829 
ªt
;

831 
fisˇl_ˇrd
 * fiscal_card;

833 
fisˇl_ˇrd
 = 
	`gë_fisˇl_ˇrd
();

834 i‡(!
fisˇl_ˇrd
)

835  -
ETAX_NUL_FISCAL_CARD
;

837 
ªt
 = 
fisˇl_ˇrd
->
	`£À˘_fûe_by_df
(
FISCAL_CARD
, 
TSAM01
);

838 i‡(
ªt
 < 0)

839  
ªt
;

841 
ªt
 = 
fisˇl_ˇrd
->
	`£À˘_fûe_by_id
(
FISCAL_CARD
, 
EF01
);

842 i‡(
ªt
 < 0)

843  
ªt
;

845 
ªt
 = 
fisˇl_ˇrd
->
	`ªad_bö¨y
(
FISCAL_CARD
, 16, 6, 
èx_ödex
);

846 i‡(
ªt
 < 0)

847  
ªt
;

849  
SUCCESS
;

850 
	}
}

857 
	$fisˇl_ˇrd_gë_√w_˘l_d©a
(
èx_sys_≠p_öfo
 * 
√w_≠p
)

859 
ªt
;

860 
fis_ef01_ªc‹d
 
fis_ef01_ªc
;

862 
fisˇl_ˇrd
 * fiscal_card;

864 
fisˇl_ˇrd
 = 
	`gë_fisˇl_ˇrd
();

865 i‡(!
fisˇl_ˇrd
)

866  -
ETAX_NUL_FISCAL_CARD
;

868 
ªt
 = 
fisˇl_ˇrd
->
	`£À˘_fûe_by_df
(
FISCAL_CARD
, 
TSAM01
);

869 i‡(
ªt
 < 0)

870  
ªt
;

872 
ªt
 = 
fisˇl_ˇrd
->
	`£À˘_fûe_by_id
(
FISCAL_CARD
, 
EF01
);

873 i‡(
ªt
 < 0)

874  
ªt
;

876 
ªt
 = 
fisˇl_ˇrd
->
	`ªad_bö¨y
(
FISCAL_CARD
, 0, 23, (
uch¨
 *)&
fis_ef01_ªc
);

877 i‡(
ªt
 < 0)

878  
ªt
;

881 
	`mem˝y
(&
√w_≠p
->
issue_limô_d©e
, 
fis_ef01_ªc
.issue_limit_date, 4);

884 
	`íd_covî_öt
((
uch¨
 *)&
√w_≠p
->
sögÀ_övoi˚_limô
, 
fis_ef01_ªc
.single_invoice_limit);

887 
	`íd_covî_öt
((
uch¨
 *)&
√w_≠p
->
tŸÆ_övoi˚_limô
, 
fis_ef01_ªc
.total_invoice_limit);

890 
	`íd_covî_öt
((
uch¨
 *)&
√w_≠p
->
ªtu∫_övoi˚_limô
, 
fis_ef01_ªc
.return_invoice_limit);

893 
	`mem˝y
(
√w_≠p
->
èx_ödex
, 
fis_ef01_ªc
.tax_index, 6);

896 
	`mem˝y
(&
√w_≠p
->
dëaû_mode
, &
fis_ef01_ªc
.detail_mode, 1);

899 
i
 = 0, 
j
 = 0;

900 
uch¨
 
tmp_ödex
[
MAX_USER_TAXRATE
];

901 
i
 = 0; i < 
MAX_USER_TAXRATE
; i++) {

902 i‡(
√w_≠p
->
èx_ödex
[
i
] != 0)

903 
tmp_ödex
[
j
++] = 
√w_≠p
->
èx_ödex
[
i
];

906 
√w_≠p
->
èx_ôem_nb
 = 
j
;

907 
	`mem£t
(
√w_≠p
->
èx_ödex
, 0, 
MAX_USER_TAXRATE
);

908 
	`mem˝y
(
√w_≠p
->
èx_ödex
, 
tmp_ödex
,Çew_≠p->
èx_ôem_nb
);

910  
SUCCESS
;

911 
	}
}

917 
	$is_u£r_ˇrd_ªady
()

919 
ªt
;

920 
uch¨
 
ªs
;

922 
u£r_ˇrd
 * user_card;

924 
u£r_ˇrd
 = 
	`gë_u£r_ˇrd
();

925 i‡(!
u£r_ˇrd
)

926  -
ETAX_NUL_USER_CARD
;

928 
ªt
 = 
u£r_ˇrd
->
	`£À˘_fûe_by_df
(
USER_CARD
, 
TID01
);

929 i‡(
ªt
 < 0)

930  
ªt
;

932 
ªt
 = 
u£r_ˇrd
->
	`£À˘_fûe_by_id
(
USER_CARD
, 
EF02
);

933 i‡(
ªt
 < 0)

934  
ªt
;

936 
ªt
 = 
u£r_ˇrd
->
	`ªad_bö¨y
(
USER_CARD
, 0, 1, &
ªs
);

937 i‡(
ªt
 < 0)

938  
ªt
;

940 i‡(
ªs
 == 0x01)

941  
POSITIVE
;

943  
NEGATIVE
;

944 
	}
}

951 
	$u£r_ˇrd_powî_⁄
()

953 
ªt
;

954 
u£r_ˇrd
 *user_card;

956 
u£r_ˇrd
 = 
	`gë_u£r_ˇrd
();

958 
ªt
 = 
u£r_ˇrd
->
	`powî_⁄
(
USER_CARD
);

959 i‡(
ªt
 < 0)

960  
ªt
;

962 
ªt
 = 
u£r_ˇrd
->
	`powî_r°
(
USER_CARD
);

963 i‡(
ªt
 !
SUCCESS
) {

964 
u£r_ˇrd
->
	`powî_off
(
USER_CARD
);

965  
ªt
;

968  
SUCCESS
;

969 
	}
}

975 
	$u£r_ˇrd_chk_èx∑yî_nb
(
uch¨
 * 
èx∑yî_nb
)

977 
ªt
;

978 
uch¨
 
ªs
[8];

980 
u£r_ˇrd
 * user_card;

982 
u£r_ˇrd
 = 
	`gë_u£r_ˇrd
();

983 i‡(!
u£r_ˇrd
)

984  -
ETAX_NUL_USER_CARD
;

986 
ªt
 = 
u£r_ˇrd
->
	`£À˘_fûe_by_df
(
USER_CARD
, 
TID01
);

987 i‡(
ªt
 < 0)

988  
ªt
;

990 
ªt
 = 
u£r_ˇrd
->
	`£À˘_fûe_by_id
(
USER_CARD
, 
EF02
);

991 i‡(
ªt
 < 0)

992  
ªt
;

994 
ªt
 = 
u£r_ˇrd
->
	`ªad_bö¨y
(
USER_CARD
, 2, 8, 
ªs
);

995 i‡(
ªt
 < 0)

996  
ªt
;

998 if(
	`memcmp
(
ªs
, 
èx∑yî_nb
, 8) != 0) {

999  -
ETAX_TAXPAYER_NB_NOT_MATCH
;

1002  
SUCCESS
;

1003 
	}
}

1010 
	$u£r_ˇrd_gë_èx∑yî_«me
(
uch¨
 *
buf
)

1012 
ªt
;

1013 
u£r_ˇrd
 * user_card;

1015 
u£r_ˇrd
 = 
	`gë_u£r_ˇrd
();

1016 i‡(!
u£r_ˇrd
)

1017  -
ETAX_NUL_USER_CARD
;

1019 
ªt
 = 
u£r_ˇrd
->
	`£À˘_fûe_by_df
(
USER_CARD
, 
TID01
);

1020 i‡(
ªt
 < 0)

1021  
ªt
;

1023 
ªt
 = 
u£r_ˇrd
->
	`£À˘_fûe_by_id
(
USER_CARD
, 
EF02
);

1024 i‡(
ªt
 < 0)

1025  
ªt
;

1027 
ªt
 = 
u£r_ˇrd
->
	`ªad_bö¨y
(
USER_CARD
, 21, 40, 
buf
);

1028 i‡(
ªt
 < 0)

1029  
ªt
;

1031  
SUCCESS
;

1032 
	}
}

1039 
	$u£r_ˇrd_gë_mach_nb
(
uch¨
 * 
num
)

1041 
ªt
;

1043 
u£r_ˇrd
 * user_card;

1045 
u£r_ˇrd
 = 
	`gë_u£r_ˇrd
();

1046 i‡(!
u£r_ˇrd
)

1047  -
ETAX_NUL_USER_CARD
;

1049 
ªt
 = 
u£r_ˇrd
->
	`£À˘_fûe_by_df
(
USER_CARD
, 
TID01
);

1050 i‡(
ªt
 < 0)

1051  
ªt
;

1053 
ªt
 = 
u£r_ˇrd
->
	`£À˘_fûe_by_id
(
USER_CARD
, 
EF02
);

1054 i‡(
ªt
 < 0)

1055  
ªt
;

1057 
ªt
 = 
u£r_ˇrd
->
	`ªad_bö¨y
(
USER_CARD
, 1, 1, 
num
);

1058 i‡(
ªt
 < 0)

1059  
ªt
;

1061  
SUCCESS
;

1062 
	}
}

1069 
	$u£r_ˇrd_gë_mach_öfo
(
ödex
, 
uch¨
 *
ªs
)

1071 
ªt
;

1072 
uch¨
 
tmp
[18];

1074 
uch¨
 
rc_ödex
 = (uch¨)
ödex
;

1076 
u£r_ˇrd
 * user_card;

1078 
u£r_ˇrd
 = 
	`gë_u£r_ˇrd
();

1079 i‡(!
u£r_ˇrd
)

1080  -
ETAX_NUL_USER_CARD
;

1082 
ªt
 = 
u£r_ˇrd
->
	`£À˘_fûe_by_df
(
USER_CARD
, 
TID01
);

1083 i‡(
ªt
 < 0)

1084  
ªt
;

1086 
ªt
 = 
u£r_ˇrd
->
	`£À˘_fûe_by_id
(
USER_CARD
, 
EF06
);

1087 i‡(
ªt
 < 0)

1088  
ªt
;

1090 
ªt
 = 
u£r_ˇrd
->
	`ªad_ªc‹d
(
USER_CARD
, 
rc_ödex
, 18, 
tmp
);

1091 i‡(
ªt
 < 0)

1092  
ªt
;

1094 
	`mem˝y
(
ªs
, 
tmp
, 18);

1096  
SUCCESS
;

1097 
	}
}

1104 
	$u£r_ˇrd_gë_tmp_di°
(
èx_sys_övoi˚_rﬁl_ªc‹d
 * 
öv_rﬁl_ªc
)

1106 
ªt
;

1108 
övoi˚_rﬁl_öfo
 
ˇrd_öv_öfo
;

1110 
u£r_ˇrd
 * user_card;

1112 
u£r_ˇrd
 = 
	`gë_u£r_ˇrd
();

1113 i‡(!
u£r_ˇrd
)

1114  -
ETAX_NUL_USER_CARD
;

1116 
ªt
 = 
u£r_ˇrd
->
	`£À˘_fûe_by_df
(
USER_CARD
, 
TID01
);

1117 i‡(
ªt
 < 0)

1118  
ªt
;

1120 
ªt
 = 
u£r_ˇrd
->
	`£À˘_fûe_by_id
(
USER_CARD
, 
EF07
);

1121 i‡(
ªt
 < 0)

1122  
ªt
;

1124 
ªt
 = 
u£r_ˇrd
->
	`ªad_ªc‹d
(
USER_CARD
, 0, 22, (
uch¨
 *)&
ˇrd_öv_öfo
);

1125 i‡(
ªt
 < 0)

1126  
ªt
;

1131 
ªt
 = 
	`èx_å™s_övoi˚_rﬁl
(1, 
öv_rﬁl_ªc
, &
ˇrd_öv_öfo
);

1132 i‡(
ªt
 < 0)

1133  
ªt
;

1135  
SUCCESS
;

1137 
	}
}

1144 
	$u£r_ˇrd_gë_fis_ty≥
(
èx_sys_≠p_öfo
 * 
≠p_öfo
)

1146 
ªt
;

1147 * 
±r
;

1148 
uch¨
 
ªs
[47];

1150 
u£r_ˇrd
 * user_card;

1151 
èx_sys_fisˇl_ty≥
 * 
fis_ty≥
;

1153 
u£r_ˇrd
 = 
	`gë_u£r_ˇrd
();

1154 i‡(!
u£r_ˇrd
)

1155  -
ETAX_NUL_USER_CARD
;

1157 
ªt
 = 
u£r_ˇrd
->
	`£À˘_fûe_by_df
(
USER_CARD
, 
TID01
);

1158 i‡(
ªt
 < 0)

1159  
ªt
;

1161 
ªt
 = 
u£r_ˇrd
->
	`£À˘_fûe_by_id
(
USER_CARD
, 
EF03
);

1162 i‡(
ªt
 < 0)

1163  
ªt
;

1165 
i
, 
cou¡
 = 0;

1166 
fis_ty≥
 = 
≠p_öfo
->fis_type;

1168 
i
 = 0; i < 
MAX_USER_TAXRATE
; i++) {

1169 
ªt
 = 
u£r_ˇrd
->
	`ªad_ªc‹d
(
USER_CARD
, 
i
 + 1, 47, 
ªs
);

1170 i‡(
ªt
 =
SUCCESS
) {

1171 i‡(
ªs
[0] != 0) {

1172 
fis_ty≥
[
cou¡
].
ödex
 = 
ªs
[0];

1173 
	`mem˝y
(
fis_ty≥
[
cou¡
].
ôem_code
, 
ªs
 + 1, 4);

1174 
	`mem˝y
(&
fis_ty≥
[
cou¡
].
èx_øã
, 
ªs
 + 5, 2);

1175 
	`mem˝y
(
fis_ty≥
[
cou¡
].
ôem_˙_«me
, 
ªs
 + 7, 20);

1176 
	`mem˝y
(
fis_ty≥
[
cou¡
].
ôem_í_«me
, 
ªs
 + 27, 20);

1179 
ªt
 = 
	`íd_covî_sh‹t
((
uch¨
 *)&
fis_ty≥
[
cou¡
].
èx_øã
,

1180 (
uch¨
 *)&
fis_ty≥
[
cou¡
].
èx_øã
);

1181 i‡(
ªt
 < 0)

1182  
ªt
;

1184 
cou¡
++;

1187 i‡(
ªt
 =-
ETAX_NO_CARD_REC
) {

1188 
≠p_öfo
->
fis_ty≥_num
 = 
cou¡
;

1189  
SUCCESS
;

1191  
ªt
;

1194 
≠p_öfo
->
fis_ty≥_num
 = 
cou¡
;

1199 
i
 = 0; i < 
MAX_USER_TAXRATE
; i++) {

1200 i‡(
fis_ty≥
[
i
].
ödex
 == 0)

1203 
±r
 = 
fis_ty≥
[
i
].
ôem_˙_«me
;

1204 *
±r
 != ' ')

1205 
±r
++;

1207 i‡(*(
±r
 + 1) == ' ')

1208 *
±r
 = '\0';

1210 
±r
 = 
fis_ty≥
[
i
].
ôem_í_«me
;

1211 *
±r
 != ' ')

1212 
±r
++;

1214 i‡(*(
±r
 + 1) == ' ')

1215 *
±r
 = '\0';

1218  
SUCCESS
;

1219 
	}
}

1227 
	$u£r_ˇrd_gë_˘l_d©a
(
uch¨
 *
ˇrd_nb
, 
u§_ef01_ªc‹d
 * 
ªs
)

1229 
i
, 
ªt
;

1230 
uch¨
 
num
;

1231 
u§_ef01_ªc‹d
 
tmp_ªs
;

1233 
u£r_ˇrd
 * u£r_ˇrd = 
	`gë_u£r_ˇrd
();

1234 i‡(
u£r_ˇrd
 =
NULL
)

1235  -
ETAX_NUL_USER_CARD
;

1237 
ªt
 = 
	`u£r_ˇrd_gë_mach_nb
(&
num
);

1238 i‡(
ªt
 < 0)

1239  
ªt
;

1241 
ªt
 = 
u£r_ˇrd
->
	`£À˘_fûe_by_df
(
USER_CARD
, 
TID01
);

1242 i‡(
ªt
 < 0)

1243  
ªt
;

1245 
ªt
 = 
u£r_ˇrd
->
	`£À˘_fûe_by_id
(
USER_CARD
, 
EF01
);

1246 i‡(
ªt
 < 0)

1247  
ªt
;

1249 
i
 = 0; i < 
num
; i++) {

1250 
ªt
 = 
u£r_ˇrd
->
	`ªad_ªc‹d
(
USER_CARD
, 
i
 + 1, 37, (
uch¨
 *)&
tmp_ªs
);

1251 i‡(
ªt
 < 0)

1252  
ªt
;

1254 i‡(
	`memcmp
(
ˇrd_nb
, 
tmp_ªs
.
fisˇrd_ˇrd_nb
, 8) == 0) {

1255 *
ªs
 = 
tmp_ªs
;

1256  
SUCCESS
;

1260  -
ETAX_UC_NOT_MATCH
;

1261 
	}
}

1269 
	$u£r_ˇrd_gë_de˛¨e_ªc‹d
(
uch¨
 * 
ˇrd_nb
, uch¨ *
buf
)

1271 
ªt
;

1272 
i
;

1274 
u£r_ˇrd
 * u£r_ˇrd = 
	`gë_u£r_ˇrd
();

1275 i‡(
u£r_ˇrd
 =
NULL
)

1276  -
ETAX_NUL_USER_CARD
;

1278 
ªt
 = 
u£r_ˇrd
->
	`£À˘_fûe_by_df
(
USER_CARD
, 
TID01
);

1279 i‡(
ªt
 < 0)

1280  
ªt
;

1282 
ªt
 = 
u£r_ˇrd
->
	`£À˘_fûe_by_id
(
USER_CARD
, 
EF04
);

1283 i‡(
ªt
 < 0)

1284  
ªt
;

1287 
i
 = 0; i < 10; i++) {

1288 
ªt
 = 
u£r_ˇrd
->
	`ªad_ªc‹d
(
USER_CARD
, 
i
 + 1, 220, 
buf
);

1289 i‡(
ªt
 < 0)

1290  
ªt
;

1292 i‡(
	`memcmp
(
ˇrd_nb
, 
buf
 + 1, 8) == 0) {

1293  
SUCCESS
;

1297  
FAIL
;

1298 
	}
}

1306 
	$u£r_ˇrd_check_ˇrd
(
uch¨
 *
èx∑yî_nb
, uch¨ * 
machöe_nb
, uch¨ * 
fis_ˇrd_nb
)

1308 
i
, 
ªt
;

1309 
uch¨
 
num
, 
ªs
[18];

1311 
ªt
 = 
	`u£r_ˇrd_chk_èx∑yî_nb
(
èx∑yî_nb
);

1312 i‡(
ªt
 !
SUCCESS
)

1313  
ªt
;

1315 
ªt
 = 
	`u£r_ˇrd_gë_mach_nb
(&
num
);

1316 i‡(
ªt
 !
SUCCESS
)

1317  
ªt
;

1319 
i
 = 0; i < 
num
; i++){

1320 
ªt
 = 
	`u£r_ˇrd_gë_mach_öfo
(
i
 + 1, 
ªs
);

1321 if(
ªt
 !
SUCCESS
){

1322  
ªt
;

1325 i‡(!
	`memcmp
(
machöe_nb
, 
ªs
, 8Ë&& !memcmp(
fis_ˇrd_nb
,Ñes + 8, 8))

1326  
SUCCESS
;

1329  -
ETAX_UC_NOT_MATCH
;

1330 
	}
}

1336 
	$is_check_ˇrd_ªady
()

1338 
ªt
;

1339 
uch¨
 
ªs
;

1341 
check_ˇrd
 * check_ˇrd = 
	`gë_check_ˇrd
();

1343 i‡(!
check_ˇrd
)

1344  -
ETAX_NUL_CHECK_CARD
;

1346 
ªt
 = 
check_ˇrd
->
	`£À˘_fûe_by_df
(
CHECK_CARD
, 
CHECK01
);

1347 i‡(
ªt
 < 0)

1348  
ªt
;

1350 
ªt
 = 
check_ˇrd
->
	`£À˘_fûe_by_id
(
CHECK_CARD
, 
EF02
);

1351 i‡(
ªt
 < 0)

1352  
ªt
;

1354 
ªt
 = 
check_ˇrd
->
	`ªad_bö¨y
(
CHECK_CARD
, 0x00, 1, &
ªs
);

1355 i‡(
ªt
 < 0)

1356  
ªt
;

1358 i‡(
ªs
 == 0x02)

1359  
POSITIVE
;

1361  
NEGATIVE
;

1362 
	}
}

1368 
	$check_ˇrd_powî_⁄
()

1370 
ªt
;

1371 
check_ˇrd
 *check_card;

1373 
check_ˇrd
 = 
	`gë_check_ˇrd
();

1375 
ªt
 = 
check_ˇrd
->
	`powî_⁄
(
CHECK_CARD
);

1376 i‡(
ªt
 < 0)

1377  
ªt
;

1379 
ªt
 = 
check_ˇrd
->
	`powî_r°
(
CHECK_CARD
);

1380 i‡(
ªt
 !
SUCCESS
) {

1381 
check_ˇrd
->
	`powî_off
(
CHECK_CARD
);

1382  
ªt
;

1385  
SUCCESS
;

1386 
	}
}

1393 
	$check_ˇrd_gë_˘l_d©a
(
uch¨
 *
˘l_d©a
)

1395 
ªt
;

1396 
check_ˇrd
 *check_card;

1397 
check_ˇrd
 = 
	`gë_check_ˇrd
();

1399 i‡(!
check_ˇrd
)

1400  -
ETAX_NUL_CHECK_CARD
;

1402 
ªt
 = 
check_ˇrd
->
	`£À˘_fûe_by_df
(
CHECK_CARD
, 
CHECK01
);

1403 i‡(
ªt
 < 0)

1404  
ªt
;

1406 
ªt
 = 
check_ˇrd
->
	`£À˘_fûe_by_id
(
CHECK_CARD
, 
EF01
);

1407 i‡(
ªt
 < 0)

1408  
ªt
;

1410 
ªt
 = 
check_ˇrd
->
	`ªad_bö¨y
(
CHECK_CARD
, 0x00, 10, 
˘l_d©a
);

1411 i‡(
ªt
 < 0)

1412  
ªt
;

1414  
SUCCESS
;

1415 
	}
}

1423 
	$check_ˇrd_gë_d©e_code
(
bcd_d©e
 *
vÆid_d©e
, 
uch¨
 *
auth_code
)

1425 
ªt
;

1426 
uch¨
 
ªs
[60] = {0};

1427 
check_ˇrd
 *check_card;

1428 
check_ˇrd
 = 
	`gë_check_ˇrd
();

1430 i‡(!
check_ˇrd
)

1431  -
ETAX_NUL_CHECK_CARD
;

1433 
ªt
 = 
check_ˇrd
->
	`£À˘_fûe_by_df
(
CHECK_CARD
, 
CHECK01
);

1434 i‡(
ªt
 < 0)

1435  
ªt
;

1437 
ªt
 = 
check_ˇrd
->
	`£À˘_fûe_by_id
(
CHECK_CARD
, 
EF02
);

1438 i‡(
ªt
 < 0)

1439  
ªt
;

1441 
ªt
 = 
check_ˇrd
->
	`ªad_bö¨y
(
CHECK_CARD
, 0x00, 60, 
ªs
);

1442 i‡(
ªt
 < 0)

1443  
ªt
;

1445 
	`mem˝y
(
auth_code
, 
ªs
 + 1, 8);

1446 
	`mem˝y
(
vÆid_d©e
, 
ªs
 + 13, 4);

1448  
SUCCESS
;

1449 
	}
}

1455 
	$check_ˇrd_gë_chk_ªc_num
(
uch¨
 *
num
)

1457 
ªt
;

1458 
uch¨
 
ªs
;

1459 
check_ˇrd
 *check_ˇrd = 
	`gë_check_ˇrd
();

1461 i‡(!
check_ˇrd
)

1462  -
ETAX_NUL_CHECK_CARD
;

1464 
ªt
 = 
check_ˇrd
->
	`£À˘_fûe_by_df
(
CHECK_CARD
, 
CHECK01
);

1465 i‡(
ªt
 < 0)

1466  
ªt
;

1468 
ªt
 = 
check_ˇrd
->
	`£À˘_fûe_by_id
(
CHECK_CARD
, 
EF03
);

1469 i‡(
ªt
 < 0)

1470  
ªt
;

1472 
low
, 
high
, 
mid
;

1473 
low
 = 1, 
high
 = 255;

1474 
low
 < 
high
) {

1475 
mid
 = (
low
 + 
high
) / 2;

1476 
ªt
 = 
check_ˇrd
->
	`ªad_ªc‹d
(
CHECK_CARD
, 
mid
, 1, &
ªs
);

1477 i‡(
ªt
 < 0) {

1478 i‡(
ªt
 !
ETAX_NO_CARD_REC
)

1479  
ªt
;

1481 
high
 = 
mid
 - 1;

1484 i‡(
ªs
 == 0 ||Ñes == 0xFF)

1485 
high
 = 
mid
 -1;

1487 
low
 = 
mid
 + 1;

1491 
ªt
 = 
check_ˇrd
->
	`ªad_ªc‹d
(
CHECK_CARD
, 
low
, 1, &
ªs
);

1492 i‡(
ªt
 < 0) {

1493 i‡(
ªt
 !
ETAX_NO_CARD_REC
)

1494  
ªt
;

1496 *
num
 = 
low
 - 1;

1499 i‡(
ªs
 == 0 ||Ñes == 0xFF)

1500 *
num
 = 
low
 - 1;

1502 *
num
 = 
low
;

1505  
SUCCESS
;

1506 
	}
}

1513 
	$check_ˇrd_gë_tŸÆ_ªc_num
(
uch¨
 *
num
)

1515 
ªt
;

1516 
uch¨
 
ªs
;

1517 
check_ˇrd
 *check_card;

1518 
check_ˇrd
 = 
	`gë_check_ˇrd
();

1520 i‡(!
check_ˇrd
)

1521  -
ETAX_NUL_CHECK_CARD
;

1523 
ªt
 = 
check_ˇrd
->
	`£À˘_fûe_by_df
(
CHECK_CARD
, 
CHECK01
);

1524 i‡(
ªt
 < 0)

1525  
ªt
;

1527 
ªt
 = 
check_ˇrd
->
	`£À˘_fûe_by_id
(
CHECK_CARD
, 
EF03
);

1528 i‡(
ªt
 < 0)

1529  
ªt
;

1531 
low
, 
high
, 
mid
;

1532 
low
 = 1, 
high
 = 255;

1533 
low
 < 
high
) {

1534 
mid
 = (
low
 + 
high
) / 2;

1535 
ªt
 = 
check_ˇrd
->
	`ªad_ªc‹d
(
CHECK_CARD
, 
mid
, 1, &
ªs
);

1536 i‡(
ªt
 < 0) {

1537 i‡(
ªt
 !
ETAX_NO_CARD_REC
)

1538  
ªt
;

1540 
high
 = 
mid
 - 1;

1543 
low
 = 
mid
 + 1;

1547 
ªt
 = 
check_ˇrd
->
	`ªad_ªc‹d
(
CHECK_CARD
, 
low
, 1, &
ªs
);

1548 i‡(
ªt
 < 0) {

1549 i‡(
ªt
 !
ETAX_NO_CARD_REC
)

1550  
ªt
;

1552 *
num
 = 
low
 - 1;

1555 *
num
 = 
low
;

1558  
SUCCESS
;

1559 
	}
}

1567 
	$check_ˇrd_wrôe_chk_ªc
(
uch¨
 
ªc_num
, uch¨ *
sbuf
)

1569 
ªt
;

1570 
check_ˇrd
 *check_card;

1571 
check_ˇrd
 = 
	`gë_check_ˇrd
();

1573 i‡(!
check_ˇrd
)

1574  -
ETAX_NUL_CHECK_CARD
;

1576 
ªt
 = 
check_ˇrd
->
	`£À˘_fûe_by_df
(
CHECK_CARD
, 
CHECK01
);

1577 i‡(
ªt
 < 0)

1578  
ªt
;

1580 
ªt
 = 
check_ˇrd
->
	`£À˘_fûe_by_id
(
CHECK_CARD
, 
EF03
);

1581 i‡(
ªt
 < 0)

1582  
ªt
;

1584 
ªt
 = 
check_ˇrd
->
	`upd©e_bö¨y
(
CHECK_CARD
, 
ªc_num
, 233, 
sbuf
);

1585 i‡(
ªt
 < 0)

1586  
ªt
;

1588  
SUCCESS
;

1589 
	}
}

1596 
	$check_ˇrd_ªad_chk_ªc
(
uch¨
 
ªc_num
, uch¨ *
rbuf
)

1598 
ªt
;

1599 
check_ˇrd
 *check_card;

1600 
check_ˇrd
 = 
	`gë_check_ˇrd
();

1602 i‡(!
check_ˇrd
)

1603  -
ETAX_NUL_CHECK_CARD
;

1605 
ªt
 = 
check_ˇrd
->
	`£À˘_fûe_by_df
(
CHECK_CARD
, 
CHECK01
);

1606 i‡(
ªt
 < 0)

1607  
ªt
;

1609 
ªt
 = 
check_ˇrd
->
	`£À˘_fûe_by_id
(
CHECK_CARD
, 
EF03
);

1610 i‡(
ªt
 < 0)

1611  
ªt
;

1613 
ªt
 = 
check_ˇrd
->
	`ªad_ªc‹d
(
CHECK_CARD
, 
ªc_num
, 233, 
rbuf
);

1614 i‡(
ªt
 < 0)

1615  
ªt
;

1617  
SUCCESS
;

1618 
	}
}

1624 
	$check_ˇrd_auth‹ôy_fc
(
uch¨
 
key_id
)

1626 
ªt
;

1627 
uch¨
 
buf
[8] = {0};

1628 
uch¨
 
ªs
[8] = {0};

1629 
check_ˇrd
 *check_ˇrd = 
	`gë_check_ˇrd
();

1630 
fisˇl_ˇrd
 *fisˇl_ˇrd = 
	`gë_fisˇl_ˇrd
();

1632 i‡(!
check_ˇrd
)

1633  -
ETAX_NUL_CHECK_CARD
;

1634 i‡(!
fisˇl_ˇrd
)

1635  -
ETAX_NUL_FISCAL_CARD
;

1637 
ªt
 = 
check_ˇrd
->
	`gë_chÆÀnge
(
CHECK_CARD
, 8, 
ªs
);

1638 i‡(
ªt
 !
SUCCESS
)

1639  
ªt
;

1641 
ªt
 = 
fisˇl_ˇrd
->
	`£À˘_fûe_by_df
(
CHECK_CARD
, 
TSAM01
);

1642 i‡(
ªt
 !
SUCCESS
)

1643  
ªt
;

1645 
ªt
 = 
fisˇl_ˇrd
->
	`öã∫Æ_auth
(
FISCAL_CARD
, 1, 
ªs
, 
buf
);

1646 i‡(
ªt
 !
SUCCESS
)

1647  
ªt
;

1649 
ªt
 = 
check_ˇrd
->
	`exã∫Æ_auth
(
CHECK_CARD
, 
key_id
, 
buf
);

1650 i‡(
ªt
 !
SUCCESS
)

1651  
ªt
;

1653  
SUCCESS
;

1654 
	}
}

1662 
	$check_ˇrd_vîify
(
uch¨
 
pö_id
, uch¨ 
pö_Àn
, uch¨ *
pö
)

1664 
ªt
;

1665 
check_ˇrd
 *check_card;

1666 
check_ˇrd
 = 
	`gë_check_ˇrd
();

1668 i‡(!
check_ˇrd
)

1669  -
ETAX_NUL_CHECK_CARD
;

1671 
ªt
 = 
check_ˇrd
->
	`ˇrd_vîify
(
CHECK_CARD
, 
pö_id
, 
pö_Àn
, 
pö
);

1672 i‡(
ªt
 !
SUCCESS
)

1673  
ªt
;

1675  
SUCCESS
;

1676 
	}
}

1684 
	$èx_ba£_gë_øã_nb
(
ödex
)

1686 
øã_nb
;

1687 
èx_sys_≠p_öfo
 * 
gp_≠p_öfo
 = 
	`gë_sys_≠p_öfo
();

1689 
øã_nb
 = 0;Ñ©e_nb < 
MAX_USER_TAXRATE
;Ñate_nb ++) {

1690 i‡(
ödex
 =
gp_≠p_öfo
->
èx_ödex
[
øã_nb
])

1691  
øã_nb
;

1694  
FAIL
;

1695 
	}
}

1703 
	$èx_ba£_gë_œ°_de˛¨e_d©e
(
bcd_d©e
 * 
d©e
)

1705 
ªt
;

1707 
π_›î©e
 * 
π_›s
 = 
	`gë_π_›s
();

1709 
bcd_d©e
 
√xt_d©e
;

1710 
èx_sys_de˛¨e_duty_ªc‹d
 
de˛¨e_ªc
;

1711 
	`mem£t
(&
de˛¨e_ªc
, 0, (declare_rec));

1713 
ªt
 = 
	`èx_fûe_ªad_œ°_ªc‹d
(
DECLARE_DUTY_FILE
, (
uch¨
 *)&
de˛¨e_ªc
,

1714 (
de˛¨e_ªc
));

1715 i‡(
ªt
 < 0)

1716  
ªt
;

1718 
√xt_d©e
 = 
de˛¨e_ªc
.
íd_d©e
;

1719 
ªt
 = 
π_›s
->
	`gë_√xt_d©e
(&
√xt_d©e
);

1720 i‡(
ªt
 < 0)

1723 *
d©e
 = 
√xt_d©e
;

1725  
SUCCESS
;

1726 
	}
}

1734 
	$èx_ba£_check_d©e
(
èx_sys_≠p_öfo
 * 
≠p_öfo
)

1736 
ªt
;

1737 
π_›î©e
 * 
π_›s
 = 
	`gë_π_›s
();

1740 
ªt
 = 
π_›s
->
	`cmp_bcd_d©e
(&
≠p_öfo
->
≠p_°¨t_d©e
, &≠p_öfo->
öô_d©e
);

1741 i‡(
ªt
 > 0)

1742  -(
ETAX_DATE_CONFUSE
);

1745 
ªt
 = 
π_›s
->
	`cmp_bcd_d©e
(&
≠p_öfo
->
öô_d©e
, &≠p_öfo->
issue_limô_d©e
);

1746 i‡(
ªt
 > 0)

1747  -(
ETAX_DATE_CONFUSE
);

1750 
ªt
 = 
π_›s
->
	`cmp_bcd_d©e
(&
≠p_öfo
->
issue_limô_d©e
, &≠p_öfo->
≠p_vaûd_d©e
);

1751 i‡(
ªt
 > 0)

1752  -(
ETAX_DATE_CONFUSE
);

1754  
SUCCESS
;

1755 
	}
}

1763 
	$èx_ba£_check_lock_d©e
(
bcd_d©e
 *
d©e
)

1765 
ªt
;

1766 
uöt
 
jd
, 
jd_lock
;

1767 
uöt
 
yór
, 
m⁄
, 
day
;

1769 
èx_sys_≠p_öfo
 * 
gp_≠p_öfo
 = 
	`gë_sys_≠p_öfo
();

1771 
	`bcd_to_gªg
(
d©e
, &
yór
, &
m⁄
, &
day
);

1772 
jd
 = 
	`gªg_to_julün
(
yór
, 
m⁄
, 
day
);

1774 
	`bcd_to_gªg
(&
gp_≠p_öfo
->
öô_d©e
, &
yór
, &
m⁄
, &
day
);

1775 
jd_lock
 = 
	`gªg_to_julün
(
yór
, 
m⁄
, 
day
);

1776 
jd_lock
 +
MACHINE_LOCK_DATE
;

1778 
ªt
 = 
jd_lock
 - 
jd
;

1780  
ªt
;

1781 
	}
}

1791 
	$èx_ba£_check_de˛¨e_d©e
(
bcd_d©e
 *
d©e
)

1793 
ªt
;

1794 
days
;

1796 
π_›î©e
 * 
π_›s
 = 
	`gë_π_›s
();

1797 
èx_sys_≠p_öfo
 *
gp_≠p_öfo
 = 
	`gë_sys_≠p_öfo
();

1799 
ªt
 = 
π_›s
->
	`cmp_bcd_d©e
(
d©e
, &
gp_≠p_öfo
->
issue_limô_d©e
);

1800 i‡(
ªt
 > 0)

1801 *
d©e
 = 
gp_≠p_öfo
->
issue_limô_d©e
;

1807 
days
 = 
	`èx_ba£_check_lock_d©e
(
d©e
);

1808 i‡(
days
 <= 0) {

1809 
days
 = -days;

1810 
	`sub_bcd_d©e
(
d©e
, (
uöt
)
days
 + 1);

1813  
SUCCESS
;

1814 
	}
}

1816 #ifde‡
CONFIG_CHECK_DEADLINE


1821 
	$èx_ba£_check_dódlöe
(
bcd_d©e
 *
today
)

1823  
SUCCESS
;

1824 
	}
}

1832 
	$èx_ba£_övoi˚_check
()

1834 
ªt
;

1835 
öv_num
;

1837 
èx_sys_¥Ÿe˘_ªc‹d
 
¥Ÿ_ªc
;

1839 
èx_sys_cur_rﬁl_À·_ªc‹d
 * 
gp_cur_rﬁl_À·
 = 
	`gë_cur_rﬁl_À·
();

1841 i‡(
gp_cur_rﬁl_À·
->
cur_rﬁl_À·
 < 1) {

1842 
ªt
 = 
	`èx_fûe_is_em±y
(
PROTECT_FILE
);

1843 i‡(
ªt
 =
POSITIVE
) {

1844  -
ETAX_INVOICE_EMPTY
;

1845 } i‡(
ªt
 =
NEGATIVE
){

1846 
	`mem£t
(&
¥Ÿ_ªc
, 0, (prot_rec));

1848 
ªt
 = 
	`èx_fûe_ªad_¥Ÿe˘
(&
¥Ÿ_ªc
);

1849 i‡(
ªt
 < 0)

1850  
ªt
;

1852 
öv_num
 = 
¥Ÿ_ªc
.
övoi˚_öfo
.
íd_num
 -ÖrŸ_ªc.övoi˚_öfo.
°¨t_num
;

1853 i‡(
öv_num
 > 0)

1854  -
ETAX_INVOICE_NOT_MOUNT
;

1856  -
ETAX_INVOICE_EMPTY
;

1858  
ªt
;

1861  
SUCCESS
;

1862 
	}
}

1869 
	$èx_ba£_vîify_check_ˇrd
(
uch¨
 *
pö
)

1871 
ªt
;

1872 
check_ˇrd
 * check_ˇrd = 
	`gë_check_ˇrd
();

1874 i‡(!
check_ˇrd
)

1875  -
ETAX_NUL_CHECK_CARD
;

1877 
ªt
 = 
	`check_ˇrd_powî_⁄
();

1878 i‡(
ªt
 < 0)

1879  
ªt
;

1881 
ªt
 = 
	`is_check_ˇrd_ªady
();

1882 i‡(
ªt
 !
POSITIVE
)

1883 
îr
;

1885 
ªt
 = 
	`check_ˇrd_vîify
(0x01, 8, 
pö
);

1886 i‡(
ªt
 !
SUCCESS
)

1887 
îr
;

1889 
ªt
 = 
SUCCESS
;

1890 
îr
:

1891 
check_ˇrd
->
	`powî_off
(
CHECK_CARD
);

1892  
ªt
;

1893 
	}
}

1900 
	$èx_ba£_gë_check_öfo
(
èx_sys_check_öfo
 * 
chk_öfo
)

1902 
ªt
;

1903 
check_ˇrd
 * check_ˇrd = 
	`gë_check_ˇrd
();

1905 i‡(!
check_ˇrd
)

1906  -
ETAX_NUL_CHECK_CARD
;

1908 
ªt
 = 
	`check_ˇrd_powî_⁄
();

1909 i‡(
ªt
 !
SUCCESS
)

1910  
ªt
;

1912 
ªt
 = 
	`is_check_ˇrd_ªady
();

1913 i‡(
ªt
 !
POSITIVE
)

1914 
îr
;

1916 
ªt
 = 
	`check_ˇrd_gë_˘l_d©a
((
uch¨
 *)
chk_öfo
);

1917 i‡(
ªt
 < 0)

1918 
îr
;

1920 
ªt
 = 
	`check_ˇrd_gë_d©e_code
(&
chk_öfo
->
vÆid_d©e
, chk_öfo->
auth_code
);

1921 i‡(
ªt
 < 0)

1922 
îr
;

1924 
ªt
 = 
	`check_ˇrd_gë_chk_ªc_num
(&
chk_öfo
->
ªc_num
);

1925 i‡(
ªt
 < 0)

1926 
îr
;

1928 
ªt
 = 
	`check_ˇrd_gë_tŸÆ_ªc_num
(&
chk_öfo
->
tŸÆ_num
);

1929 i‡(
ªt
 < 0)

1930 
îr
;

1932 
ªt
 = 
SUCCESS
;

1933 
îr
:

1934 
check_ˇrd
->
	`powî_off
(
CHECK_CARD
);

1935  
ªt
;

1936 
	}
}

1944 
	$èx_sys_is_fisˇl_öô
()

1946 
ªt
;

1948 
èx_sys_c⁄fig_ªc‹d
 
sys_cfg_ªc
;

1950 
FILE
 *
Â
;

1953 
Â
 = 
	`f›í
(
SYS_CFG_FILE
, "rb");

1954 i‡(
Â
 =
NULL
) {

1955  
NEGATIVE
;

1958 
	`f˛o£
(
Â
);

1960 
	`mem£t
(&
sys_cfg_ªc
, 0, (sys_cfg_rec));

1962 
ªt
 = 
	`èx_fûe_ªad_sys_cfg
(&
sys_cfg_ªc
);

1963 i‡(
ªt
 !
SUCCESS
) {

1964  
FAIL
;

1967 i‡(
sys_cfg_ªc
.
is_öô
 !
POSITIVE
) {

1968  
NEGATIVE
;

1971  
POSITIVE
;

1972 
	}
}

1978 
	$èx_sys_gë_övoi˚_nb
(
uöt
 *
öv_nb
)

1980 
èx_sys_buy_rﬁl_ªc‹d
 * 
gp_cur_rﬁl
 = 
	`gë_cur_rﬁl
();

1981 
èx_sys_cur_rﬁl_À·_ªc‹d
 *
gp_cur_rﬁl_À·
 = 
	`gë_cur_rﬁl_À·
();

1983 i‡(
gp_cur_rﬁl_À·
->
cur_rﬁl_À·
 == 0)

1984  -
ETAX_INVOICE_MC_EMPTY
;

1986 *
öv_nb
 = 
gp_cur_rﬁl
->
íd_num
 - 
gp_cur_rﬁl_À·
->
cur_rﬁl_À·
 + 1;

1988  
SUCCESS
;

1989 
	}
}

1997 
	$èx_sys_gë_buy_rﬁl
(*
rﬁl_num
, 
èx_sys_buy_rﬁl_ªc‹d
 * 
rﬁl_ªc
)

1999 
ªt
;

2000 
uöt
 
ödex
;

2002 
u£r_ˇrd
 *u£r_ˇrd = 
	`gë_u£r_ˇrd
();

2003 
machöe_öfo_ªc‹d
 *
gp_mach_öfo
 = 
	`gë_mach_öfo
();

2004 
èx_sys_≠p_öfo
 *
gp_≠p_öfo
 = 
	`gë_sys_≠p_öfo
();

2006 
buy_rﬁl_öfo
 
ˇrd_buy_rﬁl
;

2007 
	`mem£t
(&
ˇrd_buy_rﬁl
, 0, (card_buy_roll));

2009 #ifde‡
CONFIG_DEBUG


2010 
	`as£π
(
u£r_ˇrd
 !
NULL
);

2011 
	`as£π
(
rﬁl_num
 !
NULL
 && 
rﬁl_ªc
 != NULL);

2014 
ªt
 = 
	`u£r_ˇrd_powî_⁄
();

2015 i‡(
ªt
 < 0)

2016 
ˇrd_off
;

2018 
ªt
 = 
	`is_u£r_ˇrd_ªady
();

2019 i‡(
ªt
 !
POSITIVE
) {

2020 
ªt
 = -
ETAX_UC_NOT_READY
;

2021 
ˇrd_off
;

2024 
ªt
 = 
	`u£r_ˇrd_check_ˇrd
(
gp_≠p_öfo
->
èx∑yî_nb
, 
gp_mach_öfo
->
machöe_nb
, gp_≠p_öfo->
fisˇl_ˇrd_nb
);

2025 i‡(
ªt
 < 0) {

2026 
ªt
 = -
ETAX_UC_NOT_MATCH
;

2027 
ˇrd_off
;

2030 
ªt
 = 
u£r_ˇrd
->
	`£À˘_fûe_by_df
(
USER_CARD
, 
TID01
);

2031 i‡(
ªt
 < 0)

2032 
ˇrd_off
;

2034 
ªt
 = 
u£r_ˇrd
->
	`£À˘_fûe_by_id
(
USER_CARD
, 
EF05
);

2035 i‡(
ªt
 < 0)

2036 
ˇrd_off
;

2038 *
rﬁl_num
 = 0;

2039 
ödex
 = 0; index < 10; index ++) {

2040 
ªt
 = 
u£r_ˇrd
->
	`ªad_ªc‹d
(
USER_CARD
, 
ödex
 + 1,

2041 (
ˇrd_buy_rﬁl
), (
uch¨
 *)&card_buy_roll);

2042 i‡(
ªt
 < 0) {

2043 i‡(
ªt
 =-
ETAX_NO_CARD_REC
) {

2044 
ªt
 = -
ETAX_INVOICE_EMPTY
;

2047 
ˇrd_off
;

2050 i‡(
ˇrd_buy_rﬁl
.
rﬁl_num
[0] == 0 && card_buy_roll.roll_num[1] == 0) {

2051 
ªt
 = -
ETAX_INVOICE_EMPTY
;

2055 
ªt
 = 
	`èx_å™s_buy_rﬁl
(1, &
rﬁl_ªc
[
ödex
], &
ˇrd_buy_rﬁl
);

2056 i‡(
ªt
 !
SUCCESS
)

2057 
ˇrd_off
;

2059 (*
rﬁl_num
) += 1;

2062 i‡(*
rﬁl_num
 > 0)

2063 
ªt
 = 
SUCCESS
;

2065 
ˇrd_off
:

2066 
u£r_ˇrd
->
	`powî_off
(
USER_CARD
);

2068  
ªt
;

2069 
	}
}

2077 
	$èx_sys_di°_övoi˚
(
èx_sys_övoi˚_rﬁl_ªc‹d
 * 
öv_rﬁl_ªc
)

2079 
ªt
;

2080 
îr_Êag
;

2082 
fisˇl_ˇrd
 *fiscal_card;

2083 
u£r_ˇrd
 *user_card;

2085 
èx_sys_övoi˚_rﬁl_ªc‹d
 
tmp_öv_rﬁl
;

2086 
èx_sys_övoi˚_rﬁl_ªc‹d
 
œ°_di°_ªc‹d
;

2087 
èx_sys_¥Ÿe˘_ªc‹d
 
¥Ÿ_ªc
;

2089 
èx_sys_fis_c⁄fig_ªc‹d
 * 
gp_fis_cfg
 = 
	`gë_fis_c⁄fig
();

2090 
èx_sys_≠p_öfo
 * 
gp_≠p_öfo
 = 
	`gë_sys_≠p_öfo
();

2091 
machöe_öfo_ªc‹d
 * 
gp_mach_öfo
 = 
	`gë_mach_öfo
();

2093 
	`mem£t
(&
tmp_öv_rﬁl
, 0, (tmp_inv_roll));

2094 
	`mem£t
(&
œ°_di°_ªc‹d
, 0, (last_dist_record));

2095 
	`mem£t
(&
¥Ÿ_ªc
, 0, (prot_rec));

2097 #i‡
CONFIG_DEBUG


2098 
	`as£π
(
öv_rﬁl_ªc
 !
NULL
);

2099 
	`debug_msg
("DOING DISTRIBUTE INVOICE\n");

2102 
fisˇl_ˇrd
 = 
	`gë_fisˇl_ˇrd
();

2103 i‡(!
fisˇl_ˇrd
)

2104  -
ETAX_NUL_FISCAL_CARD
;

2106 
u£r_ˇrd
 = 
	`gë_u£r_ˇrd
();

2107 i‡(!
u£r_ˇrd
)

2108  -
ETAX_NUL_USER_CARD
;

2110 
ªt
 = 
	`u£r_ˇrd_powî_⁄
();

2111 i‡(
ªt
 !
SUCCESS
)

2112 
ˇrd_off
;

2114 
ªt
 = 
	`is_u£r_ˇrd_ªady
();

2115 i‡(
ªt
 !
POSITIVE
) {

2116 
ªt
 = -
ETAX_UC_NOT_READY
;

2117 
ˇrd_off
;

2119 
ªt
 = 
	`u£r_ˇrd_check_ˇrd
(
gp_≠p_öfo
->
èx∑yî_nb
,

2120 
gp_mach_öfo
->
machöe_nb
, 
gp_≠p_öfo
->
fisˇl_ˇrd_nb
);

2121 i‡(
ªt
 < 0) {

2122 
ˇrd_off
;

2125 
îr_Êag
 = 1;

2130 i‡(
gp_fis_cfg
->
di°_îr_Êag
 == 1) {

2131 
ªt
 = 
	`èx_fûe_is_fuŒ
(
DIST_ROLL_FILE
);

2132 i‡(
ªt
 =
POSITIVE
) {

2133 
ªt
 = -
ETAX_INVOICE_FULL
;

2134 
ˇrd_off
;

2137 
ªt
 = 
	`u£r_ˇrd_gë_tmp_di°
(&
tmp_öv_rﬁl
);

2138 i‡(
ªt
 < 0)

2139 
ˇrd_off
;

2144 i‡(
tmp_öv_rﬁl
.
°¨t_num
 != 0) {

2145 
ªt
 = 
	`èx_fûe_is_em±y
(
LAST_DIST_FILE
);

2146 i‡(
ªt
 =
POSITIVE
) {

2151 
ªt
 = 
	`èx_fûe_ßve_œ°_di°
(&
tmp_öv_rﬁl
);

2152 i‡(
ªt
 < 0)

2153 
ˇrd_off
;

2159 *
öv_rﬁl_ªc
 = 
tmp_öv_rﬁl
;

2160 
îr_Êag
 = 0;

2162 
di°_d⁄e
;

2167 
ªt
 = 
	`èx_fûe_ªad_œ°_di°
(&
œ°_di°_ªc‹d
);

2168 i‡(
ªt
 < 0)

2169 
ˇrd_off
;

2174 
ªt
 = 
	`memcmp
(&
tmp_öv_rﬁl
, &
œ°_di°_ªc‹d
, (tmp_inv_roll));

2175 i‡(
ªt
 != 0) {

2176 
ªt
 = 
	`èx_fûe_ßve_œ°_di°
(&
tmp_öv_rﬁl
);

2177 i‡(
ªt
 < 0)

2178 
ˇrd_off
;

2180 *
öv_rﬁl_ªc
 = 
tmp_öv_rﬁl
;

2181 
îr_Êag
 = 0;

2183 
di°_d⁄e
;

2189 
gp_fis_cfg
->
di°_îr_Êag
 = 0;

2190 
ªt
 = 
	`èx_fûe_ßve_fis_cfg
(
gp_fis_cfg
);

2191 i‡(
ªt
 < 0)

2192 
ˇrd_off
;

2197 
gp_fis_cfg
->
di°_îr_Êag
 = 0;

2198 
ªt
 = 
	`èx_fûe_ßve_fis_cfg
(
gp_fis_cfg
);

2199 i‡(
ªt
 < 0)

2200 
ˇrd_off
;

2208 #i‡
CONFIG_PWR_OFF_PROTECT


2209 
powî_°©e
 *
pm
 = 
	`gë_powî_°©e
();

2210 
pm
->
	`check_powî_°©e
();

2213 
ªt
 = 
	`èx_fûe_is_fuŒ
(
DIST_ROLL_FILE
);

2214 i‡(
ªt
 =
POSITIVE
) {

2215 
ªt
 = -
ETAX_INVOICE_FULL
;

2216 
di°_d⁄e
;

2218 i‡(
ªt
 !
NEGATIVE
)

2219 
di°_d⁄e
;

2221 
övoi˚_rﬁl_öfo
 
ˇrd_övoi˚_rﬁl
;

2222 
ªt
 = 
u£r_ˇrd
->
	`di°ribuã_övoi˚_nb
(&
ˇrd_övoi˚_rﬁl
);

2223 i‡(
ªt
 !
SUCCESS
) {

2224 
gp_fis_cfg
->
di°_îr_Êag
 = 1;

2225 
ªt
 = 
	`èx_fûe_ßve_fis_cfg
(
gp_fis_cfg
);

2226 i‡(
ªt
 < 0)

2227 
ˇrd_off
;

2233 
ªt
 = 
	`èx_å™s_övoi˚_rﬁl
(1, 
öv_rﬁl_ªc
, &
ˇrd_övoi˚_rﬁl
);

2234 i‡(
ªt
 < 0)

2235 
di°_d⁄e
;

2237 
ªt
 = 
	`èx_fûe_ßve_œ°_di°
(
öv_rﬁl_ªc
);

2238 i‡(
ªt
 < 0)

2239 
di°_d⁄e
;

2241 
ªt
 = 
	`èx_fûe_≠≥nd_di°_rﬁl
(
öv_rﬁl_ªc
);

2242 i‡(
ªt
 < 0)

2243 
di°_d⁄e
;

2245 
îr_Êag
 = 0;

2247 
di°_d⁄e
:

2248 
gp_fis_cfg
->
di°_îr_Êag
 = 
îr_Êag
;

2249 
ªt
 = 
	`èx_fûe_ßve_fis_cfg
(
gp_fis_cfg
);

2250 i‡(
ªt
 < 0)

2251 
ˇrd_off
;

2253 i‡(
ªt
 >= 0)

2254 
ªt
 = 
SUCCESS
;

2256 
ˇrd_off
:

2257 
fisˇl_ˇrd
->
	`powî_off
(
FISCAL_CARD
);

2258 
u£r_ˇrd
->
	`powî_off
(
FISCAL_CARD
);

2260  
ªt
;

2261 
	}
}

2271 
	$èx_sys_di°_mul_övoi˚
(
cou¡
, 
èx_sys_övoi˚_rﬁl_ªc‹d
 * 
öv_rﬁl_ªcs
)

2273 
ªt
;

2275 #i‡
CONFIG_DEBUG


2276 
	`as£π
(
öv_rﬁl_ªcs
 !
NULL
);

2282 
i
;

2283 
i
 = 0; i < 
cou¡
; i++) {

2284 
ªt
 = 
	`èx_sys_di°_övoi˚
(
öv_rﬁl_ªcs
);

2285 i‡(
ªt
 < 0) {

2286 
îr_num
 = 
ªt
;

2290 
öv_rﬁl_ªcs
 ++;

2293  
i
;

2294 
	}
}

2302 
	$èx_sys_mou¡_rﬁl
(
èx_sys_övoi˚_rﬁl_ªc‹d
 * 
öv_rﬁl_ªc
)

2304 
ªt
;

2305 
fisˇl_ˇrd
 *fiscal_card;

2306 
u£r_ˇrd
 * user_card;

2308 
èx_sys_pö_ªc‹d
 *
gp_pö
 = 
	`gë_pö
();

2310 #i‡
CONFIG_DEBUG


2311 
	`as£π
(
öv_rﬁl_ªc
 !
NULL
);

2312 
	`debug_msg
("DOING MOUNT ROLL\n");

2315 
ªt
 = 
SUCCESS
;

2317 
fisˇl_ˇrd
 = 
	`gë_fisˇl_ˇrd
();

2318 i‡(!
fisˇl_ˇrd
)

2319  -
ETAX_NUL_FISCAL_CARD
;

2321 
u£r_ˇrd
 = 
	`gë_u£r_ˇrd
();

2322 i‡(!
u£r_ˇrd
)

2323  -
ETAX_NUL_USER_CARD
;

2325 
ªt
 = 
	`fisˇl_ˇrd_powî_⁄
();

2326 i‡(
ªt
 !
SUCCESS
)

2327  
ªt
;

2329 
ªt
 = 
	`is_fisˇl_ˇrd_ªady
();

2330 i‡(
ªt
 !
POSITIVE
) {

2331 
ªt
 = -
ETAX_FC_NOT_READY
;

2332 
ˇrd_off
;

2335 #i‡
CONFIG_PWR_OFF_PROTECT


2336 
powî_°©e
 * 
pm
 = 
	`gë_powî_°©e
();

2337 
pm
->
	`check_powî_°©e
();

2343 
èx_sys_pö_ªc‹d
 
√w_pö
;

2344 
ªt
 = 
fisˇl_ˇrd
->
	`vîify_fisˇl_pö
((
uch¨
 *)
gp_pö
, (uch¨ *)&
√w_pö
);

2345 i‡(
ªt
 < 0)

2346 
ˇrd_off
;

2348 
ªt
 = 
	`èx_fûe_ßve_pö
(&
√w_pö
);

2349 i‡(
ªt
 < 0)

2350 
ˇrd_off
;

2355 
övoi˚_rﬁl_öfo
 
ˇrd_rﬁl_öfo
;

2356 
ªt
 = 
	`èx_å™s_övoi˚_rﬁl
(0, 
öv_rﬁl_ªc
, &
ˇrd_rﬁl_öfo
);

2357 i‡(
ªt
 < 0)

2358  
ªt
;

2361 
ªt
 = 
fisˇl_ˇrd
->
	`öput_övoi˚_nb
(&
ˇrd_rﬁl_öfo
);

2362 i‡(
ªt
 < 0)

2363 
ˇrd_off
;

2369 
ªt
 = 
	`èx_fûe_˛ór
(
PROTECT_FILE
);

2370 i‡(
ªt
 < 0)

2371 
ˇrd_off
;

2374 
èx_sys_buy_rﬁl_ªc‹d
 
√w_cur_rﬁl
;

2375 
	`mem£t
(&
√w_cur_rﬁl
, 0, (new_cur_roll));

2377 
	`mem˝y
(
√w_cur_rﬁl
.
övoi˚_code
, 
öv_rﬁl_ªc
->invoice_code, 10);

2378 
√w_cur_rﬁl
.
°¨t_num
 = 
öv_rﬁl_ªc
->start_num;

2379 
√w_cur_rﬁl
.
íd_num
 = 
öv_rﬁl_ªc
->end_num;

2381 
èx_sys_cur_rﬁl_À·_ªc‹d
 
√w_¸ 
;

2382 
√w_¸ 
.
cur_rﬁl_À·
 = 
√w_cur_rﬁl
.
íd_num
 -Çew_cur_rﬁl.
°¨t_num
;

2387 
ªt
 = 
	`èx_fûe_ßve_cur_rﬁl
(&
√w_cur_rﬁl
);

2388 i‡(
ªt
 < 0)

2389 
ˇrd_off
;

2391 
ªt
 = 
	`èx_fûe_ßve_¸ 
(&
√w_¸ 
);

2392 i‡(
ªt
 < 0)

2393 
ˇrd_off
;

2395 
ªt
 = 
SUCCESS
;

2397 
ˇrd_off
:

2398 
fisˇl_ˇrd
->
	`powî_off
(
FISCAL_CARD
);

2399 
u£r_ˇrd
->
	`powî_off
(
USER_CARD
);

2401  
ªt
;

2402 
	}
}

2410 
	$èx_sys_cur_rﬁl_cﬁÀ˘
()

2412 
ªt
;

2413 
ªc_cou¡
;

2415 
èx_sys_buy_rﬁl_ªc‹d
 *
gp_cur_rﬁl
 = 
	`gë_cur_rﬁl
();

2417 
èx_sys_cur_rﬁl_id_ªc‹d
 
cur_rﬁl_ªc
;

2418 
èx_sys_u£d_rﬁl_id_ªc‹d
 
u£d_rﬁl_ªc
;

2420 
	`mem£t
(&
cur_rﬁl_ªc
, 0, (cur_roll_rec));

2421 
	`mem£t
(&
u£d_rﬁl_ªc
, 0, (used_roll_rec));

2424 
u£d_rﬁl_ªc
.
°¨t_num
 = 
gp_cur_rﬁl
->start_num;

2425 
u£d_rﬁl_ªc
.
íd_num
 = 
gp_cur_rﬁl
->end_num;

2426 
	`mem˝y
(
u£d_rﬁl_ªc
.
övoi˚_code
, 
gp_cur_rﬁl
->invoice_code, 10);

2428 
ªt
 = 
	`èx_fûe_ªad_cur_rﬁl_id
(1, &
cur_rﬁl_ªc
);

2429 i‡(
ªt
 < 0)

2430  
ªt
;

2432 
u£d_rﬁl_ªc
.
°¨t_d©e
 = 
cur_rﬁl_ªc
.
d©e
;

2434 
ªt
 = 
	`èx_fûe_ªad_œ°_ªc‹d
(
ROLL_ID_FILE
, (
uch¨
 *)&
cur_rﬁl_ªc
,

2435 (
cur_rﬁl_ªc
));

2436 i‡(
ªt
 < 0)

2437  
ªt
;

2439 
u£d_rﬁl_ªc
.
íd_d©e
 = 
cur_rﬁl_ªc
.
d©e
;

2441 
ªc_cou¡
 = 
	`èx_fûe_gë_ªc_num
(
ROLL_ID_FILE
);

2442 i‡(
ªc_cou¡
 < 0)

2443  
ªt
;

2445 
i
;

2446 
i
 = 0; i < 
ªc_cou¡
; i++) {

2447 
ªt
 = 
	`èx_fûe_ªad_cur_rﬁl_id
(
i
 + 1, &
cur_rﬁl_ªc
);

2448 i‡(
ªt
 < 0)

2449  
ªt
;

2451 
cur_rﬁl_ªc
.
ty≥
) {

2452 
NORMAL_INVOICE
:

2453 
u£d_rﬁl_ªc
.
amt_vÆid
 +
cur_rﬁl_ªc
.
amout_tŸÆ
;

2454 
u£d_rﬁl_ªc
.
vÆid_cou¡
 ++;

2457 
RETURN_INVOICE
:

2458 
u£d_rﬁl_ªc
.
amt_ªtu∫
 +
cur_rﬁl_ªc
.
amout_tŸÆ
;

2459 
u£d_rﬁl_ªc
.
ªtu∫_cou¡
 ++;

2462 
SPOIL_INVOICE
:

2463 
u£d_rﬁl_ªc
.
•oû_cou¡
 ++;

2467  -
ETAX_UNKNOW_ERR
;

2472 
ªt
 = 
	`èx_fûe_≠≥nd_u£d_rﬁl_id
(&
u£d_rﬁl_ªc
);

2473 i‡(
ªt
 < 0)

2474  
ªt
;

2476 
ªt
 = 
	`èx_fûe_˛ór
(
ROLL_ID_FILE
);

2477 i‡(
ªt
 < 0)

2478  
ªt
;

2480  
SUCCESS
;

2481 
	}
}

2489 
	$èx_sys_nul_daûy_cﬁÀ˘
(
bcd_d©e
 * 
d©e
)

2491 
ªt
;

2493 
fisˇl_ˇrd
 * fiscal_card;

2494 
èx_sys_≠p_öfo
 * 
gp_≠p_öfo
 = 
	`gë_sys_≠p_öfo
();

2495 
èx_sys_pö_ªc‹d
 *
gp_pö
 = 
	`gë_pö
();

2496 
π_›î©e
 * 
π_›s
 = 
	`gë_π_›s
();

2498 #ifde‡
CONFIG_DEBUG


2499 
	`as£π
(
d©e
 !
NULL
);

2501 i‡(
d©e
 =
NULL
)

2502  
FAIL
;

2505 
	`debug_msg
("[TAX_SYSTEM]:Çull daily collect\n");

2507 
fisˇl_ˇrd
 = 
	`gë_fisˇl_ˇrd
();

2508 i‡(!
fisˇl_ˇrd
)

2509  -
ETAX_NUL_FISCAL_CARD
;

2511 
ªt
 = 
	`fisˇl_ˇrd_powî_⁄
();

2512 i‡(
ªt
 !
SUCCESS
)

2513 
ˇrd_off
;

2515 
ªt
 = 
	`is_fisˇl_ˇrd_ªady
();

2516 i‡(
ªt
 !
POSITIVE
) {

2517 
ªt
 = -
ETAX_FC_NOT_READY
;

2518 
ˇrd_off
;

2521 
daûy_cﬁÀ˘
 
ˇrd_dc_ªc‹d
;

2522 
daûy_cﬁÀ˘_ªs
 
ˇrd_dc_ªs
;

2523 
èx_sys_daûy_cﬁÀ˘_ªc‹d
 
dc_ªc‹d
;

2524 
èx_sys_daûy_cﬁÀ˘_ªc‹d
 
œ°_dc_ªc
;

2526 
	`mem£t
(&
ˇrd_dc_ªs
, 0, (card_dc_res));

2527 
	`mem£t
(&
ˇrd_dc_ªc‹d
, 0, (card_dc_record));

2528 
	`mem£t
(&
dc_ªc‹d
, 0, (dc_record));

2530 i‡(
	`èx_fûe_is_em±y
(
DAILY_COLLECT_FILE
Ë=
NEGATIVE
) {

2531 
ªt
 = 
	`èx_fûe_ªad_œ°_ªc‹d
(
DAILY_COLLECT_FILE
, (
uch¨
 *)&
œ°_dc_ªc
,

2532 (
èx_sys_daûy_cﬁÀ˘_ªc‹d
));

2533 i‡(
ªt
 < 0)

2534  
ªt
;

2536 i‡(
π_›s
->
	`cmp_bcd_d©e
(&
œ°_dc_ªc
.
cur_d©e
, 
d©e
) == 0)

2537  
SUCCESS
;

2540 
dc_ªc‹d
.
cur_d©e
 = *
d©e
;

2541 
	`mem˝y
(
dc_ªc‹d
.
èx_ödex
, 
gp_≠p_öfo
->èx_ödex, 
MAX_USER_TAXRATE
);

2543 #ifde‡
CONFIG_PWR_OFF_PROTECT


2544 
powî_°©e
 *
pm
 = 
	`gë_powî_°©e
();

2546 
pm
->
	`check_powî_°©e
();

2548 
èx_sys_pö_ªc‹d
 
√w_pö
;

2549 
ªt
 = 
fisˇl_ˇrd
->
	`vîify_fisˇl_pö
(
gp_pö
->
pö
, 
√w_pö
.pin);

2550 i‡(
ªt
 < 0)

2551 
ˇrd_off
;

2553 
ªt
 = 
	`èx_fûe_ßve_pö
(&
√w_pö
);

2554 i‡(
ªt
 < 0)

2555 
ˇrd_off
;

2558 
ªt
 = 
	`èx_å™s_daûy_cﬁÀ˘
(0, &
dc_ªc‹d
, &
ˇrd_dc_ªc‹d
, 
NULL
);

2559 i‡(
ªt
 !
SUCCESS
)

2560 
ˇrd_off
;

2562 #i‡
CONFIG_PWR_OFF_PROTECT


2563 
pm
->
	`check_powî_°©e
();

2567 
ªt
 = 
fisˇl_ˇrd
->
	`daûy_cﬁÀ˘_sign
(&
ˇrd_dc_ªc‹d
, &
ˇrd_dc_ªs
);

2568 i‡(
ªt
 < 0)

2569 
ˇrd_off
;

2572 
	`mem£t
(&
dc_ªc‹d
, 0, (dc_record));

2573 
ªt
 = 
	`èx_å™s_daûy_cﬁÀ˘
(1, &
dc_ªc‹d
, &
ˇrd_dc_ªc‹d
, &
ˇrd_dc_ªs
);

2574 i‡(
ªt
 < 0)

2575 
ˇrd_off
;

2577 
ªt
 = 
	`èx_fûe_≠≥nd_daûy_cﬁÀ˘
(&
dc_ªc‹d
);

2578 i‡(
ªt
 < 0)

2579 
ˇrd_off
;

2581 
	`debug_msg
("[TAX_SYSTEM] :Çul daily collect done\n");

2583 
ªt
 = 
SUCCESS
;

2585 
ˇrd_off
:

2586 
fisˇl_ˇrd
->
	`powî_off
(
FISCAL_CARD
);

2588  
ªt
;

2589 
	}
}

2596 
	$èx_sys_cﬁÀ˘_¥oc
(
èx_sys_daûy_cﬁÀ˘_ªc‹d
 * 
dc_ªc‹d
)

2598 
ªt
;

2599 
i
, 
øã_nb
;

2601 
fisˇl_ˇrd
 * fisˇl_ˇrd = 
	`gë_fisˇl_ˇrd
();

2602 
π_›î©e
 *
π_›s
 = 
	`gë_π_›s
();

2604 
èx_sys_pö_ªc‹d
 *
gp_pö
 = 
	`gë_pö
();

2606 
daûy_cﬁÀ˘
 
ˇrd_dc_ªc‹d
;

2607 
daûy_cﬁÀ˘_ªs
 
ˇrd_dc_ªs
;

2608 
èx_sys_daûy_cﬁÀ˘_ªc‹d
 
œ°_dc_ªc‹d
;

2610 
	`debug_msg
("[TAX_SYSTEM]: Daily Collect Proc...\n");

2612 
	`mem£t
(&
ˇrd_dc_ªc‹d
, 0, (card_dc_record));

2613 
	`mem£t
(&
ˇrd_dc_ªs
, 0, (card_dc_res));

2614 
	`mem£t
(&
œ°_dc_ªc‹d
, 0, (last_dc_record));

2616 i‡(!
fisˇl_ˇrd
)

2617  -
ETAX_NUL_FISCAL_CARD
;

2619 
ªt
 = 
	`èx_fûe_ªad_œ°_ªc‹d
(
DAILY_COLLECT_FILE
, (
uch¨
 *)&
œ°_dc_ªc‹d
,

2620 (
èx_sys_daûy_cﬁÀ˘_ªc‹d
));

2621 i‡(
ªt
 < 0)

2622  
ªt
;

2625 i‡(
π_›s
->
	`cmp_bcd_d©e
(&
dc_ªc‹d
->
cur_d©e
, &
œ°_dc_ªc‹d
.cur_date) == 0) {

2627 
dc_ªc‹d
->
vÆid_cou¡
 +
œ°_dc_ªc‹d
.valid_count;

2628 
dc_ªc‹d
->
ªtu∫_cou¡
 +
œ°_dc_ªc‹d
.return_count;

2629 
dc_ªc‹d
->
•oû_cou¡
 +
œ°_dc_ªc‹d
.spoil_count;

2631 
i
 = 0; i < 
MAX_USER_TAXRATE
; i++){

2632 i‡(
œ°_dc_ªc‹d
.
èx_ödex
[
i
] != 0){

2633 
øã_nb
 = 
	`èx_ba£_gë_øã_nb
(
œ°_dc_ªc‹d
.
èx_ödex
[
i
]);

2634 
dc_ªc‹d
->
amt_vÆid
[
øã_nb
] +
œ°_dc_ªc‹d
.amt_vÆid[
i
];

2635 
dc_ªc‹d
->
amt_ªtu∫
[
øã_nb
] +
œ°_dc_ªc‹d
.amt_ªtu∫[
i
];

2640 #ifde‡
CONFIG_PWR_OFF_PROTECT


2641 
powî_°©e
 * 
pm
 = 
	`gë_powî_°©e
();

2642 
pm
->
	`check_powî_°©e
();

2645 
èx_sys_pö_ªc‹d
 
√w_pö
;

2646 
ªt
 = 
fisˇl_ˇrd
->
	`vîify_fisˇl_pö
(
gp_pö
->
pö
, 
√w_pö
.pin);

2647 i‡(
ªt
 < 0)

2648  
ªt
;

2650 
ªt
 = 
	`èx_fûe_ßve_pö
(&
√w_pö
);

2651 i‡(
ªt
 < 0)

2652  
ªt
;

2654 
ªt
 = 
	`èx_å™s_daûy_cﬁÀ˘
(0, 
dc_ªc‹d
, &
ˇrd_dc_ªc‹d
, 
NULL
);

2655 i‡(
ªt
 !
SUCCESS
)

2656  
ªt
;

2658 #ifde‡
CONFIG_PWR_OFF_PROTECT


2659 
pm
->
	`check_powî_°©e
();

2662 
ªt
 = 
fisˇl_ˇrd
->
	`daûy_cﬁÀ˘_sign
(&
ˇrd_dc_ªc‹d
, &
ˇrd_dc_ªs
);

2663 i‡(
ªt
 < 0)

2664  
ªt
;

2666 
ªt
 = 
	`èx_å™s_daûy_cﬁÀ˘
(1, 
dc_ªc‹d
, &
ˇrd_dc_ªc‹d
, &
ˇrd_dc_ªs
);

2667 i‡(
ªt
 < 0)

2668  
ªt
;

2671 i‡(
π_›s
->
	`cmp_bcd_d©e
(&
dc_ªc‹d
->
cur_d©e
, &
œ°_dc_ªc‹d
.cur_date) == 0) {

2672 
ªt
 = 
	`èx_fûe_modify_œ°_ªc‹d
(
DAILY_COLLECT_FILE
, (
uch¨
 *)
dc_ªc‹d
,

2673 (
èx_sys_daûy_cﬁÀ˘_ªc‹d
));

2674 i‡(
ªt
 < 0)

2675  
ªt
;

2677 
ªt
 = 
	`èx_fûe_≠≥nd_daûy_cﬁÀ˘
(
dc_ªc‹d
);

2678 i‡(
ªt
 < 0)

2679  
ªt
;

2682 
	`debug_msg
("[TAX_SYSTEM]: Daily Collect Proc Done\n");

2684  
SUCCESS
;

2685 
	}
}

2693 
	$èx_sys_dc_f‹_today
(
bcd_d©e
 * 
today
)

2695 
ªt
;

2697 
bcd_d©e
 
tmp_d©e
;

2698 
fisˇl_ˇrd
 * fiscal_card;

2699 
π_›î©e
 *
π_›s
 = 
	`gë_π_›s
();

2700 
èx_sys_≠p_öfo
 * 
gp_≠p_öfo
 = 
	`gë_sys_≠p_öfo
();

2702 
èx_sys_today_id_ªc‹d
 
today_id
;

2703 
èx_sys_daûy_cﬁÀ˘_ªc‹d
 
dc_ªc‹d
;

2704 
	`mem£t
(&
today_id
, 0, (today_id));

2705 
	`mem£t
(&
dc_ªc‹d
, 0, (dc_record));

2707 #ifde‡
CONFIG_DEBUG


2708 
	`as£π
(
today
 !
NULL
);

2710 i‡(
today
 =
NULL
)

2711  
FAIL
;

2714 
	`debug_msg
("[TAX_SYSTEM]: Daily Collect forÅoday.\n");

2716 
fisˇl_ˇrd
 = 
	`gë_fisˇl_ˇrd
();

2717 i‡(!
fisˇl_ˇrd
)

2718  -
ETAX_NUL_FISCAL_CARD
;

2720 
ªt
 = 
	`fisˇl_ˇrd_powî_⁄
();

2721 i‡(
ªt
 !
SUCCESS
)

2722 
ˇrd_off
;

2724 
ªt
 = 
	`is_fisˇl_ˇrd_ªady
();

2725 i‡(
ªt
 !
POSITIVE
) {

2726 
ªt
 = -
ETAX_FC_NOT_READY
;

2727 
ˇrd_off
;

2730 #ifde‡
CONFIG_PWR_OFF_PROTECT


2731 
powî_°©e
 *
pm
 = 
	`gë_powî_°©e
();

2733 
pm
->
	`check_powî_°©e
();

2741 
ªt
 = 
	`èx_fûe_ªad_today_id
(1, &
today_id
);

2742 i‡(
ªt
 < 0)

2743 
ˇrd_off
;

2745 
tmp_d©e
 = 
today_id
.
d©e
;

2746 
dc_ªc‹d
.
cur_d©e
 = 
tmp_d©e
;

2747 
	`mem˝y
(
dc_ªc‹d
.
èx_ödex
, 
gp_≠p_öfo
->èx_ödex, 
MAX_USER_TAXRATE
);

2749 
ªc_cou¡
;

2750 
ªc_cou¡
 = 
	`èx_fûe_gë_ªc_num
(
TODAY_ID_FILE
);

2751 i‡(
ªc_cou¡
 < 0)

2752 
ˇrd_off
;

2754 
i
, 
j
, 
øã_nb
;

2755 
i
 = 0; i < 
ªc_cou¡
; i++) {

2756 
ªt
 = 
	`èx_fûe_ªad_today_id
(
i
 + 1, &
today_id
);

2757 i‡(
ªt
 < 0)

2758 
ˇrd_off
;

2760 
ªt
 = 
π_›s
->
	`cmp_bcd_d©e
(&
today_id
.
d©e
, &
tmp_d©e
);

2761 i‡(
ªt
 > 0) {

2762 
ªt
 = 
	`èx_sys_cﬁÀ˘_¥oc
(&
dc_ªc‹d
);

2763 i‡(
ªt
 !
SUCCESS
)

2764 
ˇrd_off
;

2766 
ªt
 = 
π_›s
->
	`gë_√xt_d©e
(&
tmp_d©e
);

2767 i‡(
ªt
 < 0)

2768 
ˇrd_off
;

2770 
tmp_d©e
 = 
today_id
.
d©e
;

2772 
	`mem£t
(&
dc_ªc‹d
, 0, (dc_record));

2773 
dc_ªc‹d
.
cur_d©e
 = 
tmp_d©e
;

2774 
	`mem˝y
(
dc_ªc‹d
.
èx_ödex
, 
gp_≠p_öfo
->èx_ödex, 
MAX_USER_TAXRATE
);

2777 
today_id
.
ty≥
) {

2778 
NORMAL_INVOICE
:

2779 
dc_ªc‹d
.
vÆid_cou¡
 ++;

2780 
j
 = 0; j < 
MAX_USER_TAXRATE
; j++) {

2781 i‡(
today_id
.
ôem
[
j
].
ödex
 != 0) {

2782 
øã_nb
 = 
	`èx_ba£_gë_øã_nb
(
today_id
.
ôem
[
j
].
ödex
);

2783 
dc_ªc‹d
.
amt_vÆid
[
øã_nb
] +
today_id
.
ôem
[
j
].
amou¡
;

2788 
RETURN_INVOICE
:

2789 
dc_ªc‹d
.
ªtu∫_cou¡
 ++;

2790 
j
 = 0; j < 
MAX_USER_TAXRATE
; j++) {

2791 i‡(
today_id
.
ôem
[
j
].
ödex
 != 0) {

2792 
øã_nb
 = 
	`èx_ba£_gë_øã_nb
(
today_id
.
ôem
[
j
].
ödex
);

2793 
dc_ªc‹d
.
amt_ªtu∫
[
øã_nb
] +
today_id
.
ôem
[
j
].
amou¡
;

2798 
SPOIL_INVOICE
:

2799 
dc_ªc‹d
.
•oû_cou¡
 ++;

2807 
ªt
 = 
	`èx_sys_cﬁÀ˘_¥oc
(&
dc_ªc‹d
);

2808 i‡(
ªt
 < 0)

2809 
ˇrd_off
;

2811 
ªt
 = 
	`èx_fûe_˛ór
(
TODAY_ID_FILE
);

2812 i‡(
ªt
 < 0)

2813 
ˇrd_off
;

2815 
	`debug_msg
("[TAX_SYSTEM]: Daily Collect forÅoday done.\n");

2817 
ªt
 = 
SUCCESS
;

2819 
ˇrd_off
:

2820 
fisˇl_ˇrd
->
	`powî_off
(
FISCAL_CARD
);

2822  
ªt
;

2823 
	}
}

2830 
	$èx_sys_daûy_cﬁÀ˘
()

2832 
ªt
;

2834 
π_›î©e
 * 
π_›s
 = 
	`gë_π_›s
();

2836 
bcd_d©e
 
today
;

2837 
bcd_d©e
 
tmp_d©e
;

2839 
bcd_d©e
 *
œ°_dc_d©e
 = 
NULL
;

2840 
bcd_d©e
 *
œ°_issue_d©e
 = 
NULL
;

2842 
èx_sys_daûy_cﬁÀ˘_ªc‹d
 
œ°_dc_ªc
;

2843 
èx_sys_today_id_ªc‹d
 
œ°_issue_ªc
;

2845 
èx_sys_≠p_öfo
 * 
gp_≠p_öfo
 = 
	`gë_sys_≠p_öfo
();

2847 
	`debug_msg
("[TAX SYSTEM] : daily collect start...\n");

2849 
ªt
 = 
π_›s
->
	`gë_cur_d©e
(&
today
);

2850 i‡(
ªt
 < 0)

2851  
ªt
;

2853 i‡(
	`èx_fûe_is_em±y
(
DAILY_COLLECT_FILE
Ë=
NEGATIVE
) {

2854 
ªt
 = 
	`èx_fûe_ªad_œ°_ªc‹d
(
DAILY_COLLECT_FILE
, (
uch¨
 *)&
œ°_dc_ªc
,

2855 (
èx_sys_daûy_cﬁÀ˘_ªc‹d
));

2856 i‡(
ªt
 < 0)

2857  
ªt
;

2859 
œ°_dc_d©e
 = &
œ°_dc_ªc
.
cur_d©e
;

2862 i‡(
	`èx_fûe_is_em±y
(
TODAY_ID_FILE
Ë=
NEGATIVE
) {

2863 
ªt
 = 
	`èx_fûe_ªad_today_id
(1, &
œ°_issue_ªc
);

2864 i‡(
ªt
 < 0)

2865  
ªt
;

2867 
œ°_issue_d©e
 = &
œ°_issue_ªc
.
d©e
;

2874 i‡(
œ°_dc_d©e
 =
NULL
) {

2875 
tmp_d©e
 = 
gp_≠p_öfo
->
öô_d©e
;

2877 i‡(
π_›s
->
	`cmp_bcd_d©e
(&
tmp_d©e
, &
today
) <= 0) {

2882 
ªt
 = 
	`èx_ba£_check_lock_d©e
(&
tmp_d©e
);

2883 i‡(
ªt
 <= 0)

2884  -
ETAX_MACH_LOCKED
;

2886 
ªt
 = 
	`èx_sys_nul_daûy_cﬁÀ˘
(&
tmp_d©e
);

2887 i‡(
ªt
 < 0)

2888  
ªt
;

2890 
	`debug_msg
("[TAX SYSTEM] : daily collect done\n");

2891  
SUCCESS
;

2894 
π_›s
->
	`gë_√xt_d©e
(&
tmp_d©e
);

2901 i‡(
œ°_issue_d©e
 =
NULL
) {

2902 
tmp_d©e
 = *
œ°_dc_d©e
;

2903 
π_›s
->
	`gë_√xt_d©e
(&
tmp_d©e
);

2905 i‡(
π_›s
->
	`cmp_bcd_d©e
(&
tmp_d©e
, &
today
) <= 0) {

2906 
ªt
 = 
	`èx_ba£_check_lock_d©e
(&
tmp_d©e
);

2907 i‡(
ªt
 <= 0)

2908  -
ETAX_MACH_LOCKED
;

2910 
ªt
 = 
	`èx_sys_nul_daûy_cﬁÀ˘
(&
tmp_d©e
);

2911 i‡(
ªt
 < 0)

2912  
ªt
;

2914 
	`debug_msg
("[TAX SYSTEM] : daily collect done\n");

2915  
SUCCESS
;

2918 
π_›s
->
	`gë_√xt_d©e
(&
tmp_d©e
);

2922 
tmp_d©e
 = *
œ°_dc_d©e
;

2923 
π_›s
->
	`cmp_bcd_d©e
(&
tmp_d©e
, 
œ°_issue_d©e
) < 0) {

2924 
π_›s
->
	`gë_√xt_d©e
(&
tmp_d©e
);

2926 
ªt
 = 
	`èx_sys_nul_daûy_cﬁÀ˘
(&
tmp_d©e
);

2927 i‡(
ªt
 < 0)

2928  
ªt
;

2935 
ªt
 = 
	`èx_fûe_ªad_œ°_ªc‹d
(
TODAY_ID_FILE
, (
uch¨
 *)&
œ°_issue_ªc
,

2936 (
œ°_issue_ªc
));

2937 i‡(
ªt
 < 0)

2938  
ªt
;

2941 
ªt
 = 
	`èx_sys_dc_f‹_today
(
œ°_issue_d©e
);

2942 i‡(
ªt
 < 0)

2943  
ªt
;

2945 
tmp_d©e
 = 
œ°_issue_ªc
.
d©e
;

2946 
π_›s
->
	`gë_√xt_d©e
(&
tmp_d©e
);

2948 i‡(
π_›s
->
	`cmp_bcd_d©e
(&
tmp_d©e
, &
today
) <= 0) {

2949 
ªt
 = 
	`èx_ba£_check_lock_d©e
(&
tmp_d©e
);

2950 i‡(
ªt
 <= 0)

2951  -
ETAX_MACH_LOCKED
;

2953 
ªt
 = 
	`èx_sys_nul_daûy_cﬁÀ˘
(&
tmp_d©e
);

2954 i‡(
ªt
 < 0)

2955  
ªt
;

2957  
SUCCESS
;

2959 
π_›s
->
	`gë_√xt_d©e
(&
tmp_d©e
);

2962 
	`debug_msg
("[TAX SYSTEM] : daily collect done!\n");

2964  
SUCCESS
;

2971  
FAIL
;

2972 
	}
}

2980 
	$èx_sys_wrôe_check_daûy_dëaû
(
cur_off£t
, 
ˇrd_ªc_nb
)

2982 
ªt
;

2983 
buf
[10] = {0};

2984 
bcd_d©e
 
today
;

2985 
ö•e˘_ªc‹d
 inspect_record;

2986 
daûy_cﬁÀ˘
 
ˇrd_daûy_ªc
;

2987 
èx_sys_daûy_cﬁÀ˘_ªc‹d
 
sys_daûy_ªc
;

2989 
check_ˇrd
 *check_ˇrd = 
	`gë_check_ˇrd
();

2990 
fisˇl_ˇrd
 * fisˇl_ˇrd = 
	`gë_fisˇl_ˇrd
();

2991 
èx_sys_≠p_öfo
 *
gp_≠p_öfo
 = 
	`gë_sys_≠p_öfo
();

2992 
machöe_öfo_ªc‹d
 * 
gp_mach_öfo
 = 
	`gë_mach_öfo
();

2993 
π_›î©e
 *
π_›s
 = 
	`gë_π_›s
();

2995 
	`mem£t
(&
ö•e˘_ªc‹d
, 0, (inspect_record));

2996 
	`mem£t
(&
ˇrd_daûy_ªc
, 0, (card_daily_rec));

2997 
	`mem£t
(&
sys_daûy_ªc
, 0, (sys_daily_rec));

2999 
ªt
 = 
π_›s
->
	`gë_cur_d©e
(&
today
);

3000 i‡(
ªt
 < 0)

3001  
ªt
;

3003 
ªt
 = 
	`èx_fûe_ªad_daûy_cﬁÀ˘
(
cur_off£t
, &
sys_daûy_ªc
);

3004 i‡(
ªt
 < 0)

3005  
ªt
;

3007 
ªt
 = 
	`èx_å™s_daûy_cﬁÀ˘
(0, &
sys_daûy_ªc
, &
ˇrd_daûy_ªc
, 
NULL
);

3008 i‡(
ªt
 < 0)

3009  
ªt
;

3012 
ö•e˘_ªc‹d
.
ty≥
 = 
INSPECT_DAILY_SUM
;

3013 
	`mem˝y
(
ö•e˘_ªc‹d
.
cur_d©e
, &
today
, 4);

3014 
	`mem˝y
(
ö•e˘_ªc‹d
.
èx∑yî_num
, 
gp_≠p_öfo
->
èx∑yî_nb
, 8);

3015 
	`mem˝y
(
ö•e˘_ªc‹d
.
machöe_nb
, 
gp_mach_öfo
->machine_nb, 8);

3018 
	`mem˝y
(&
ö•e˘_ªc‹d
.
daûy_dëaû
, &
ˇrd_daûy_ªc
,

3019 (
ˇrd_daûy_ªc
) - 1);

3020 
	`mem˝y
(&
ö•e˘_ªc‹d
.
daûy_dëaû
.
sign
, 
sys_daûy_ªc
.sign, 128);

3022 
ªt
 = 
	`check_ˇrd_powî_⁄
();

3023 i‡(
ªt
 !
SUCCESS
)

3024  
ªt
;

3026 
ªt
 = 
	`is_check_ˇrd_ªady
();

3027 i‡(
ªt
 !
POSITIVE
)

3028  -
ETAX_CHK_CARD_NOT_READY
;

3030 
ªt
 = 
	`check_ˇrd_gë_˘l_d©a
((
uch¨
 *)
buf
);

3031 i‡(
ªt
 !
SUCCESS
)

3032  
ªt
;

3034 i‡(
buf
[9] != 0xff) {

3035 
ªt
 = 
	`fisˇl_ˇrd_powî_⁄
();

3036 i‡(
ªt
 !
SUCCESS
) {

3037 
check_ˇrd
->
	`powî_off
(
CHECK_CARD
);

3038  
ªt
;

3041 
ªt
 = 
	`is_fisˇl_ˇrd_ªady
();

3042 i‡(
ªt
 !
POSITIVE
) {

3043 
check_ˇrd
->
	`powî_off
(
CHECK_CARD
);

3044 
fisˇl_ˇrd
->
	`powî_off
(
FISCAL_CARD
);

3045  -
ETAX_FC_NOT_READY
;

3048 
ªt
 = 
	`check_ˇrd_auth‹ôy_fc
(
buf
[9]);

3049 i‡(
ªt
 !
SUCCESS
) {

3050 
check_ˇrd
->
	`powî_off
(
CHECK_CARD
);

3051 
fisˇl_ˇrd
->
	`powî_off
(
FISCAL_CARD
);

3052  -
ETAX_AUTH_CHKC_FAIL
;

3055 
fisˇl_ˇrd
->
	`powî_off
(
FISCAL_CARD
);

3058 
ªt
 = 
	`check_ˇrd_wrôe_chk_ªc
((
uch¨
)
ˇrd_ªc_nb
, (uch¨ *)&
ö•e˘_ªc‹d
);

3059 
check_ˇrd
->
	`powî_off
(
CHECK_CARD
);

3061  
ªt
;

3062 
	}
}

3070 
	$èx_sys_issue_övoi˚_¥oc
(
èx_sys_issue_övoi˚
 * 
issue_öv_ªc
,

3071 
issue_övoi˚_ªs
 * 
issue_öv_ªs
)

3073 
ªt
;

3075 
fisˇl_ˇrd
 * fiscal_card;

3077 
èx_sys_pö_ªc‹d
 *
gp_pö
 = 
	`gë_pö
();

3078 
èx_sys_fis_c⁄fig_ªc‹d
 * 
gp_fis_cfg
 = 
	`gë_fis_c⁄fig
();

3079 
èx_sys_cur_rﬁl_À·_ªc‹d
 * 
gp_cur_rﬁl_À·
 = 
	`gë_cur_rﬁl_À·
();

3081 
issue_övoi˚
 
ˇrd_issue_öv_ªc
;

3082 
èx_sys_today_id_ªc‹d
 
today_id_ªc
;

3083 
èx_sys_cur_rﬁl_id_ªc‹d
 
cur_rﬁl_id_ªc
;

3085 #ifde‡
CONFIG_DEBUG


3086 
	`as£π
(
issue_öv_ªc
 !
NULL
);

3087 
	`as£π
(
issue_öv_ªs
 !
NULL
);

3090 
	`debug_msg
("DOING ISSUE INVOICE.\n");

3092 
fisˇl_ˇrd
 = 
	`gë_fisˇl_ˇrd
();

3093 i‡(
fisˇl_ˇrd
 =
NULL
)

3094  -
ETAX_NUL_FISCAL_CARD
;

3096 
ªt
 = 
	`fisˇl_ˇrd_powî_⁄
();

3097 i‡(
ªt
 !
SUCCESS
)

3098 
ˇrd_off
;

3100 
ªt
 = 
	`is_fisˇl_ˇrd_ªady
();

3101 i‡(
ªt
 !
POSITIVE
) {

3102 
ªt
 = -
ETAX_FC_NOT_READY
;

3103 
ˇrd_off
;

3106 #ifde‡
CONFIG_PWR_OFF_PROTECT


3107 
powî_°©e
 *
pm
 = 
	`gë_powî_°©e
();

3108 
pm
->
	`check_powî_°©e
();

3111 
èx_sys_pö_ªc‹d
 
√w_pö
;

3112 
ªt
 = 
fisˇl_ˇrd
->
	`vîify_fisˇl_pö
(
gp_pö
->
pö
, 
√w_pö
.pin);

3113 i‡(
ªt
 < 0)

3114 
ˇrd_off
;

3116 
ªt
 = 
	`èx_fûe_ßve_pö
(&
√w_pö
);

3117 i‡(
ªt
 < 0)

3118 
ˇrd_off
;

3120 
ªt
 = 
	`èx_å™s_issue_övoi˚
(0, 
issue_öv_ªc
, &
ˇrd_issue_öv_ªc
);

3121 i‡(
ªt
 !
SUCCESS
)

3122 
ˇrd_off
;

3124 
ªt
 = 
fisˇl_ˇrd
->
	`issue_övoi˚
(&
ˇrd_issue_öv_ªc
, 
issue_öv_ªs
);

3125 i‡(
ªt
 < 0)

3126 
ˇrd_off
;

3129 
gp_cur_rﬁl_À·
->
cur_rﬁl_À·
 --;

3130 
ªt
 = 
	`èx_fûe_ßve_¸ 
(
gp_cur_rﬁl_À·
);

3131 i‡(
ªt
 < 0)

3132 
ˇrd_off
;

3135 
èx_sys_amou¡_ªc‹d
 
amt_ªc
;

3136 
ªt
 = 
	`èx_fûe_ªad_amou¡
(&
amt_ªc
);

3137 i‡(
ªt
 < 0 &&Ñë !-
EFILE_NO_REC
)

3138 
ˇrd_off
;

3140 i‡(
issue_öv_ªc
->
övoi˚_ty≥
 =
NORMAL_INVOICE
) {

3141 
amt_ªc
.
amt_tŸÆ_this
 +
issue_öv_ªc
->
amt_tŸÆ
;

3142 i‡–
gp_fis_cfg
->
de˛¨e_Êag
 =
POSITIVE
 )

3143 
amt_ªc
.
amt_tŸÆ_√xt
 +
issue_öv_ªc
->
amt_tŸÆ
;

3145 i‡(
issue_öv_ªc
->
övoi˚_ty≥
 =
RETURN_INVOICE
) {

3146 
amt_ªc
.
amt_ªtu∫_this
 +
issue_öv_ªc
->
amt_tŸÆ
;

3147 i‡–
gp_fis_cfg
->
de˛¨e_Êag
 =
POSITIVE
 )

3148 
amt_ªc
.
amt_ªtu∫_√xt
 +
issue_öv_ªc
->
amt_tŸÆ
;

3151 
ªt
 = 
	`èx_fûe_ßve_amou¡
(&
amt_ªc
);

3152 i‡(
ªt
 < 0)

3153 
ˇrd_off
;

3156 
	`mem£t
(&
cur_rﬁl_id_ªc
, 0, (cur_roll_id_rec));

3157 
cur_rﬁl_id_ªc
.
d©e
 = 
issue_öv_ªc
->date;

3158 
cur_rﬁl_id_ªc
.
ty≥
 = 
issue_öv_ªc
->
övoi˚_ty≥
;

3159 
cur_rﬁl_id_ªc
.
amout_tŸÆ
 = 
issue_öv_ªc
->
amt_tŸÆ
;

3161 
ªt
 = 
	`èx_fûe_≠≥nd_cur_rﬁl_id
(&
cur_rﬁl_id_ªc
);

3162 i‡(
ªt
 < 0)

3163 
ˇrd_off
;

3165 i‡(
gp_cur_rﬁl_À·
->
cur_rﬁl_À·
 == 0) {

3166 
ªt
 = 
	`èx_sys_cur_rﬁl_cﬁÀ˘
();

3167 i‡(
ªt
 < 0)

3168 
ˇrd_off
;

3172 
	`mem£t
(&
today_id_ªc
, 0, (today_id_rec));

3173 
today_id_ªc
.
d©e
 = 
issue_öv_ªc
->date;

3174 
today_id_ªc
.
ty≥
 = 
issue_öv_ªc
->
övoi˚_ty≥
;

3176 
i
;

3177 
i
 = 0; i < 
MAX_USER_TAXRATE
; i++) {

3178 
today_id_ªc
.
ôem
[
i
].
ödex
 = 
issue_öv_ªc
->item[i].index;

3179 
today_id_ªc
.
ôem
[
i
].
amou¡
 = 
issue_öv_ªc
->item[i].amount;

3182 
ªt
 = 
	`èx_fûe_≠≥nd_today_id
(&
today_id_ªc
);

3183 i‡(
ªt
 < 0)

3184 
ˇrd_off
;

3186 
ªt
 = 
SUCCESS
;

3188 
ˇrd_off
:

3189 
fisˇl_ˇrd
->
	`powî_off
(
FISCAL_CARD
);

3191  
ªt
;

3192 
	}
}

3200 
	$èx_sys_wrôe_check_övoi˚_dëaû
(
ªc_num
, 
ödex_h
, 
ˇrd_ªc_nb
)

3202 
ªt
;

3203 
buf
[10] = {0};

3204 
ödex
, 
off£t
;

3206 
bcd_d©e
 
today
;

3207 
issue_övoi˚
 
ˇrd_övoi˚_ªc
;

3208 
ö•e˘_övoi˚
 
öv_dëaû
[7];

3209 
ö•e˘_ªc‹d
 inspect_record;

3210 
èx_sys_övoi˚_dëaû_ªc‹d
 
sys_övoi˚_ªc
;

3212 
check_ˇrd
 *check_ˇrd = 
	`gë_check_ˇrd
();

3213 
fisˇl_ˇrd
 * fisˇl_ˇrd = 
	`gë_fisˇl_ˇrd
();

3214 
èx_sys_≠p_öfo
 *
gp_≠p_öfo
 = 
	`gë_sys_≠p_öfo
();

3215 
machöe_öfo_ªc‹d
 * 
gp_mach_öfo
 = 
	`gë_mach_öfo
();

3216 
π_›î©e
 *
π_›s
 = 
	`gë_π_›s
();

3218 
	`mem£t
(&
ö•e˘_ªc‹d
, 0, (inspect_record));

3219 
	`mem£t
(&
ˇrd_övoi˚_ªc
, 0, (card_invoice_rec));

3220 
	`mem£t
(&
sys_övoi˚_ªc
, 0, (sys_invoice_rec));

3221 
	`mem£t
(
öv_dëaû
, 0, 7 * (
ö•e˘_övoi˚
));

3223 i‡(
ªc_num
 > 7 ||Ñec_num <= 0)

3224  
FAIL
;

3226 
ªt
 = 
π_›s
->
	`gë_cur_d©e
(&
today
);

3227 i‡(
ªt
 < 0)

3228  
ªt
;

3231 
ö•e˘_ªc‹d
.
ty≥
 = 
INSPECT_INV_DETAIL
;

3232 
	`mem˝y
(
ö•e˘_ªc‹d
.
cur_d©e
, &
today
, 4);

3233 
	`mem˝y
(
ö•e˘_ªc‹d
.
èx∑yî_num
, 
gp_≠p_öfo
->
èx∑yî_nb
, 8);

3234 
	`mem˝y
(
ö•e˘_ªc‹d
.
machöe_nb
, 
gp_mach_öfo
->machine_nb, 8);

3236 
i
 = 0;

3237 
ödex
 = (
ödex_h
 >> 16) & 0xffff;

3238 
off£t
 = 
ödex_h
 & 0xffff;

3241 
ªt
 = 
	`èx_fûe_ªad_övoi˚_dëaû
(
ödex
, 
off£t
, &
sys_övoi˚_ªc
);

3242 i‡(
ªt
 < 0)

3243  
ªt
;

3245 
ªt
 = 
	`èx_å™s_ö•e˘_övoi˚
(0, &
sys_övoi˚_ªc
.
övoi˚
, &
öv_dëaû
[
i
]);

3246 i‡(
ªt
 < 0)

3247  
ªt
;

3250 i‡(
off£t
 =
INVOICE_DETAIL_REC_NUM
) {

3251 
off£t
 = 1;

3252 i‡(
ödex
 == 10)

3253 
ödex
 = 1;

3255 
ödex
 ++;

3257 
off£t
 ++;

3259 
i
++;

3260 } --
ªc_num
);

3262 
ö•e˘_ªc‹d
.
ª£rved
[0] = (
uch¨
)
ªc_num
;

3263 
	`mem˝y
(
ö•e˘_ªc‹d
.
ª£rved
 + 1, 
öv_dëaû
, 7 * (inv_detail[0]));

3266 
ªt
 = 
	`check_ˇrd_powî_⁄
();

3267 i‡(
ªt
 !
SUCCESS
)

3268  
ªt
;

3270 
ªt
 = 
	`is_check_ˇrd_ªady
();

3271 i‡(
ªt
 !
POSITIVE
)

3272  -
ETAX_CHK_CARD_NOT_READY
;

3274 
ªt
 = 
	`check_ˇrd_gë_˘l_d©a
((
uch¨
 *)
buf
);

3275 i‡(
ªt
 !
SUCCESS
)

3276  
ªt
;

3278 i‡(
buf
[9] != 0xff) {

3279 
ªt
 = 
	`fisˇl_ˇrd_powî_⁄
();

3280 i‡(
ªt
 !
SUCCESS
) {

3281 
check_ˇrd
->
	`powî_off
(
CHECK_CARD
);

3282  
ªt
;

3285 
ªt
 = 
	`is_fisˇl_ˇrd_ªady
();

3286 i‡(
ªt
 !
POSITIVE
) {

3287 
check_ˇrd
->
	`powî_off
(
CHECK_CARD
);

3288 
fisˇl_ˇrd
->
	`powî_off
(
FISCAL_CARD
);

3289  -
ETAX_FC_NOT_READY
;

3292 
ªt
 = 
	`check_ˇrd_auth‹ôy_fc
(
buf
[9]);

3293 i‡(
ªt
 !
SUCCESS
) {

3294 
check_ˇrd
->
	`powî_off
(
CHECK_CARD
);

3295 
fisˇl_ˇrd
->
	`powî_off
(
FISCAL_CARD
);

3296  -
ETAX_AUTH_CHKC_FAIL
;

3299 
fisˇl_ˇrd
->
	`powî_off
(
FISCAL_CARD
);

3302 
ªt
 = 
	`check_ˇrd_wrôe_chk_ªc
((
uch¨
)
ˇrd_ªc_nb
, (uch¨ *)&
ö•e˘_ªc‹d
);

3304 
check_ˇrd
->
	`powî_off
(
CHECK_CARD
);

3305  
ªt
;

3306 
	}
}

3314 
	$èx_sys_ªde˛¨e_duty
(
bcd_d©e
 *
°¨t_d©e
, bcd_d©ê*
íd_d©e
)

3316 
ªt
;

3318 
èx_sys_daûy_cﬁÀ˘_ªc‹d
 
daûy_cﬁÀ˘_ªc
;

3319 
de˛¨e_duty
 
ˇrd_de˛¨e_ªc
;

3320 
de˛¨e_ªs
 
ˇrd_de˛¨e_ªs
;

3322 
fisˇl_ˇrd
 * fisˇl_ˇrd = 
	`gë_fisˇl_ˇrd
();

3323 
u£r_ˇrd
 * u£r_ˇrd = 
	`gë_u£r_ˇrd
();

3325 
èx_sys_pö_ªc‹d
 * 
gp_pö
 = 
	`gë_pö
();

3326 
èx_sys_≠p_öfo
 *
gp_≠p_öfo
 = 
	`gë_sys_≠p_öfo
();

3327 
machöe_öfo_ªc‹d
 * 
gp_mach_öfo
 = 
	`gë_mach_öfo
();

3329 
	`mem£t
(&
ˇrd_de˛¨e_ªc
, 0, (card_declare_rec));

3330 
	`mem£t
(&
ˇrd_de˛¨e_ªs
, 0, (card_declare_res));

3331 
	`mem£t
(&
daûy_cﬁÀ˘_ªc
, 0, (daily_collect_rec));

3333 i‡(
fisˇl_ˇrd
 =
NULL
)

3334  -
ETAX_NUL_FISCAL_CARD
;

3336 i‡(
u£r_ˇrd
 =
NULL
)

3337  -
ETAX_NUL_USER_CARD
;

3339 
ªt
 = 
	`fisˇl_ˇrd_powî_⁄
();

3340 i‡(
ªt
 !
SUCCESS
)

3341 
ˇrd_off
;

3343 
ªt
 = 
	`u£r_ˇrd_powî_⁄
();

3344 i‡(
ªt
 !
SUCCESS
)

3345 
ˇrd_off
;

3347 
ªt
 = 
	`is_fisˇl_ˇrd_ªady
();

3348 i‡(
ªt
 !
POSITIVE
) {

3349 
ªt
 = -
ETAX_FC_NOT_READY
;

3350 
ˇrd_off
;

3353 
ªt
 = 
	`is_u£r_ˇrd_ªady
();

3354 i‡(
ªt
 !
POSITIVE
) {

3355 
ªt
 = -
ETAX_UC_NOT_READY
;

3358 
ªt
 = 
	`u£r_ˇrd_check_ˇrd
(
gp_≠p_öfo
->
èx∑yî_nb
, 
gp_mach_öfo
->
machöe_nb
,

3359 
gp_≠p_öfo
->
fisˇl_ˇrd_nb
);

3360 i‡(
ªt
 < 0)

3361 
ˇrd_off
;

3367 
ªt
 = 
	`èx_sys_daûy_cﬁÀ˘
();

3368 i‡(
ªt
 < 0)

3369  
ªt
;

3372 
èx_sys_de˛¨e_duty_ªc‹d
 
œ°_de˛¨e_ªc
;

3374 
ªt
 = 
	`èx_fûe_ªad_œ°_ªc‹d
(
DECLARE_DUTY_FILE
, (
uch¨
 *)&
œ°_de˛¨e_ªc
,

3375 (
œ°_de˛¨e_ªc
));

3376 i‡(
ªt
 < 0)

3377 
ˇrd_off
;

3379 *
°¨t_d©e
 = 
œ°_de˛¨e_ªc
.start_date;

3380 *
íd_d©e
 = 
œ°_de˛¨e_ªc
.end_date;

3382 
èx_sys_pö_ªc‹d
 
√w_pö
;

3383 
ªt
 = 
fisˇl_ˇrd
->
	`vîify_fisˇl_pö
(
gp_pö
->
pö
, 
√w_pö
.pin);

3384 i‡(
ªt
 < 0)

3385 
ˇrd_off
;

3387 
ªt
 = 
	`èx_fûe_ßve_pö
(&
√w_pö
);

3388 i‡(
ªt
 < 0)

3389 
ˇrd_off
;

3397 
uch¨
 
ˇrd_èx_ödex
[6];

3398 
uöt
 
ˇrd_amt_vaûd
[6];

3399 
uöt
 
ˇrd_amt_ªtu∫
[6];

3401 
ªt
 = 
	`fisˇl_ˇrd_gë_èx_ödex
(
ˇrd_èx_ödex
);

3402 i‡(
ªt
 < 0)

3403 
ˇrd_off
;

3405 
i
, 
j
;

3406 
i
 = 0; i < 
MAX_USER_TAXRATE
; i++) {

3407 
j
 = 0; j < 
MAX_USER_TAXRATE
; j++) {

3408 i‡(
œ°_de˛¨e_ªc
.
èx_ödex
[
j
] =
ˇrd_èx_ödex
[
i
])

3412 
ˇrd_amt_vaûd
[
i
] = 
œ°_de˛¨e_ªc
.
amt_vÆid
[
j
];

3413 
ˇrd_amt_ªtu∫
[
i
] = 
œ°_de˛¨e_ªc
.
amt_ªtu∫
[
j
];

3416 
	`mem˝y
(
œ°_de˛¨e_ªc
.
èx_ödex
, 
ˇrd_èx_ödex
, 6);

3417 
	`mem˝y
((
uch¨
 *)
œ°_de˛¨e_ªc
.
amt_vÆid
, (uch¨ *)
ˇrd_amt_vaûd
, 24);

3418 
	`mem˝y
((
uch¨
 *)
œ°_de˛¨e_ªc
.
amt_ªtu∫
, (uch¨ *)
ˇrd_amt_ªtu∫
, 24);

3423 
ªt
 = 
	`èx_å™s_de˛¨e_duty
(0, &
œ°_de˛¨e_ªc
, &
ˇrd_de˛¨e_ªc
, 
NULL
);

3424 i‡(
ªt
 < 0)

3425 
ˇrd_off
;

3427 
ªt
 = 
fisˇl_ˇrd
->
	`de˛¨e_duty
(&
ˇrd_de˛¨e_ªc
, &
ˇrd_de˛¨e_ªs
);

3428 i‡(
ªt
 < 0)

3429 
ˇrd_off
;

3431 
ªt
 = 
	`èx_å™s_de˛¨e_duty
(1, &
œ°_de˛¨e_ªc
, &
ˇrd_de˛¨e_ªc
, &
ˇrd_de˛¨e_ªs
);

3432 i‡(
ªt
 < 0)

3433 
ˇrd_off
;

3438 
d©a_cﬁÀ˘
 
ˇrd_d©e_cﬁÀ˘
;

3439 
ªt
 = 
	`èx_å™s_d©a_cﬁÀ˘
(0, &
ˇrd_de˛¨e_ªc
, &
ˇrd_de˛¨e_ªs
, &
ˇrd_d©e_cﬁÀ˘
);

3440 i‡(
ªt
 < 0)

3441 
ˇrd_off
;

3443 
ªt
 = 
u£r_ˇrd
->
	`d©a_cﬁÀ˘
(&
ˇrd_d©e_cﬁÀ˘
);

3444 i‡(
ªt
 < 0)

3445 
ˇrd_off
;

3447 
ªt
 = 
SUCCESS
;

3449 
ˇrd_off
:

3450 
fisˇl_ˇrd
->
	`powî_off
(
FISCAL_CARD
);

3451 
u£r_ˇrd
->
	`powî_off
(
USER_CARD
);

3453  
ªt
;

3454 
	}
}

3466 
	$èx_sys_de˛¨e_duty
(
Êag
, 
bcd_d©e
 * 
íd_d©e
)

3468 
ªt
;

3470 
bcd_d©e
 
tmp_d©e
;

3471 
èx_sys_de˛¨e_duty_ªc‹d
 
œ°_de˛¨e_ªc
;

3473 
èx_sys_de˛¨e_duty_ªc‹d
 
de˛¨e_ªc
;

3474 
èx_sys_daûy_cﬁÀ˘_ªc‹d
 
daûy_cﬁÀ˘_ªc
;

3475 
de˛¨e_duty
 
ˇrd_de˛¨e_ªc
;

3476 
de˛¨e_ªs
 
ˇrd_de˛¨e_ªs
;

3478 
fisˇl_ˇrd
 * fisˇl_ˇrd = 
	`gë_fisˇl_ˇrd
();

3479 
u£r_ˇrd
 * u£r_ˇrd = 
	`gë_u£r_ˇrd
();

3480 
π_›î©e
 * 
π_›s
 = 
	`gë_π_›s
();

3482 
èx_sys_pö_ªc‹d
 * 
gp_pö
 = 
	`gë_pö
();

3483 
èx_sys_≠p_öfo
 *
gp_≠p_öfo
 = 
	`gë_sys_≠p_öfo
();

3484 
machöe_öfo_ªc‹d
 * 
gp_mach_öfo
 = 
	`gë_mach_öfo
();

3485 
èx_sys_fis_c⁄fig_ªc‹d
 *
gp_fis_cfg
 = 
	`gë_fis_c⁄fig
();

3487 
	`mem£t
(&
de˛¨e_ªc
, 0, (declare_rec));

3488 
	`mem£t
(&
ˇrd_de˛¨e_ªc
, 0, (card_declare_rec));

3489 
	`mem£t
(&
ˇrd_de˛¨e_ªs
, 0, (card_declare_res));

3490 
	`mem£t
(&
daûy_cﬁÀ˘_ªc
, 0, (daily_collect_rec));

3491 
	`mem£t
(&
œ°_de˛¨e_ªc
, 0, (last_declare_rec));

3493 #ifde‡
CONFIG_DEBUG


3494 
	`as£π
(
Êag
 >= 0 && flag <= 2);

3496 i‡(!(
Êag
 >= 0 && flag <= 2))

3497  
FAIL
;

3500 
	`debug_msg
("DOING DECLARE DUTY...");

3503 i‡((
Êag
 !0 && 
íd_d©e
 !
NULL
) || (flag == 0 &&Énd_date == NULL))

3504  -
ETAX_BAD_DECLARE_TYPE
;

3506 i‡(
fisˇl_ˇrd
 =
NULL
)

3507  -
ETAX_NUL_FISCAL_CARD
;

3509 i‡(
u£r_ˇrd
 =
NULL
)

3510  -
ETAX_NUL_USER_CARD
;

3512 
ªt
 = 
	`fisˇl_ˇrd_powî_⁄
();

3513 i‡(
ªt
 !
SUCCESS
)

3514 
ˇrd_off
;

3516 
ªt
 = 
	`u£r_ˇrd_powî_⁄
();

3517 i‡(
ªt
 !
SUCCESS
)

3518 
ˇrd_off
;

3520 
ªt
 = 
	`is_fisˇl_ˇrd_ªady
();

3521 i‡(
ªt
 !
POSITIVE
) {

3522 
ªt
 = -
ETAX_FC_NOT_READY
;

3523 
ˇrd_off
;

3526 
ªt
 = 
	`is_u£r_ˇrd_ªady
();

3527 i‡(
ªt
 !
POSITIVE
) {

3528 
ªt
 = -
ETAX_UC_NOT_READY
;

3531 
ªt
 = 
	`u£r_ˇrd_check_ˇrd
(
gp_≠p_öfo
->
èx∑yî_nb
, 
gp_mach_öfo
->
machöe_nb
,

3532 
gp_≠p_öfo
->
fisˇl_ˇrd_nb
);

3533 i‡(
ªt
 < 0)

3534 
ˇrd_off
;

3540 
ªt
 = 
	`èx_sys_daûy_cﬁÀ˘
();

3541 i‡(
ªt
 < 0)

3542  
ªt
;

3544 
ªt
 = 
	`èx_fûe_is_em±y
(
DAILY_COLLECT_FILE
);

3545 i‡(
ªt
 =
POSITIVE
) {

3546 
ªt
 = -
ETAX_NODATA_TO_DECLARE
;

3547 
ˇrd_off
;

3550 
ªt
 = 
	`èx_fûe_ªad_œ°_ªc‹d
(
DECLARE_DUTY_FILE
, (
uch¨
 *)&
œ°_de˛¨e_ªc
,

3551 (
œ°_de˛¨e_ªc
));

3552 i‡(
ªt
 < 0) {

3553 i‡(
ªt
 =-
EFILE_NO_REC
) {

3554 
de˛¨e_ªc
.
°¨t_d©e
 = 
gp_≠p_öfo
->
öô_d©e
;

3556 
ˇrd_off
;

3558 i‡(
gp_fis_cfg
->
de˛¨e_Êag
 == 0) {

3562 
tmp_d©e
 = 
œ°_de˛¨e_ªc
.
íd_d©e
;

3563 
ªt
 = 
π_›s
->
	`gë_√xt_d©e
(&
tmp_d©e
);

3564 i‡(
ªt
 < 0)

3565 
ˇrd_off
;

3567 
de˛¨e_ªc
.
°¨t_d©e
 = 
tmp_d©e
;

3572 
de˛¨e_ªc
.
°¨t_d©e
 = 
œ°_de˛¨e_ªc
.start_date;

3577 
ªt
 = 
π_›s
->
	`gë_cur_d©e
(&
tmp_d©e
);

3578 i‡(
ªt
 < 0)

3579 
ˇrd_off
;

3581 
de˛¨e_ªc
.
cur_d©e
 = 
tmp_d©e
;

3584 
days
;

3585 
Êag
) {

3586 
NORMAL_DECLARE
:

3588 
tmp_d©e
 = *
íd_d©e
;

3591 
DOWNTIME_DECLARE
:

3593 
ªt
 = 
π_›s
->
	`gë_cur_d©e
(&
tmp_d©e
);

3594 i‡(
ªt
 < 0)

3595 
ˇrd_off
;

3598 
MONTH_DECLARE
:

3600 
	`bcd_to_dec
(&
tmp_d©e
.
day
, (
uöt
 *)&
days
);

3601 
	`sub_bcd_d©e
(&
tmp_d©e
, (
uöt
)
days
);

3603 
ªt
 = 
π_›s
->
	`cmp_bcd_d©e
(&
tmp_d©e
, &
de˛¨e_ªc
.
°¨t_d©e
);

3604 i‡(
ªt
 < 0)

3605  -
ETAX_NODATA_TO_DECLARE
;

3610 
ªt
 = -
ETAX_BAD_DECLARE_TYPE
;

3611 
ˇrd_off
;

3618 
ªt
 = 
π_›s
->
	`cmp_bcd_d©e
(&
tmp_d©e
, &
gp_≠p_öfo
->
issue_limô_d©e
);

3619 i‡(
ªt
 > 0)

3620 
tmp_d©e
 = 
gp_≠p_öfo
->
issue_limô_d©e
;

3626 
days
 = 
	`èx_ba£_check_lock_d©e
(&
tmp_d©e
);

3627 i‡(
days
 <= 0) {

3628 
days
 = -days;

3629 
	`sub_bcd_d©e
(&
tmp_d©e
, (
uöt
)
days
 + 1);

3632 
de˛¨e_ªc
.
íd_d©e
 = 
tmp_d©e
;

3635 
	`mem˝y
(
de˛¨e_ªc
.
èx_ödex
, 
gp_≠p_öfo
->èx_ödex, 
MAX_USER_TAXRATE
);

3638 
ªc_cou¡
;

3639 
ªc_cou¡
 = 
	`èx_fûe_gë_ªc_num
(
DAILY_COLLECT_FILE
);

3640 i‡(
ªc_cou¡
 < 0)

3641 
ˇrd_off
;

3643 
i
, 
j
, 
øã_nb
;

3644 
i
 = 
ªc_cou¡
; i > 0; i--) {

3645 
ªt
 = 
	`èx_fûe_ªad_daûy_cﬁÀ˘
(
i
, &
daûy_cﬁÀ˘_ªc
);

3646 i‡(
ªt
 < 0)

3647 
ˇrd_off
;

3649 i‡(
π_›s
->
	`cmp_bcd_d©e
(&
daûy_cﬁÀ˘_ªc
.
cur_d©e
,

3650 &
de˛¨e_ªc
.
°¨t_d©e
) < 0)

3653 i‡(
π_›s
->
	`cmp_bcd_d©e
(&
daûy_cﬁÀ˘_ªc
.
cur_d©e
,

3654 &
de˛¨e_ªc
.
íd_d©e
) > 0)

3657 
de˛¨e_ªc
.
vÆid_cou¡
 +
daûy_cﬁÀ˘_ªc
.valid_count;

3658 
de˛¨e_ªc
.
ªtu∫_cou¡
 +
daûy_cﬁÀ˘_ªc
.return_count;

3659 
de˛¨e_ªc
.
•oû_cou¡
 +
daûy_cﬁÀ˘_ªc
.spoil_count;

3661 
j
 = 0; j < 
MAX_USER_TAXRATE
; j++) {

3662 i‡(
daûy_cﬁÀ˘_ªc
.
èx_ödex
[
j
] != 0) {

3663 
øã_nb
 = 
	`èx_ba£_gë_øã_nb
(
daûy_cﬁÀ˘_ªc
.
èx_ödex
[
j
]);

3664 i‡(
øã_nb
 > 0) {

3665 
de˛¨e_ªc
.
amt_vÆid
[
øã_nb
] +
daûy_cﬁÀ˘_ªc
.amt_vÆid[
j
];

3666 
de˛¨e_ªc
.
amt_ªtu∫
[
øã_nb
] +
daûy_cﬁÀ˘_ªc
.amt_ªtu∫[
j
];

3673 i‡(
i
 =
ªc_cou¡
) {

3674 
ªt
 = -
ETAX_NODATA_TO_DECLARE
;

3675 
ˇrd_off
;

3678 #ifde‡
CONFIG_PWR_OFF_PROTECT


3679 
powî_°©e
 * 
pm
 = 
	`gë_powî_°©e
();

3680 
pm
->
	`check_powî_°©e
();

3683 
èx_sys_pö_ªc‹d
 
√w_pö
;

3684 
ªt
 = 
fisˇl_ˇrd
->
	`vîify_fisˇl_pö
(
gp_pö
->
pö
, 
√w_pö
.pin);

3685 i‡(
ªt
 < 0)

3686 
ˇrd_off
;

3688 
ªt
 = 
	`èx_fûe_ßve_pö
(&
√w_pö
);

3689 i‡(
ªt
 < 0)

3690 
ˇrd_off
;

3692 
uch¨
 
ˇrd_èx_ödex
[6] = {0};

3693 
uöt
 
ˇrd_amt_vaûd
[6] = {0};

3694 
uöt
 
ˇrd_amt_ªtu∫
[6] = {0};

3696 
ªt
 = 
	`fisˇl_ˇrd_gë_èx_ödex
(
ˇrd_èx_ödex
);

3697 i‡(
ªt
 < 0)

3698 
ˇrd_off
;

3704 
i
 = 0; i < 
MAX_USER_TAXRATE
; i++) {

3705 
j
 = 0; j < 
MAX_USER_TAXRATE
; j++) {

3706 i‡(
de˛¨e_ªc
.
èx_ödex
[
j
] =
ˇrd_èx_ödex
[
i
]) {

3707 
ˇrd_amt_vaûd
[
i
] = 
de˛¨e_ªc
.
amt_vÆid
[
j
];

3708 
ˇrd_amt_ªtu∫
[
i
] = 
de˛¨e_ªc
.
amt_ªtu∫
[
j
];

3713 
	`mem˝y
(
de˛¨e_ªc
.
èx_ödex
, 
ˇrd_èx_ödex
, 6);

3714 
	`mem˝y
((
uch¨
 *)
de˛¨e_ªc
.
amt_vÆid
, (uch¨ *)
ˇrd_amt_vaûd
, 24);

3715 
	`mem˝y
((
uch¨
 *)
de˛¨e_ªc
.
amt_ªtu∫
, (uch¨ *)
ˇrd_amt_ªtu∫
, 24);

3717 
ªt
 = 
	`èx_å™s_de˛¨e_duty
(0, &
de˛¨e_ªc
, &
ˇrd_de˛¨e_ªc
, 
NULL
);

3718 i‡(
ªt
 < 0)

3719 
ˇrd_off
;

3721 
ªt
 = 
fisˇl_ˇrd
->
	`de˛¨e_duty
(&
ˇrd_de˛¨e_ªc
, &
ˇrd_de˛¨e_ªs
);

3722 i‡(
ªt
 < 0)

3723 
ˇrd_off
;

3725 
ªt
 = 
	`èx_å™s_de˛¨e_duty
(1, &
de˛¨e_ªc
, &
ˇrd_de˛¨e_ªc
, &
ˇrd_de˛¨e_ªs
);

3726 i‡(
ªt
 < 0)

3727 
ˇrd_off
;

3732 
d©a_cﬁÀ˘
 
ˇrd_d©e_cﬁÀ˘
;

3733 
ªt
 = 
	`èx_å™s_d©a_cﬁÀ˘
(0, &
ˇrd_de˛¨e_ªc
, &
ˇrd_de˛¨e_ªs
, &
ˇrd_d©e_cﬁÀ˘
);

3734 i‡(
ªt
 < 0)

3735 
ˇrd_off
;

3737 
ªt
 = 
u£r_ˇrd
->
	`d©a_cﬁÀ˘
(&
ˇrd_d©e_cﬁÀ˘
);

3738 i‡(
ªt
 < 0)

3739 
ˇrd_off
;

3742 
ªt
 = 
	`èx_fûe_≠≥nd_de˛¨e_duty
(&
de˛¨e_ªc
);

3743 i‡(
ªt
 < 0)

3744 
ˇrd_off
;

3749 
ªc_cou¡
 = 
	`èx_fûe_gë_ªc_num
(
DAILY_COLLECT_FILE
);

3750 i‡(
ªc_cou¡
 < 0)

3751 
ˇrd_off
;

3753 
uöt
 
√w_amt_vÆid
 = 0;

3754 
uöt
 
√w_amt_ªtu∫
 = 0;

3755 
i
 = 
ªc_cou¡
; i > 0; i--) {

3756 
ªt
 = 
	`èx_fûe_ªad_daûy_cﬁÀ˘
(
i
, &
daûy_cﬁÀ˘_ªc
);

3757 i‡(
ªt
 < 0)

3758 
ˇrd_off
;

3760 i‡(
π_›s
->
	`cmp_bcd_d©e
(&
daûy_cﬁÀ˘_ªc
.
cur_d©e
,

3761 &
de˛¨e_ªc
.
íd_d©e
) < 0)

3764 
j
 = 0; j < 
MAX_USER_TAXRATE
; j++) {

3765 i‡(
daûy_cﬁÀ˘_ªc
.
èx_ödex
[
j
] != 0) {

3766 
øã_nb
 = 
	`èx_ba£_gë_øã_nb
(
daûy_cﬁÀ˘_ªc
.
èx_ödex
[
j
]);

3767 i‡(
øã_nb
 > 0) {

3768 
√w_amt_vÆid
 +
daûy_cﬁÀ˘_ªc
.
amt_vÆid
[
j
];

3769 
√w_amt_ªtu∫
 +
daûy_cﬁÀ˘_ªc
.
amt_ªtu∫
[
j
];

3775 
èx_sys_amou¡_ªc‹d
 
amt_ªc
;

3776 
ªt
 = 
	`èx_fûe_ªad_amou¡
(&
amt_ªc
);

3777 i‡(
ªt
 < 0)

3778 
ˇrd_off
;

3780 
amt_ªc
.
amt_ªtu∫_√xt
 = 
√w_amt_ªtu∫
;

3781 
amt_ªc
.
amt_tŸÆ_√xt
 = 
√w_amt_vÆid
;

3783 
ªt
 = 
	`èx_fûe_ßve_amou¡
(&
amt_ªc
);

3784 i‡(
ªt
 < 0)

3785 
ˇrd_off
;

3790 
gp_fis_cfg
->
de˛¨e_Êag
 = 1;

3791 
ªt
 = 
	`èx_fûe_ßve_fis_cfg
(
gp_fis_cfg
);

3792 i‡(
ªt
 < 0)

3793 
ˇrd_off
;

3795 
	`debug_msg
("Done !\n");

3797 
ªt
 = 
SUCCESS
;

3799 
ˇrd_off
:

3800 
fisˇl_ˇrd
->
	`powî_off
(
FISCAL_CARD
);

3801 
u£r_ˇrd
->
	`powî_off
(
USER_CARD
);

3803  
ªt
;

3804 
	}
}

3813 
	$èx_sys_wrôe_check_de˛¨e_dëaû
(
ªc_num
, 
cur_off£t
, 
ˇrd_ªc_nb
)

3815 
ªt
;

3816 
buf
[10] = {0};

3817 
bcd_d©e
 
today
;

3818 
de˛¨e_duty
 
ˇrd_de˛¨e_ªc
;

3819 
èx_sys_de˛¨e_duty_ªc‹d
 
sys_de˛¨e_ªc
;

3820 
ö•e˘_ªc‹d
 inspect_record;

3821 
ö•e˘_de˛¨e
 
de˛¨e_dëaû
[2];

3823 
check_ˇrd
 *check_ˇrd = 
	`gë_check_ˇrd
();

3824 
fisˇl_ˇrd
 * fisˇl_ˇrd = 
	`gë_fisˇl_ˇrd
();

3825 
èx_sys_≠p_öfo
 *
gp_≠p_öfo
 = 
	`gë_sys_≠p_öfo
();

3826 
machöe_öfo_ªc‹d
 * 
gp_mach_öfo
 = 
	`gë_mach_öfo
();

3827 
π_›î©e
 *
π_›s
 = 
	`gë_π_›s
();

3829 
	`mem£t
(&
ö•e˘_ªc‹d
, 0, (inspect_record));

3830 
	`mem£t
(&
ˇrd_de˛¨e_ªc
, 0, (card_declare_rec));

3831 
	`mem£t
(&
sys_de˛¨e_ªc
, 0, (sys_declare_rec));

3832 
	`mem£t
(
de˛¨e_dëaû
, 0, 2 * (
ö•e˘_de˛¨e
));

3834 i‡(
ªc_num
 > 2 ||Ñec_num <= 0)

3835  
FAIL
;

3837 
ªt
 = 
π_›s
->
	`gë_cur_d©e
(&
today
);

3838 i‡(
ªt
 < 0)

3839  
ªt
;

3842 
ö•e˘_ªc‹d
.
ty≥
 = 
INSPECT_DECLARE
;

3843 
	`mem˝y
(
ö•e˘_ªc‹d
.
cur_d©e
, &
today
, 4);

3844 
	`mem˝y
(
ö•e˘_ªc‹d
.
èx∑yî_num
, 
gp_≠p_öfo
->
èx∑yî_nb
, 8);

3845 
	`mem˝y
(
ö•e˘_ªc‹d
.
machöe_nb
, 
gp_mach_öfo
->machine_nb, 8);

3847 
i
 = 0;

3849 
ªt
 = 
	`èx_fûe_ªad_de˛¨e_duty
(
cur_off£t
, &
sys_de˛¨e_ªc
);

3850 i‡(
ªt
 < 0)

3851  
ªt
;

3853 
ªt
 = 
	`èx_å™s_de˛¨e_duty
(0, &
sys_de˛¨e_ªc
, &
ˇrd_de˛¨e_ªc
, 
NULL
);

3854 i‡(
ªt
 < 0)

3855  
ªt
;

3858 
	`mem˝y
(&
de˛¨e_dëaû
[
i
], &
ˇrd_de˛¨e_ªc
,

3859 (
ˇrd_de˛¨e_ªc
) - 1);

3861 
de˛¨e_dëaû
[
i
].
°©us
 = 
sys_de˛¨e_ªc
.status;

3862 
	`mem˝y
(
de˛¨e_dëaû
[
i
].
mac1
, 
sys_de˛¨e_ªc
.mac1, 4);

3863 
	`íd_covî_öt
(
de˛¨e_dëaû
[
i
].
tŸÆ_vÆid
, (
uch¨
 *)&
sys_de˛¨e_ªc
.total_valid);

3864 
	`íd_covî_öt
(
de˛¨e_dëaû
[
i
].
tŸÆ_ªtu∫
, (
uch¨
 *)&
sys_de˛¨e_ªc
.total_return);

3866 
i
++;

3867 
cur_off£t
++;

3868 } --
ªc_num
);

3871 
ö•e˘_ªc‹d
.
ª£rved
[0] = (
uch¨
)
ªc_num
;

3872 
	`mem˝y
(
ö•e˘_ªc‹d
.
ª£rved
 + 1, 
de˛¨e_dëaû
, 2 * (declare_detail[0]));

3875 
ªt
 = 
	`check_ˇrd_powî_⁄
();

3876 i‡(
ªt
 !
SUCCESS
)

3877  
ªt
;

3879 
ªt
 = 
	`is_check_ˇrd_ªady
();

3880 i‡(
ªt
 !
POSITIVE
)

3881  -
ETAX_CHK_CARD_NOT_READY
;

3883 
ªt
 = 
	`check_ˇrd_gë_˘l_d©a
((
uch¨
 *)
buf
);

3884 i‡(
ªt
 !
SUCCESS
)

3885  
ªt
;

3887 i‡(
buf
[9] != 0xff) {

3888 
ªt
 = 
	`fisˇl_ˇrd_powî_⁄
();

3889 i‡(
ªt
 !
SUCCESS
) {

3890 
check_ˇrd
->
	`powî_off
(
CHECK_CARD
);

3891  
ªt
;

3894 
ªt
 = 
	`is_fisˇl_ˇrd_ªady
();

3895 i‡(
ªt
 !
POSITIVE
) {

3896 
check_ˇrd
->
	`powî_off
(
CHECK_CARD
);

3897 
fisˇl_ˇrd
->
	`powî_off
(
FISCAL_CARD
);

3898  -
ETAX_FC_NOT_READY
;

3901 
ªt
 = 
	`check_ˇrd_auth‹ôy_fc
(
buf
[9]);

3902 i‡(
ªt
 !
SUCCESS
) {

3903 
check_ˇrd
->
	`powî_off
(
CHECK_CARD
);

3904 
fisˇl_ˇrd
->
	`powî_off
(
FISCAL_CARD
);

3905  -
ETAX_AUTH_CHKC_FAIL
;

3908 
fisˇl_ˇrd
->
	`powî_off
(
FISCAL_CARD
);

3911 
ªt
 = 
	`check_ˇrd_wrôe_chk_ªc
((
uch¨
)
ˇrd_ªc_nb
, (uch¨ *)&
ö•e˘_ªc‹d
);

3913 
check_ˇrd
->
	`powî_off
(
CHECK_CARD
);

3914  
ªt
;

3915 
	}
}

3921 
	$èx_sys_upd©e_c⁄åﬁ
()

3923 
ªt
;

3924 
fisˇl_ˇrd
 * fisˇl_ˇrd = 
	`gë_fisˇl_ˇrd
();

3925 
u£r_ˇrd
 * u£r_ˇrd = 
	`gë_u£r_ˇrd
();

3926 
èx_sys_pö_ªc‹d
 * 
gp_pö
 = 
	`gë_pö
();

3927 
èx_sys_≠p_öfo
 *
gp_≠p_öfo
 = 
	`gë_sys_≠p_öfo
();

3928 
machöe_öfo_ªc‹d
 * 
gp_mach_öfo
 = 
	`gë_mach_öfo
();

3929 
èx_sys_fis_c⁄fig_ªc‹d
 *
gp_fis_cfg
 = 
	`gë_fis_c⁄fig
();

3930 
u§_ef01_ªc‹d
 
u§_ef01_ªc
;

3931 
èx_sys_≠p_öfo
 
√w_≠p_ªc
;

3932 
èx_sys_amou¡_ªc‹d
 
√w_amt_ªc
;

3934 
	`mem£t
(&
u§_ef01_ªc
, 0, (usr_ef01_rec));

3935 
	`mem£t
(&
√w_≠p_ªc
, 0, (new_app_rec));

3936 
	`mem£t
(&
√w_amt_ªc
, 0, (new_amt_rec));

3938 #ifde‡
CONFIG_DEBUG


3939 
	`debug_msg
("DOING UPDATE CONTROL\n");

3942 i‡(!
fisˇl_ˇrd
)

3943  -
ETAX_NUL_FISCAL_CARD
;

3945 i‡(!
u£r_ˇrd
)

3946  -
ETAX_NUL_USER_CARD
;

3948 
ªt
 = 
	`fisˇl_ˇrd_powî_⁄
();

3949 i‡(
ªt
 !
SUCCESS
)

3950 
ˇrd_off
;

3952 
ªt
 = 
	`is_fisˇl_ˇrd_ªady
();

3953 i‡(
ªt
 !
POSITIVE
) {

3954 
ªt
 = -
ETAX_FC_NOT_READY
;

3955 
ˇrd_off
;

3958 
ªt
 = 
	`is_u£r_ˇrd_ªady
();

3959 i‡(
ªt
 !
POSITIVE
) {

3960 
ªt
 = -
ETAX_UC_NOT_READY
;

3961 
ˇrd_off
;

3964 
ªt
 = 
	`u£r_ˇrd_check_ˇrd
(
gp_≠p_öfo
->
èx∑yî_nb
, 
gp_mach_öfo
->
machöe_nb
,

3965 &
gp_≠p_öfo
->
fis_ty≥_num
);

3966 i‡(
ªt
 < 0)

3967 
ˇrd_off
;

3969 
ªt
 = 
	`u£r_ˇrd_gë_˘l_d©a
(
gp_≠p_öfo
->
fisˇl_ˇrd_nb
, &
u§_ef01_ªc
);

3970 i‡(
ªt
 < 0)

3971 
ˇrd_off
;

3973 
√w_≠p_ªc
 = *
gp_≠p_öfo
;

3974 
ªt
 = 
	`u£r_ˇrd_gë_fis_ty≥
(&
√w_≠p_ªc
);

3975 i‡(
ªt
 < 0)

3976 
ˇrd_off
;

3978 #ifde‡
CONFIG_PWR_OFF_PROTECT


3979 
powî_°©e
 *
pm
 = 
	`gë_powî_°©e
();

3980 
pm
->
	`check_powî_°©e
();

3983 
èx_sys_pö_ªc‹d
 
√w_pö
;

3984 
ªt
 = 
fisˇl_ˇrd
->
	`vîify_fisˇl_pö
(
gp_pö
->
pö
, 
√w_pö
.pin);

3985 i‡(
ªt
 < 0)

3986 
ˇrd_off
;

3988 
ªt
 = 
	`èx_fûe_ßve_pö
(&
√w_pö
);

3989 i‡(
ªt
 < 0)

3990 
ˇrd_off
;

3992 #ifde‡
CONFIG_PWR_OFF_PROTECT


3993 
pm
->
	`check_powî_°©e
();

3996 
upd©e_˘l_öfo
 
ˇrd_˘l_ªc
;

3997 
	`mem˝y
(&
ˇrd_˘l_ªc
, &
u§_ef01_ªc
.
í¸ùty_id
, (card_ctl_rec));

3998 
ªt
 = 
fisˇl_ˇrd
->
	`upd©e_c⁄åﬁs
(&
ˇrd_˘l_ªc
);

3999 i‡(
ªt
 < 0)

4000 
ˇrd_off
;

4002 
ªt
 = 
	`fisˇl_ˇrd_gë_√w_˘l_d©a
(&
√w_≠p_ªc
);

4003 i‡(
ªt
 < 0)

4004 
ˇrd_off
;

4006 
gp_fis_cfg
->
de˛¨e_Êag
 = 0;

4007 
ªt
 = 
	`èx_fûe_ßve_fis_cfg
(
gp_fis_cfg
);

4008 i‡(
ªt
 < 0)

4009 
ˇrd_off
;

4011 
ªt
 = 
	`èx_fûe_ßve_≠p_öfo
(&
√w_≠p_ªc
);

4012 i‡(
ªt
 < 0)

4013 
ˇrd_off
;

4015 
ªt
 = 
	`èx_fûe_ªad_amou¡
(&
√w_amt_ªc
);

4016 i‡(
ªt
 < 0)

4017 
ˇrd_off
;

4019 
√w_amt_ªc
.
amt_ªtu∫_this
 =Çew_amt_ªc.
amt_ªtu∫_√xt
;

4020 
√w_amt_ªc
.
amt_ªtu∫_√xt
 = 0;

4022 
√w_amt_ªc
.
amt_tŸÆ_this
 =Çew_amt_ªc.
amt_tŸÆ_√xt
;

4023 
√w_amt_ªc
.
amt_tŸÆ_√xt
 = 0;

4025 
ªt
 = 
	`èx_fûe_ßve_amou¡
(&
√w_amt_ªc
);

4026 i‡(
ªt
 < 0)

4027 
ˇrd_off
;

4029 
ªt
 = 
SUCCESS
;

4031 
ˇrd_off
:

4032 
fisˇl_ˇrd
->
	`powî_off
(
FISCAL_CARD
);

4033 
u£r_ˇrd
->
	`powî_off
(
USER_CARD
);

4035  
ªt
;

4036 
	}
}

4038 
	$èx_sys_upd©e_èx∑yî
()

4040 
ªt
;

4041 
uch¨
 
buf_uc
[50] = {0};

4042 
uch¨
 
buf_fc
[50] = {0};

4043 
fisˇl_ˇrd
 * fisˇl_ˇrd = 
	`gë_fisˇl_ˇrd
();

4044 
u£r_ˇrd
 * u£r_ˇrd = 
	`gë_u£r_ˇrd
();

4045 
èx_sys_≠p_öfo
 *
gp_≠p_öfo
 = 
	`gë_sys_≠p_öfo
();

4046 
machöe_öfo_ªc‹d
 * 
gp_mach_öfo
 = 
	`gë_mach_öfo
();

4048 
ªt
 = 
	`fisˇl_ˇrd_powî_⁄
();

4049 i‡(
ªt
 !
SUCCESS
)

4050 
ˇrd_off
;

4052 
ªt
 = 
	`u£r_ˇrd_powî_⁄
();

4053 i‡(
ªt
 !
SUCCESS
)

4054 
ˇrd_off
;

4056 
ªt
 = 
	`is_u£r_ˇrd_ªady
();

4057 i‡(
ªt
 !
POSITIVE
) {

4058 
ªt
 = -
ETAX_UC_NOT_READY
;

4059 
ˇrd_off
;

4062 
ªt
 = 
	`is_fisˇl_ˇrd_ªady
();

4063 i‡(
ªt
 !
POSITIVE
) {

4064 
ªt
 = -
ETAX_FC_NOT_READY
;

4065 
ˇrd_off
;

4068 
ªt
 = 
	`fisˇl_ˇrd_gë_machöe_nb
(
buf_fc
);

4069 i‡(
ªt
 !
SUCCESS
)

4070 
ˇrd_off
;

4072 i‡(
	`memcmp
(
gp_mach_öfo
->
machöe_nb
, 
buf_fc
, 8) != 0) {

4073 
ªt
 = -
ETAX_DIFF_MACH_NB
;

4074 
ˇrd_off
;

4077 
ªt
 = 
	`u£r_ˇrd_check_ˇrd
(
gp_≠p_öfo
->
èx∑yî_nb
, 
gp_mach_öfo
->
machöe_nb
,

4078 
gp_≠p_öfo
->
fisˇl_ˇrd_nb
);

4079 i‡(
ªt
 !
SUCCESS
)

4080 
ˇrd_off
;

4082 
ªt
 = 
	`fisˇl_ˇrd_gë_èx∑yî_«me
(
buf_fc
);

4083 i‡(
ªt
 !
SUCCESS
)

4084 
ˇrd_off
;

4086 
ªt
 = 
	`u£r_ˇrd_gë_èx∑yî_«me
(
buf_uc
);

4087 i‡(
ªt
 !
SUCCESS
)

4088 
ˇrd_off
;

4093 i‡(
	`memcmp
(
buf_fc
, 
buf_uc
, 40) != 0) {

4094 
ªt
 = -
ETAX_TAXPAYER_NAME_DISMATCH
;

4095 
ˇrd_off
;

4101 i‡(
	`memcmp
(
buf_fc
, 
gp_≠p_öfo
->
èx∑yî_«me
, 40) == 0) {

4102 
ªt
 = 
SUCCESS
;

4103 
ˇrd_off
;

4106 
	`mem˝y
(
gp_≠p_öfo
->
èx∑yî_«me
, 
buf_fc
, 40);

4107 
gp_≠p_öfo
->
èx∑yî_«me
[40] = '\0';

4108 
ªt
 = 
	`èx_fûe_ßve_≠p_öfo
(
gp_≠p_öfo
);

4109 i‡(
ªt
 !
SUCCESS
)

4110 
ˇrd_off
;

4112 
ªt
 = 
SUCCESS
;

4114 
ˇrd_off
:

4115 
fisˇl_ˇrd
->
	`powî_off
(
FISCAL_CARD
);

4116 
u£r_ˇrd
->
	`powî_off
(
USER_CARD
);

4118  
ªt
;

4119 
	}
}

4128 
	$èx_sys_powî_⁄_check
()

4130 
ªt
;

4132 
bcd_d©e
 
today
;

4133 
fisˇl_ˇrd
 * 
fis_ˇrd
;

4134 
u£r_ˇrd
 * 
u§_ˇrd
;

4135 
π_›î©e
 * 
π_›s
;

4137 
fis_ˇrd
 = 
	`gë_fisˇl_ˇrd
();

4138 i‡(!
fis_ˇrd
)

4139  -
ETAX_NUL_FISCAL_CARD
;

4141 
u§_ˇrd
 = 
	`gë_u£r_ˇrd
();

4142 i‡(!
u§_ˇrd
)

4143  -
ETAX_NUL_USER_CARD
;

4145 
π_›s
 = 
	`gë_π_›s
();

4146 i‡(!
π_›s
)

4147  -
ERT_NUL_RT_OPS
;

4150 
ªt
 = 
π_›s
->
	`gë_cur_d©e
(&
today
);

4151 i‡(
ªt
 < 0)

4152  
ªt
;

4154 #ifde‡
CONFIG_CHECK_DEADLINE


4158 
ªt
 = 
	`èx_ba£_check_dódlöe
(&
today
);

4159 i‡(
ªt
 < 0)

4160  -
ETAX_DATE_CONFUSE
;

4164 
èx_sys_fis_c⁄fig_ªc‹d
 * 
gp_fis_cfg
 = 
	`gë_fis_c⁄fig
();

4165 
ªt
 = 
	`èx_fûe_ªad_fis_cfg
(
gp_fis_cfg
);

4166 i‡(
ªt
 < 0)

4167  
ªt
;

4170 
èx_sys_≠p_öfo
 * 
gp_≠p_öfo
 = 
	`gë_sys_≠p_öfo
();

4171 
ªt
 = 
	`èx_fûe_ªad_≠p_öfo
(
gp_≠p_öfo
);

4172 i‡(
ªt
 < 0)

4173  
ªt
;

4176 
èx_sys_buy_rﬁl_ªc‹d
 * 
gp_cur_rﬁl
 = 
	`gë_cur_rﬁl
();

4177 
ªt
 = 
	`èx_fûe_ªad_cur_rﬁl
(
gp_cur_rﬁl
);

4178 i‡(
ªt
 < 0 &&Ñë !-
EFILE_OFFSET_OVER_FLOW
)

4179  
ªt
;

4182 
èx_sys_cur_rﬁl_À·_ªc‹d
 * 
gp_cur_rﬁl_À·
 = 
	`gë_cur_rﬁl_À·
();

4183 
ªt
 = 
	`èx_fûe_ªad_¸ 
(
gp_cur_rﬁl_À·
);

4184 i‡(
ªt
 < 0 &&Ñë !-
EFILE_OFFSET_OVER_FLOW
)

4185  
ªt
;

4187 
ªt
 = 
	`fisˇl_ˇrd_powî_⁄
();

4188 i‡(
ªt
 !
SUCCESS
)

4189 
ˇrd_off
;

4191 
ªt
 = 
	`is_fisˇl_ˇrd_ªady
();

4192 i‡(
ªt
 !
POSITIVE
) {

4193 
ªt
 = -
ETAX_FC_NOT_READY
;

4194 
ˇrd_off
;

4198 
uch¨
 
ªs
[8];

4199 
ªt
 = 
	`fisˇl_ˇrd_gë_machöe_nb
(
ªs
);

4200 i‡(
ªt
 < 0)

4201 
ˇrd_off
;

4204 
machöe_öfo_ªc‹d
 * 
gp_mach_öfo
 = 
	`gë_mach_öfo
();

4205 
ªt
 = 
	`èx_fûe_ªad_mach_öfo
(
gp_mach_öfo
);

4206 i‡(
ªt
 < 0)

4207 
ˇrd_off
;

4209 i‡(
	`memcmp
(
ªs
, 
gp_mach_öfo
->
machöe_nb
, 8) != 0) {

4210 
ªt
 = -
ETAX_DIFF_MACH_NB
;

4211 
ˇrd_off
;

4218 
ªt
 = 
	`is_fisˇl_ˇrd_ªgi°î
();

4219 i‡(
ªt
 !
POSITIVE
){

4220 i‡(
ªt
 =
NEGATIVE
)

4221 
ªt
 = -
ETAX_FC_NOT_REG
;

4223 
ˇrd_off
;

4227 i‡(
gp_fis_cfg
->
pö_lock_Êag
 =
POSITIVE
) {

4228 
ªt
 = -
ETAX_FC_PIN_LOCK
;

4229 
ˇrd_off
;

4233 
èx_sys_pö_ªc‹d
 * 
pö
 = 
	`gë_pö
();

4234 
ªt
 = 
	`èx_fûe_ªad_pö
(
pö
);

4235 i‡(
ªt
 < 0)

4236 
ˇrd_off
;

4238 #ifde‡
CONFIG_PWR_OFF_PROTECT


4239 
powî_°©e
 * 
pm
 = 
	`gë_powî_°©e
();

4241 
pm
->
	`check_powî_°©e
();

4247 
èx_sys_pö_ªc‹d
 
√w_pö
;

4248 
ªt
 = 
fis_ˇrd
->
	`vîify_fisˇl_pö
(
pö
->pö, 
√w_pö
.pin);

4249 i‡(
ªt
 < 0) {

4250 i‡(
ªt
 =-
ETAX_FC_PIN_LOCK
) {

4251 
gp_fis_cfg
->
pö_lock_Êag
 = 
POSITIVE
;

4252 
	`èx_fûe_ßve_fis_cfg
(
gp_fis_cfg
);

4255 
ˇrd_off
;

4258 
ªt
 = 
	`èx_fûe_ßve_pö
(&
√w_pö
);

4259 i‡(
ªt
 < 0)

4260 
ˇrd_off
;

4264 
èx_sys_¥Ÿe˘_ªc‹d
 * 
¥Ÿ_ªc
 = 
	`gë_¥Ÿe˘_ªc‹d
();

4265 
ªt
 = 
	`èx_fûe_is_em±y
(
PROTECT_FILE
);

4266 i‡(
ªt
 =
NEGATIVE
) {

4272 i‡(
gp_cur_rﬁl_À·
->
cur_rﬁl_À·
 < 1) {

4274 
ªt
 = 
	`èx_fûe_ªad_¥Ÿe˘
(
¥Ÿ_ªc
);

4275 i‡(
ªt
 < 0)

4276 
ˇrd_off
;

4278 i‡(
¥Ÿ_ªc
->
ty≥
 =
PROTECT_TYPE_MOUNT
) {

4280 #ifde‡
CONFIG_PWR_OFF_PROTECT


4284 
pm
->
	`check_powî_°©e
();

4287 
ªt
 = 
	`èx_sys_mou¡_rﬁl
(&
¥Ÿ_ªc
->
övoi˚_öfo
);

4288 i‡(
ªt
 < 0)

4289  
ªt
;

4291 
ªt
 = 
	`èx_fûe_˛ór
(
PROTECT_FILE
);

4292 i‡(
ªt
 < 0)

4293 
ˇrd_off
;

4296 } i‡(
ªt
 !
POSITIVE
)

4297 
ˇrd_off
;

4301 
ªt
 = 
	`èx_sys_daûy_cﬁÀ˘
();

4302 i‡(
ªt
 < 0)

4303 
ˇrd_off
;

4309 
ªt
 = 
	`èx_ba£_check_lock_d©e
(&
today
);

4310 i‡(
ªt
 <= 0) {

4311 
ªt
 = -
ETAX_MACH_LOCKED
;

4312 
ˇrd_off
;

4315 
ªt
 = 
SUCCESS
;

4317 
ˇrd_off
:

4318 
fis_ˇrd
->
	`powî_off
(
FISCAL_CARD
);

4319 
u§_ˇrd
->
	`powî_off
(
USER_CARD
);

4321  
ªt
;

4322 
	}
}

4329 
	$èx_sys_check_föish_èx
(
uch¨
 * 
ˇrd_nb
)

4331 
ªt
;

4332 
uch¨
 
buf
[220] = {0};

4333 
u£r_ˇrd
 * u£r_ˇrd = 
	`gë_u£r_ˇrd
();

4334 
machöe_öfo_ªc‹d
 * 
gp_mach_öfo
 = 
	`gë_mach_öfo
();

4335 
èx_sys_≠p_öfo
 * 
gp_≠p_öfo
 = 
	`gë_sys_≠p_öfo
();

4337 
ªt
 = 
	`u£r_ˇrd_powî_⁄
();

4338 i‡(
ªt
 !
SUCCESS
)

4339  
ªt
;

4341 
ªt
 = 
	`is_u£r_ˇrd_ªady
();

4342 i‡(
ªt
 !
POSITIVE
)

4343 
Áû
;

4345 
ªt
 = 
	`u£r_ˇrd_check_ˇrd
(
gp_≠p_öfo
->
èx∑yî_nb
, 
gp_mach_öfo
->
machöe_nb
,

4346 
gp_≠p_öfo
->
fisˇl_ˇrd_nb
);

4347 i‡(
ªt
 !
SUCCESS
)

4348 
Áû
;

4350 
ªt
 = 
u£r_ˇrd
->
	`£À˘_fûe_by_df
(
USER_CARD
, 
TID01
);

4351 i‡(
ªt
 !
SUCCESS
)

4352 
Áû
;

4354 
i
;

4355 
i
 = 0; i < 
MAX_CARD_DECNUM
; i++) {

4356 
ªt
 = 
u£r_ˇrd
->
	`ªad_ªc‹d
(
USER_CARD
, 
i
 + 1, 220, 
buf
);

4357 i‡(
ªt
 !
SUCCESS
)

4358 
Áû
;

4360 i‡(
	`memcmp
(
ˇrd_nb
, 
buf
 + 1, 8) == 0)

4364 i‡(
i
 =
MAX_CARD_DECNUM
)

4365 
ªt
 = 
NEGATIVE
;

4367 
ªt
 = 
POSITIVE
;

4369 
Áû
:

4370 
u£r_ˇrd
->
	`powî_off
(
USER_CARD
);

4371  
ªt
;

4372 
	}
}

4379 
	$èx_sys_å™ß˘_¥ï¨e
()

4381 
ªt
;

4383 
bcd_d©e
 
today
;

4384 
èx_sys_amou¡_ªc‹d
 
amt_ªc‹d
;

4385 
èx_sys_c⁄fig_ªc‹d
 
sys_cfg_ªc
;

4386 
èx_sys_≠p_öfo
 * 
gp_≠p_öfo
 = 
	`gë_sys_≠p_öfo
();

4388 
π_›î©e
 * 
π_›s
 = 
	`gë_π_›s
();

4390 
	`debug_msg
("[Debug check]: get_cur_date...");

4392 
ªt
 = 
π_›s
->
	`gë_cur_d©e
(&
today
);

4393 i‡(
ªt
 < 0)

4394  
ªt
;

4396 
	`debug_msg
("[Debug check]: done\n");

4398 
ªt
 = 
	`èx_sys_is_fisˇl_öô
();

4399 i‡(
ªt
 !
POSITIVE
) {

4400  -
ETAX_FISCAL_NOT_INIT
;

4403 
	`mem£t
(&
sys_cfg_ªc
, 0, (sys_cfg_rec));

4405 
ªt
 = 
	`èx_fûe_ªad_sys_cfg
(&
sys_cfg_ªc
);

4406 i‡(
ªt
 !
SUCCESS
) {

4407  
ªt
;

4410 
	`debug_msg
("[Debug check]: sys_is_lock...");

4412 i‡(
sys_cfg_ªc
.
is_lock
 =
POSITIVE
) {

4413  -
ETAX_MACH_LOCKED
;

4416 
	`debug_msg
("[Debug check]: done.\n");

4418 i‡(
π_›s
->
	`cmp_bcd_d©e
(&
today
, &
gp_≠p_öfo
->
issue_limô_d©e
) > 0) {

4419  -
ETAX_ISSUE_LIMIT
;

4422 
ªt
 = 
	`èx_ba£_check_lock_d©e
(&
today
);

4423 i‡(
ªt
 < 0)

4424  -
ETAX_MACH_LOCKED
;

4426 
	`debug_msg
("[Debug check]: base invoice check...");

4428 
ªt
 = 
	`èx_ba£_övoi˚_check
();

4429 i‡(
ªt
 !
SUCCESS
) {

4430  
ªt
;

4433 
	`debug_msg
("[Debug check]: done\n");

4435 
ªt
 = 
	`is_fisˇl_ˇrd_ªady
();

4436 i‡(
ªt
 =
NEGATIVE
)

4437  -
ETAX_FC_NOT_READY
;

4439 
ªt
 = 
	`èx_fûe_is_fuŒ
(
TODAY_ID_FILE
);

4440 i‡(
ªt
 =
POSITIVE
)

4441  -
ETAX_INVOICE_FULL
;

4443 
ªt
 = 
	`èx_fûe_is_fuŒ
(
ROLL_ID_FILE
);

4444 i‡(
ªt
 =
POSITIVE
)

4445  -
ETAX_INVOICE_FULL
;

4447 
	`debug_msg
("[Debug check]:Ñeadámount...");

4452 
	`mem£t
(&
amt_ªc‹d
, 0, (amt_record));

4453 
ªt
 = 
	`èx_fûe_ªad_amou¡
(&
amt_ªc‹d
);

4454 i‡(
ªt
 < 0 &&Ñë !-
EFILE_NO_REC
)

4455  
ªt
;

4457 
	`debug_msg
("[Debug check]: done\n");

4459 i‡(
gp_≠p_öfo
->
tŸÆ_övoi˚_limô
 =
amt_ªc‹d
.
amt_tŸÆ_this
)

4460  -
ETAX_AMT_TOTAL_LIMIT
;

4462 i‡(
gp_≠p_öfo
->
ªtu∫_övoi˚_limô
 =
amt_ªc‹d
.
amt_ªtu∫_this
)

4463  -
ETAX_AMT_RETURN_LIMIT
;

4465  
SUCCESS
;

4466 
	}
}

4478 
	$èx_sys_hw_öô
()

4480 
ªt
;

4482 #i‡
CONFIG_DEBUG


4483 
	`DEBUG
("TAX_SYSTEM HW CHECK.\n");

4487 
ªt
 = 
	`ac˚ss
(
CARD_DEV
, 
F_OK
);

4488 i‡(
ªt
 < 0) {

4489 
îr_num
 = -
ETAX_NO_CARD_DEV
;

4494 
	`DEADLY_BUG
(
îr_num
);

4497 
ªt
 = 
	`ac˚ss
(
CARD_DEV
, 
R_OK
 | 
W_OK
);

4498 i‡(
ªt
 < 0) {

4499 
îr_num
 = -
ETAX_PERM_DENY
;

4505 
	`DEADLY_BUG
(
îr_num
);

4508  
SUCCESS
;

4509 
	}
}

4519 
	$èx_sys_func_öô
()

4521 
ªt
;

4523 
fisˇl_ˇrd
 * fiscal_card;

4524 
u£r_ˇrd
 * user_card;

4525 
èx_sy°em
 *Åax_system;

4527 
èx_sy°em
 = 
	`gë_èx_sy°em
();

4529 #i‡
CONFIG_DEBUG


4530 
	`DEBUG
("TAX_SYSTEM FUNCTION CHECK.\n");

4533 
fisˇl_ˇrd
 = 
	`gë_fisˇl_ˇrd
();

4534 i‡(!
fisˇl_ˇrd
)

4535  -
ETAX_NUL_FISCAL
;

4537 
u£r_ˇrd
 = 
	`gë_u£r_ˇrd
();

4538 i‡(!
u£r_ˇrd
)

4539  -
ETAX_NUL_USER
;

4542 
ªt
 = 
fisˇl_ˇrd
->
	`powª_⁄
(
FISCAL_CARD
);

4543 i‡(
ªt
 !
SUCCESS
) {

4544 
fisˇl_ˇrd
->
	`powî_off
(
FISCAL_CARD
);

4545  
ªt
;

4548 
ªt
 = 
u£r_ˇrd
->
	`powî_⁄
(
USER_CARD
);

4549 i‡(
ªt
 !
SUCCESS
) {

4550 
u£r_ˇrd
->
	`powî_off
(
USER_CARD
);

4551  
ªt
;

4561 
ªt
 = 
fisˇl_ˇrd
->
	`powª_r°
(
FISCAL_CARD
);

4562 i‡(
ªt
 !
SUCCESS
) {

4563 
fisˇl_ˇrd
->
	`powî_off
(
FISCAL_CARD
);

4564  
ªt
;

4567 
ªt
 = 
	`fisˇl_ˇrd_is_ªady
();

4568 i‡(
ªt
 !
POSITIVE
) {

4569 
fisˇl_ˇrd
->
	`powî_off
(
USER_CARD
);

4570  
ªt
;

4573 
ªt
 = 
u£r_ˇrd
->
	`powî_r°
(
USER_CARD
);

4574 i‡(
ªt
 !
SUCCESS
) {

4575 
u£r_ˇrd
->
	`powî_off
(
USER_CARD
);

4576  
ªt
;

4578 
ªt
 = 
	`u£r_ˇrd_is_ªady
();

4579 i‡(
ªt
 !
POSITIVE
) {

4580 
u£r_ˇrd
->
	`powî_off
(
USER_CARD
);

4581  
ªt
;

4589 
fisˇl_ˇrd
->
	`powî_off
(
FISCAL_CARD
);

4590 
u£r_ˇrd
->
	`powî_off
(
USER_CARD
);

4592 #i‡
CONFIG_DEBUG


4593 
	`DEBUG
("TAX_SYSTEM FUNCTION CHECK OK.\n");

4596 
èx_sy°em
->
öô_m¨k
 = 
POSITIVE
;

4598  
SUCCESS
:

4599 
	}
}

4611 
	$èx_sys_fisˇl_¥e_öô
()

4613 
ªt
;

4615 
fisˇl_ˇrd
 * fiscal_card;

4616 
u£r_ˇrd
 * user_card;

4618 
machöe_öfo_ªc‹d
 * 
mach_öfo
 = 
	`gë_mach_öfo
();

4619 
ªt
 = 
	`èx_fûe_ªad_mach_öfo
(
mach_öfo
);

4620 i‡(
ªt
 < 0)

4621  
ªt
;

4623 
	`debug_msg
("TAX_SYSTEM FISCAL PRE INTI.\n");

4625 
fisˇl_ˇrd
 = 
	`gë_fisˇl_ˇrd
();

4626 i‡(!
fisˇl_ˇrd
)

4627  -
ETAX_NUL_FISCAL_CARD
;

4629 
u£r_ˇrd
 = 
	`gë_u£r_ˇrd
();

4630 i‡(!
u£r_ˇrd
)

4631  -
ETAX_NUL_USER_CARD
;

4640 
ªt
 = 
	`fisˇl_ˇrd_powî_⁄
();

4641 i‡(
ªt
 !
SUCCESS
)

4642 
ˇrd_off
;

4644 
ªt
 = 
	`is_fisˇl_ˇrd_ªady
();

4645 i‡(
ªt
 !
POSITIVE
) {

4646 
ªt
 = -
ETAX_FC_NOT_READY
;

4647 
ˇrd_off
;

4650 
ªt
 = 
	`is_fisˇl_ˇrd_ªgi°î
();

4651 i‡(
ªt
 !
NEGATIVE
) {

4652 
ªt
 = -
ETAX_FC_HAS_REG
;

4653 
ˇrd_off
;

4656 
ªt
 = 
	`u£r_ˇrd_powî_⁄
();

4657 i‡(
ªt
 !
SUCCESS
)

4658 
ˇrd_off
;

4661 
ªt
 = 
	`is_u£r_ˇrd_ªady
();

4662 i‡(
ªt
 !
POSITIVE
) {

4663 
ªt
 = -
ETAX_UC_NOT_READY
;

4664 
ˇrd_off
;

4671 
uch¨
 
machöe_nb
[8];

4672 
ªt
 = 
	`fisˇl_ˇrd_gë_machöe_nb
(
machöe_nb
);

4673 i‡(
ªt
 < 0)

4674 
ˇrd_off
;

4679 i‡(
	`memcmp
(
machöe_nb
, 
mach_öfo
->machine_nb, 8)) {

4680 
ªt
 = -
ETAX_DIFF_MACH_NB
;

4681 
ˇrd_off
;

4687 
uch¨
 
fis_ˇrd_nb
[8];

4688 
ªt
 = 
	`fisˇl_ˇrd_gë_ˇrd_nb
(
fis_ˇrd_nb
);

4689 i‡(
ªt
 < 0)

4690 
ˇrd_off
;

4695 
uch¨
 
èx∑yî_nb
[8];

4696 
ªt
 = 
	`fisˇl_ˇrd_gë_èx∑yî_nb
(
èx∑yî_nb
);

4697 i‡(
ªt
 < 0)

4698 
ˇrd_off
;

4704 
ªt
 = 
	`u£r_ˇrd_check_ˇrd
(
èx∑yî_nb
, 
machöe_nb
, 
fis_ˇrd_nb
);

4705 i‡(
ªt
 !
SUCCESS
) {

4706 
ªt
 = -
ETAX_UC_NOT_MATCH
;

4707 
ˇrd_off
;

4714 
	`debug_msg
("TAX_SYSTEM FISCAL PRE INTI DONE.\n");

4715 
ªt
 = 
SUCCESS
;

4717 
ˇrd_off
:

4718 
fisˇl_ˇrd
->
	`powî_off
(
FISCAL_CARD
);

4719 
u£r_ˇrd
->
	`powî_off
(
USER_CARD
);

4721  
ªt
;

4722 
	}
}

4732 
	$èx_sys_fisˇl_öô
()

4734 
ªt
;

4736 
fisˇl_ˇrd
 * fiscal_card;

4737 
u£r_ˇrd
 * user_card;

4738 
π_›î©e
 *Ñt_›î©ê
	`gë_π_›s
();

4740 
	`debug_msg
("TAX_SYSTEM FISCAL INTI.\n");

4742 
fisˇl_ˇrd
 = 
	`gë_fisˇl_ˇrd
();

4743 i‡(!
fisˇl_ˇrd
)

4744  -
ETAX_NUL_FISCAL_CARD
;

4746 
u£r_ˇrd
 = 
	`gë_u£r_ˇrd
();

4747 i‡(!
u£r_ˇrd
)

4748  -
ETAX_NUL_USER_CARD
;

4753 
ªt
 = 
	`èx_sys_fisˇl_¥e_öô
();

4754 i‡(
ªt
 !
SUCCESS
) {

4758  
ªt
;

4761 
ªt
 = 
	`fisˇl_ˇrd_powî_⁄
();

4762 i‡(
ªt
 !
SUCCESS
)

4763 
ˇrd_off
;

4765 
ªt
 = 
	`u£r_ˇrd_powî_⁄
();

4766 i‡(
ªt
 !
SUCCESS
)

4767 
ˇrd_off
;

4774 
èx_sys_≠p_öfo
 
≠p_öfo
;

4775 
ªt
 = 
π_›î©e
->
	`gë_cur_d©e
(&
≠p_öfo
.
öô_d©e
);

4776 i‡(
ªt
 < 0)

4777  
ªt
;

4780 
ªt
 = 
	`fisˇl_ˇrd_gë_≠p_öfo
(&
≠p_öfo
);

4781 i‡(
ªt
 < 0)

4782 
ˇrd_off
;

4787 
ªt
 = 
	`èx_ba£_check_d©e
(&
≠p_öfo
);

4788 i‡(
ªt
 < 0)

4789 
ˇrd_off
;

4792 
ªt
 = 
	`u£r_ˇrd_gë_fis_ty≥
(&
≠p_öfo
);

4793 i‡(
ªt
 < 0)

4794 
ˇrd_off
;

4796 #i‡
CONFIG_PWR_OFF_PROTECT


4805 
powî_°©e
 * 
pm
 = 
	`gë_powî_°©e
();

4807 
pm
->
	`check_powî_°©e
();

4816 
ªt
 = 
	`èx_fûe_¸ót_fisˇl_fûe
();

4817 i‡(
ªt
 !
SUCCESS
)

4818 
ˇrd_off
;

4821 
ªgi°î_öfo
 
ªg_öfo
;

4822 
ªt
 = 
fisˇl_ˇrd
->
	`gë_ªgi°î_nb
(&
ªg_öfo
);

4823 i‡(
ªt
 < 0)

4824 
ˇrd_off
;

4827 
ªt
 = 
u£r_ˇrd
->
	`ªgi°î_sign
(&
ªg_öfo
);

4828 i‡(
ªt
 < 0)

4829 
ˇrd_off
;

4832 
ªt
 = 
fisˇl_ˇrd
->
	`ãrmöÆ_ªgi°î
(&
ªg_öfo
);

4833 i‡(
ªt
 < 0)

4834 
ˇrd_off
;

4837 
ªt
 = 
	`èx_fûe_ßve_pö
((
èx_sys_pö_ªc‹d
 *)&
ªg_öfo
.
pö
);

4838 i‡(
ªt
 < 0)

4839 
ˇrd_off
;

4842 
ªt
 = 
	`èx_fûe_ßve_‹igö_pö
((
èx_sys_pö_ªc‹d
 *)&
ªg_öfo
.
pö
);

4843 i‡(
ªt
 < 0)

4844 
ˇrd_off
;

4847 
èx_sys_fis_c⁄fig_ªc‹d
 
fis_cfg
 = {

4848 .
de˛¨e_Êag
 = 
NEGATIVE
,

4849 .
pö_lock_Êag
 = 
NEGATIVE
,

4850 .
di°_îr_Êag
 = 
NEGATIVE
,

4853 
ªt
 = 
	`èx_fûe_ßve_fis_cfg
(&
fis_cfg
);

4854 i‡(
ªt
 < 0)

4855 
ˇrd_off
;

4858 
ªt
 = 
	`èx_fûe_ßve_≠p_öfo
(&
≠p_öfo
);

4859 i‡(
ªt
 < 0)

4860 
ˇrd_off
;

4863 
èx_sys_c⁄fig_ªc‹d
 
sys_cfg
;

4864 
	`mem£t
(&
sys_cfg
, 0, (sys_cfg));

4866 
sys_cfg
.
is_öô
 = 
POSITIVE
;

4868 
ªt
 = 
	`èx_fûe_ßve_sys_cfg
(&
sys_cfg
);

4869 i‡(
ªt
 < 0)

4870 
ˇrd_off
;

4872 
	`debug_msg
("TAX_SYSTEM FISCAL INTI.\n");

4873 
ªt
 = 
SUCCESS
;

4875 
ˇrd_off
:

4876 
fisˇl_ˇrd
->
	`powî_off
(
FISCAL_CARD
);

4877 
u£r_ˇrd
->
	`powî_off
(
USER_CARD
);

4879  
ªt
;

4880 
	}
}

4886 
	$èx_sys_ˇrd_öô
()

4888 
ªt
;

4890 
fisˇl_ˇrd
 * fiscal_card;

4891 
u£r_ˇrd
 * user_card;

4893 
	`debug_msg
("TAX_SYSTEM CARD INTI.\n");

4895 
fisˇl_ˇrd
 = 
	`gë_fisˇl_ˇrd
();

4896 i‡(!
fisˇl_ˇrd
)

4897  -
ETAX_NUL_FISCAL_CARD
;

4899 
u£r_ˇrd
 = 
	`gë_u£r_ˇrd
();

4900 i‡(!
u£r_ˇrd
)

4901  -
ETAX_NUL_USER_CARD
;

4907 
ªt
 = 
fisˇl_ˇrd
->
	`devi˚_öô
();

4908 i‡(
ªt
 < 0) {

4909 
	`debug_msg
("Card Reader INIT Failed\n");

4910  
FAIL
;

4913  
SUCCESS
;

4914 
	}
}

4919 
èx_sy°em
 
	gg_èx_sy°em_ba£
 = {

4920 .
is_fisˇl_öô
 = 
èx_sys_is_fisˇl_öô
,

4921 .
	ggë_övoi˚_nb
 = 
èx_sys_gë_övoi˚_nb
,

4922 .
	ggë_buy_rﬁl
 = 
èx_sys_gë_buy_rﬁl
,

4923 .
	gdi°_övoi˚
 = 
èx_sys_di°_övoi˚
,

4924 .
	gmou¡_rﬁl
 = 
èx_sys_mou¡_rﬁl
,

4925 .
	gdaûy_cﬁÀ˘
 = 
èx_sys_daûy_cﬁÀ˘
,

4926 .
	gissue_övoi˚
 = 
èx_sys_issue_övoi˚_¥oc
,

4927 .
	gde˛¨e_duty
 = 
èx_sys_de˛¨e_duty
,

4928 .
	gªde˛¨e_duty
 = 
èx_sys_ªde˛¨e_duty
,

4929 .
	gcheck_föish_èx
 = 
èx_sys_check_föish_èx
,

4930 .
	gupd©e_c⁄åﬁ
 = 
èx_sys_upd©e_c⁄åﬁ
,

4931 .
	gupd©e_èx∑yî
 = 
èx_sys_upd©e_èx∑yî
,

4932 .
	gpowî_⁄_check
 = 
èx_sys_powî_⁄_check
,

4933 .
	gå™ß˘_¥ï¨e
 = 
èx_sys_å™ß˘_¥ï¨e
,

4935 .
	gˇrd_öô
 = 
èx_sys_ˇrd_öô
,

4936 .
	gfisˇl_öô
 = 
èx_sys_fisˇl_öô
,

4938 .
	ggë_œ°_de˛¨e_d©e
 = 
èx_ba£_gë_œ°_de˛¨e_d©e
,

4939 .
	gcheck_de˛¨e_d©e
 = 
èx_ba£_check_de˛¨e_d©e
,

4941 .
	ggë_check_öfo
 = 
èx_ba£_gë_check_öfo
,

4942 .
	gvîify_check_ˇrd
 = 
èx_ba£_vîify_check_ˇrd
,

4943 .
	gwrôe_check_de˛¨e_dëaû
 = 
èx_sys_wrôe_check_de˛¨e_dëaû
,

4944 .
	gwrôe_check_daûy_dëaû
 = 
èx_sys_wrôe_check_daûy_dëaû
,

4945 .
	gwrôe_check_övoi˚_dëaû
 = 
èx_sys_wrôe_check_övoi˚_dëaû
,

4948 
èx_sy°em
 * 
	$gë_èx_sy°em
()

4950  &
g_èx_sy°em_ba£
;

4951 
	}
}

	@input/input.c

10 
	~<°dio.h
>

11 
	~<uni°d.h
>

12 
	~<°d¨g.h
>

13 
	~<°dlib.h
>

14 
	~<°rög.h
>

15 
	~<as£π.h
>

16 
	~<˘y≥.h
>

18 
	~"c⁄fig.h
"

19 
	~"comm⁄.h
"

20 
	~"îr‹.h
"

21 
	~"keybﬂrd.h
"

22 
	~"öput.h
"

23 
	~"ui_≠i.h
"

30 
	$gë_bcd_d©e
(
row
, 
cﬁ
, 
bcd_d©e
 * 
ídd©e
)

32 
ªt
;

33 
key
, 
off£t
 = 0;

34 
uöt
 
y
, 
m
, 
d
;

35 
yór
[4 + 1] = {0}, 
m⁄
[2 + 1] = {0}, 
day
[2 + 1] = {0};

36 
ascii_no
[9] = {0};

38 
	`bcd_to_gªg
(
ídd©e
, &
y
, &
m
, &
d
);

39 i‡(
y
 !0 || 
m
 !0 || 
d
 != 0) {

40 
off£t
 = 
	`¢¥ötf
(
ascii_no
, 9, "%d%02d%02d", 
y
, 
m
, 
d
);

43 
ªt
 = 
SUCCESS
;

44 
	`£t_ime_°©us
(
INPUT_LOW_CASE
);

46 
	`˛ór_ˇche
();

48 
	`show_°r
(
row
, 
cﬁ
, 
ascii_no
);

50 
key
 = 
	`gë_keycode
();

51 i‡(
	`isdigô
(
key
)) {

52 i‡(
off£t
 < 8) {

53 
	`•rötf
(
ascii_no
 + 
off£t
, "%c", ()
key
);

54 
off£t
 ++;

57 
key
) {

58 
BACK
:

59 i‡(
off£t
 > 0) {

60 
ascii_no
[
off£t
 - 1] = '\0';

61 
off£t
 --;

65 
ESC
:

66 
ªt
 = -
EUI_ESC
;

67 
h™dÀd
;

70 
ENTER
:

71 i‡(
off£t
 > 0) {

72 
ªt
 = 
SUCCESS
;

73 
h™dÀd
;

83 
h™dÀd
:

84 i‡(
ªt
 =-
EUI_ESC
)

85  
ªt
;

87 
	`mem˝y
(
yór
, 
ascii_no
, 4);

88 
	`mem˝y
(
m⁄
, 
ascii_no
 + 4, 2);

89 
	`mem˝y
(
day
, 
ascii_no
 + 6, 2);

90 
y
 = 
m
 = 
d
 = 0;

92 
y
 = 
	`©oi
(
yór
);

93 
m
 = 
	`©oi
(
m⁄
);

94 
d
 = 
	`©oi
(
day
);

96 i‡(
y
 >2014 && y <2100 && 
m
 > 0 && m <12 && 
d
 > 0 && d <= 31) {

97 
	`gªg_to_bcd
(
ídd©e
, 
y
, 
m
, 
d
);

99 
ªt
 = -
EUI_BAD_DATE_FORMAT
;

102  
ªt
;

103 
	}
}

105 
	$gë_gªg_time
(
row
, 
cﬁ
, 
gªg_time
 *
time
)

107 
ªt
;

108 
key
, 
off£t
 = 0;

109 
hour
[2 + 1] = {0}, 
mö
[2 + 1] = {0}, 
£c
[2 + 1] = {0};

110 
ascii_no
[7] = {0};

112 i‡(
time
->
hour
 !0 ||Åime->
mö
 !0 ||Åime->
£c
 != 0) {

113 
off£t
 = 
	`¢¥ötf
(
ascii_no
, 7, "%02d%02d%02d",

114 
time
->
hour
,Åime->
mö
,Åime->
£c
);

117 
ªt
 = 
SUCCESS
;

118 
	`£t_ime_°©us
(
INPUT_LOW_CASE
);

120 
	`˛ór_ˇche
();

122 
	`show_°r
(
row
, 
cﬁ
, 
ascii_no
);

124 
key
 = 
	`gë_keycode
();

125 i‡(
	`isdigô
(
key
)) {

126 i‡(
off£t
 < 6) {

127 
	`•rötf
(
ascii_no
 + 
off£t
, "%c", ()
key
);

128 
off£t
 ++;

131 
key
) {

132 
BACK
:

133 i‡(
off£t
 > 0) {

134 
ascii_no
[
off£t
 - 1] = '\0';

135 
off£t
 --;

139 
ESC
:

140 
ªt
 = -
EUI_ESC
;

141 
h™dÀd
;

144 
ENTER
:

145 i‡(
off£t
 > 0) {

146 
ªt
 = 
SUCCESS
;

147 
h™dÀd
;

157 
h™dÀd
:

158 i‡(
ªt
 =-
EUI_ESC
)

159  
ªt
;

161 
	`mem˝y
(
hour
, 
ascii_no
, 2);

162 
	`mem˝y
(
mö
, 
ascii_no
 + 2, 2);

163 
	`mem˝y
(
£c
, 
ascii_no
 + 4, 2);

165 
time
->
hour
 =Åime->
mö
 =Åime->
£c
 = 0;

167 
time
->
hour
 = 
	`©oi
(hour);

168 
time
->
mö
 = 
	`©oi
(min);

169 
time
->
£c
 = 
	`©oi
(sec);

171 i‡(
time
->
hour
 >= 0 &&Åime->hour <= 23

172 && 
time
->
mö
 >= 0 &&Åime->min <= 59

173 && 
time
->
£c
 >= 0 &&Åime->sec <= 59) {

175 
ªt
 = 
SUCCESS
;

177 
ªt
 = -
EUI_BAD_TIME_FORMAT
;

180  
ªt
;

181 
	}
}

188 
	$gë_°rög
(
row
, 
cﬁ
, *
°r
)

190 
ªt
;

191 
key
, 
off£t
 = 0;

192 
ascii_no
[
MAX_STR_LEN
 + 1] = {0};

194 i‡(
	`°æí
(
°r
) > 0) {

195 
off£t
 = 
	`¢¥ötf
(
ascii_no
, 
MAX_STR_LEN
 + 1, "%s", 
°r
);

198 
ªt
 = 
SUCCESS
;

199 
	`£t_ime_°©us
(
INPUT_LOW_CASE
);

201 
	`˛ór_ˇche
();

203 
	`show_°r
(
row
, 
cﬁ
, 
ascii_no
);

205 
key
 = 
	`gë_keycode
();

206 i‡(
	`i¶owî
(
key
)) {

207 i‡(
off£t
 < 
MAX_STR_LEN
) {

208 
	`•rötf
(
ascii_no
 + 
off£t
, "%c", ()
key
);

209 
off£t
 ++;

212 
key
) {

213 
ESC
:

214  -
EUI_ESC
;

216 
BACK
:

217 i‡(
off£t
 > 0) {

218 
ascii_no
[
off£t
 - 1] = '\0';

219 
off£t
 --;

223 
ENTER
:

224 i‡(
off£t
 > 0) {

225 
ªt
 = 
SUCCESS
;

226 
h™dÀd
;

236 
h™dÀd
:

237 
	`°r˝y
(
°r
, 
ascii_no
);

238  
ªt
;

239 
	}
}

246 
	$gë_∑sswd
(
row
, 
cﬁ
, *
∑ssw‹d
)

248 
ªt
;

249 
key
, 
off£t
 = 0;

250 
ascii_no
[
USER_PASSWD_LEN
 + 1] = {0};

251 
∑ss_wd
[
USER_PASSWD_LEN
 + 1] = {0};

253 i‡(
∑ssw‹d
[0] != '\0') {

254 
off£t
 = 
	`¢¥ötf
(
ascii_no
, 
USER_PASSWD_LEN
 + 1, "%s", 
∑ssw‹d
);

257 
ªt
 = 
SUCCESS
;

258 
	`£t_ime_°©us
(
INPUT_LOW_CASE
);

260 
	`˛ór_ˇche
();

262 
	`show_°r
(
row
, 
cﬁ
, 
ascii_no
);

264 
key
 = 
	`gë_keycode
();

265 i‡(
key
 >= '0' && key <= '9') {

266 i‡(
off£t
 < 
USER_PASSWD_LEN
) {

267 
	`•rötf
(
ascii_no
 + 
off£t
, "%c", '*');

268 
∑ss_wd
[
off£t
] = 
key
;

269 
off£t
 ++;

272 
key
) {

273 
ESC
:

274  -
EUI_ESC
;

276 
BACK
:

277 i‡(
off£t
 > 0) {

278 
ascii_no
[
off£t
 - 1] = '\0';

279 
∑ss_wd
[
off£t
 - 1] = '\0';

280 
off£t
 --;

284 
ENTER
:

285 i‡(
off£t
 > 0) {

286 
ªt
 = 
SUCCESS
;

287 
h™dÀd
;

297 
h™dÀd
:

298 
	`°r˝y
(
∑ssw‹d
, 
∑ss_wd
);

299  
ªt
;

300 
	}
}

309 
	#show_öãr_num
(
row
, 
cﬁ
, 
c⁄t
) \

311 
	`di•œy_°r
(
row
, 
cﬁ
, " "); \

312 
	`di•œy_°r
(
row
, 
cﬁ
, 
c⁄t
); \

313 } 0)

	)

315 
	$gë_öãr_num
(
row
, 
cﬁ
, *
num
)

317 
ªt
;

318 
key
, 
off£t
 = 0;

321 
ascii_no
[6] = {0};

323 i‡(*
num
 != 0) {

324 
off£t
 = 
	`¢¥ötf
(
ascii_no
, 5, "%d", *
num
);

327 
ªt
 = 
SUCCESS
;

328 
	`£t_ime_°©us
(
INPUT_LOW_CASE
);

330 
	`˛ór_ˇche
();

332 
	`show_öãr_num
(
row
, 
cﬁ
, 
ascii_no
);

334 
key
 = 
	`gë_keycode
();

335 i‡(
	`isdigô
(
key
)) {

336 i‡(
off£t
 < 5) {

337 
	`•rötf
(
ascii_no
 + 
off£t
, "%c", ()
key
);

338 
off£t
 ++;

341 
key
) {

342 
D_ZERO
:

343 i‡(
off£t
 != 0 && offset < 4) {

344 
	`•rötf
(
ascii_no
 + 
off£t
, "%c%c", '0', '0');

345 
off£t
 += 2;

347 i‡(
off£t
 == 4) {

348 
	`•rötf
(
ascii_no
 + 
off£t
, "%c", '0');

349 
off£t
 ++;

354 
BACK
:

355 i‡(
off£t
 > 0) {

356 
ascii_no
[
off£t
 - 1] = '\0';

357 
off£t
 --;

361 
ESC
:

362  -
EUI_ESC
;

363 
h™dÀd
;

366 
ENTER
:

367 
ªt
 = 
SUCCESS
;

368 
h™dÀd
;

377 
h™dÀd
:

378 *
num
 = 
	`©oi
(
ascii_no
);

380  
ªt
;

381 
	}
}

389 
	$gë_hex_num
(
row
, 
cﬁ
, 
uch¨
 *
pö
, 
Àn
)

391 
i
;

392 
key
, 
off£t
 = 0;

393 
ascii_no
[48] = {0};

395 
	`mem£t
(
pö
, 0, 
Àn
);

397 
	`£t_ime_°©us
(
INPUT_LOW_CASE
);

399 
	`˛ór_ˇche
();

401 
	`show_°r
(
row
, 
cﬁ
, 
ascii_no
);

403 
key
 = 
	`gë_keycode
();

404 i‡((
key
 >= 'A' && key <= 'F') || (key >= 'a' && key <= 'f')

405 || (
key
 >= '0' && key <= '9')) {

406 i‡(
off£t
 < 2*
Àn
){

407 
	`•rötf
(
ascii_no
 + 
off£t
, "%c", ()
key
);

408 
off£t
 ++;

411 
key
) {

412 
ESC
:

413  -
EUI_ESC
;

415 
BACK
:

416 i‡(
off£t
 > 0) {

417 
ascii_no
[
off£t
 - 1] = '\0';

418 
off£t
 --;

422 
ENTER
:

423 i‡(
off£t
 > 0 && off£à=2*
Àn
) {

424 
h™dÀd
;

434 
h™dÀd
:

435 
i
 = 0; i < 2*
Àn
; i++) {

436 i‡(
ascii_no
[
i
] >= 'A' &&áscii_no[i] <= 'F')

437 
ascii_no
[
i
] =áscii_no[i] - 'A' + 10;

438 i‡(
ascii_no
[
i
] >= 'a' &&áscii_no[i] <= 'f')

439 
ascii_no
[
i
] =áscii_no[i] - 'a' + 10;

440 i‡(
ascii_no
[
i
] >= '0' &&áscii_no[i] <= '9')

441 
ascii_no
[
i
] =áscii_no[i] - '0';

444 
i
 = 0; i < 
Àn
; i++) {

445 
pö
[
i
] = 
ascii_no
[2 * i] * 16 +áscii_no[2*i + 1];

448  
SUCCESS
;

449 
	}
}

452 
	#CONTENT_SIZE
 18

	)

454 
	$gë_chn_∑d
(*
chn
, *
chn_c⁄ã¡
)

456 
Àn
, 
pos
;

457 
	`mem£t
(
chn_c⁄ã¡
, 0, 
CONTENT_SIZE
);

459 
Àn
 = 
	`°æí
(
chn
);

460 i‡(
Àn
 > 8)

461 
Àn
 = 8;

463 
Àn
 =Üen / 2;

465 
pos
 = 0;Öo†< 
Àn
;Öos ++) {

466 
	`•rötf
(
chn_c⁄ã¡
 + 
pos
 * 4, " %d",Öos + 1);

467 
	`mem˝y
(
chn_c⁄ã¡
 + 
pos
 * 4 + 2, 
chn
 +Öos * 2, 2);

470 
chn_c⁄ã¡
[16] = ' ';

471 
chn_c⁄ã¡
[17] = ' ';

473  
SUCCESS
;

474 
	}
}

476 
	#IME_PAD_BLANK
 " "

	)

477 
	#CHN_PAD_BLANK
 " "

	)

479 
	#show_ime_∑d
(
row
, 
cﬁ
, 
c⁄t
) \

481 
	`di•œy_°r
(
row
, 
cﬁ
, 
IME_PAD_BLANK
); \

482 
	`di•œy_°r
(
row
, 
cﬁ
, 
c⁄t
); \

483 } 0)

	)

485 
	#show_chn_∑d
(
row
, 
cﬁ
, 
c⁄t
) \

487 
	`di•œy_°r
(
row
, 
cﬁ
, 
CHN_PAD_BLANK
);\

488 
	`di•œy_°r
(
row
, 
cﬁ
, 
c⁄t
); \

489 } 0)

	)

496 
	$ui_pöyö
(*
c⁄t
)

498 
keycode
, 
ime_°©e
, 
cou¡
;

499 
pos
, 
∑ge
;

500 *
chn
 = 
NULL
;

501 
•ñl
[6] = {0};

502 
chn_c⁄ã¡
[
CONTENT_SIZE
];

503 *
ime_∑d
[] = {

511 
ime_°©e
 = 
	`gë_ime_°©us
();

512 i‡(
ime_°©e
 =
INPUT_FUNC
) {

513 
	`£t_ime_°©us
(
INPUT_PINYIN
);

514 
ime_°©e
 = 
INPUT_PINYIN
;

517 
	`show_ime_∑d
(4, 1, 
ime_∑d
[
ime_°©e
]);

518 
	`˛ór_ˇche
();

520 
pos
 = 
∑ge
 = 
cou¡
 = 0;

522 
keycode
 = 
	`gë_keycode
();

523 
keycode
) {

524 
SHIFT
:

525 i‡(
ime_°©e
 =
INPUT_SIGN
)

526 
ime_°©e
 = 
INPUT_UP_CASE
;

528 
ime_°©e
 ++;

530 
cou¡
 = 0;

531 
chn
 = 
NULL
;

532 
	`mem£t
(
•ñl
, 0, 6);

533 
	`mem£t
(
chn_c⁄ã¡
, 0, 
CONTENT_SIZE
);

536 i‡(
pos
 > 0) {

537 
	`£t_curs‹_off
(4, 5 + (
pos
 - 1) * 2);

538 
pos
 = 
∑ge
 = 0;

540 
	`£t_ime_°©us
(
ime_°©e
);

541 
	`show_°r
(4, 1, 
ime_∑d
[
ime_°©e
]);

545 
ESC
:

546 i‡(
pos
 > 0) {

547 
	`£t_curs‹_off
(4, 5 + (
pos
 - 1) * 2);

548 
pos
 = 
∑ge
 = 0;

551 
	`show_°r
(4, 1, 
CHAR_BLANK
);

552  -
EUI_ESC
;

556 
BACK
:

557 i‡(
ime_°©e
 !
INPUT_PINYIN
)

558  -
EUI_BACK
;

560 i‡(
cou¡
 > 0) {

561 i‡(
pos
 > 0) {

562 
	`£t_curs‹_off
(4, 5 + (
pos
 - 1) * 2);

563 
pos
 = 
∑ge
 = 0;

566 
•ñl
[--
cou¡
] = '\0';

567 i‡(
cou¡
 == 0) {

568 
	`show_°r
(4, 1, 
ime_∑d
[
ime_°©e
]);

569 
chn
 = 
NULL
;

570 
	`mem£t
(
chn_c⁄ã¡
, 0, 
CONTENT_SIZE
);

572 
	`show_ime_∑d
(4, 1, 
•ñl
);

573 
chn
 = 
	`py_ime
(
•ñl
);

574 i‡(
chn
 !
NULL
) {

575 
	`gë_chn_∑d
(
chn
, 
chn_c⁄ã¡
);

576 
	`show_chn_∑d
(4, 4, 
chn_c⁄ã¡
);

578 
	`show_chn_∑d
(4, 4, 
NULL
);

581  -
EUI_BACK
;

586 
ENTER
:

587 i‡(
cou¡
 > 0) {

588 i‡(
chn
 !
NULL
 && 
pos
 > 0) {

589 
	`£t_curs‹_off
(4, 5 + (
pos
 - 1) * 2);

590 
pos
 = 
∑ge
 = 0;

591 
	`show_°r
(4, 1, 
ime_∑d
[
ime_°©e
]);

593 
	`mem˝y
(
c⁄t
, 
chn
 + (
pos
 - 1) * 2, 2);

594 
h™dÀd
;

597  
ENTER
;

601 
LEFT
:

602 i‡(
chn
 !
NULL
) {

603 i‡(
pos
 > 1) {

604 
	`£t_curs‹_off
(4, 5 + (
pos
 - 1) * 2);

605 
pos
 --;

606 
	`£t_curs‹_⁄
(4, 5 + (
pos
 - 1) * 2);

612 
RIGHT
:

613 i‡(
chn
 !
NULL
) {

614 i‡(
pos
 < 4 && 
	`°æí
(
chn
) / 2 >Öos){

615 i‡(
pos
 != 0)

616 
	`£t_curs‹_off
(4, 5 + (
pos
 - 1) * 2);

618 
pos
 ++;

619 
	`£t_curs‹_off
(4, 5 + (
pos
 - 1) * 2);

624 
UP
:

625 i‡(
chn
 !
NULL
) {

626 i‡(
∑ge
 > 0) {

627 i‡(
pos
 != 0)

628 
	`£t_curs‹_off
(4, 5 + (
pos
 - 1) * 2);

630 
chn
 -= 8;

631 
	`gë_chn_∑d
(
chn
, 
chn_c⁄ã¡
);

632 
	`show_chn_∑d
(4, 4, 
chn_c⁄ã¡
);

634 
pos
 = 1;

635 
	`£t_curs‹_⁄
(4, 5 + (
pos
 - 1) * 2);

636 
∑ge
 --;

641 
DOWN
:

642 i‡(
chn
 !
NULL
) {

643 i‡(
	`°æí
(
chn
) > 8) {

644 i‡(
pos
 != 0)

645 
	`£t_curs‹_off
(4, 5 + (
pos
 - 1) * 2);

647 
chn
 += 8;

648 
	`gë_chn_∑d
(
chn
, 
chn_c⁄ã¡
);

649 
	`show_chn_∑d
(4, 4, 
chn_c⁄ã¡
);

651 
pos
 = 1;

652 
	`£t_curs‹_⁄
(4, 5 + (
pos
 - 1) * 2);

654 
∑ge
 ++;

660 i‡(
ime_°©e
 !
INPUT_PINYIN
) {

661 i‡(
keycode
 != '\0') {

662 
c⁄t
[0] = 
keycode
;

663 
h™dÀd
;

666 i‡(
	`i¶owî
(
keycode
)) {

667 i‡(
cou¡
 < 5) {

668 i‡(
pos
 > 0) {

669 
	`£t_curs‹_off
(4, 5 + (
pos
 - 1) * 2);

670 
pos
 = 
∑ge
 = 0;

673 
•ñl
[
cou¡
++] = ()
keycode
;

674 
	`show_ime_∑d
(4, 1, 
•ñl
);

675 
chn
 = 
	`py_ime
(
•ñl
);

676 i‡(
chn
 !
NULL
) {

677 
	`gë_chn_∑d
(
chn
, 
chn_c⁄ã¡
);

678 
	`show_chn_∑d
(4, 4, 
chn_c⁄ã¡
);

680 
	`show_chn_∑d
(4, 4, 
NULL
);

685 i‡(
	`isdigô
(
keycode
)) {

686 i‡(
chn
 !
NULL
) {

687 i‡((
keycode
 - '0'Ë<(
	`°æí
(
chn
) / 2)) {

688 i‡(
pos
 > 0)

689 
	`£t_curs‹_off
(4, 5 + (
pos
 - 1) * 2);

691 
cou¡
 = 
pos
 = 
∑ge
 = 0;

692 
	`mem˝y
(
c⁄t
, 
chn
 + (
keycode
 - '1') * 2, 2);

693 
	`show_°r
(4, 1, 
ime_∑d
[
ime_°©e
]);

694 
h™dÀd
;

704 
h™dÀd
:

706  
SUCCESS
;

707 
	}
}

710 
	$gë_chn_°r
(
row
, 
cﬁ
, *
«me
)

712 
ªt
, 
Àn
 = 0;

713 
chn
[2];

715 
	`£t_ime_°©us
(
INPUT_PINYIN
);

717 
	`˛ór_ˇche
();

719 
	`show_°r
(
row
, 
cﬁ
, 
«me
);

720 
Àn
 = 
	`°æí
(
«me
);

722 
chn
[0] = chn[1] = '\0';

724 
ªt
 = 
	`ui_pöyö
(
chn
);

725 
ªt
) {

726 
ENTER
:

734  
SUCCESS
;

737 -
EUI_BACK
:

738 i‡(
Àn
 > 0) {

739 i‡((
uch¨
)
«me
[
Àn
 - 1] < 127) {

740 
«me
[
Àn
 - 1] = '\0';

742 
«me
[
Àn
 - 1] = '\0';

743 
«me
[
Àn
 - 2] = '\0';

746  -
EUI_BACK
;

749 -
EUI_ESC
:

750  -
EUI_ESC
;

753 
SUCCESS
:

754 i‡((
uch¨
)
chn
[0] > 127) {

755 
«me
[
Àn
] = 
chn
[0];

756 
«me
[
Àn
 + 1] = 
chn
[1];

758 
«me
[
Àn
] = 
chn
[0];

766 
	}
}

768 
	$gë_b¨code
(
row
, 
cﬁ
, * 
b¨code
)

770 
ªt
;

772 #i‚de‡
CONFIG_HPP


773  
FAIL
;

776 
ªt
 = 
SUCCESS
;

778  
ªt
;

779 
	}
}

	@input/keyboard.c

9 
	~<°dio.h
>

10 
	~<°dlib.h
>

11 
	~<°rög.h
>

12 
	~<uni°d.h
>

13 
	~<f˙é.h
>

14 
	~<±hªad.h
>

15 
	~<sys/time.h
>

16 
	~<sys/ty≥s.h
>

17 
	~<uni°d.h
>

18 
	~<£m≠h‹e.h
>

20 
	~"comm⁄.h
"

21 
	~"c⁄fig.h
"

22 
	~"îr‹.h
"

24 
	~"u¨t.h
"

25 
	~"öput.h
"

26 
	~"keybﬂrd.h
"

28 
uöt
 
	gnul_èbÀ
[5] = {'\0', '\0', '\0', '\0', '\0',};

31 
uöt
 
	ga_e_èbÀ
[5] = {'a', 'b', 'c', 'd', 'e'};

32 
uöt
 
	gf_j_èbÀ
[5] = {'f', 'g', 'h', 'i', 'j'};

33 
uöt
 
	gk_j_èbÀ
[5] = {'k', 'l', 'm', 'n', 'o'};

34 
uöt
 
	gp_t_èbÀ
[5] = {'p', 'q', 'r', 's', 't'};

35 
uöt
 
	gu_y_èbÀ
[5] = {'u', 'v', 'w', 'x', 'y'};

36 
uöt
 
	gz_•_èbÀ
[5] = {
BACK
, 
ESC
, 
SHIFT
, ' ', 'z'};

39 
uöt
 
	gA_E_èbÀ
[5] = {'A', 'B', 'C', 'D', 'E'};

40 
uöt
 
	gF_J_èbÀ
[5] = {'F', 'G', 'H', 'I', 'J'};

41 
uöt
 
	gK_J_èbÀ
[5] = {'K', 'L', 'M', 'N', 'O'};

42 
uöt
 
	gP_T_èbÀ
[5] = {'P', 'Q', 'R', 'S', 'T'};

43 
uöt
 
	gU_Y_èbÀ
[5] = {'U', 'V', 'W', 'X', 'Y'};

44 
uöt
 
	gZ_SP_èbÀ
[5] = {
BACK
, 
ESC
, 
SHIFT
, ' ', 'Z'};

47 
uöt
 
	gnum_1_èbÀ
[5] = {
RIGHT
, 
LEFT
, '6', '5', '4'};

48 
uöt
 
	gnum_2_èbÀ
[5] = {
DOWN
, 
UP
, '9', '8', '7'};

49 
uöt
 
	gnum_3_èbÀ
[5] = {'\0', '\0', '3', '2', '1'};

50 
uöt
 
	gnum_4_èbÀ
[5] = {'\0', '\0', '.', 
D_ZERO
, '0'};

54 
uöt
 
	gsign_1_èbÀ
[5] = {'.', '/', '?', '=', '|'};

55 
uöt
 
	gsign_2_èbÀ
[5] = {'-', '+', '^', '%', '$'};

56 
uöt
 
	gsign_3_èbÀ
[5] = {']', '[', '(', '*', '&'};

57 
uöt
 
	gsign_4_èbÀ
[5] = {
BACK
, 
ESC
, 
SHIFT
, '\0', '\0'};

58 
uöt
 
	gsign_5_èbÀ
[5] = {'\0', '\0', '#', '@', '!'};

59 
uöt
 
	gsign_6_èbÀ
[5] = {'\0', '\0', '\0', '\\', '('};

62 
uöt
 
	gfunc_1_èbÀ
[5] = {'\0', '\0', '\0', 
PAPER_IN
, 
PAPER_OUT
};

63 
uöt
 
	gfunc_2_èbÀ
[5] = {
RIGHT
, 
LEFT
, '\0', '\0', '\0'};

64 
uöt
 
	gfunc_3_èbÀ
[5] = {
DOWN
, 
UP
, '\0', '\0', '\0'};

65 
uöt
 
	gfunc_4_èbÀ
[5] = {
BACK
, 
ESC
, 
SHIFT
, 
HANG
, 
VIEW
};

66 
uöt
 
	gfunc_5_èbÀ
[5] = {
TOTAL
, '\0', '\0', '\0', '\0'};

67 
uöt
 
	gfunc_6_èbÀ
[5] = {
ENTER
, '\0', '\0', '\0', '\0'};

69 
uöt
 * 
	glow_key_m≠
[] = {

71 
a_e_èbÀ
,

72 
f_j_èbÀ
,

73 
k_j_èbÀ
,

74 
p_t_èbÀ
,

75 
u_y_èbÀ
,

76 
num_1_èbÀ
,

77 
num_2_èbÀ
,

78 
z_•_èbÀ


81 
uöt
 * 
	gUP_key_m≠
[] = {

83 
A_E_èbÀ
,

84 
F_J_èbÀ
,

85 
K_J_èbÀ
,

86 
P_T_èbÀ
,

87 
U_Y_èbÀ
,

88 
num_1_èbÀ
,

89 
num_2_èbÀ
,

90 
Z_SP_èbÀ


93 
uöt
 * 
	gsign_key_m≠
[] = {

95 
nul_èbÀ
,

96 
nul_èbÀ
,

97 
nul_èbÀ
,

98 
nul_èbÀ
,

99 
sign_1_èbÀ
,

100 
sign_2_èbÀ
,

101 
sign_3_èbÀ
,

102 
sign_4_èbÀ


105 
uöt
 * 
	gfunc_key_m≠
[] = {

107 
nul_èbÀ
,

108 
nul_èbÀ
,

109 
nul_èbÀ
,

110 
nul_èbÀ
,

111 
func_1_èbÀ
,

112 
func_2_èbÀ
,

113 
func_3_èbÀ
,

114 
func_4_èbÀ


121 
±hªad_t
 
	gtid
;

122 
±hªad_muãx_t
 
	gk_ˇche_lock
;

124 
key_code
 
	gg_key_code
 = {

125 .
Êag
 = 
NEGATIVE
,

126 .
	gíd
 = 0,

127 .
	gkey_vÆue
 = {0},

130 vﬁ©ûê
	gIME_STATUS
 = 
INPUT_LOW_CASE
;

132 
	$gë_ime_°©us
()

134  
IME_STATUS
;

135 
	}
}

137 
	$£t_ime_°©us
(
mode
)

139 i‡(
mode
 >
INPUT_FUNC
 && modê<
INPUT_SIGN
) {

140 
IME_STATUS
 = 
mode
;

142  
SUCCESS
;

145  
FAIL
;

146 
	}
}

154 
	$gë_keycode
()

156 
key
;

157 
pos
;

159 
g_key_code
.
Êag
 !
POSITIVE
)

160 
	`u¶ìp
(1000);

162 
	`±hªad_muãx_lock
(&
k_ˇche_lock
);

164 
pos
 = 
g_key_code
.
íd
 - 1;

165 
key
 = 
g_key_code
.
key_vÆue
[
pos
];

166 
g_key_code
.
íd
--;

168 i‡(
g_key_code
.
íd
 == 0)

169 
g_key_code
.
Êag
 = 
NEGATIVE
;

171 
	`±hªad_muãx_u∆ock
(&
k_ˇche_lock
);

173  
key
;

174 
	}
}

179 
	$˛ór_ˇche
()

181 
	`±hªad_muãx_lock
(&
k_ˇche_lock
);

183 
g_key_code
.
Êag
 = 
NEGATIVE
;

184 
g_key_code
.
íd
 = 0;

185 
	`mem£t
(
g_key_code
.
key_vÆue
, 0, 
CACHE_SIZE
);

187 
	`±hªad_muãx_u∆ock
(&
k_ˇche_lock
);

189  
SUCCESS
;

190 
	}
}

198 
uöt
 
	$decode_key
(
ch
)

200 
uöt
 * 
±r
;

201 
uöt
 
¨ó
 = 0;

202 
uöt
 
po°
 = 0;

204 
uöt
 
sw_code
 = 0;

205 
uöt
 
hw_code
 = (uöt)
ch
;

207 i‡(!(
ch
 >
HW_KEY_CODE_START
 && ch <
HW_KEY_CODE_END
))

208  
FAIL
;

211 
hw_code
) {

213 
sw_code
 = 
TOTAL
;

215 
chk_sw_code
;

219 i‡(
IME_STATUS
 =
INPUT_SIGN
)

220 
sw_code
 = '#';

221 i‡(
IME_STATUS
 =
INPUT_FUNC
)

222 
sw_code
 = '\0';

224 
sw_code
 = '3';

226 
chk_sw_code
;

230 i‡(
IME_STATUS
 =
INPUT_SIGN
)

231 
sw_code
 = '@';

232 i‡(
IME_STATUS
 =
INPUT_FUNC
)

233 
sw_code
 = '\0';

235 
sw_code
 = '2';

237 
chk_sw_code
;

241 i‡(
IME_STATUS
 =
INPUT_SIGN
)

242 
sw_code
 = '!';

243 i‡(
IME_STATUS
 =
INPUT_FUNC
)

244 
sw_code
 = '\0';

246 
sw_code
 = '1';

248 
chk_sw_code
;

252 
sw_code
 = 
ENTER
;

254 
chk_sw_code
;

258 i‡(
IME_STATUS
 =
INPUT_FUNC
)

259 
sw_code
 = '\0';

261 
sw_code
 = '.';

263 
chk_sw_code
;

267 i‡(
IME_STATUS
 =
INPUT_SIGN
)

268 
sw_code
 = '\\';

269 i‡(
IME_STATUS
 =
INPUT_FUNC
)

270 
sw_code
 = '\0';

272 
sw_code
 = 
D_ZERO
;

274 
chk_sw_code
;

278 i‡(
IME_STATUS
 =
INPUT_SIGN
)

279 
sw_code
 = ')';

280 i‡(
IME_STATUS
 =
INPUT_FUNC
)

281 
sw_code
 = '\0';

283 
sw_code
 = '0';

285 
chk_sw_code
;

293 
¨ó
 = 
hw_code
 - 4;

294 
¨ó
 =área / 8;

296 
po°
 = 
hw_code
 -4;

297 
po°
 =Öost % 8;

299 
IME_STATUS
) {

300 
INPUT_FUNC
:

301 
±r
 = 
func_key_m≠
[
¨ó
];

302 
sw_code
 = 
±r
[
po°
];

303 
chk_sw_code
;

306 
INPUT_PINYIN
:

307 
INPUT_LOW_CASE
:

308 
±r
 = 
low_key_m≠
[
¨ó
];

309 
sw_code
 = 
±r
[
po°
];

310 
chk_sw_code
;

313 
INPUT_UP_CASE
:

314 
±r
 = 
UP_key_m≠
[
¨ó
];

315 
sw_code
 = 
±r
[
po°
];

316 
chk_sw_code
;

319 
INPUT_SIGN
:

320 
±r
 = 
sign_key_m≠
[
¨ó
];

321 
sw_code
 = 
±r
[
po°
];

322 
chk_sw_code
;

326  
FAIL
;

330 
chk_sw_code
:

332 i‡(
IME_STATUS
 =
INPUT_FUNC
)

333 i‡(!(
	`is_func
(
sw_code
)))

334  
FAIL
;

336 i‡(
IME_STATUS
 > 
INPUT_FUNC
)

337 i‡(!(
	`is_ascii
(
sw_code
)))

338  
FAIL
;

341  
sw_code
;

342 
	}
}

350 * 
	$keybﬂrd_thªad
(*
¨g
)

352 
ªt
;

353 
i
, 
pos
;

354 
key_bﬂrd
;

356 
fd_£t
 
ªad_fd
;

357 
timevÆ
 
time_out
;

362 
key_bﬂrd
 = 
	`›í_u¨t
(
KEYBD_DEV
, 
O_RDONLY
 | 
O_NONBLOCK
);

363 i‡(
key_bﬂrd
 < 0)

366 
ªt
 = 
	`kb_u¨t_£tup
(
key_bﬂrd
);

367 i‡(
ªt
 !
SUCCESS
) {

368 
	`˛o£
(
key_bﬂrd
);

372 
uch¨
 
c
;

373 
uöt
 
key_vÆue
;

375 
time_out
.
tv_£c
 = 2;

376 
time_out
.
tv_u£c
 = 0;

378 
	`FD_ZERO
(&
ªad_fd
);

379 
	`FD_SET
(
key_bﬂrd
, &
ªad_fd
);

381 
ªt
 = 
	`£À˘
(
key_bﬂrd
 + 1, &
ªad_fd
, 
NULL
, NULL, &
time_out
);

382 i‡(
ªt
 == -1) {

383 
	`debug_msg
("KEY_BOARD : selectÉrror\n");

384 
	`u¶ìp
(100000);

386 } i‡(
ªt
 > 0) {

387 i‡(
	`FD_ISSET
(
key_bﬂrd
, &
ªad_fd
)) {

388 
ªt
 = 
	`ªad_u¨t
(
key_bﬂrd
, &
c
, 1);

389 i‡(
ªt
 !
SUCCESS
) {

390 
	`debug_msg
("KEY_BOARD:ÑeadÉrror\n");

391 
	`u¶ìp
(100000);

397 
key_vÆue
 = 
	`decode_key
(
c
);

398 i‡(
key_vÆue
 >= 0) {

399 
	`±hªad_muãx_lock
(&
k_ˇche_lock
);

401 
pos
 = 
g_key_code
.
íd
;

402 i‡(
pos
 == 10) {

403 
i
 = 0; i < 9; i++)

404 
g_key_code
.
key_vÆue
[
i
] = g_key_code.key_value[i + 1];

406 
g_key_code
.
key_vÆue
[
i
] = key_value;

408 
g_key_code
.
key_vÆue
[
pos
] = key_value;

409 
g_key_code
.
íd
++;

412 i‡(
g_key_code
.
Êag
 =
NEGATIVE
)

413 
g_key_code
.
Êag
 = 
POSITIVE
;

415 
	`±hªad_muãx_u∆ock
(&
k_ˇche_lock
);

418 } i‡(
ªt
 == 0) {

419 
	`u¶ìp
(100000);

422 
	`u¶ìp
(100000);

426 
	}
}

431 
±hªad_t
 
	$keybﬂrd_öô
()

433 
ªt
;

438 
	`±hªad_muãx_öô
(&
k_ˇche_lock
, 
NULL
);

440 
ªt
 = 
	`±hªad_¸óã
(&
tid
, 
NULL
, 
keybﬂrd_thªad
, NULL);

441 i‡(
ªt
 != 0)

442  
FAIL
;

444 
	`±hªad_dëach
(
tid
);

446  
tid
;

447 
	}
}

453 
	$keybﬂrd_°›
()

455 
	`±hªad_muãx_de°roy
(&
k_ˇche_lock
);

457 
	`±hªad_ˇn˚l
(
tid
);

459  
SUCCESS
;

460 
	}
}

	@input/py_dict.h

9 #i‚de‡
__PY_DICT_H__


10 
	#__PY_DICT_H__


	)

12 
	#TOTALWORDS
 7285

	)

13 
	#TOTALPINYIN
 400

	)

15 
	#INDEX_NUM_A
 5

	)

16 
	#INDEX_NUM_B
 16

	)

17 
	#INDEX_NUM_C
 33

	)

18 
	#INDEX_NUM_D
 20

	)

19 
	#INDEX_NUM_E
 3

	)

20 
	#INDEX_NUM_F
 9

	)

21 
	#INDEX_NUM_G
 19

	)

22 
	#INDEX_NUM_H
 19

	)

23 
	#INDEX_NUM_I
 1

	)

24 
	#INDEX_NUM_J
 15

	)

25 
	#INDEX_NUM_K
 18

	)

26 
	#INDEX_NUM_L
 24

	)

27 
	#INDEX_NUM_M
 19

	)

28 
	#INDEX_NUM_N
 23

	)

29 
	#INDEX_NUM_O
 2

	)

30 
	#INDEX_NUM_P
 17

	)

31 
	#INDEX_NUM_Q
 14

	)

32 
	#INDEX_NUM_R
 14

	)

33 
	#INDEX_NUM_S
 34

	)

34 
	#INDEX_NUM_T
 19

	)

35 
	#INDEX_NUM_U
 1

	)

36 
	#INDEX_NUM_V
 1

	)

37 
	#INDEX_NUM_W
 9

	)

38 
	#INDEX_NUM_X
 14

	)

39 
	#INDEX_NUM_Y
 15

	)

40 
	#INDEX_NUM_Z
 36

	)

42 
	tTCHAR
;

44 
	södex


46 *
	mpy
;

47 *
	mmb
;

50 
	gödex_num
[26] = {

51 
INDEX_NUM_A
,

52 
INDEX_NUM_B
,

53 
INDEX_NUM_C
,

54 
INDEX_NUM_D
,

55 
INDEX_NUM_E
,

56 
INDEX_NUM_F
,

57 
INDEX_NUM_G
,

58 
INDEX_NUM_H
,

59 
INDEX_NUM_I
,

60 
INDEX_NUM_J
,

61 
INDEX_NUM_K
,

62 
INDEX_NUM_L
,

63 
INDEX_NUM_M
,

64 
INDEX_NUM_N
,

65 
INDEX_NUM_O
,

66 
INDEX_NUM_P
,

67 
INDEX_NUM_Q
,

68 
INDEX_NUM_R
,

69 
INDEX_NUM_S
,

70 
INDEX_NUM_T
,

71 
INDEX_NUM_U
,

72 
INDEX_NUM_V
,

73 
INDEX_NUM_W
,

74 
INDEX_NUM_X
,

75 
INDEX_NUM_Y
,

76 
INDEX_NUM_Z


79 
	gmb_a
[] ={"ÈòøÂïä"};

80 
	gmb_ai
[] ={"ÂìéÂìÄÂîâÂüÉÊå®ÁöëÁôåÁüÆËîºËâæÁà±ÈöòÁ¢ç"};

81 
	gmb_™
[] ={"ÂÆâÊ∞®Èûç‰ø∫Â≤∏ÊåâÊ°àËÉ∫Êöó"};

82 
	gmb_™g
[] ={"ËÇÆÊòÇÁõé"};

83 
	gmb_ao
[] ={"ÂáπÊïñÁÜ¨Áø±Ë¢ÑÂÇ≤Â••Êæ≥Êáä"};

84 
	gmb_ba
[] ={"ÂÖ´Â∑¥Âè≠ÊâíÂêßËä≠Áñ§ÊçåÁ¨ÜÊãîË∑ãÊääÈù∂ÂùùÁà∏ÁΩ¢Èú∏"};

85 
	gmb_bai
[] ={"ÁôΩÁôæ‰Ω∞ÊüèÊëÜË¥•ÊãúÁ®ó"};

86 
	gmb_b™
[] ={"Êâ≥Áè≠Ëà¨È¢ÅÊñëÊê¨ÊùøÁâàÂäûÂçä‰º¥ÊâÆÊãåÁªäÁì£"};

87 
	gmb_b™g
[] ={"ÈÇ¶Â∏ÆÊ¢ÜÁªëÊ¶úËÜÄËöåÂÇçÊ£íË∞§Á£ÖÈïë"};

88 
	gmb_bao
[] ={"ÂåÖËãûËÉûË§íÈõπÂÆùÈ•±‰øùÂ†°Êä•Êä±Ë±πÈ≤çÊö¥ÁàÜÂâ•ËñÑÁÄë"};

89 
	gmb_bei
[] ={"ÂçëÊùØÊÇ≤Á¢ëÂåóË¥ùÁãàÂ§áËÉåÈí°ÂÄçË¢´ÊÉ´ÁÑôËæà"};

90 
	gmb_bí
[] ={"Â•îÊú¨ËãØÁ¨®Â§Ø"};

91 
	gmb_bíg
[] ={"Â¥©Áª∑Áî≠Ê≥µËø∏Ëπ¶"};

92 
	gmb_bi
[] ={"ÈÄºÈºªÊØîÂΩºÁ¨îÈÑôÂ∏ÅÂøÖÊØïÈó≠Â∫áÊØñÈôõÊØôÊïùÁóπËìñÂºäÁ¢ßËîΩÂ£ÅÈÅøËáÇ"};

93 
	gmb_bün
[] ={"ËæπÁºñÈû≠Ë¥¨ÊâÅÂçû‰æøÂèòÈÅçËæ®Ëæ©Ëæ´"};

94 
	gmb_büo
[] ={"ÂΩ™Ê†áËÜòË°®"};

95 
	gmb_bõ
[] ={"ÊÜãÈ≥ñÂà´Áò™"};

96 
	gmb_bö
[] ={"ÂÆæÂΩ¨ÊñåÊª®ÊøíÊëà"};

97 
	gmb_bög
[] ={"ÂÜ∞ÂÖµ‰∏ôÁßâÊüÑÁÇ≥È•ºÂπ∂ÁóÖ"};

98 
	gmb_bo
[] ={"Êã®Ê≥¢ÁéªÈíµËÑñËè†Êí≠‰ºØÈ©≥Â∏õÊ≥äÂãÉÈìÇËà∂ÂçöÊ∏§ÊêèÁÆîËÜäÂçú"};

99 
	gmb_bu
[] ={"Ë°•Âì∫Êçï‰∏çÂ∏ÉÊ≠•ÊÄñÈÉ®Âü†Á∞ø"};

100 
	gmb_ˇ
[] ={"Êì¶"};

101 
	gmb_ˇi
[] ={"ÁåúÊâçÊùêË¥¢Ë£ÅÈááÂΩ©Áù¨Ë∏©ËèúËî°"};

102 
	gmb_ˇn
[] ={"ÂèÇÈ§êÊÆãËöïÊÉ≠ÊÉ®ÁÅø"};

103 
	gmb_ˇng
[] ={"‰ªìÊ≤ßËãçËà±Ëóè"};

104 
	gmb_ˇo
[] ={"ÊìçÁ≥ôÊõπÊßΩËçâ"};

105 
	gmb_˚
[] ={"ÂÜå‰æßÂéïÊµãÁ≠ñ"};

106 
	gmb_˚ng
[] ={"Â±ÇËπ≠Êõæ"};

107 
	gmb_cha
[] ={"ÂèâÊèíÊü•Ëå¨Ëå∂ÊêΩÂØüÁ¢¥Â≤îËØßÂ∑ÆÂàπ"};

108 
	gmb_chai
[] ={"ÊãÜÊü¥Ë±∫"};

109 
	gmb_ch™
[] ={"Êé∫ÊêÄË∞óÈ¶ãÁº†Ëùâ‰∫ßÈì≤ÈòêÈ¢§"};

110 
	gmb_ch™g
[] ={"ÊòåÁåñËÇ†Â∞ùÂÅøÂ∏∏ÂéÇÂú∫ÊïûÁïÖÂÄ°Âî±"};

111 
	gmb_chao
[] ={"ÊäÑÈíûË∂ÖÂ∑¢ÊúùÂò≤ÊΩÆÂêµÁÇíÁª∞"};

112 
	gmb_che
[] ={"ËΩ¶ÊâØÂΩªÊé£Êí§Êæà"};

113 
	gmb_chí
[] ={"ÈÉ¥Â∞òËá£Âø±Ê≤âËæ∞ÈôàÊô®Ë°¨Ë∂Å"};

114 
	gmb_chíg
[] ={"Áß∞ÊíëÊàêÂëàÊâøËØöÂüé‰πòÊÉ©Á®ãÊæÑÊ©ôÈÄûÈ™ãÁß§"};

115 
	gmb_chi
[] ={"ÂêÉÁó¥ÂºõÊ±†È©∞ËøüÊåÅÂ∞∫‰æàÈΩøËÄªÊñ•Ëµ§ÁÇΩÁøÖ"};

116 
	gmb_ch⁄g
[] ={"ÂÖÖÂÜ≤Ëô´Â¥áÂÆ†"};

117 
	gmb_chou
[] ={"ÊäΩ‰ªáÁª∏Áï¥ÊÑÅÁ®†Á≠πÈÖ¨Ë∏å‰∏ëÁûÖËá≠"};

118 
	gmb_chu
[] ={"Âá∫ÂàùÈô§Âé®ÊªÅÈîÑÈõèÊ©±Ë∫áÁ°ÄÂÇ®Ê•öÂ§ÑÊêêËß¶ÁüóÁïú"};

119 
	gmb_chuai
[] ={"Êè£"};

120 
	gmb_chu™
[] ={"Â∑ùÁ©ø‰º†ËàπÊ§ΩÂñò‰∏≤"};

121 
	gmb_chu™g
[]={"ÈóØÁñÆÁ™óÂ∫äÂàõ"};

122 
	gmb_chui
[] ={"ÂêπÁÇäÂûÇÊç∂Èî§"};

123 
	gmb_chun
[] ={"Êò•Ê§øÁ∫ØÂîáÊ∑≥ÈÜáË†¢"};

124 
	gmb_chuo
[] ={"Êà≥"};

125 
	gmb_ci
[] ={"ÁñµËØçËå®Áì∑ÊÖàËæûÁ£ÅÈõåÊ≠§Ê¨°Âà∫Ëµê"};

126 
	gmb_c⁄g
[] ={"Âõ±‰ªéÂåÜËë±ËÅ™‰∏õ"};

127 
	gmb_cou
[] ={"Âáë"};

128 
	gmb_cu
[] ={"Á≤ó‰øÉÈÜãÁ∞á"};

129 
	gmb_cu™
[] ={"ËπøÁ™úÁØ°"};

130 
	gmb_cui
[] ={"Â¥îÂÇ¨ÊëßËÑÜÊ∑¨ÁòÅÁ≤πÁø†"};

131 
	gmb_cun
[] ={"ÊùëÂ≠òÂØ∏"};

132 
	gmb_cuo
[] ={"ÊêìÁ£ãÊíÆÊå´Êé™Èîô"};

133 
	gmb_da
[] ={"Êê≠ËææÁ≠îÁò©ÊâìÂ§ß"};

134 
	gmb_dai
[] ={"ÂëÜÊ≠πÂÇ£‰ª£Â∏¶ÂæÖÊÄ†ÊÆÜË¥∑Ë¢ãÈÄÆÊà¥"};

135 
	gmb_d™
[] ={"‰∏πÂçïÊãÖËÄΩÈÉ∏ËÉÜÊé∏Êó¶‰ΩÜËØûÂºπÊÉÆÊ∑°ËõãÊ∞Æ"};

136 
	gmb_d™g
[] ={"ÂΩìÊå°ÂÖöËç°Ê°£"};

137 
	gmb_dao
[] ={"ÂàÄÂØºÂ≤õÂÄíÊç£Á•∑ËπàÂà∞ÊÇºÁõóÈÅìÁ®ª"};

138 
	gmb_de
[] ={"ÂæóÂæ∑ÁöÑ"};

139 
	gmb_díg
[] ={"ÁÅØÁôªËπ¨Á≠âÈÇìÂá≥Áû™"};

140 
	gmb_di
[] ={"‰ΩéÂ†§Êª¥ÁãÑËø™ÊïåÊ∂§Á¨õÂ´°Â∫ïÊäµÂú∞ÂºüÂ∏ùÈÄíÁ¨¨ÁºîËíÇ"};

141 
	gmb_dün
[] ={"ÊéÇÊªáÈ¢†ÂÖ∏ÁÇπÁ¢òÁîµ‰ΩÉÁî∏Â∫óÂû´ÊÉ¶Ê∑ÄÂ•†ÊÆøÈùõ"};

142 
	gmb_düo
[] ={"ÂàÅÂèºÂáãÁ¢âÈõïÂêäÈíìÊéâ"};

143 
	gmb_dõ
[] ={"ÁàπË∑åËø≠Ë∞çÂè†Á¢üËù∂"};

144 
	gmb_dög
[] ={"‰∏ÅÂèÆÁõØÈíâÈ°∂ÈºéËÆ¢ÂÆöÈî≠"};

145 
	gmb_diu
[] ={"‰∏¢"};

146 
	gmb_d⁄g
[] ={"‰∏úÂÜ¨Ëë£ÊáÇÂä®ÂÜª‰æóÊÅ´Ê†ãÊ¥û"};

147 
	gmb_dou
[] ={"ÈÉΩÂÖúÊñóÊäñÈô°Ë±ÜÈÄóÁóò"};

148 
	gmb_du
[] ={"Áù£ÊØíËØªÁääÁã¨Â†µËµåÁùπÂ¶íÊùúËÇöÂ∫¶Ê∏°ÈïÄ"};

149 
	gmb_du™
[] ={"Á´ØÁü≠ÊÆµÊñ≠ÁºéÈîª"};

150 
	gmb_dui
[] ={"Â†ÜÈòüÂØπÂÖë"};

151 
	gmb_dun
[] ={"Âê®Êï¶Â¢©Ëπ≤ÁõæÈíùÈ°øÈÅÅ"};

152 
	gmb_duo
[] ={"Â§öÂìÜÂ§∫ÊéáÊúµÂûõË∫≤ÂâÅÂ†ïËàµÊÉ∞Ë∑∫"};

153 
	gmb_e
[] ={"ËÆπ‰øÑÂ®•Â≥®ÈπÖËõæÈ¢ùÂéÑÊâºÊÅ∂È•øÈÑÇÈÅè"};

154 
	gmb_í
[] ={"ÊÅ©"};

155 
	gmb_î
[] ={"ÂÑøËÄåÂ∞îËÄ≥Ê¥±È•µ‰∫åË¥∞"};

156 
	gmb_Á
[] ={"Âèë‰πè‰ºêÁΩöÈòÄÁ≠èÊ≥ïÁèê"};

157 
	gmb_Án
[] ={"Â∏ÜÁï™ÁøªËó©Âá°ÁüæÈííÁÉ¶Ê®äÁπÅÂèçËøîÁäØÊ≥õÈ•≠ËåÉË¥©"};

158 
	gmb_Áng
[] ={"ÊñπÂùäËä≥Èò≤Â¶®ÊàøËÇ™‰ªøËÆøÁ∫∫Êîæ"};

159 
	gmb_„i
[] ={"È£ûÈùûÂï°Ëè≤ËÇ•Âå™ËØΩÂê†Â∫üÊ≤∏ËÇ∫Ë¥π"};

160 
	gmb_„n
[] ={"ÂàÜÂê©Á∫∑Ëä¨Ê∞õÈÖöÂùüÊ±æÁÑöÁ≤â‰ªΩÂ•ãÂøøÊÑ§Á≤™"};

161 
	gmb_„ng
[] ={"‰∏∞È£éÊû´Â∞ÅÁñØÂ≥∞ÁÉΩÈîãËúÇÂÜØÈÄ¢ÁºùËÆΩÂá§Â•â"};

162 
	gmb_fo
[] ={"‰Ωõ"};

163 
	gmb_fou
[] ={"Âê¶"};

164 
	gmb_fu
[] ={"Â§´ËÇ§Â≠µÊï∑Âºó‰ºèÊâ∂ÊãÇÊúç‰øòÊ∞üÊµÆÊ∂™Á¨¶Ë¢±ÂπÖÁ¶èËæêÊäöÁî´Â∫úÊñß‰øØÈáúËæÖËÖëËÖêÁà∂ËÆ£‰ªòÂ¶áË¥üÈôÑÂíêÈòúÂ§çËµ¥ÂâØÂÇÖÂØåËµãÁºöËÖπË¶Ü"};

165 
	gmb_ga
[] ={"ÂòéÂô∂"};

166 
	gmb_gai
[] ={"ËØ•ÊîπÈíôÁõñÊ∫âÊ¶Ç"};

167 
	gmb_g™
[] ={"Âπ≤ÁîòÊùÜËÇùÊüëÁ´øÁßÜËµ∂Êï¢ÊÑüËµ£"};

168 
	gmb_g™g
[] ={"ÂÜàÂàöÂ≤óÁ∫≤ËÇõÁº∏Èí¢Ê∏ØÊù†"};

169 
	gmb_gao
[] ={"ÁöãÁæîÈ´òËÜèÁØôÁ≥ïÊêûÁ®øÈïêÂëä"};

170 
	gmb_ge
[] ={"ÊààÁñôÂì•ËÉ≥È∏ΩÂâ≤ÊêÅÊ≠åÈòÅÈù©Ê†ºËëõÈöî‰∏™ÂêÑÈì¨ÂíØ"};

171 
	gmb_gei
[] ={"Áªô"};

172 
	gmb_gí
[] ={"Ê†πË∑ü"};

173 
	gmb_gíg
[] ={"Êõ¥Â∫öËÄïÁæπÂüÇËÄøÊ¢ó"};

174 
	gmb_g⁄g
[] ={"Â∑•ÂºìÂÖ¨ÂäüÊîª‰æõÂÆ´ÊÅ≠Ë∫¨ÈæöÂ∑©Ê±ûÊã±ÂÖ±Ë¥°"};

175 
	gmb_gou
[] ={"ÂãæÊ≤üÈí©ÁãóËãüÊûÑË¥≠Âû¢Â§ü"};

176 
	gmb_gu
[] ={"‰º∞ÂíïÂßëÂ≠§Ê≤ΩËèáËæúÁÆçÂè§Ë∞∑ËÇ°È™®ËõäÈºìÂõ∫ÊïÖÈ°æÈõá"};

177 
	gmb_gua
[] ={"ÁìúÂàÆÂâêÂØ°ÊåÇË§Ç"};

178 
	gmb_guai
[] ={"‰πñÊãêÊÄ™"};

179 
	gmb_gu™
[] ={"ÂÖ≥ËßÇÂÆòÂÜ†Ê£∫È¶ÜÁÆ°Ë¥ØÊÉØÁÅåÁΩê"};

180 
	gmb_gu™g
[] ={"ÂÖâÂπøÈÄõ"};

181 
	gmb_gui
[] ={"ÂΩíÂú≠ÈæüËßÑÈó∫Á°ÖÁë∞ËΩ®ËØ°Áô∏È¨ºÂàΩÊüúË¥µÊ°ÇË∑™"};

182 
	gmb_gun
[] ={"ËæäÊªöÊ£ç"};

183 
	gmb_guo
[] ={"ÈÉ≠ÈîÖÂõΩÊûúË£πËøá"};

184 
	gmb_ha
[] ={"Ëõ§Âìà"};

185 
	gmb_hai
[] ={"Â≠©È™∏Êµ∑‰∫•È™áÂÆ≥Ê∞¶"};

186 
	gmb_h™
[] ={"ÈÖ£ÊÜ®Âê´ÈÇØÂáΩÊ∂µÂØíÈü©ÁΩïÂñäÊ±âÊ±óÊó±ÊÇçÊççÁÑäÊÜæÊíºÁø∞"};

187 
	gmb_h™g
[] ={"Êù≠Ëà™Ë°å"};

188 
	gmb_hao
[] ={"ÊØ´Ë±™ÂöéÂ£ïÂ•ΩÈÉùÂè∑Êµ©ËÄó"};

189 
	gmb_he
[] ={"ÂëµÂñùÁ¶æÂêà‰ΩïÂíåÊ≤≥ÈòÇÊ†∏Ëç∑Ê∂∏ÁõíËèèË¥∫Ë§êËµ´Èπ§"};

190 
	gmb_hei
[] ={"ÈªëÂòø"};

191 
	gmb_hí
[] ={"ÁóïÂæàÁã†ÊÅ®"};

192 
	gmb_híg
[] ={"‰∫®ÂìºÊÅíÊ®™Ë°°"};

193 
	gmb_h⁄g
[] ={"ËΩ∞ÂìÑÁÉòÂºòÁ∫¢ÂÆèÊ¥™ËôπÈ∏ø"};

194 
	gmb_hou
[] ={"‰æØÂñâÁå¥ÂêºÂêéÂéöÂÄô"};

195 
	gmb_hu
[] ={"‰πéÂëºÂøΩÂºßÁãêËÉ°Â£∂ÊπñËë´ÁëöÁ≥äËù¥ËôéÂî¨‰∫íÊà∑Êä§Ê≤™"};

196 
	gmb_hua
[] ={"Ëä±ÂçéÂìóÊªëÁåæÂåñÂàíÁîªËØù"};

197 
	gmb_huai
[] ={"ÊÄÄÂæäÊ∑ÆÊßêÂùè"};

198 
	gmb_hu™
[] ={"Ê¨¢ËøòÁéØÊ°ìÁºìÂπªÂÆ¶Âî§Êç¢Ê∂£ÊÇ£ÁÑïÁó™Ë±¢"};

199 
	gmb_hu™g
[] ={"ËçíÊÖåÁöáÂá∞ÈªÑÊÉ∂ÁÖåËùóÁ£∫Á∞ßÊÅçÊôÉË∞éÂπå"};

200 
	gmb_hui
[] ={"ÁÅ∞ÊÅ¢Êå•ËæâÂæΩÂõûËõîÊÇîÂçâÊ±á‰ºöËÆ≥ÁªòËØ≤ÁÉ©Ë¥øÊô¶ÁßΩÊÉ†ÊØÅÊÖß"};

201 
	gmb_hun
[] ={"ÊòèËç§Â©öÊµëÈ≠ÇÊ∑∑"};

202 
	gmb_huo
[] ={"Ë±ÅÊ¥ªÁÅ´‰ºôÊàñË¥ßËé∑Á•∏ÊÉëÈúç"};

203 
	gmb_ji
[] ={"ËÆ•ÂáªÈ••ÂúæÊú∫ËÇåÈ∏°ËøπÂß¨ÁßØÂü∫Áª©ÁºâÁï∏ÁÆïÁ®ΩÊøÄÂèäÂêâÊ±≤Á∫ßÂç≥ÊûÅÊÄ•ÁñæÊ£òÈõÜÂ´âËæëÁ±çÂá†Â∑±Êå§ËÑäËÆ°ËÆ∞‰ºéÁ∫™Â¶ìÂøåÊäÄÈôÖÂâÇÂ≠£Êó¢ÊµéÁªßÂØÇÂØÑÊÇ∏Á•≠ËìüÂÜÄËóâ"};

204 
	gmb_jü
[] ={"Âä†Â§π‰Ω≥Êû∑ÂÆ∂ÂòâËçöÈ¢äÁî≤Ë¥æÈíæ‰ª∑È©æÊû∂ÂÅáÂ´ÅÁ®ºÊåü"};

205 
	gmb_jün
[] ={"Â•∏Â∞ñÂùöÊ≠ºÈó¥ËÇ©Ëâ∞ÂÖºÁõëÁ¨∫ÁºÑÁÖéÊã£‰ø≠Êü¨ËåßÊç°ÂáèÂâ™Ê£ÄÁ°∑ÁÆÄÁ¢±ËßÅ‰ª∂Âª∫È•ØÂâëËçêË¥±ÂÅ•Ê∂ßËà∞Ê∏êÊ∫ÖË∑µÈâ¥ÈîÆÁÆ≠"};

206 
	gmb_jüng
[] ={"Ê±üÂßúÂ∞ÜÊµÜÂÉµÁñÜËÆ≤Â•ñÊ°®ËíãÂå†ÈôçÈÖ±"};

207 
	gmb_jüo
[] ={"‰∫§ÈÉäÂ®áÊµáÈ™ÑËÉ∂Ê§íÁÑ¶ËïâÁ§ÅËßíÁã°ÁªûÈ•∫Áü´ËÑöÈì∞ÊêÖÂâøÁº¥Âè´ËΩøËæÉÊïôÁ™ñÈÖµËßâÂöº"};

208 
	gmb_jõ
[] ={"Èò∂ÁöÜÊé•Áß∏Êè≠Ë°óËäÇÂä´Êù∞Ê¥ÅÁªìÊç∑Áù´Êà™Á´≠ÂßêËß£‰ªãÊàíËä•Â±äÁïåÁñ•ËØ´ÂÄü"};

209 
	gmb_jö
[] ={"Â∑æ‰ªäÊñ§ÈáëÊ¥•Á≠ãË•ü‰ªÖÁ¥ßË∞®Èî¶Â∞ΩÂä≤ËøëËøõÊôãÊµ∏ÁÉ¨Á¶ÅÈù≥"};

210 
	gmb_jög
[] ={"‰∫¨ÁªèËåéËçÜÊÉäÊô∂ÁùõÁ≤≥ÂÖ¢Á≤æÈ≤∏‰∫ïÈ¢àÊôØË≠¶ÂáÄÂæÑÁóâÁ´ûÁ´üÊï¨ÈùñÂ¢ÉÈùôÈïú"};

211 
	gmb_ji⁄g
[] ={"ÁÇØÁ™ò"};

212 
	gmb_jiu
[] ={"Á∫†Á©∂Êè™‰πù‰πÖÁÅ∏ÁéñÈü≠ÈÖíÊóßËáºÂíéÁñöÂé©ÊïëÂ∞±ËàÖ"};

213 
	gmb_ju
[] ={"Â±ÖÊãòÁãôÈ©πÁñΩÈû†Â±ÄÊ°îËèäÂíÄÊ≤Æ‰∏æÁü©Âè•Â∑®ÊãíÂÖ∑ÁÇ¨‰ø±ÂâßÊÉßÊçÆË∑ùÈîØËÅöË∏û"};

214 
	gmb_ju™
[] ={"Â®üÊçêÈπÉÂç∑ÂÄ¶Áª¢Áú∑"};

215 
	gmb_jue
[] ={"ÊíÖÂÜ≥ËØÄÊäâÁªùÂÄîÊéòÁàµÊî´"};

216 
	gmb_jun
[] ={"ÂÜõÂêõÂùáÈíßËèå‰øäÈÉ°Â≥ªÊµöÈ™èÁ´£"};

217 
	gmb_ka
[] ={"ÂíñÂñÄÂç°"};

218 
	gmb_kai
[] ={"ÂºÄÊè©ÂáØÊÖ®Ê•∑"};

219 
	gmb_k™
[] ={"ÊßõÂàäÂãòÂ†™ÂùéÁ†çÁúã"};

220 
	gmb_k™g
[] ={"Â∫∑ÊÖ∑Á≥†Êâõ‰∫¢ÊäóÁÇï"};

221 
	gmb_kao
[] ={"ËÄÉÊã∑ÁÉ§Èù†"};

222 
	gmb_ke
[] ={"Âù∑ËãõÊüØÁßëÊ£µÈ¢óÁ£ïÂ£≥Âí≥ÂèØÊ∏¥ÂÖãÂàªÂÆ¢ËØæ"};

223 
	gmb_kí
[] ={"ËÇØÂû¶ÊÅ≥ÂïÉ"};

224 
	gmb_kíg
[] ={"Âê≠Âùë"};

225 
	gmb_k⁄g
[] ={"Á©∫Â≠îÊÅêÊéß"};

226 
	gmb_kou
[] ={"Êä†Âè£Êâ£ÂØá"};

227 
	gmb_ku
[] ={"ÊûØÂì≠Á™üËã¶Â∫ìË£§ÈÖ∑"};

228 
	gmb_kua
[] ={"Â§∏ÂûÆÊåéËÉØË∑®"};

229 
	gmb_kuai
[] ={"ÂùóÂø´‰æ©Á≠∑"};

230 
	gmb_ku™
[] ={"ÂÆΩÊ¨æ"};

231 
	gmb_ku™g
[] ={"Âå°Á≠êÁãÇÂÜµÊó∑ÁüøÊ°ÜÁú∂"};

232 
	gmb_kui
[] ={"‰∫èÂ≤øÁõîÁ™•Â•éËëµÈ≠ÅÂÇÄÊÑßÊ∫ÉÈ¶à"};

233 
	gmb_kun
[] ={"Âù§ÊòÜÊçÜÂõ∞"};

234 
	gmb_kuo
[] ={"Êâ©Êã¨ÈòîÂªì"};

235 
	gmb_œ
[] ={"ÂûÉÊãâÂï¶ÂñáËÖäËú°Ëæ£"};

236 
	gmb_œi
[] ={"Êù•Ëé±Ëµñ"};

237 
	gmb_œn
[] ={"ÂÖ∞Êã¶Ê†èÂ©™ÈòëËìùË∞∞ÊæúÁØÆËßàÊèΩÁºÜÊáíÁÉÇÊª•"};

238 
	gmb_œng
[] ={"ÈÉéÁãºÂªäÁêÖÊ¶îÊúóÊµ™"};

239 
	gmb_œo
[] ={"ÊçûÂä≥Áâ¢ËÄÅ‰Ω¨Âß•Ê∂ùÁÉôÈÖ™"};

240 
	gmb_À
[] ={"‰πêÂãí‰∫Ü"};

241 
	gmb_Ài
[] ={"Èõ∑Èï≠ÂûíÁ£äËïæÂÑ°ËÇãÊ≥™Á±ªÁ¥ØÊìÇ"};

242 
	gmb_Àng
[] ={"Ê£±Ê•ûÂÜ∑"};

243 
	gmb_li
[] ={"ÂéòÊ¢®Áã∏Á¶ªËéâÁäÅÊºìÁíÉÈªéÁØ±Á§ºÊùéÈáåÂì©ÁêÜÈ≤§ÂäõÂéÜÂéâÁ´ãÂêè‰∏ΩÂà©Âä±Ê≤•‰æãÈö∂‰øêËçîÊ†óÁ†æÁ≤íÂÇàÁó¢"};

244 
	gmb_lün
[] ={"ËøûÂ∏òÊÄúÊ∂üËé≤ËÅîÂªâÈï∞ÊïõËÑ∏ÁªÉÁÇºÊÅãÈìæ"};

245 
	gmb_lüng
[] ={"‰ø©ËâØÂáâÊ¢ÅÁ≤ÆÁ≤±‰∏§‰∫ÆË∞ÖËæÜÊôæÈáè"};

246 
	gmb_lüo
[] ={"ÊΩ¶ËæΩÁñóËÅäÂÉöÂØ•ÂªñÊí©ÁáéÈï£ÊñôÊíÇ"};

247 
	gmb_lõ
[] ={"ÂàóÂä£ÁÉàÁåéË£Ç"};

248 
	gmb_lö
[] ={"ÈÇªÊûó‰∏¥Ê∑ãÁê≥ÈúñÁ£∑È≥ûÂáõÂêùËµÅÊãé"};

249 
	gmb_lög
[] ={"‰º∂ÁÅµÂ≤≠Áé≤ÂáåÈìÉÈôµÁæöËè±Èõ∂ÈæÑÈ¢Ü‰ª§Âè¶"};

250 
	gmb_liu
[] ={"Ê∫úÂàòÊµÅÁïôÁêâÁ°´È¶èÊ¶¥Áò§Êü≥ÂÖ≠"};

251 
	gmb_l⁄g
[] ={"ÈæôÂíôÁ¨ºËÅãÈöÜÁ™øÈôáÂûÑÊã¢"};

252 
	gmb_lou
[] ={"Â®ÑÊ•ºÊêÇÁØìÈôãÊºè"};

253 
	gmb_lu
[] ={"Èú≤Âç¢Â∫êËä¶ÁÇâÈ¢ÖÂç§ËôèÊé≥È≤ÅÈôÜÂΩïËµÇÈπøÁ¶ÑÁ¢åË∑ØÊàÆÊΩûÈ∫ì"};

254 
	gmb_lu™
[] ={"Â≠™Â≥¶ÊåõÊª¶Âçµ‰π±"};

255 
	gmb_lue
[] ={"Êé†Áï•"};

256 
	gmb_lun
[] ={"Êä°‰ªë‰º¶Ê≤¶Á∫∂ËΩÆËÆ∫"};

257 
	gmb_luo
[] ={"ÁΩóËêùÈÄªÈî£ÁÆ©È™°Ëû∫Ë£∏Ê¥õÁªúÈ™ÜËêΩ"};

258 
	gmb_lv
[] ={"Êª§È©¥Âêï‰æ£ÊóÖÈìùÂ±°ÁºïÂ±•ÂæãËôëÁéáÁªøÊ∞Ø"};

259 
	gmb_ma
[] ={"Â¶àÈ∫ªÈ©¨ÁéõÁ†ÅËöÇÈ™ÇÂêóÂòõ"};

260 
	gmb_mai
[] ={"Âüã‰π∞ËøàÈ∫¶ÂçñËÑâ"};

261 
	gmb_m™
[] ={"ËõÆÈ¶íÁûíÊª°ÊõºË∞©ÊÖ¢Êº´Ëîì"};

262 
	gmb_m™g
[] ={"ÂøôËäíÁõ≤Ëå´ËéΩÊ∞ì"};

263 
	gmb_mao
[] ={"Áå´ÊØõÁüõËåÖÈîöÂçØÈìÜËåÇÂÜíË¥∏Â∏ΩË≤å"};

264 
	gmb_me
[] ={"‰πà"};

265 
	gmb_mei
[] ={"Ê≤°ÊûöÁé´ÁúâÊ¢ÖÂ™íÁÖ§ÈÖ∂ÈúâÊØèÁæéÈïÅÂ¶πÊòßÂ™öÂØê"};

266 
	gmb_mí
[] ={"Èó®Èó∑‰ª¨"};

267 
	gmb_míg
[] ={"ËêåÁõüÊ™¨ÁåõËíôÈî∞Â≠üÊ¢¶"};

268 
	gmb_mi
[] ={"Âº•Ëø∑Ë∞úÈÜöÁ≥úÈù°Á±≥ÁúØÊ≥åËßÖÁßòÂØÜÂπÇËúú"};

269 
	gmb_mün
[] ={"Áú†ÁªµÊ£âÂÖçÂãâÂ®©ÂÜïÁºÖÈù¢"};

270 
	gmb_müo
[] ={"ËãóÊèèÁûÑÁßíÊ∏∫ËóêÂ¶ôÂ∫ô"};

271 
	gmb_mõ
[] ={"ÁÅ≠Ëîë"};

272 
	gmb_mö
[] ={"Ê∞ëÁöøÊäøÈóΩÊÇØÊïè"};

273 
	gmb_mög
[] ={"ÂêçÊòéÈ∏£Èì≠ËûüÂëΩ"};

274 
	gmb_miu
[] ={"Ë∞¨"};

275 
	gmb_mo
[] ={"Ë≤âÊë∏ÊëπÊ®°ËÜúÊë©Á£®ËòëÈ≠îÊäπÊú´Ê≤´ÈôåËé´ÂØûÊº†Â¢®Èªò"};

276 
	gmb_mou
[] ={"ÁâüË∞ãÊüê"};

277 
	gmb_mu
[] ={"ÊØç‰∫©Áâ°ÂßÜÊãáÊú®ÁõÆÁâßÂãüÂ¢ìÂπïÁù¶ÊÖïÊöÆÁ©Ü"};

278 
	gmb_«
[] ={"ÊãøÂì™ÈÇ£Á∫≥Â®úÈí†Âëê"};

279 
	gmb_«i
[] ={"‰πÉÂ•∂Ê∞ñÂ•àËÄê"};

280 
	gmb_«n
[] ={"Áî∑ÂçóÈöæ"};

281 
	gmb_«ng
[] ={"Âõä"};

282 
	gmb_«o
[] ={"Êå†ÊÅºËÑëÈóπÊ∑ñ"};

283 
	gmb_√
[] ={"Âë¢"};

284 
	gmb_√i
[] ={"ÂÜÖÈ¶Å"};

285 
	gmb_√n
[] ={"Â´©"};

286 
	gmb_√ng
[] ={"ËÉΩ"};

287 
	gmb_ni
[] ={"Â¶ÆÂ∞ºÊ≥•ÂÄ™Èúì‰Ω†ÊãüÈÄÜÂåøÊ∫∫ËÖª"};

288 
	gmb_nün
[] ={"ÊãàÂπ¥ÊçªÊíµÁ¢æÂøµËî´"};

289 
	gmb_nüng
[] ={"Â®òÈÖø"};

290 
	gmb_nüo
[] ={"È∏üÂ∞ø"};

291 
	gmb_nõ
[] ={"ÊçèÊ∂ÖËÅÇÂïÆÈïäÈïçÂ≠Ω"};

292 
	gmb_nö
[] ={"ÊÇ®"};

293 
	gmb_nög
[] ={"ÂÆÅÊãßÁãûÊü†ÂáùÊ≥û"};

294 
	gmb_niu
[] ={"ÁâõÊâ≠Á∫ΩÈíÆ"};

295 
	gmb_n⁄g
[] ={"ÂÜúÊµìËÑìÂºÑ"};

296 
	gmb_nu
[] ={"Â•¥Âä™ÊÄí"};

297 
	gmb_nu™
[] ={"Êöñ"};

298 
	gmb_nue
[] ={"ÁñüËôê"};

299 
	gmb_nuo
[] ={"Êå™ËØ∫Êá¶Á≥Ø"};

300 
	gmb_nv
[] ={"Â•≥"};

301 
	gmb_o
[] ={"Âì¶"};

302 
	gmb_ou
[] ={"Ê¨ßÊÆ¥È∏•ÂëïÂÅ∂ËóïÊ≤§"};

303 
	gmb_∑
[] ={"Ë∂¥Âï™Áà¨ËÄôÁê∂Â∏ïÊÄï"};

304 
	gmb_∑i
[] ={"ÊãçÂæòÊéíÁâåÊ¥æÊπÉ"};

305 
	gmb_∑n
[] ={"ÊΩòÊîÄÁõòÁ£êÂà§ÂèõÁõºÁïî"};

306 
	gmb_∑ng
[] ={"‰πìÂ∫ûÊóÅËÄ™ËÉñ"};

307 
	gmb_∑o
[] ={"ÊäõÂà®ÂíÜÁÇÆË¢çË∑ëÊ≥°"};

308 
	gmb_≥i
[] ={"Âë∏ËÉöÈô™ÂüπËµîË£¥Ê≤õ‰Ω©ÈÖç"};

309 
	gmb_≥n
[] ={"Âñ∑ÁõÜ"};

310 
	gmb_≥ng
[] ={"Êä®Á†∞ÁÉπÊúãÂΩ≠Ê£öÁ°ºËì¨ÈπèÊæéÁØ∑ËÜ®ÊçßÁ¢∞"};

311 
	gmb_pi
[] ={"ËæüÊâπÂùØÊä´Á†íÂäàÈúπÁöÆÊØóÁñ≤Âï§ÁêµËÑæÂåπÁóûÂ±ÅÂÉªË≠¨"};

312 
	gmb_pün
[] ={"ÁâáÂÅèÁØáÈ™ó"};

313 
	gmb_püo
[] ={"ÊºÇÈ£òÁì¢Á•®"};

314 
	gmb_põ
[] ={"ÊíáÁû•"};

315 
	gmb_pö
[] ={"ÊãºË¥´È¢ëÂìÅËÅò"};

316 
	gmb_pög
[] ={"‰πíÂπ≥ËØÑÂá≠Âù™ËãπÂ±èÁì∂Ëêç"};

317 
	gmb_po
[] ={"Âù°Ê≥ºÈ¢áÂ©ÜËø´Á†¥Á≤ïÈ≠Ñ"};

318 
	gmb_pou
[] ={"Ââñ"};

319 
	gmb_pu
[] ={"ËÑØ‰ªÜÊâëÈì∫ËéÜËè©Ëë°Ëí≤Êú¥ÂúÉÂüîÊµ¶ÊôÆË∞±Êõù"};

320 
	gmb_qi
[] ={"‰∏ÉÊ≤èÂ¶ªÊüíÂáÑÊ†ñÊàöÊúüÊ¨∫ÊºÜÁ•ÅÈΩêÂÖ∂Â•áÊ≠ßÁ•àËÑêÂ¥éÁï¶È™ëÊ£ãÊóó‰πû‰ºÅÂ≤ÇÂêØËµ∑Ê∞îËÆ´ËøÑÂºÉÊ±ΩÊ≥£Â•ëÁ†åÂô®"};

321 
	gmb_qü
[] ={"ÊéêÊÅ∞Ê¥Ω"};

322 
	gmb_qün
[] ={"ÂçÉ‰ªüÊâ¶ËøÅÈíéÁâµÈìÖË∞¶Á≠æÂâçÈí±Èí≥‰πæÊΩúÈªîÊµÖÈÅ£Ë∞¥Ê¨†Â†ëÂµåÊ≠â"};

323 
	gmb_qüng
[] ={"ÂëõÁæåÊû™ËÖîÂº∫Â¢ôËî∑Êä¢"};

324 
	gmb_qüo
[] ={"ÊÇÑÊï≤ÈîπÊ©á‰πî‰æ®Ê°•ÁûßÂ∑ß‰øèÂ≥≠Á™çÁøòÊí¨Èûò"};

325 
	gmb_qõ
[] ={"ÂàáËåÑ‰∏îÊÄØÁ™É"};

326 
	gmb_qö
[] ={"‰∫≤‰æµÈí¶ËäπÁß¶Áê¥Á¶ΩÂã§ÊìíÂØùÊ≤Å"};

327 
	gmb_qög
[] ={"ÈùíÊ∞¢ËΩªÂÄæÂçøÊ∏ÖÊÉÖÊô¥Ê∞∞ÊìéÈ°∑ËØ∑Â∫Ü"};

328 
	gmb_qi⁄g
[] ={"Á©∑Áêº"};

329 
	gmb_qiu
[] ={"‰∏òÈÇ±ÁßãÂõöÊ±ÇÊ≥ÖÈÖãÁêÉ"};

330 
	gmb_qu
[] ={"Âå∫Êõ≤È©±Â±àËõÜË∫ØË∂ãÊ∏†ÂèñÂ®∂ÈæãÂéªË∂£"};

331 
	gmb_qu™
[] ={"ÂúàÂÖ®ÊùÉÊ≥âÊã≥ÁóäÈÜõÈ¢ßÁä¨ÂäùÂà∏"};

332 
	gmb_que
[] ={"ÁÇîÁº∫Áò∏Âç¥ÈõÄÁ°ÆÈπäÊ¶∑"};

333 
	gmb_qun
[] ={"Ë£ôÁæ§"};

334 
	gmb_øn
[] ={"ÁÑ∂ÁáÉÂÜâÊüì"};

335 
	gmb_øng
[] ={"Áì§Âö∑Â£§ÊîòËÆ©"};

336 
	gmb_øo
[] ={"È•∂Êâ∞Áªï"};

337 
	gmb_ª
[] ={"ÊÉπÁÉ≠"};

338 
	gmb_ªn
[] ={"‰∫∫‰ªÅÂ£¨ÂøçÂàÉËÆ§‰ªªÁ∫´Â¶äÈüß"};

339 
	gmb_ªng
[] ={"Êâî‰ªç"};

340 
	gmb_ri
[] ={"Êó•"};

341 
	gmb_r⁄g
[] ={"ÊàéÁªíËå∏Ëç£ÂÆπÊ∫∂ËìâÁÜîËûçÂÜó"};

342 
	gmb_rou
[] ={"ÊüîÊèâËÇâ"};

343 
	gmb_ru
[] ={"Â¶ÇËåπÂÑíÂ≠∫Ë†ïÊ±ù‰π≥Ëæ±ÂÖ•Ë§•"};

344 
	gmb_ru™
[] ={"ÈòÆËΩØ"};

345 
	gmb_rui
[] ={"ËïäÈîêÁëû"};

346 
	gmb_run
[] ={"Èó∞Ê∂¶"};

347 
	gmb_ruo
[] ={"Ëã•Âº±"};

348 
	gmb_ß
[] ={"ÊííÊ¥íËê®"};

349 
	gmb_ßi
[] ={"Â°ûËÖÆÈ≥ÉËµõ"};

350 
	gmb_ßn
[] ={"‰∏âÂèÅ‰ºûÊï£"};

351 
	gmb_ßng
[] ={"Ê°ëÂóì‰∏ß"};

352 
	gmb_ßo
[] ={"ÊêîÈ™öÊâ´Â´Ç"};

353 
	gmb_£
[] ={"Ëâ≤Ê∂©Áëü"};

354 
	gmb_£n
[] ={"Ê£Æ"};

355 
	gmb_£ng
[] ={"ÂÉß"};

356 
	gmb_sha
[] ={"ÊùÄÊ≤ôÁ∫±Á†ÇËééÂÇªÂï•ÁÖûÂé¶"};

357 
	gmb_shai
[] ={"Á≠õÊôí"};

358 
	gmb_sh™
[] ={"Â±±Âà†ÊùâË°´ÁèäÁÖΩÈó™ÈôïÊ±ïËã´ÊâáÂñÑÁºÆÊìÖËÜ≥Ëµ°Ê†Ö"};

359 
	gmb_sh™g
[] ={"‰º§ÂïÜÂ¢íË£≥ÊôåËµè‰∏äÂ∞ö"};

360 
	gmb_shao
[] ={"ÊçéÊ¢¢ÁÉßÁ®çÂã∫ËäçÈü∂Â∞ëÈÇµÁªçÂì®"};

361 
	gmb_she
[] ={"Â•¢ËµäËàåËõáËàçËÆæÁ§æÂ∞ÑÊ∂âËµ¶ÊÖëÊëÑ"};

362 
	gmb_shí
[] ={"Áî≥‰º∏Ë∫´ÂëªÁªÖÂ®†Á†∑Ê∑±Á•ûÊ≤àÂÆ°Â©∂ËÇæÁîöÊ∏óÊÖé‰ªÄ"};

363 
	gmb_shíg
[] ={"ÂçáÁîüÂ£∞Áâ≤ËÉúÁî•Áª≥ÁúÅÂú£ÁõõÂâ©"};

364 
	gmb_shi
[] ={"ÂåôÂ∞∏Â§±Â∏àËô±ËØóÊñΩÁãÆÊπøÂçÅÁü≥Êó∂ËØÜÂÆûÊãæËöÄÈ£üÂè≤Áü¢‰ΩøÂßãÈ©∂Â±éÂ£´Ê∞è‰∏ñ‰ªïÂ∏ÇÁ§∫Âºè‰∫ã‰æçÂäøËßÜËØïÈ•∞ÂÆ§ÊÅÉÊã≠ÊòØÊüøÈÄÇÈÄùÈáäÂóúË™ìÂô¨‰ºº"};

365 
	gmb_shou
[] ={"Êî∂ÊâãÂÆàÈ¶ñÂØøÂèóÂÖΩÂîÆÊéàÁò¶"};

366 
	gmb_shu
[] ={"‰π¶ÊäíÂèîÊû¢ÊÆäÊ¢≥Ê∑ëÁñèËàíËæìËî¨Â≠∞ËµéÁÜüÊöëÈªçÁΩ≤Èº†ËúÄËñØÊõôÊúØÊàçÊùüËø∞Ê†ëÁ´ñÊÅïÂ∫∂Êï∞Â¢ÖÊº±Â±û"};

367 
	gmb_shua
[] ={"Âà∑ËÄç"};

368 
	gmb_shuai
[] ={"Ë°∞ÊëîÁî©Â∏Ö"};

369 
	gmb_shu™
[] ={"Êã¥Ê†ì"};

370 
	gmb_shu™g
[]={"ÂèåÈúúÁàΩ"};

371 
	gmb_shui
[] ={"Ë∞ÅÊ∞¥Á®éÁù°"};

372 
	gmb_shun
[] ={"ÂêÆÈ°∫ËàúÁû¨"};

373 
	gmb_shuo
[] ={"ËØ¥ÁÉÅÊúîÁ°ï"};

374 
	gmb_si
[] ={"‰∏ùÂè∏ÁßÅÊÄùÊñØÂò∂ÊíïÊ≠ªÂ∑≥ÂõõÂØ∫‰º∫È•≤Âó£ËÇÜ"};

375 
	gmb_s⁄g
[] ={"ÊùæÊÄÇËÄ∏ËÆºÂÆãËØµÈÄÅÈ¢Ç"};

376 
	gmb_sou
[] ={"ÂóΩÊêúËâòÊìû"};

377 
	gmb_su
[] ={"ËãèÈÖ•‰øóËØâËÇÉÁ¥†ÈÄüÁ≤üÂ°ëÊ∫ØÂÉ≥"};

378 
	gmb_su™
[] ={"ÈÖ∏ËíúÁÆó"};

379 
	gmb_sui
[] ={"ËôΩÁª•ÈöãÈöèÈ´ìÂ≤ÅÁ•üÈÅÇÁ¢éÈößÁ©ó"};

380 
	gmb_sun
[] ={"Â≠ôÊçüÁ¨ã"};

381 
	gmb_suo
[] ={"ÂîÜÊ¢≠ËìëÁº©ÊâÄÁ¥¢ÁêêÈîÅ"};

382 
	gmb_è
[] ={"Â•π‰ªñÂÆÉÂ°åÂ°îÁç≠ÊåûË∏èËπã"};

383 
	gmb_èi
[] ={"ËÉéÂè∞Êä¨ËãîÂ§™Ê±∞ÊÄÅÊ≥∞ÈÖû"};

384 
	gmb_èn
[] ={"ÂùçË¥™ÊëäÊª©Áò´ÂùõË∞àÁó∞Ë∞≠ÊΩ≠Ê™ÄÂù¶Ë¢íÊØØÂèπÁÇ≠Êé¢Á¢≥"};

385 
	gmb_èng
[] ={"Ê±§ÂîêÂ†ÇÊ£†Â°òÊê™ËÜõÁ≥ñÂÄòÊ∑åË∫∫ÁÉ´Ë∂ü"};

386 
	gmb_èo
[] ={"Ê∂õÁª¶ÊéèÊªîÈÄÉÊ°ÉÈô∂Ê∑òËêÑËÆ®Â•ó"};

387 
	gmb_ã
[] ={"Áâπ"};

388 
	gmb_ãng
[] ={"ÁñºËÖæË™äËó§"};

389 
	gmb_ti
[] ={"ÂâîÊ¢ØÈîëË∏¢ÂïºÊèêÈ¢òËπÑ‰ΩìÂ±âÂâÉÊ∂ïÊÉïÊõøÂöè"};

390 
	gmb_tün
[] ={"Â§©Ê∑ªÁî∞ÊÅ¨ÁîúÂ°´ËÖÜËàî"};

391 
	gmb_tüo
[] ={"Ë∞ÉÊåëÊù°Ëø¢Áú∫Ë∑≥"};

392 
	gmb_tõ
[] ={"Ë¥¥ÈìÅÂ∏ñ"};

393 
	gmb_tög
[] ={"ÂéÖÊ±ÄÂê¨ÁÉÉÂª∑‰∫≠Â∫≠ÂÅúÊå∫Ëâá"};

394 
	gmb_t⁄g
[] ={"ÈÄöÂêåÂΩ§Ê°êÈìúÁ´•ÈÖÆÁû≥ÁªüÊçÖÊ°∂Á≠íÁóõ"};

395 
	gmb_tou
[] ={"ÂÅ∑Â§¥ÊäïÈÄè"};

396 
	gmb_tu
[] ={"Âá∏ÁßÉÁ™ÅÂõæÂæíÊ∂ÇÈÄîÂ±†ÂúüÂêêÂÖî"};

397 
	gmb_tu™
[] ={"ÊπçÂõ¢"};

398 
	gmb_tui
[] ={"Êé®È¢ìËÖøÈÄÄËúïË§™"};

399 
	gmb_tun
[] ={"Âõ§ÂêûÂ±ØËáÄ"};

400 
	gmb_tuo
[] ={"ÊâòÊãñËÑ±È©ÆÈôÄÈ©ºÈ∏µÂ¶•Ê§≠ÊãìÂîæ"};

401 
	gmb_wa
[] ={"ÂìáÂ®ÉÊåñÊ¥ºËõôÁì¶Ë¢ú"};

402 
	gmb_wai
[] ={"Ê≠™Â§ñ"};

403 
	gmb_w™
[] ={"ÂºØÊπæË±å‰∏∏ÂÆåÁé©È°ΩÁÉ∑ÂÆõÊåΩÊôöÂ©âÊÉãÁöñÁ¢ó‰∏áËÖï"};

404 
	gmb_w™g
[] ={"Ê±™‰∫°ÁéãÁΩëÂæÄÊûâÂ¶ÑÂøòÊó∫Êúõ"};

405 
	gmb_wei
[] ={"Âç±Â®ÅÂæÆÂ∑ç‰∏∫Èü¶Âõ¥ËøùÊ°ÖÂîØÊÉüÁª¥ÊΩç‰ºü‰º™Â∞æÁ∫¨ËãáÂßîËêéÂç´Êú™‰ΩçÂë≥ÁïèËÉÉÂ∞âË∞ìÂñÇÊ∏≠ËîöÊÖ∞È≠è"};

406 
	gmb_wí
[] ={"Ê∏©ÁòüÊñáÁ∫πÈóªËöäÂêªÁ¥äÁ®≥ÈóÆ"};

407 
	gmb_wíg
[] ={"ÁøÅÂó°ÁìÆ"};

408 
	gmb_wo
[] ={"ÊåùÊ∂°Á™ùËúóÊàëÊ≤ÉÂçßÊè°Êñ°"};

409 
	gmb_wu
[] ={"‰πåÊ±°ÂëúÂ∑´Â±ãËØ¨Èí®Êó†ÊØãÂê¥ÂêæËäúÊ¢ß‰∫îÂçà‰ºçÂùûÊ≠¶‰æÆÊçÇËàûÂãøÂä°ÊàäÁâ©ËØØÊÇüÊô§Èõæ"};

410 
	gmb_xi
[] ={"Â§ïÊ±êË•øÂê∏Â∏åÊòîÊûêÁüΩÊÅØÁâ∫ÊÇâÊÉúÁÉØÁ°íÊô∞ÁäÄÁ®ÄÊ∫™Èî°ÁÜÑÁÜôÂòªËÜù‰π†Â∏≠Ë¢≠Â™≥Ê™ÑÊ¥óÂñúÊàèÁ≥ªÁªÜÈöô"};

411 
	gmb_xü
[] ={"ËôæÁûéÂå£‰æ†Â≥°Áã≠ÊöáËæñÈúû‰∏ãÂêìÂ§è"};

412 
	gmb_xün
[] ={"Èì£‰ªôÂÖàÁ∫§ÊéÄÈî®È≤úÈó≤Âº¶Ë¥§Âí∏Ê∂éËà∑Ë°îÂ´åÊòæÈô©ÂéøÁé∞Á∫øÈôêÂÆ™Èô∑È¶ÖÁæ°ÁåÆËÖ∫"};

413 
	gmb_xüng
[] ={"‰π°Áõ∏È¶ôÂé¢ÊπòÁÆ±Ë•ÑÈï∂ËØ¶Á••Áøî‰∫´ÂìçÊÉ≥ÂêëÂ∑∑È°πË±°ÂÉèÊ©°"};

414 
	gmb_xüo
[] ={"ÂÆµÊ∂àËêßÁ°ùÈîÄÈúÑÂö£Ê∑ÜÂ∞èÊôìÂ≠ùËÇñÂìÆÊïàÊ†°Á¨ëÂï∏"};

415 
	gmb_xõ
[] ={"‰∫õÊ•îÊ≠áËùéÂçèÈÇ™ËÉÅÊñúË∞êÊê∫ÈûãÂÜôÊ≥ÑÊ≥ªÂç∏Â±ëÊ¢∞Ë∞¢ÊáàËüπ"};

416 
	gmb_xö
[] ={"ÂøÉÂøªËäØËæõÊ¨£ÈîåÊñ∞Ëñ™‰ø°Ë°Ö"};

417 
	gmb_xög
[] ={"ÂÖ¥ÊòüÊÉ∫Áå©ËÖ•ÂàëÈÇ¢ÂΩ¢ÂûãÈÜíÊùèÂßìÂπ∏ÊÄß"};

418 
	gmb_xi⁄g
[] ={"Âá∂ÂÖÑÂåàÊ±πËÉ∏ÈõÑÁÜä"};

419 
	gmb_xiu
[] ={"ÂÆø‰ºë‰øÆÁæûÊúΩÁßÄÁª£Ë¢ñÈîàÂóÖ"};

420 
	gmb_xu
[] ={"ÊàåÈ°ªËôöÂòòÈúÄÂ¢üÂæêËÆ∏Êó≠Â∫èÂèôÊÅ§Áª™Áª≠ÈÖóÂ©øÁµÆËìÑÂêÅ"};

421 
	gmb_xu™
[] ={"ËΩ©ÂÆ£ÂñßÁéÑÊÇ¨ÊóãÈÄâÁô£ÁªöÁú©"};

422 
	gmb_xue
[] ={"ÂâäÈù¥ËñõÁ©¥Â≠¶Èõ™Ë°Ä"};

423 
	gmb_xun
[] ={"ÂããÁÜèÂØªÂ∑°Êó¨È©ØËØ¢Âæ™ËÆ≠ËÆØÊ±õËøÖÈÄäÊÆâ"};

424 
	gmb_ya
[] ={"‰∏´ÂéãÂëÄÊäºÈ∏¶È∏≠ÁâôËäΩËöúÂ¥ñÊ∂ØË°ôÂìëÈõÖ‰∫öËÆ∂"};

425 
	gmb_y™
[] ={"ÂíΩÁÉüÊ∑πÁÑâÈòâÂª∂‰∏•Ë®ÄÂ≤©Ê≤øÁÇéÁ†îÁõêÈòéËúíÈ¢úÂ•ÑË°çÊé©ÁúºÊºîÂéåÂΩ¶Á†öÂîÅÂÆ¥Ëâ≥È™åË∞öÂ†∞ÁÑ∞ÈõÅÁáï"};

426 
	gmb_y™g
[] ={"Â§ÆÊÆÉÁßßÈ∏ØÊâ¨ÁæäÈò≥Êù®‰ΩØÁñ°Ê¥ã‰ª∞ÂÖªÊ∞ßÁóíÊ†∑Êºæ"};

427 
	gmb_yao
[] ={"‰æ•Â¶ñËÖ∞ÈÇÄÂ∞ßÂßöÁ™ëË∞£ÊëáÈÅ•Áë∂Âí¨ËàÄËçØË¶ÅËÄÄÈí•"};

428 
	gmb_ye
[] ={"Ê§∞ÂôéÁà∑ËÄ∂‰πüÂÜ∂Èáé‰∏öÂè∂Êõ≥È°µÂ§úÊéñÊ∂≤ËÖã"};

429 
	gmb_yi
[] ={"‰∏Ä‰ºäË°£Âåª‰æùÈì±Â£πÊèñ‰ª™Â§∑Ê≤ÇÂÆúÂß®ËÉ∞ÁßªÈÅóÈ¢êÁñëÂΩù‰πôÂ∑≤‰ª•Áü£ËöÅÂÄöÊ§Ö‰πâ‰∫øÂøÜËâ∫ËÆÆ‰∫¶Â±πÂºÇÂΩπÊäëËØëÈÇëÊòìÁªéËØ£Áñ´ÁõäË∞äÁøåÈÄ∏ÊÑèÊ∫¢ËÇÑË£îÊØÖÁøºËáÜ"};

430 
	gmb_yö
[] ={"Âõ†Èò¥ÂßªËåµËç´Èü≥ÊÆ∑ÂêüÂØÖÊ∑´Èì∂Â∞πÂºïÈ•ÆÈöêÂç∞"};

431 
	gmb_yög
[] ={"Â∫îËã±Â©¥Áº®Ê®±Èπ∞ËøéÁõàËçßËéπËê§Ëê•ËùáËµ¢È¢ñÂΩ±Êò†Á°¨"};

432 
	gmb_yo
[] ={"Âìü"};

433 
	gmb_y⁄g
[] ={"‰Ω£Êã•ÁóàÂ∫∏ÈõçËáÉÊ∞∏ÂíèÊ≥≥ÂãáÊ∂åÊÅøËõπË∏äÁî®"};

434 
	gmb_you
[] ={"‰ºòÂøßÂπΩÊÇ†Â∞§Áî±ÁäπÈÇÆÊ≤πÈìÄÊ∏∏ÂèãÊúâÈÖâÂèàÂè≥Âπº‰ΩëËØ±Èáâ"};

435 
	gmb_yu
[] ={"ËøÇÊ∑§Ê∏ù‰∫é‰∫à‰ΩôÁõÇÈ±º‰øûÂ®±Ê∏îÈöÖÊÑâÈÄæÊÑöÊ¶ÜËôûËàÜ‰∏éÂÆáÂ±øÁæΩÈõ®Á¶πËØ≠ÁéâÈ©≠ËäãËÇ≤ÈÉÅÁã±Â≥™Êµ¥È¢ÑÂüüÊ¨≤ÂñªÂØìÂæ°Ë£ïÈÅáÊÑàË™âË±´"};

436 
	gmb_yu™
[] ={"ÂÜ§È∏≥Ê∏äÂÖÉÂëòÂõ≠Âû£ÂéüÂúÜË¢ÅÊè¥ÁºòÊ∫êÁåøËæïËøúËãëÊÄ®Èô¢ÊÑø"};

437 
	gmb_yue
[] ={"Êõ∞Á∫¶ÊúàÂ≤≥ÊÇ¶ÈòÖË∑ÉÁ≤§Ë∂ä"};

438 
	gmb_yun
[] ={"‰∫ëÂåÄÈÉßËÄòÂÖÅÈô®Â≠ïËøêÊôïÈÖùÈüµËï¥"};

439 
	gmb_za
[] ={"ÂåùÊùÇÁ†∏Âíã"};

440 
	gmb_zai
[] ={"ÁÅæÂìâÊ†ΩÂÆ∞ËΩΩÂÜçÂú®‰ªî"};

441 
	gmb_z™
[] ={"Âí±ÊîíÊöÇËµû"};

442 
	gmb_z™g
[] ={"ËµÉËÑèËë¨"};

443 
	gmb_zao
[] ={"ÈÅ≠Á≥üÂáøÊó©Êû£Ëö§Êæ°ËóªÁÅ∂ÁöÇÈÄ†Âô™Áá•Ë∫Å"};

444 
	gmb_ze
[] ={"ÂàôÊã©Ê≥ΩË¥£"};

445 
	gmb_zei
[] ={"Ë¥º"};

446 
	gmb_zí
[] ={"ÊÄé"};

447 
	gmb_zíg
[] ={"Â¢ûÊÜéËµ†"};

448 
	gmb_zha
[] ={"Âñ≥Ê∏£ÊâéÊú≠ËΩßÈó∏Èì°Áú®‰πçËØàÁÇ∏Ê¶®Êüû"};

449 
	gmb_zhai
[] ={"ÊñãÊëòÂÆÖÁøüÁ™ÑÂÄ∫ÂØ®"};

450 
	gmb_zh™
[] ={"Ê≤æÊØ°Á≤òË©πÁûªÊñ©Â±ïÁõèÂ¥≠ËæóÂç†ÊàòÊ†àÁ´ôÁªΩÊπõËò∏"};

451 
	gmb_zh™g
[] ={"ÈïøÂº†Á´†ÂΩ∞Êº≥Ê®üÊ∂®Êéå‰∏à‰ªóÂ∏êÊùñËÉÄË¥¶ÈöúÁò¥"};

452 
	gmb_zhao
[] ={"ÊãõÊò≠ÊâæÊ≤ºÂè¨ÂÖÜËµµÁÖßÁΩ©ËÇáÁà™"};

453 
	gmb_zhe
[] ={"ÈÅÆÊäòÂì≤Ëõ∞ËæôËÄÖÈîóËøôÊµôËîóÁùÄ"};

454 
	gmb_zhí
[] ={"Ë¥ûÈíà‰æ¶ÁèçÁúüÁ†ßÊñüÁîÑËáªËØäÊûïÁñπÈòµÊåØÈïáÈúáÂ∏ß"};

455 
	gmb_zhíg
[] ={"‰∫âÂæÅÊÄîÊå£Áã∞ÁùÅËí∏ÊãØÊï¥Ê≠£ËØÅÈÉëÊîøÁóá"};

456 
	gmb_zhi
[] ={"‰πãÊîØÊ±ÅËäùÂê±ÊûùÁü•ÁªáËÇ¢ËÑÇËúòÊâß‰æÑÁõ¥ÂÄºËÅåÊ§çÊÆñÊ≠¢Âè™Êó®ÂùÄÁ∫∏ÊåáË∂æËá≥ÂøóÂà∂Â∏úÊ≤ªÁÇôË¥®Â≥ôÊåöÁß©Ëá¥Êé∑ÁóîÁ™íÊô∫ÊªûÁ®öÁΩÆ"};

457 
	gmb_zh⁄g
[] ={"‰∏≠Âø†ÁªàÁõÖÈíüË°∑ËÇøÁßç‰ª≤‰ºóÈáç"};

458 
	gmb_zhou
[] ={"Â∑ûËàüËØåÂë®Ê¥≤Á≤•ËΩ¥ËÇòÂ∏öÂííÂÆôÊòºÁö±È™§"};

459 
	gmb_zhu
[] ={"Êú±ËØõÊ†™Áè†ËØ∏Áå™ËõõÁ´πÁÉõÈÄê‰∏ªÊãÑÁÖÆÂò±Áû©‰ΩèÂä©Ê≥®Ë¥ÆÈ©ªÊü±Á•ùËëóËõÄÁ≠ëÈì∏"};

460 
	gmb_zhua
[] ={"Êäì"};

461 
	gmb_zhuai
[] ={"ÊãΩ"};

462 
	gmb_zhu™
[] ={"‰∏ìÁ†ñËΩ¨Êí∞ÁØÜ"};

463 
	gmb_zhu™g
[]={"Â¶ÜÂ∫ÑÊ°©Ë£ÖÂ£ÆÁä∂Âπ¢Êíû"};

464 
	gmb_zhui
[] ={"ËøΩÊ§éÈî•Âù†ÁºÄËµò"};

465 
	gmb_zhun
[] ={"Ë∞ÜÂáÜ"};

466 
	gmb_zhuo
[] ={"ÂçìÊãôÊçâÊ°åÁÅºËåÅÊµäÈÖåÂïÑÁê¢"};

467 
	gmb_zi
[] ={"Â≠úÂÖπÂí®ÂßøËµÑÊ∑ÑÊªãÁ±ΩÂ≠êÁ¥´ÊªìÂ≠óËá™Ê∏ç"};

468 
	gmb_z⁄g
[] ={"ÂÆóÁªºÊ£ïË∏™È¨ÉÊÄªÁ∫µ"};

469 
	gmb_zou
[] ={"ÈÇπËµ∞Â•èÊèç"};

470 
	gmb_zu
[] ={"ÁßüË∂≥ÂçíÊóèËØÖÈòªÁªÑÁ•ñ"};

471 
	gmb_zu™
[] ={"ËµöÁ∫ÇÈíª"};

472 
	gmb_zui
[] ={"Âò¥ÊúÄÁΩ™ÈÜâ"};

473 
	gmb_zun
[] ={"Â∞äÈÅµ"};

474 
	gmb_zuo
[] ={"Êò®Â∑¶‰Ωê‰ΩúÂùêÂ∫ßÂÅö"};

475 
	gmb_•a˚
[] ={""};

477 
ödex
 
	gödex_a
[]={

478 {"", 
mb_a
},

479 {"i", 
mb_ai
},

480 {"n", 
mb_™
},

481 {"ng", 
mb_™g
},

482 {"o", 
mb_ao
}};

484 
ödex
 
	gödex_b
[]={

485 {"a", 
mb_ba
},

486 {"ai", 
mb_bai
},

487 {"™", 
mb_b™
},

488 {"™g", 
mb_b™g
},

489 {"ao", 
mb_bao
},

490 {"ei", 
mb_bei
},

491 {"í", 
mb_bí
},

492 {"íg", 
mb_bíg
},

493 {"i", 
mb_bi
},

494 {"ün", 
mb_bün
},

495 {"üo", 
mb_büo
},

496 {"õ", 
mb_bõ
},

497 {"ö", 
mb_bö
},

498 {"ög", 
mb_bög
},

499 {"o", 
mb_bo
},

500 {"u", 
mb_bu
}};

502 
ödex
 
	gödex_c
[]={

503 {"a", 
mb_ˇ
},

504 {"ai", 
mb_ˇi
},

505 {"™", 
mb_ˇn
},

506 {"™g", 
mb_ˇng
},

507 {"ao", 
mb_ˇo
},

508 {"e", 
mb_˚
},

509 {"íg", 
mb_˚ng
},

510 {"ha", 
mb_cha
},

511 {"hai", 
mb_chai
},

512 {"h™", 
mb_ch™
},

513 {"h™g", 
mb_ch™g
},

514 {"hao", 
mb_chao
},

515 {"he", 
mb_che
},

516 {"hí", 
mb_chí
},

517 {"híg", 
mb_chíg
},

518 {"hi", 
mb_chi
},

519 {"h⁄g", 
mb_ch⁄g
},

520 {"hou", 
mb_chou
},

521 {"hu", 
mb_chu
},

522 {"huai", 
mb_chuai
},

523 {"hu™", 
mb_chu™
},

524 {"hu™g", 
mb_chu™g
},

525 {"hui", 
mb_chui
},

526 {"hun", 
mb_chun
},

527 {"huo", 
mb_chuo
},

528 {"i", 
mb_ci
},

529 {"⁄g", 
mb_c⁄g
},

530 {"ou", 
mb_cou
},

531 {"u", 
mb_cu
},

532 {"u™", 
mb_cu™
},

533 {"ui", 
mb_cui
},

534 {"un", 
mb_cun
},

535 {"uo", 
mb_cuo
}};

537 
ödex
 
	gödex_d
[]={

538 {"a", 
mb_da
},

539 {"ai", 
mb_dai
},

540 {"™", 
mb_d™
},

541 {"™g", 
mb_d™g
},

542 {"ao", 
mb_dao
},

543 {"e", 
mb_de
},

544 {"íg", 
mb_díg
},

545 {"i", 
mb_di
},

546 {"ün", 
mb_dün
},

547 {"üo", 
mb_düo
},

548 {"õ", 
mb_dõ
},

549 {"ög", 
mb_dög
},

550 {"iu", 
mb_diu
},

551 {"⁄g", 
mb_d⁄g
},

552 {"ou", 
mb_dou
},

553 {"u", 
mb_du
},

554 {"u™", 
mb_du™
},

555 {"ui", 
mb_dui
},

556 {"un", 
mb_dun
},

557 {"uo", 
mb_duo
}};

559 
ödex
 
	gödex_e
[]={

560 {"", 
mb_e
},

561 {"n", 
mb_í
},

562 {"r", 
mb_î
}};

564 
ödex
 
	gödex_f
[]={

565 {"a", 
mb_Á
},

566 {"™", 
mb_Án
},

567 {"™g", 
mb_Áng
},

568 {"ei", 
mb_„i
},

569 {"í", 
mb_„n
},

570 {"íg", 
mb_„ng
},

571 {"o", 
mb_fo
},

572 {"ou", 
mb_fou
},

573 {"u", 
mb_fu
}};

575 
ödex
 
	gödex_g
[]={

576 {"a", 
mb_ga
},

577 {"ai", 
mb_gai
},

578 {"™", 
mb_g™
},

579 {"™g", 
mb_g™g
},

580 {"ao", 
mb_gao
},

581 {"e", 
mb_ge
},

582 {"ei", 
mb_gei
},

583 {"í", 
mb_g™
},

584 {"íg", 
mb_gíg
},

585 {"⁄g", 
mb_g⁄g
},

586 {"ou", 
mb_gou
},

587 {"u", 
mb_gu
},

588 {"ua", 
mb_gua
},

589 {"uai", 
mb_guai
},

590 {"u™", 
mb_gu™
},

591 {"u™g", 
mb_gu™g
},

592 {"ui", 
mb_gui
},

593 {"un", 
mb_gun
},

594 {"uo", 
mb_guo
}};

596 
ödex
 
	gödex_h
[]={

597 {"a", 
mb_ha
},

598 {"ai", 
mb_hai
},

599 {"™", 
mb_h™
},

600 {"™g", 
mb_h™g
},

601 {"ao", 
mb_hao
},

602 {"e", 
mb_he
},

603 {"ei", 
mb_hei
},

604 {"í", 
mb_hí
},

605 {"íg", 
mb_híg
},

606 {"⁄g", 
mb_h⁄g
},

607 {"ou", 
mb_hou
},

608 {"u", 
mb_hu
},

609 {"ua", 
mb_hua
},

610 {"uai", 
mb_huai
},

611 {"u™", 
mb_hu™
},

612 {"u™g", 
mb_hu™g
},

613 {"ui", 
mb_hui
},

614 {"un", 
mb_hun
},

615 {"uo", 
mb_huo
}};

617 
ödex
 
	gödex_i
[]= {

618 {"", 
mb_•a˚
}

621 
ödex
 
	gödex_j
[]={

622 {"i", 
mb_ji
},

623 {"ü", 
mb_jü
},

624 {"ün", 
mb_jün
},

625 {"üng", 
mb_jüng
},

626 {"üo", 
mb_jüo
},

627 {"õ", 
mb_jõ
},

628 {"ö", 
mb_jö
},

629 {"ög", 
mb_jög
},

630 {"i⁄g", 
mb_ji⁄g
},

631 {"iu", 
mb_jiu
},

632 {"u", 
mb_ju
},

633 {"u™", 
mb_ju™
},

634 {"ue", 
mb_jue
},

635 {"un", 
mb_jun
}

638 
ödex
 
	gödex_k
[]={

639 {"a", 
mb_ka
},

640 {"ai", 
mb_kai
},

641 {"™", 
mb_k™
},

642 {"™g", 
mb_k™g
},

643 {"ao", 
mb_kao
},

644 {"e", 
mb_ke
},

645 {"í", 
mb_kí
},

646 {"íg", 
mb_kíg
},

647 {"⁄g", 
mb_k⁄g
},

648 {"ou", 
mb_kou
},

649 {"u", 
mb_ku
},

650 {"ua", 
mb_kua
},

651 {"uai", 
mb_kuai
},

652 {"u™", 
mb_ku™
},

653 {"u™g", 
mb_ku™g
},

654 {"ui", 
mb_kui
},

655 {"un", 
mb_kun
},

656 {"uo", 
mb_kuo
}};

658 
ödex
 
	gödex_l
[]={

659 {"a", 
mb_œ
},

660 {"ai", 
mb_œi
},

661 {"™", 
mb_œn
},

662 {"™g", 
mb_œng
},

663 {"ao", 
mb_œo
},

664 {"e", 
mb_À
},

665 {"ei", 
mb_Ài
},

666 {"íg", 
mb_Àng
},

667 {"i", 
mb_li
},

668 {"ün", 
mb_lün
},

669 {"üng", 
mb_lüng
},

670 {"üo", 
mb_lüo
},

671 {"õ", 
mb_lõ
},

672 {"ö", 
mb_lö
},

673 {"ög", 
mb_lög
},

674 {"iu", 
mb_liu
},

675 {"⁄g", 
mb_l⁄g
},

676 {"ou", 
mb_lou
},

677 {"u", 
mb_lu
},

678 {"u™", 
mb_lu™
},

679 {"ue", 
mb_lue
},

680 {"un", 
mb_lun
},

681 {"uo", 
mb_luo
},

682 {"v", 
mb_lv
}};

684 
ödex
 
	gödex_m
[]={

685 {"a", 
mb_ma
},

686 {"ai", 
mb_mai
},

687 {"™", 
mb_m™
},

688 {"™g", 
mb_m™g
},

689 {"ao", 
mb_mao
},

690 {"e", 
mb_me
},

691 {"ei", 
mb_mei
},

692 {"í", 
mb_mí
},

693 {"íg", 
mb_míg
},

694 {"i", 
mb_mi
},

695 {"ün", 
mb_mün
},

696 {"üo", 
mb_müo
},

697 {"õ", 
mb_mõ
},

698 {"ö", 
mb_mö
},

699 {"ög", 
mb_mög
},

700 {"iu", 
mb_miu
},

701 {"o", 
mb_mo
},

702 {"ou", 
mb_mou
},

703 {"u", 
mb_mu
}};

705 
ödex
 
	gödex_n
[]={

706 {"a", 
mb_«
},

707 {"ai", 
mb_«i
},

708 {"™", 
mb_«n
},

709 {"™g", 
mb_«ng
},

710 {"ao", 
mb_«o
},

711 {"e", 
mb_√
},

712 {"ei", 
mb_√i
},

713 {"í", 
mb_√n
},

714 {"íg", 
mb_√ng
},

715 {"i", 
mb_ni
},

716 {"ün", 
mb_nün
},

717 {"üng", 
mb_nüng
},

718 {"üo", 
mb_nüo
},

719 {"õ", 
mb_nõ
},

720 {"ö", 
mb_nö
},

721 {"ög", 
mb_nög
},

722 {"iu", 
mb_niu
},

723 {"⁄g", 
mb_n⁄g
},

724 {"u", 
mb_nu
},

725 {"u™", 
mb_nu™
},

726 {"ue", 
mb_nue
},

727 {"uo", 
mb_nuo
},

728 {"v", 
mb_nv
}};

730 
ödex
 
	gödex_o
[]={

731 {"", 
mb_o
},

732 {"u", 
mb_ou
}};

734 
ödex
 
	gödex_p
[]={

735 {"a", 
mb_∑
},

736 {"ai", 
mb_∑i
},

737 {"™", 
mb_∑n
},

738 {"™g", 
mb_∑ng
},

739 {"ao", 
mb_∑o
},

740 {"ei", 
mb_≥i
},

741 {"í", 
mb_≥n
},

742 {"íg", 
mb_≥ng
},

743 {"i", 
mb_pi
},

744 {"ün", 
mb_pün
},

745 {"üo", 
mb_püo
},

746 {"õ", 
mb_põ
},

747 {"ö", 
mb_pö
},

748 {"ög", 
mb_pög
},

749 {"o", 
mb_po
},

750 {"ou", 
mb_pou
},

751 {"u", 
mb_pu
}};

753 
ödex
 
	gödex_q
[]={

754 {"i", 
mb_qi
},

755 {"ü", 
mb_qü
},

756 {"ün", 
mb_qün
},

757 {"üng", 
mb_qüng
},

758 {"üo", 
mb_qüo
},

759 {"õ", 
mb_qõ
},

760 {"ö", 
mb_qö
},

761 {"ög", 
mb_qög
},

762 {"i⁄g", 
mb_qi⁄g
},

763 {"iu", 
mb_qiu
},

764 {"u", 
mb_qu
},

765 {"u™", 
mb_qu™
},

766 {"ue", 
mb_que
},

767 {"un", 
mb_qun
}};

769 
ödex
 
	gödex_r
[]={

770 {"™", 
mb_øn
},

771 {"™g", 
mb_øng
},

772 {"ao", 
mb_øo
},

773 {"e", 
mb_ª
},

774 {"í", 
mb_ªn
},

775 {"íg", 
mb_ªng
},

776 {"i", 
mb_ri
},

777 {"⁄g", 
mb_r⁄g
},

778 {"ou", 
mb_rou
},

779 {"u", 
mb_ru
},

780 {"u™", 
mb_ru™
},

781 {"ui", 
mb_rui
},

782 {"un", 
mb_run
},

783 {"uo", 
mb_ruo
}};

785 
ödex
 
	gödex_s
[]={

786 {"a", 
mb_ß
},

787 {"ai", 
mb_ßi
},

788 {"™", 
mb_ßn
},

789 {"™g", 
mb_ßng
},

790 {"ao", 
mb_ßo
},

791 {"e", 
mb_£
},

792 {"í", 
mb_£n
},

793 {"íg", 
mb_£ng
},

794 {"ha", 
mb_sha
},

795 {"hai", 
mb_shai
},

796 {"h™", 
mb_sh™
},

797 {"h™g ", 
mb_sh™g
},

798 {"hao", 
mb_shao
},

799 {"he", 
mb_she
},

800 {"hí", 
mb_shí
},

801 {"híg", 
mb_shíg
},

802 {"hi", 
mb_shi
},

803 {"hou", 
mb_shou
},

804 {"hu", 
mb_shu
},

805 {"hua", 
mb_shua
},

806 {"huai", 
mb_shuai
},

807 {"hu™", 
mb_shu™
},

808 {"hu™g", 
mb_shu™g
},

809 {"hui", 
mb_shui
},

810 {"hun", 
mb_shun
},

811 {"huo", 
mb_shuo
},

812 {"i", 
mb_si
},

813 {"⁄g", 
mb_s⁄g
},

814 {"ou", 
mb_sou
},

815 {"u", 
mb_su
},

816 {"u™", 
mb_su™
},

817 {"ui", 
mb_sui
},

818 {"un", 
mb_sun
},

819 {"uo", 
mb_suo
}};

821 
ödex
 
	gödex_t
[]={

822 {"a", 
mb_è
},

823 {"ai", 
mb_èi
},

824 {"™", 
mb_èn
},

825 {"™g", 
mb_èng
},

826 {"ao", 
mb_èo
},

827 {"e", 
mb_ã
},

828 {"íg", 
mb_ãng
},

829 {"i", 
mb_ti
},

830 {"ün", 
mb_tün
},

831 {"üo", 
mb_tüo
},

832 {"õ", 
mb_tõ
},

833 {"ög", 
mb_tög
},

834 {"⁄g", 
mb_t⁄g
},

835 {"ou", 
mb_tou
},

836 {"u", 
mb_tu
},

837 {"u™", 
mb_tu™
},

838 {"ui", 
mb_tui
},

839 {"un", 
mb_tun
},

840 {"uo", 
mb_tuo
}};

842 
ödex
 
	gödex_u
[]={

843 {"", 
mb_•a˚
}};

845 
ödex
 
	gödex_v
[]={

846 {"", 
mb_•a˚
}};

848 
ödex
 
	gödex_w
[]={

849 {"a", 
mb_wa
},

850 {"ai", 
mb_wai
},

851 {"™", 
mb_w™
},

852 {"™g", 
mb_w™g
},

853 {"ei", 
mb_wei
},

854 {"í", 
mb_wí
},

855 {"íg", 
mb_wíg
},

856 {"o", 
mb_wo
},

857 {"u", 
mb_wu
}};

859 
ödex
 
	gödex_x
[]={

860 {"i", 
mb_xi
},

861 {"ü", 
mb_xü
},

862 {"ün", 
mb_xün
},

863 {"üng", 
mb_xüng
},

864 {"üo", 
mb_xüo
},

865 {"õ", 
mb_xõ
},

866 {"ö", 
mb_xö
},

867 {"ög", 
mb_xög
},

868 {"i⁄g", 
mb_xi⁄g
},

869 {"iu", 
mb_xiu
},

870 {"u", 
mb_xu
},

871 {"u™", 
mb_xu™
},

872 {"ue", 
mb_xue
},

873 {"un", 
mb_xun
}};

875 
ödex
 
	gödex_y
[]={

876 {"a", 
mb_ya
},

877 {"™", 
mb_y™
},

878 {"™g", 
mb_y™g
},

879 {"ao", 
mb_yao
},

880 {"e", 
mb_ye
},

881 {"i", 
mb_yi
},

882 {"ö", 
mb_yö
},

883 {"ög", 
mb_yög
},

884 {"o", 
mb_yo
},

885 {"⁄g", 
mb_y⁄g
},

886 {"ou", 
mb_you
},

887 {"u", 
mb_yu
},

888 {"u™", 
mb_yu™
},

889 {"ue", 
mb_yue
},

890 {"un", 
mb_yun
}};

892 
ödex
 
	gödex_z
[]={

893 {"a", 
mb_za
},

894 {"ai", 
mb_zai
},

895 {"™", 
mb_z™
},

896 {"™g", 
mb_z™g
},

897 {"ao", 
mb_zao
},

898 {"e", 
mb_ze
},

899 {"ei", 
mb_zei
},

900 {"í", 
mb_zí
},

901 {"íg", 
mb_zíg
},

902 {"ha", 
mb_zha
},

903 {"hai", 
mb_zhai
},

904 {"h™", 
mb_zh™
},

905 {"h™g", 
mb_zh™g
},

906 {"hao", 
mb_zhao
},

907 {"he", 
mb_zhe
},

908 {"hí", 
mb_zhí
},

909 {"híg", 
mb_zhíg
},

910 {"hi", 
mb_zhi
},

911 {"h⁄g", 
mb_zh⁄g
},

912 {"hou", 
mb_zhou
},

913 {"hu", 
mb_zhu
},

914 {"hua", 
mb_zhua
},

915 {"huai", 
mb_zhuai
},

916 {"hu™", 
mb_zhu™
},

917 {"hu™g", 
mb_zhu™g
},

918 {"hui", 
mb_zhui
},

919 {"hun", 
mb_zhun
},

920 {"huo", 
mb_zhuo
},

921 {"i", 
mb_zi
},

922 {"⁄g", 
mb_z⁄g
},

923 {"ou", 
mb_zou
},

924 {"u", 
mb_zu
},

925 {"u™", 
mb_zu™
},

926 {"ui", 
mb_zui
},

927 {"un", 
mb_zun
},

928 {"uo", 
mb_zuo
}};

930 
ödex
 
	gödex_íd
[]={

931 {"", 
mb_•a˚
}};

933 
ödex
 * 
	gödex_hódÀâî
[]={

934 
ödex_a
,

935 
ödex_b
,

936 
ödex_c
,

937 
ödex_d
,

938 
ödex_e
,

939 
ödex_f
,

940 
ödex_g
,

941 
ödex_h
,

942 
ödex_i
,

943 
ödex_j
,

944 
ödex_k
,

945 
ödex_l
,

946 
ödex_m
,

947 
ödex_n
,

948 
ödex_o
,

949 
ödex_p
,

950 
ödex_q
,

951 
ödex_r
,

952 
ödex_s
,

953 
ödex_t
,

954 
ödex_u
,

955 
ödex_v
,

956 
ödex_w
,

957 
ödex_x
,

958 
ödex_y
,

959 
ödex_z
,

960 
ödex_íd


963 
	g•ñlMagic
[2 * 
TOTALPINYIN
] = {

1005 
TCHAR
 
	ggb2312
[
TOTALWORDS
] = {

	@input/py_engin.c

9 
	~<°dio.h
>

10 
	~<°rög.h
>

11 
	~<loˇÀ.h
>

12 
	~<as£π.h
>

13 
	~<°dlib.h
>

14 
	~<uni°d.h
>

15 
	~<sys/°©.h
>

16 
	~<sys/ty≥s.h
>

17 
	~<f˙é.h
>

18 
	~<î∫o.h
>

20 
	~"c⁄fig.h
"

21 
	~"comm⁄.h
"

22 
	~"py_di˘.h
"

24 #ifde‡
CONFIG_DEBUG


25 
	göput
[10];

33 * 
	$py_ime
(*
°r
)

35 
i
;

36 
pos
, 
num
;

37 
Àngth
;

39 *
•ñl
;

40 
ödex
 *
˙
;

42 if(*
°r
 == '\0')

43  
NULL
;

45 
Àngth
 = 
	`°æí
(
°r
);

46 
i
 = 0; i < 
Àngth
; i++) {

47 i‡(!((
°r
[
i
] >= 'a' && str[i] <= 'z') || (str[i] >= 'A' && str[i] <= 'Z')))

48  
NULL
;

54 
i
 = 0; i < 
Àngth
; i++)

55 
°r
[
i
] |= 0x20;

57 i‡(*
°r
 == 'i' || *str == 'u' || *str == 'v')

58  
NULL
;

60 
	`¥ötf
("°∏Àngth: %d\n", 
Àngth
);

62 
˙
 = 
ödex_hódÀâî
[
°r
[0] - 'a'];

63 
num
 = 
ödex_num
[
°r
[0] - 'a'];

65 
pos
 = 0;

66 
pos
 < 
num
) {

67 
•ñl
 = 
˙
->
py
;

69 
i
 = 0; i < 
Àngth
; i++){

70 if(
°r
[
i
 + 1] !
•ñl
[i]) {

75 if(
i
 =
Àngth
 || i + 1 ==Üength) {

76  (*
˙
).
mb
;

79 
pos
++;

80 
˙
++;

83  
NULL
;

84 
	}
}

87 
	$maö
()

89 
c
;

90 
±r
[4];

91 *
ªsu…
;

94 
	`¥ötf
("\ninput: ");

95 
	`sˇnf
("%s", 
öput
);

97 
ªsu…
 = 
	`py_ime
(
öput
);

98 i‡(
ªsu…
 !
NULL
) {

99 
i
;

100 
i
 = 0; i < 
	`°æí
(
ªsu…
); i+=3) {

101 
	`mem˝y
(
±r
, 
ªsu…
 + 
i
, 3);

102 
±r
[3] = '\0';

103 
	`¥ötf
("%†", 
±r
);

109 
	`mem£t
(
öput
, 0, 10);

110 (
c
 = 
	`gëch¨
()Ë!'\n' && c !
EOF
);

114 
	}
}

	@misc/common.c

8 
	~<°dio.h
>

9 
	~<°dlib.h
>

10 
	~<°rög.h
>

11 
	~<°d¨g.h
>

12 
	~<as£π.h
>

13 
	~<m©h.h
>

14 
	~<uni°d.h
>

15 
	~<f˙é.h
>

17 
	~"îr‹.h
"

18 
	~"comm⁄.h
"

19 
	~"ªÆ_time.h
"

20 
	~"keybﬂrd.h
"

21 
	~"öput.h
"

24 
	$gë_™ykey
()

26 
	`˛ór_ˇche
();

27  
	`gë_keycode
();

28 
	}
}

31 
	$u¨t_¥öt
(c⁄° *
f‹m©
, ...)

33 
ªt
;

34 
FILE
 *
dev
;

36 
dev
 = 
	`f›í
(
DEBUG_DEV
, "w");

37 i‡(
dev
 =
NULL
)

38  -
EFILE_OPEN_FAIL
;

40 
va_li°
 
¨g_±r
;

41 
	`va_°¨t
(
¨g_±r
, 
f‹m©
);

42 
ªt
 = 
	`vÂrötf
(
dev
, 
f‹m©
, 
¨g_±r
);

43 i‡(
ªt
 < 0)

44  
FAIL
;

46 
	`va_íd
(
¨g_±r
);

48  
SUCCESS
;

49 
	}
}

52 
	$debug_msg
(c⁄° *
f‹m©
, ...)

54 #ifde‡
CONFIG_DEBUG


55 
ªt
;

56 
va_li°
 
¨g_±r
;

58 
	`va_°¨t
(
¨g_±r
, 
f‹m©
);

59 
ªt
 = 
	`v¥ötf
(
f‹m©
, 
¨g_±r
);

60 i‡(
ªt
 < 0)

61  
FAIL
;

63 
	`va_íd
(
¨g_±r
);

70  
SUCCESS
;

71 
	}
}

77 
	$íd_covî_sh‹t
(
uch¨
 *
di°
, uch¨ *
§c
)

79 
size
;

80 
uch¨
 *
pos
;

81 
uch¨
 
tmp
[10];

83 
pos
 = 
§c
;

85 
size
 = ();

86 
pos
 +(
size
 - 1);

88 
i
;

89 
i
 = 0; i < 
size
; i++)

90 
tmp
[
i
] = *
pos
--;

92 
	`mem˝y
(
di°
, 
tmp
, 
size
);

94  
SUCCESS
;

95 
	}
}

97 
	$íd_covî_öt
(
uch¨
 *
di°
, uch¨ *
§c
)

99 
size
;

100 
uch¨
 *
pos
;

101 
uch¨
 
tmp
[10];

102 
pos
 = 
§c
;

104 
size
 = ();

105 
pos
 +(
size
 - 1);

107 
i
;

108 
i
 = 0; i < 
size
; i++)

109 
tmp
[
i
] = *
pos
--;

111 
	`mem˝y
(
di°
, 
tmp
, 
size
);

113  
SUCCESS
;

114 
	}
}

116 
	$íd_covî_l⁄g
(
uch¨
 *
di°
, uch¨ *
§c
)

118 
size
;

119 
uch¨
 *
pos
;

120 
uch¨
 
tmp
[10];

122 
pos
 = 
§c
;

124 
size
 = ();

125 
pos
 +(
size
 - 1);

127 
i
;

128 
i
 = 0; i < 
size
; i++)

129 
tmp
[
i
] = *
pos
--;

131 
	`mem˝y
(
di°
, 
tmp
, 
size
);

133  
SUCCESS
;

134 
	}
}

136 
	$íd_covî_Œ⁄g
(
uch¨
 *
di°
, uch¨ *
§c
)

138 
size
;

139 
uch¨
 *
pos
;

140 
uch¨
 
tmp
[10];

142 
pos
 = 
§c
;

144 
size
 = ();

145 
pos
 +(
size
 - 1);

147 
i
;

148 
i
 = 0; i < 
size
; i++)

149 
tmp
[
i
] = *
pos
--;

151 
	`mem˝y
(
di°
, 
tmp
, 
size
);

153  
SUCCESS
;

154 
	}
}

159 
	$dec_to_bcd
(
uöt
 *
dec_d©a
, 
uch¨
 *
bcd_d©a
)

161 
uöt
 
dec
, 
tmp
;

162 
uch¨
 
bcd
;

164 
tmp
 = 0;

165 
dec
 = *
dec_d©a
;

168 i‡(
dec
 >= 100)

169  
FAIL
;

172 
tmp
 = 
dec
 / 10;

173 
bcd
 = 
tmp
;

174 
bcd
 = bcd << 4;

177 
tmp
 = 
dec
 % 10;

178 
bcd
 +
tmp
;

180 *
bcd_d©a
 = 
bcd
;

182  
SUCCESS
;

183 
	}
}

188 
	$bcd_to_dec
(
uch¨
 *
bcd_d©a
, 
uöt
 *
dec_d©a
)

190 
uöt
 
dec
;

191 
uch¨
 
bcd
, 
tmp
;

193 
tmp
 = 0;

194 
bcd
 = *
bcd_d©a
;

197 i‡(
bcd
 > 0x99)

198  
FAIL
;

201 
tmp
 = 
bcd
 >> 4;

202 
dec
 = 
tmp
;

203 
dec
 = dec * 10;

206 
tmp
 = 
bcd
 & 0xF;

207 
dec
 +
tmp
;

209 *
dec_d©a
 = 
dec
;

211  
SUCCESS
;

212 
	}
}

214 
	$bcd_to_°r
(c⁄° 
uch¨
 *
bcd
, *
°r
, 
Àn
)

216 
uöt
 
i
;

217 
uch¨
 
uc
;

219 
i
 = 0; i < 
Àn
; i++) {

220 
uc
 = 
bcd
[
i
] & 0x0F;

221 
°r
[
i
 * 2 + 1] = 
uc
 + 0x30;

222 
uc
 = (
bcd
[
i
] & 0xF0) / 16;

223 
°r
[
i
 * 2] = 
uc
 + 0x30;

226 
°r
[2 * 
i
] = '\0';

228  
SUCCESS
;

229 
	}
}

238 
uöt
 
	$gªg_to_julün
(
y
, 
m
, 
d
)

240 
uöt
 
c
, 
ya
, 
j
;

242 i‡(
m
 > 2) {

243 
m
 = m - 3;

245 
m
 = m + 9;

246 
y
 = y - 1;

249 
c
 = 
y
 / 100;

250 
ya
 = 
y
 - 100 * 
c
;

251 
j
 = (146097 * 
c
Ë/ 4 + (1461 * 
ya
Ë/ 4 + (153 * 
m
 + 2Ë/ 5 + 
d
 + 1721119;

253  
j
;

254 
	}
}

265 
	$julün_to_gªg
(
uöt
 
jd
, uöà*
yór
, uöà*
m⁄
, uöà*
day
)

267 
uöt
 
j
 = 
jd
;

268 
uöt
 
y
, 
m
, 
d
;

270 
j
 = j - 1721119 ;

271 
y
 = (4 * 
j
 - 1) / 146097 ;

272 
j
 = 4 * j - 1 - 146097 * 
y
 ;

273 
d
 = 
j
 / 4 ;

274 
j
 = (4 * 
d
 + 3) / 1461 ;

275 
d
 = 4 * d + 3 - 1461 * 
j
 ;

276 
d
 = (d + 4) / 4 ;

277 
m
 = (5 * 
d
 - 3) / 153 ;

278 
d
 = 5 * d - 3 - 153 * 
m
 ;

279 
d
 = (d + 5) / 5 ;

280 
y
 = 100 * y + 
j
 ;

282 i‡(
m
 < 10)

283 
m
 = m + 3;

285 
m
 = m - 9;

286 
y
 = y + 1;

289 *
yór
 = 
y
;

290 *
m⁄
 = 
m
;

291 *
day
 = 
d
;

292 
	}
}

302 
	$gªg_to_bcd
(
bcd_d©e
 *
d©e
, 
uöt
 
yór
, uöà
m⁄
, uöà
day
)

304 
uöt
 
t›_yór
;

305 
uöt
 
bŸ_yór
;

307 
t›_yór
 = 
yór
 / 100;

308 
bŸ_yór
 = 
yór
 - 
t›_yór
 * 100;

310 
	`dec_to_bcd
(&
t›_yór
, &
d©e
->
yór
[0]);

311 
	`dec_to_bcd
(&
bŸ_yór
, &
d©e
->
yór
[1]);

313 
	`dec_to_bcd
(&
m⁄
, &
d©e
->mon);

314 
	`dec_to_bcd
(&
day
, &
d©e
->day);

316  
SUCCESS
;

317 
	}
}

327 
	$bcd_to_gªg
(
bcd_d©e
 *
d©e
, 
uöt
 *
yór
, uöà*
m⁄
, uöà*
day
)

329 
uöt
 
t›_yór
 = 0;

330 
uöt
 
bŸ_yór
 = 0;

332 
	`bcd_to_dec
(&
d©e
->
yór
[0], &
t›_yór
);

333 
	`bcd_to_dec
(&
d©e
->
yór
[1], &
bŸ_yór
);

335 
	`bcd_to_dec
(&
d©e
->
m⁄
, mon);

336 
	`bcd_to_dec
(&
d©e
->
day
, day);

338 *
yór
 = 
t›_yór
 * 100 + 
bŸ_yór
;

340  
SUCCESS
;

341 
	}
}

348 
	$add_bcd_d©e
(
bcd_d©e
 *
d©e
, 
uöt
 
days
)

350 
uöt
 
yór
;

351 
uöt
 
m⁄
;

352 
uöt
 
day
;

354 
	`bcd_to_gªg
(
d©e
, &
yór
, &
m⁄
, &
day
);

357 
uöt
 
jd
;

358 
jd
 = 
	`gªg_to_julün
(
yór
, 
m⁄
, 
day
);

359 
jd
 +
days
;

362 
	`julün_to_gªg
(
jd
, &
yór
, &
m⁄
, &
day
);

364 
	`gªg_to_bcd
(
d©e
, 
yór
, 
m⁄
, 
day
);

366  
SUCCESS
;

367 
	}
}

374 
	$sub_bcd_d©e
(
bcd_d©e
 *
d©e
, 
uöt
 
days
)

376 
uöt
 
yór
;

377 
uöt
 
m⁄
;

378 
uöt
 
day
;

380 
	`bcd_to_gªg
(
d©e
, &
yór
, &
m⁄
, &
day
);

383 
uöt
 
jd
;

384 
jd
 = 
	`gªg_to_julün
(
yór
, 
m⁄
, 
day
);

385 
jd
 -
days
;

388 
	`julün_to_gªg
(
jd
, &
yór
, &
m⁄
, &
day
);

390 
	`gªg_to_bcd
(
d©e
, 
yór
, 
m⁄
, 
day
);

392  
SUCCESS
;

393 
	}
}

398 
	$¸ót_¸c16_èbÀ
(
ush‹t
 *
¸c16_èbÀ
)

400 
i
, 
j
;

401 
ush‹t
 
¸c16
;

403 
i
 = 0; i < 256; i++) {

404 
¸c16
 = 
i
;

405 
j
 = 0; j < 8; j++) {

406 i‡(
¸c16
 & 0x1)

407 
¸c16
 = (crc16 >> 1) ^ 0xA001;

409 
¸c16
 >>= 1;

412 
¸c16_èbÀ
[
i
] = 
¸c16
;

414 
	}
}

422 
ush‹t
 
	$¸c16_chk
(
uch¨
 *
buf
, 
uöt
 
size
)

424 
öô_Êag
 = 0;

425 
ush‹t
 
¸c16_èbÀ
[256];

427 
i
;

428 
ush‹t
 
¸c16
 = 0x0000;

430 i‡(
öô_Êag
 == 0) {

431 
	`¸ót_¸c16_èbÀ
(
¸c16_èbÀ
);

432 
öô_Êag
 = 1;

435 
i
 = 0; i < 
size
; i++) {

436 
¸c16
 = (¸c16 >> 8Ë^ 
¸c16_èbÀ
[(¸c16 & 0xFFË^ 
buf
[
i
]];

439  
¸c16
;

440 
	}
}

445 
	$¸ót_¸c32_èbÀ
(
uöt
 *
¸c32_èbÀ
)

447 
i
, 
j
;

448 
uöt
 
¸c32
;

450 
i
 = 0; i < 256; i++) {

451 
¸c32
 = 
i
;

452 
j
 = 0; j < 8; j++) {

453 i‡(
¸c32
 & 0x1)

454 
¸c32
 = (crc32 >> 1) ^ 0xEDB88320;

456 
¸c32
 >>= 1;

459 
¸c32_èbÀ
[
i
] = 
¸c32
;

461 
	}
}

469 
uöt
 
	$¸c32_chk
(
uch¨
 *
buf
, 
uöt
 
size
)

471 
öô_Êag
 = 0;

472 
uöt
 
¸c32_èbÀ
[256];

474 
i
;

475 
uöt
 
¸c32
 = 0xffffffff;

477 i‡(
öô_Êag
 == 0) {

478 
	`¸ót_¸c32_èbÀ
(
¸c32_èbÀ
);

479 
öô_Êag
 = 1;

482 
i
 = 0; i < 
size
; i++) {

483 
¸c32
 = (¸c32 >> 8Ë^ 
¸c32_èbÀ
[(¸c32 & 0xFFË^ 
buf
[
i
]];

486 
¸c32
 ^= 0xffffffff;

487  
¸c32
;

488 
	}
}

493 
	$is_ascii
(
sw_code
)

495 i‡(
sw_code
 >= 0 && sw_code <= 255)

496  
POSITIVE
;

498  
NEGATIVE
;

499 
	}
}

504 
	$is_num
(
sw_code
)

506 i‡(
sw_code
 >= '0' && sw_code <= '9')

507  
POSITIVE
;

509  
NEGATIVE
;

510 
	}
}

515 
	$is_func
(
sw_code
)

517 i‡(
sw_code
 > 
KEY_VALUE_FUNC
 && sw_code <= KEY_VALUE_FUNC + 15)

518  
POSITIVE
;

520  
NEGATIVE
;

521 
	}
}

526 
	$is_¥öèbÀ
(
sw_code
)

528 i‡(
sw_code
 >= 0x20 && sw_code < 0x7F)

529  
POSITIVE
;

531  
NEGATIVE
;

532 
	}
}

538 
	$chöe£_„e
(
„e
, * 
desc
)

540 
s
, 
j
;

541 
i
, 
q
, 
g
, 
pos
 = 0;

543 *
a
[] = {"Â£π","Ë¥∞","ÂèÅ","ËÇÜ","‰ºç","ÈôÜ","Êüí","Êçå","Áéñ"};

544 *
b
[] = {"ÂÖÉ","ÂçÅ","Áôæ","ÂçÉ","‰∏á","ÂçÅ‰∏á","Áôæ‰∏á","ÂçÉ‰∏á","‰∫ø"};

545 *
d
[] = {"Ëßí","ÂàÜ"};

547 
s
 = 
„e
;

548 
s
 = s + 0.003;

550 
i
 = 8; i > 0; i--)

552 
j
 = 
s
 / 
	`pow
(10,
i
);

553 i‡(
j
 != 0)

557 
q
 = 
i
-1; q >= 0; q--)

559 
j
 = 
s
 / 
	`pow
(10,
q
);

560 
g
 = ()
j
 % 10;

561 if(
g
 != 0) {

562 
	`•rötf
(
desc
 + 
pos
, "%s%s", 
a
[
g
-1], 
b
[
q
]);

563 
pos
 +(
	`°æí
(
a
[
g
-1]Ë+ såÀn(
b
[
q
]));

567 
q
 = -1; q >= -2; q--)

569 
j
 = 
s
 / 
	`pow
(10,
q
);

570 
g
=()
j
 % 10;

571 if(
g
 != 0) {

572 
	`•rötf
(
desc
 + 
pos
, "%s%s", 
a
[
g
-1], 
d
[-
q
-1]);

573 
pos
 +(
	`°æí
(
a
[
g
-1]Ë+ såÀn(
d
[-
q
-1]));

576 
	}
}

579 
	$maö
()

581 
ªt
;

583 
des_s
[2] = {0};

584 
§c_s
[2] = {0x01, 0x02};

586 
des_i
[4] = {0};

587 
§c_i
[4] = {0x01, 0x02, 0x03, 0x04};

589 
ªt
 = 
	`íd_covî_öt
(
des_i
, 
§c_i
);

590 i‡(
ªt
 < 0)

591 
	`¥ötf
("FAIL!\n");

593 
ªt
 = 
	`íd_covî_sh‹t
(
des_s
, 
§c_s
);

594 i‡(
ªt
 < 0)

595 
	`¥ötf
("FAIL!\n");

597 
i
;

598 
i
 = 0; i < 2; i++)

599 
	`¥ötf
("des_s[] : %02x ", 
des_s
[
i
]);

601 
	`¥ötf
("\n");

603 
i
 = 0; i < 4; i++)

604 
	`¥ötf
("des_i[] : %02x ", 
des_i
[
i
]);

606 
	`¥ötf
("\n");

609 
	}
}

	@misc/error.c

8 
	~"îr‹.h
"

13 
	gîr_num
 = 0;

18 *
	$gë_îr_msg
(
îr
)

20 #ifde‡
CONFIG_REV_BETA


21  
DEFAUT_MSG
;

23  
DEFAUT_MSG
;

25 
	}
}

	@misc/file_core.c

9 
	~<°dio.h
>

10 
	~<°dlib.h
>

11 
	~<°rög.h
>

12 
	~<uni°d.h
>

13 
	~<sys/ty≥s.h
>

14 
	~<sys/°©.h
>

15 
	~<f˙é.h
>

16 
	~<î∫o.h
>

18 
	~"c⁄fig.h
"

19 
	~"îr‹.h
"

20 
	~"comm⁄.h
"

21 
	~"fûe_c‹e.h
"

24 
FILE
 * 
	$fûe_›s_›í_fûe
(c⁄° * 
fûíame
)

26 
FILE
 * 
Â
;

28 
Â
 = 
	`f›í
(
fûíame
, "rb+");

29 i‡(
Â
 =
NULL
) {

30 
îr_num
 = -
EFILE_OPEN_FAIL
;

31  
NULL
;

34  
Â
;

35 
	}
}

38 
	$fûe_›s_˛o£_fûe
(
FILE
 *
Â
)

40 
ªt
;

42 
ªt
 = 
	`f˛o£
(
Â
);

43 i‡(
ªt
 < 0)

44  
FAIL
;

46  
SUCCESS
;

47 
	}
}

50 
	$fûe_›s_¸ót_dú
(c⁄° *
∑th
)

52 
ªt
;

55 
ªt
 = 
	`mkdú
(
∑th
, 
CONFIG_DIR_MODE
);

56 i‡(
ªt
 < 0) {

57 i‡(
î∫o
 =
EEXIST
) {

58  
SUCCESS
;

61  
FAIL
;

64  
SUCCESS
;

65 
	}
}

68 
	$fûe_›s_dñ_dú
(c⁄° *
∑th
)

70 
ªt
 ;

72 
ªt
 = 
	`rmdú
(
∑th
);

73 i‡(
ªt
 < 0)

74  -
EFILE_DEL_FAIL
;

76  
SUCCESS
;

77 
	}
}

79 
	$fûe_›s_f‹˚_dñ_dú
(c⁄° *
∑th
)

81 
ªt
;

82 
cmd
[50];

84 
	`•rötf
(
cmd
, "rm -r‡%s", 
∑th
);

90 
ªt
 = 
	`sy°em
(
cmd
);

91 i‡(
ªt
 < 0)

92  -
EFILE_DEL_FAIL
;

94  
SUCCESS
;

95 
	}
}

98 
	$fûe_›s_ªad_hód
(
FILE
 *
°ªam
, 
fûe_hód_node
 *
hód_node
)

100 
ªt
;

101 
size
;

103 
size
 = (
fûe_hód_node
);

106 
ªt
 = 
	`f£ek
(
°ªam
, 0, 
SEEK_SET
);

107 i‡(
ªt
 < 0) {

108  -
EFILE_SEEK_FAIL
;

112 
ªt
 = 
	`‰ód
((*)
hód_node
, 
size
, 1, 
°ªam
);

113 i‡(
ªt
 != 1) {

114 i‡(
	`„of
(
°ªam
) != 0)

115  -
EFILE_EOF
;

117 i‡(
	`„º‹
(
°ªam
) != 0)

118  -
EFILE_RD_FAIL
;

121  
SUCCESS
;

122 
	}
}

126 
	$fûe_›s_wrôe_hód
(
FILE
 *
°ªam
, 
fûe_hód_node
 *
hód_node
)

128 
ªt
;

129 
size
;

131 
size
 = (
fûe_hód_node
);

134 
ªt
 = 
	`f£ek
(
°ªam
, 0, 
SEEK_SET
);

135 i‡(
ªt
 < 0) {

136  -
EFILE_SEEK_FAIL
;

140 
ªt
 = 
	`fwrôe
(
hód_node
, 
size
, 1, 
°ªam
);

141 i‡(
ªt
 != 1) {

142 i‡(
	`„of
(
°ªam
) != 0)

143  -
EFILE_EOF
;

145 i‡(
	`„º‹
(
°ªam
) != 0)

146  -
EFILE_RD_FAIL
;

149  
SUCCESS
;

150 
	}
}

153 
	$fûe_›s_¸ót_fûe
(c⁄° *
fûíame
, 
mode
, 
ªc‹d_num
)

155 
ªt
;

156 
fd
;

157 
FILE
 *
Â
;

159 
fûe_hód_node
 
hód_node
;

162 
fd
 = 
	`›í
(
fûíame
, 
O_RDWR
 | 
O_CREAT
 | 
O_EXCL
 | 
O_TRUNC
, 0666);

163 i‡(
fd
 < 0) {

164 i‡(
î∫o
 !
EEXIST
)

165  -
EFILE_OPEN_FAIL
;

167 
ªt
 = 
	`åunˇã
(
fûíame
, 0);

168 i‡(
ªt
 < 0)

169  
FAIL
;

174 
	`mem£t
(&
hód_node
, 0, (
fûe_hód_node
));

175 
	`mem˝y
(
hód_node
.
«me
, 
fûíame
, 
	`°æí
(filename));

176 
hód_node
.
mode
 = mode;

177 
hód_node
.
max_ªc‹d
 = 
ªc‹d_num
;

179 #ifde‡
CONFIG_LIMIT_DEL


180 i‡(
mode
 =
DELETE_AVAIL_MODE
)

181 
hód_node
.
max_dñ_ªc‹d
 = 
MAX_DEL_RECORD_NUM
;

184 
	`˛o£
(
fd
);

186 
Â
 = 
	`f›í
(
fûíame
, "rb+");

187 i‡(
Â
 =
NULL
)

188  -
EFILE_OPEN_FAIL
;

191 
ªt
 = 
	`fûe_›s_wrôe_hód
(
Â
, &
hód_node
);

192 i‡(
ªt
 < 0)

193  
ªt
;

195 
	`f˛o£
(
Â
);

197  
SUCCESS
;

198 
	}
}

201 
	$fûe_›s_dñ_fûe
(c⁄° *
fûíame
)

203 
ªt
;

205 
ªt
 = 
	`u∆ök
(
fûíame
);

206 i‡(
ªt
 < 0)

207  -
EFILE_DEL_FAIL
;

209  
SUCCESS
;

210 
	}
}

214 
	$fûe_›s_˛ór_ªc‹d
(c⁄° *
fûíame
)

216 
ªt
;

217 
FILE
 * 
Â
;

219 
fûe_hód_node
 
hód_node
;

220 
fûe_hód_node
 
tmp_hód_node
;

222 
Â
 = 
	`f›í
(
fûíame
, "rb+");

223 i‡(
Â
 =
NULL
)

224  -
EFILE_OPEN_FAIL
;

226 
ªt
 = 
	`fûe_›s_ªad_hód
(
Â
, &
hód_node
);

227 i‡(
ªt
 < 0)

228  
ªt
;

230 
ªt
 = 
	`åunˇã
(
fûíame
, 0);

231 i‡(
ªt
 < 0) {

232  
FAIL
;

235 
	`f˛o£
(
Â
);

238 
	`mem£t
(&
tmp_hód_node
, 0, (tmp_head_node));

239 
	`mem˝y
(
tmp_hód_node
.
«me
, 
fûíame
, 
	`°æí
(filename) + 1);

240 
tmp_hód_node
.
mode
 = 
hód_node
.mode;

241 
tmp_hód_node
.
max_ªc‹d
 = 
hód_node
.max_record;

243 #ifde‡
CONFIG_LIMIT_DEL


244 
tmp_hód_node
.
max_dñ_ªc‹d
 = 
hód_node
.max_del_record;

247 
Â
 = 
	`f›í
(
fûíame
, "rb+");

248 i‡(
Â
 =
NULL
)

249  -
EFILE_OPEN_FAIL
;

251 
ªt
 = 
	`fûe_›s_wrôe_hód
(
Â
, &
tmp_hód_node
);

252 i‡(
ªt
 < 0)

253  
ªt
;

255 
	`f˛o£
(
Â
);

257  
SUCCESS
;

258 
	}
}

261 
	$fûe_›s_ªad_ªc‹d
(
FILE
 *
°ªam
, 
off£t
, 
fûe_ªc‹d_node
 *
ªc‹d_buf
)

263 
ªt
;

264 
size
;

265 
pos_off£t
;

267 
fûe_hód_node
 
hód_node
;

268 
ªt
 = 
	`fûe_›s_ªad_hód
(
°ªam
, &
hód_node
);

269 i‡(
ªt
 < 0)

270  
ªt
;

272 i‡(
off£t
 > 
hód_node
.
ªc‹d_tŸÆ_cou¡
)

273  -
EFILE_OFFSET_OVER_FLOW
;

275 
size
 = (
fûe_ªc‹d_node
);

276 
pos_off£t
 = (
fûe_hód_node
Ë+ (
fûe_ªc‹d_node
Ë* (
off£t
 - 1);

278 
ªt
 = 
	`f£ek
(
°ªam
, 
pos_off£t
, 
SEEK_SET
);

279 i‡(
ªt
 < 0) {

280  -
EFILE_SEEK_FAIL
;

283 
ªt
 = 
	`‰ód
(
ªc‹d_buf
, 
size
, 1, 
°ªam
);

284 i‡(
ªt
 != 1) {

285 i‡(
	`„of
(
°ªam
) != 0)

286  -
EFILE_EOF
;

288 i‡(
	`„º‹
(
°ªam
) != 0)

289  -
EFILE_RD_FAIL
;

292  
SUCCESS
;

293 
	}
}

296 
	$fûe_›s_wrôe_ªc‹d
(
FILE
 *
°ªam
, 
off£t
, 
fûe_ªc‹d_node
 *
ªc‹d_node
)

299 
ªt
;

300 
size
;

301 
pos_off£t
;

303 
cur_add_node
;

304 
¥ev_vaûd_node
;

306 
fûe_hód_node
 
hód_node
;

307 
fûe_ªc‹d_node
 
¥ev_ªc‹d_node
;

309 
size
 = (
fûe_ªc‹d_node
);

311 
ªt
 = 
	`fûe_›s_ªad_hód
(
°ªam
, &
hód_node
);

312 i‡(
ªt
 < 0)

313  
ªt
;

315 i‡(
off£t
 > 
hód_node
.
ªc‹d_tŸÆ_cou¡
)

316  -
EFILE_OFFSET_OVER_FLOW
;

318 i‡(
hód_node
.
max_ªc‹d
 =hód_node.
ªc‹d_tŸÆ_cou¡
)

319  -
EFILE_REC_FULL
;

321 
pos_off£t
 = (
fûe_hód_node
Ë+ (
fûe_ªc‹d_node
Ë* (
off£t
 - 1);

323 
ªt
 = 
	`f£ek
(
°ªam
, 
pos_off£t
, 
SEEK_SET
);

324 i‡(
ªt
 < 0) {

325  -
EFILE_SEEK_FAIL
;

328 
ªt
 = 
	`‰ód
(&
¥ev_ªc‹d_node
, 
size
, 1, 
°ªam
);

329 i‡(
ªt
 ! = 1){

330 i‡(
	`„of
(
°ªam
) != 0)

331  -
EFILE_EOF
;

333 i‡(
	`„º‹
(
°ªam
) != 0)

334  -
EFILE_WR_FAIL
;

338 
ªc‹d_node
->
Êag
 = 
IN_USING
;

340 i‡(
¥ev_ªc‹d_node
.
Êag
 !
DELETED
) {

341 
ªc‹d_node
->
¥ev_dñ_ªc‹d
 = 
¥ev_ªc‹d_node
.prev_del_record;

342 
ªc‹d_node
->
¥ev_vaûd_ªc‹d
 = 
hód_node
.
ªc‹d_tŸÆ_cou¡
;

344 
ªc‹d_node
->
¥ev_vaûd_ªc‹d
 = 
¥ev_ªc‹d_node
.prev_vaild_record;

345 
ªc‹d_node
->
¥ev_dñ_ªc‹d
 = 
hód_node
.
ªc‹d_tŸÆ_cou¡
;

348 
cur_add_node
 = 
hód_node
.
ªc‹d_tŸÆ_cou¡
 + 1;

349 
¥ev_vaûd_node
 = 
¥ev_ªc‹d_node
.
¥ev_vaûd_ªc‹d
;

351 i‡(
¥ev_vaûd_node
 == 0)

352 
¥ev_vaûd_node
 = 1;

354 
¥ev_vaûd_node
 < 
cur_add_node
) {

355 
pos_off£t
 = (
fûe_hód_node
Ë+ (
fûe_ªc‹d_node
Ë* (
¥ev_vaûd_node
 - 1);

356 
ªt
 = 
	`f£ek
(
°ªam
, 
pos_off£t
, 
SEEK_SET
);

357 i‡(
ªt
 < 0) {

358  -
EFILE_SEEK_FAIL
;

361 
ªt
 = 
	`‰ód
(&
¥ev_ªc‹d_node
, 
size
, 1, 
°ªam
);

362 i‡(
ªt
 != 1) {

363 i‡(
	`„of
(
°ªam
) != 0)

364  -
EFILE_EOF
;

366 i‡(
	`„º‹
(
°ªam
) != 0)

367  -
EFILE_WR_FAIL
;

370 
pos_off£t
 = (
fûe_hód_node
Ë+ (
fûe_ªc‹d_node
Ë* (
¥ev_vaûd_node
 - 1);

371 
ªt
 = 
	`f£ek
(
°ªam
, 
pos_off£t
, 
SEEK_SET
);

372 i‡(
ªt
 < 0) {

373  -
EFILE_SEEK_FAIL
;

376 
¥ev_ªc‹d_node
.
√xt_vaûd_ªc‹d
 = 
cur_add_node
;

377 
ªt
 = 
	`fwrôe
(&
¥ev_ªc‹d_node
, 
size
, 1, 
°ªam
);

378 i‡(
ªt
 != 1) {

379 i‡(
	`„of
(
°ªam
) != 0)

380  -
EFILE_EOF
;

382 i‡(
	`„º‹
(
°ªam
) != 0)

383  -
EFILE_RD_FAIL
;

386 
¥ev_vaûd_node
 ++;

389 
ªt
 = 
	`f£ek
(
°ªam
, 0, 
SEEK_END
);

390 i‡(
ªt
 < 0) {

391  -
EFILE_SEEK_FAIL
;

394 
ªt
 = 
	`fwrôe
((*)
ªc‹d_node
, 
size
, 1, 
°ªam
);

395 i‡(
ªt
 != 1) {

396 i‡(
	`„of
(
°ªam
) != 0)

397  -
EFILE_EOF
;

399 i‡(
	`„º‹
(
°ªam
) != 0)

400  -
EFILE_RD_FAIL
;

404 
hód_node
.
ªc‹d_tŸÆ_cou¡
 ++;

405 
hód_node
.
ªc‹d_vaûd_cou¡
 ++;

407 i‡(
ªc‹d_node
->
¥ev_vaûd_ªc‹d
 == 0)

408 
hód_node
.
fú°_vaûd_ªc‹d
 = 
cur_add_node
;

410 
hód_node
.
œ°_vaûd_ªc‹d
 = 
cur_add_node
;

412 
ªt
 = 
	`fûe_›s_wrôe_hód
(
°ªam
, &
hód_node
);

413 i‡(
ªt
 < 0)

414  
ªt
;

417  
SUCCESS
;

418 
	}
}

425 
	$fûe_›s_≠≥nd_ªc‹d
(
FILE
 *
°ªam
, 
fûe_ªc‹d_node
 *
ªc‹d_node
)

427 
ªt
;

428 
size
;

429 
off£t
;

430 
pos_off£t
;

431 
cur_add_node
;

432 
¥ev_vaûd_node
;

434 
fûe_hód_node
 
hód_node
;

435 
fûe_ªc‹d_node
 
¥ev_ªc‹d_node
;

437 
size
 = (
fûe_ªc‹d_node
);

438 
	`mem£t
(&
hód_node
, 0, (head_node));

439 
	`mem£t
(&
¥ev_ªc‹d_node
, 0, (prev_record_node));

441 
ªt
 = 
	`fûe_›s_ªad_hód
(
°ªam
, &
hód_node
);

442 i‡(
ªt
 < 0) {

443  
ªt
;

447 i‡(
hód_node
.
ªc‹d_tŸÆ_cou¡
 == 0) {

448 
ªc‹d_node
->
Êag
 = 
IN_USING
;

449 
ªc‹d_node
->
¥ev_vaûd_ªc‹d
 = 0;

450 
ªc‹d_node
->
¥ev_dñ_ªc‹d
 = 0;

451 
ªc‹d_node
->
√xt_vaûd_ªc‹d
 = 0;

452 
ªc‹d_node
->
√xt_dñ_ªc‹d
 = 0;

454 
cur_add_node
 = 1;

455 
wrôe_d©a
;

458 i‡(
hód_node
.
max_ªc‹d
 =hód_node.
ªc‹d_tŸÆ_cou¡
)

459  -
EFILE_REC_FULL
;

461 
off£t
 = 
hód_node
.
ªc‹d_tŸÆ_cou¡
;

462 
pos_off£t
 = (
fûe_hód_node
Ë+ (
fûe_ªc‹d_node
Ë* (
off£t
 - 1);

464 
ªt
 = 
	`f£ek
(
°ªam
, 
pos_off£t
, 
SEEK_SET
);

465 i‡(
ªt
 < 0) {

466  -
EFILE_SEEK_FAIL
;

469 
ªt
 = 
	`‰ód
(&
¥ev_ªc‹d_node
, 
size
, 1, 
°ªam
);

470 i‡(
ªt
 != 1){

471 i‡(
	`„of
(
°ªam
) != 0)

472  -
EFILE_EOF
;

474 i‡(
	`„º‹
(
°ªam
) != 0)

475  -
EFILE_WR_FAIL
;

479 
ªc‹d_node
->
Êag
 = 
IN_USING
;

480 
ªc‹d_node
->
√xt_vaûd_ªc‹d
 = 0;

481 
ªc‹d_node
->
√xt_dñ_ªc‹d
 = 0;

483 i‡(
¥ev_ªc‹d_node
.
Êag
 !
DELETED
) {

484 
ªc‹d_node
->
¥ev_dñ_ªc‹d
 = 
¥ev_ªc‹d_node
.prev_del_record;

485 
ªc‹d_node
->
¥ev_vaûd_ªc‹d
 = 
hód_node
.
ªc‹d_tŸÆ_cou¡
;

487 
ªc‹d_node
->
¥ev_vaûd_ªc‹d
 = 
¥ev_ªc‹d_node
.prev_vaild_record;

488 
ªc‹d_node
->
¥ev_dñ_ªc‹d
 = 
hód_node
.
ªc‹d_tŸÆ_cou¡
;

491 
cur_add_node
 = 
hód_node
.
ªc‹d_tŸÆ_cou¡
 + 1;

492 
¥ev_vaûd_node
 = 
ªc‹d_node
->
¥ev_vaûd_ªc‹d
;

494 i‡(
¥ev_vaûd_node
 == 0)

495 
¥ev_vaûd_node
 = 1;

497 
¥ev_vaûd_node
 < 
cur_add_node
) {

498 
pos_off£t
 = (
fûe_hód_node
Ë+ (
fûe_ªc‹d_node
Ë* (
¥ev_vaûd_node
 - 1);

499 
ªt
 = 
	`f£ek
(
°ªam
, 
pos_off£t
, 
SEEK_SET
);

500 i‡(
ªt
 < 0) {

501  -
EFILE_SEEK_FAIL
;

504 
ªt
 = 
	`‰ód
(&
¥ev_ªc‹d_node
, 
size
, 1, 
°ªam
);

505 i‡(
ªt
 != 1) {

506 i‡(
	`„of
(
°ªam
) != 0)

507  -
EFILE_EOF
;

509 i‡(
	`„º‹
(
°ªam
) != 0)

510  -
EFILE_WR_FAIL
;

513 
ªt
 = 
	`f£ek
(
°ªam
, 
pos_off£t
, 
SEEK_SET
);

514 i‡(
ªt
 < 0) {

515  -
EFILE_SEEK_FAIL
;

518 
¥ev_ªc‹d_node
.
√xt_vaûd_ªc‹d
 = 
cur_add_node
;

519 
ªt
 = 
	`fwrôe
(&
¥ev_ªc‹d_node
, 
size
, 1, 
°ªam
);

520 i‡(
ªt
 != 1){

521 i‡(
	`„of
(
°ªam
) != 0)

522  -
EFILE_EOF
;

524 i‡(
	`„º‹
(
°ªam
) != 0)

525  -
EFILE_RD_FAIL
;

527 
¥ev_vaûd_node
 ++;

530 
wrôe_d©a
:

531 
ªt
 = 
	`f£ek
(
°ªam
, 0, 
SEEK_END
);

532 i‡(
ªt
 < 0) {

533  -
EFILE_SEEK_FAIL
;

536 
ªt
 = 
	`fwrôe
((*)
ªc‹d_node
, 
size
, 1, 
°ªam
);

537 i‡(
ªt
 != 1) {

538 i‡(
	`„of
(
°ªam
) != 0)

539  -
EFILE_EOF
;

541 i‡(
	`„º‹
(
°ªam
) != 0)

542  -
EFILE_RD_FAIL
;

546 
hód_node
.
ªc‹d_tŸÆ_cou¡
 ++;

547 
hód_node
.
ªc‹d_vaûd_cou¡
 ++;

549 i‡(
ªc‹d_node
->
¥ev_vaûd_ªc‹d
 == 0)

550 
hód_node
.
fú°_vaûd_ªc‹d
 = 
cur_add_node
;

552 
hód_node
.
œ°_vaûd_ªc‹d
 = 
cur_add_node
;

554 
ªt
 = 
	`fûe_›s_wrôe_hód
(
°ªam
, &
hód_node
);

555 i‡(
ªt
 < 0)

556  
ªt
;

558  
SUCCESS
;

559 
	}
}

562 
	$fûe_›s_modify_ªc‹d
(
FILE
 *
°ªam
, 
off£t
, 
fûe_ªc‹d_node
 *
ªc‹d_buf
)

564 
ªt
;

565 
size
;

566 
pos_off£t
 = 0;

568 
cur_dñ_node
;

569 
¥ev_vaûd_node
;

570 
√xt_vaûd_node
;

571 
¥ev_dñ_node
;

572 
√xt_dñ_node
;

574 
fûe_hód_node
 
hód_node
;

575 
fûe_ªc‹d_node
 
ªc‹d_node
;

576 
fûe_ªc‹d_node
 
¥ev_ªc‹d_node
;

577 
fûe_ªc‹d_node
 
√xt_ªc‹d_node
;

579 
	`mem£t
(&
hód_node
, 0, (head_node));

580 
	`mem£t
(&
ªc‹d_node
, 0, (record_node));

581 
	`mem£t
(&
¥ev_ªc‹d_node
, 0, (prev_record_node));

582 
	`mem£t
(&
√xt_ªc‹d_node
, 0, (next_record_node));

584 
ªt
 = 
	`fûe_›s_ªad_hód
(
°ªam
, &
hód_node
);

585 i‡(
ªt
 < 0)

586  
ªt
;

588 i‡(
off£t
 > 
hód_node
.
ªc‹d_tŸÆ_cou¡
) {

589  -
EFILE_OFFSET_OVER_FLOW
;

592 
size
 = (
fûe_ªc‹d_node
);

593 
pos_off£t
 = (
fûe_hód_node
Ë+ (
fûe_ªc‹d_node
Ë* (
off£t
 - 1);

595 
ªt
 = 
	`f£ek
(
°ªam
, 
pos_off£t
, 
SEEK_SET
);

596 i‡(
ªt
 < 0) {

597  -
EFILE_SEEK_FAIL
;

601 
ªt
 = 
	`‰ód
(&
ªc‹d_node
, 
size
, 1, 
°ªam
);

602 i‡(
ªt
 != 1) {

603 i‡(
	`„of
(
°ªam
) != 0)

604  -
EFILE_EOF
;

606 i‡(
	`„º‹
(
°ªam
) != 0)

607  -
EFILE_WR_FAIL
;

610 
	`mem˝y
(
ªc‹d_node
.
d©a
, 
ªc‹d_buf
->d©a, 
MAX_RECORD_SIZE
);

612 i‡(
ªc‹d_node
.
Êag
 !
DELETED
){

614 
ªt
 = 
	`f£ek
(
°ªam
, 
pos_off£t
, 
SEEK_SET
);

615 i‡(
ªt
 < 0) {

616  -
EFILE_SEEK_FAIL
;

619 
ªt
 = 
	`fwrôe
(&
ªc‹d_node
, 
size
, 1, 
°ªam
);

620 i‡(
ªt
 != 1) {

621 i‡(
	`„of
(
°ªam
) != 0)

622  -
EFILE_EOF
;

624 i‡(
	`„º‹
(
°ªam
) != 0)

625  -
EFILE_WR_FAIL
;

628  
SUCCESS
;

631 
ªt
 = 
	`f£ek
(
°ªam
, 
pos_off£t
, 
SEEK_SET
);

632 i‡(
ªt
 < 0) {

633  -
EFILE_SEEK_FAIL
;

636 
ªc‹d_node
.
Êag
 = 
IN_USING
;

637 
ªt
 = 
	`fwrôe
(&
ªc‹d_node
, 
size
, 1, 
°ªam
);

638 i‡(
ªt
 != 1) {

639 i‡(
	`„of
(
°ªam
) != 0)

640  -
EFILE_EOF
;

642 i‡(
	`„º‹
(
°ªam
) != 0)

643  -
EFILE_WR_FAIL
;

647 
cur_dñ_node
 = 
off£t
;

648 
¥ev_vaûd_node
 = 
ªc‹d_node
.
¥ev_vaûd_ªc‹d
;

649 
√xt_vaûd_node
 = 
ªc‹d_node
.
√xt_vaûd_ªc‹d
;

651 i‡(
¥ev_vaûd_node
 == 0)

652 
¥ev_vaûd_node
 = 1;

654 i‡(
√xt_vaûd_node
 == 0)

655 
√xt_vaûd_node
 = 
hód_node
.
ªc‹d_tŸÆ_cou¡
;

658 
¥ev_vaûd_node
 < 
cur_dñ_node
) {

659 
pos_off£t
 = (
fûe_hód_node
Ë+ (
fûe_ªc‹d_node
Ë* (
¥ev_vaûd_node
 - 1);

660 
ªt
 = 
	`f£ek
(
°ªam
, 
pos_off£t
, 
SEEK_SET
);

661 i‡(
ªt
 < 0) {

662  -
EFILE_SEEK_FAIL
;

665 
ªt
 = 
	`‰ód
(&
¥ev_ªc‹d_node
, 
size
, 1, 
°ªam
);

666 i‡(
ªt
 != 1) {

667 i‡(
	`„of
(
°ªam
) != 0)

668  -
EFILE_EOF
;

670 i‡(
	`„º‹
(
°ªam
) != 0)

671  -
EFILE_WR_FAIL
;

674 
ªt
 = 
	`f£ek
(
°ªam
, 
pos_off£t
, 
SEEK_SET
);

675 i‡(
ªt
 < 0) {

676  -
EFILE_SEEK_FAIL
;

679 
¥ev_ªc‹d_node
.
√xt_vaûd_ªc‹d
 = 
off£t
;

680 
ªt
 = 
	`fwrôe
(&
¥ev_ªc‹d_node
, 
size
, 1, 
°ªam
);

681 i‡(
ªt
 != 1){

682 i‡(
	`„of
(
°ªam
) != 0)

683  -
EFILE_EOF
;

685 i‡(
	`„º‹
(
°ªam
) != 0)

686  -
EFILE_WR_FAIL
;

689 
¥ev_vaûd_node
 ++;

693 
cur_dñ_node
 += 1;

694 
cur_dñ_node
 <
√xt_vaûd_node
) {

695 
pos_off£t
 = (
fûe_hód_node
Ë+ (
fûe_ªc‹d_node
Ë* (
cur_dñ_node
 - 1);

696 
ªt
 = 
	`f£ek
(
°ªam
, 
pos_off£t
, 
SEEK_SET
);

697 i‡(
ªt
 < 0) {

698  -
EFILE_SEEK_FAIL
;

701 
ªt
 = 
	`‰ód
(&
√xt_ªc‹d_node
, 
size
, 1, 
°ªam
);

702 i‡(
ªt
 != 1){

703 i‡(
	`„of
(
°ªam
) != 0)

704  -
EFILE_EOF
;

706 i‡(
	`„º‹
(
°ªam
) != 0)

707  -
EFILE_WR_FAIL
;

710 
ªt
 = 
	`f£ek
(
°ªam
, 
pos_off£t
, 
SEEK_SET
);

711 i‡(
ªt
 < 0) {

712  -
EFILE_SEEK_FAIL
;

715 
√xt_ªc‹d_node
.
¥ev_vaûd_ªc‹d
 = 
off£t
;

716 
ªt
 = 
	`fwrôe
(&
¥ev_ªc‹d_node
, 
size
, 1, 
°ªam
);

717 i‡(
ªt
 != 1){

718 i‡(
	`„of
(
°ªam
) != 0)

719  -
EFILE_EOF
;

721 i‡(
	`„º‹
(
°ªam
) != 0)

722  -
EFILE_WR_FAIL
;

725 
cur_dñ_node
 ++;

729 
cur_dñ_node
 = 
off£t
;

730 
¥ev_dñ_node
 = 
ªc‹d_node
.
¥ev_dñ_ªc‹d
;

731 
√xt_dñ_node
 = 
ªc‹d_node
.
√xt_dñ_ªc‹d
;

733 i‡(
¥ev_dñ_node
 == 0)

734 
¥ev_dñ_node
 = 1;

736 i‡(
√xt_dñ_node
 == 0)

737 
√xt_dñ_node
 = 
hód_node
.
ªc‹d_tŸÆ_cou¡
;

740 
¥ev_dñ_node
 < 
cur_dñ_node
) {

741 
pos_off£t
 = (
fûe_hód_node
Ë+ (
fûe_ªc‹d_node
Ë* (
¥ev_dñ_node
 - 1);

742 
ªt
 = 
	`f£ek
(
°ªam
, 
pos_off£t
, 
SEEK_SET
);

743 i‡(
ªt
 < 0) {

744  -
EFILE_SEEK_FAIL
;

747 
ªt
 = 
	`‰ód
(&
¥ev_ªc‹d_node
, 
size
, 1, 
°ªam
);

748 i‡(
ªt
 != 1) {

749 i‡(
	`„of
(
°ªam
) != 0)

750  -
EFILE_EOF
;

752 i‡(
	`„º‹
(
°ªam
) != 0)

753  -
EFILE_WR_FAIL
;

756 
ªt
 = 
	`f£ek
(
°ªam
, 
pos_off£t
, 
SEEK_SET
);

757 i‡(
ªt
 < 0) {

758  -
EFILE_SEEK_FAIL
;

761 
¥ev_ªc‹d_node
.
√xt_dñ_ªc‹d
 = 
ªc‹d_node
.next_del_record;

762 
ªt
 = 
	`fwrôe
(&
¥ev_ªc‹d_node
, 
size
, 1, 
°ªam
);

763 i‡(
ªt
 != 1){

764 i‡(
	`„of
(
°ªam
) != 0)

765  -
EFILE_EOF
;

767 i‡(
	`„º‹
(
°ªam
) != 0)

768  -
EFILE_WR_FAIL
;

771 
¥ev_dñ_node
 ++;

775 
cur_dñ_node
 += 1;

776 
cur_dñ_node
 <
√xt_dñ_node
) {

777 
pos_off£t
 = (
fûe_hód_node
Ë+ (
fûe_ªc‹d_node
Ë* (
cur_dñ_node
 - 1);

778 
ªt
 = 
	`f£ek
(
°ªam
, 
pos_off£t
, 
SEEK_SET
);

779 i‡(
ªt
 < 0) {

780  -
EFILE_SEEK_FAIL
;

783 
ªt
 = 
	`‰ód
(&
√xt_ªc‹d_node
, 
size
, 1, 
°ªam
);

784 i‡(
ªt
 != 1) {

785 i‡(
	`„of
(
°ªam
) != 0)

786  -
EFILE_EOF
;

788 i‡(
	`„º‹
(
°ªam
) != 0)

789  -
EFILE_WR_FAIL
;

791 
pos_off£t
 = (
fûe_hód_node
Ë+ (
fûe_ªc‹d_node
Ë* (
cur_dñ_node
 - 1);

792 
ªt
 = 
	`f£ek
(
°ªam
, 
pos_off£t
, 
SEEK_SET
);

793 i‡(
ªt
 < 0) {

794  -
EFILE_SEEK_FAIL
;

797 
√xt_ªc‹d_node
.
¥ev_dñ_ªc‹d
 = 
ªc‹d_node
.
√xt_dñ_ªc‹d
;

798 
ªt
 = 
	`fwrôe
(&
¥ev_ªc‹d_node
, 
size
, 1, 
°ªam
);

799 i‡(
ªt
 != 1) {

800 i‡(
	`„of
(
°ªam
) != 0)

801  -
EFILE_EOF
;

803 i‡(
	`„º‹
(
°ªam
) != 0)

804  -
EFILE_WR_FAIL
;

807 
cur_dñ_node
 ++;

811 
hód_node
.
ªc‹d_vaûd_cou¡
 ++;

812 
hód_node
.
ªc‹d_dñ_cou¡
 --;

815 i‡(
ªc‹d_node
.
¥ev_dñ_ªc‹d
 == 0) {

816 
hód_node
.
fú°_dñ_ªc‹d
 = 
ªc‹d_node
.
√xt_dñ_ªc‹d
;

820 i‡(
ªc‹d_node
.
√xt_dñ_ªc‹d
 == 0) {

821 
hód_node
.
œ°_dñ_ªc‹d
 = 
ªc‹d_node
.
¥ev_dñ_ªc‹d
;

825 i‡(
ªc‹d_node
.
¥ev_vaûd_ªc‹d
 == 0)

826 
hód_node
.
fú°_vaûd_ªc‹d
 = 
off£t
;

829 i‡(
ªc‹d_node
.
√xt_vaûd_ªc‹d
 == 0)

830 
hód_node
.
œ°_vaûd_ªc‹d
 = 
off£t
;

832 
ªt
 = 
	`fûe_›s_wrôe_hód
(
°ªam
, &
hód_node
);

833 i‡(
ªt
 < 0)

834  
ªt
;

836  
SUCCESS
;

838 
	}
}

843 
	$fûe_›s_dñ_ªc‹d
(
FILE
 *
°ªam
, 
off£t
)

845 
ªt
;

846 
size
;

847 
pos_off£t
;

849 
cur_dñ_node
;

850 
¥ev_vaûd_node
;

851 
√xt_vaûd_node
;

852 
¥ev_dñ_node
;

853 
√xt_dñ_node
;

855 
fûe_hód_node
 
hód_node
;

856 
fûe_ªc‹d_node
 
ªc‹d_node
;

857 
fûe_ªc‹d_node
 
¥ev_ªc‹d_node
;

858 
fûe_ªc‹d_node
 
√xt_ªc‹d_node
;

860 
ªt
 = 
	`fûe_›s_ªad_hód
(
°ªam
, &
hód_node
);

861 i‡(
ªt
 < 0)

862  
ªt
;

864 i‡(
hód_node
.
mode
 !
DELETE_AVAIL_MODE
)

865  -
EFILE_DEL_UNAVAIL
;

867 #ifde‡
CONFIG_LIMIT_DEL


868 i‡(
hód_node
.
ªc‹d_dñ_cou¡
 =
max_dñ_ªc‹d
)

869  -
EFILE_FULL_DEL_RECORD
;

872 i‡(
hód_node
.
ªc‹d_dñ_cou¡
 =hód_node.
ªc‹d_tŸÆ_cou¡
)

873  -
EFILE_REC_HAS_DEL
;

875 i‡(
off£t
 > 
hód_node
.
ªc‹d_tŸÆ_cou¡
) {

876  -
EFILE_OFFSET_OVER_FLOW
;

879 
size
 = (
fûe_ªc‹d_node
);

880 
pos_off£t
 = (
fûe_hód_node
Ë+ (
fûe_ªc‹d_node
Ë* (
off£t
 - 1);

882 
ªt
 = 
	`f£ek
(
°ªam
, 
pos_off£t
, 
SEEK_SET
);

883 i‡(
ªt
 < 0) {

884  -
EFILE_SEEK_FAIL
;

887 
	`mem£t
(&
¥ev_ªc‹d_node
, 0, 
size
);

888 
ªt
 = 
	`‰ód
(&
ªc‹d_node
, 
size
, 1, 
°ªam
);

889 i‡(
ªt
 != 1) {

890 i‡(
	`„of
(
°ªam
) != 0)

891  -
EFILE_EOF
;

893 i‡(
	`„º‹
(
°ªam
) != 0)

894  -
EFILE_WR_FAIL
;

897 i‡(
ªc‹d_node
.
Êag
 =
DELETED
)

898  -
EFILE_REC_HAS_DEL
;

900 
ªt
 = 
	`f£ek
(
°ªam
, 
pos_off£t
, 
SEEK_SET
);

901 i‡(
ªt
 < 0) {

902  -
EFILE_SEEK_FAIL
;

905 
ªc‹d_node
.
Êag
 = 
DELETED
;

906 
ªt
 = 
	`fwrôe
(&
ªc‹d_node
, 
size
, 1, 
°ªam
);

907 i‡(
ªt
 != 1){

908 i‡(
	`„of
(
°ªam
) != 0)

909  -
EFILE_EOF
;

911 i‡(
	`„º‹
(
°ªam
) != 0)

912  -
EFILE_WR_FAIL
;

916 
cur_dñ_node
 = 
off£t
;

917 
¥ev_vaûd_node
 = 
ªc‹d_node
.
¥ev_vaûd_ªc‹d
;

918 
√xt_vaûd_node
 = 
ªc‹d_node
.
√xt_vaûd_ªc‹d
;

920 i‡(
¥ev_vaûd_node
 == 0)

921 
¥ev_vaûd_node
 = 1;

923 i‡(
√xt_vaûd_node
 == 0)

924 
√xt_vaûd_node
 = 
hód_node
.
ªc‹d_tŸÆ_cou¡
;

927 
¥ev_vaûd_node
 < 
cur_dñ_node
) {

928 
pos_off£t
 = (
fûe_hód_node
Ë+ (
fûe_ªc‹d_node
Ë* (
¥ev_vaûd_node
 - 1);

929 
ªt
 = 
	`f£ek
(
°ªam
, 
pos_off£t
, 
SEEK_SET
);

930 i‡(
ªt
 < 0) {

931  -
EFILE_SEEK_FAIL
;

934 
	`mem£t
(&
¥ev_ªc‹d_node
, 0, 
size
);

935 
ªt
 = 
	`‰ód
(&
¥ev_ªc‹d_node
, 
size
, 1, 
°ªam
);

936 i‡(
ªt
 != 1) {

937 i‡(
	`„of
(
°ªam
) != 0)

938  -
EFILE_EOF
;

940 i‡(
	`„º‹
(
°ªam
) != 0)

941  -
EFILE_WR_FAIL
;

944 
ªt
 = 
	`f£ek
(
°ªam
, 
pos_off£t
, 
SEEK_SET
);

945 i‡(
ªt
 < 0) {

946  -
EFILE_SEEK_FAIL
;

949 
¥ev_ªc‹d_node
.
√xt_vaûd_ªc‹d
 = 
ªc‹d_node
.next_vaild_record;

950 
ªt
 = 
	`fwrôe
(&
¥ev_ªc‹d_node
, 
size
, 1, 
°ªam
);

951 i‡(
ªt
 != 1){

952 i‡(
	`„of
(
°ªam
) != 0)

953  -
EFILE_EOF
;

955 i‡(
	`„º‹
(
°ªam
) != 0)

956  -
EFILE_WR_FAIL
;

959 
¥ev_vaûd_node
 ++;

963 
cur_dñ_node
 += 1;

964 
cur_dñ_node
 <
√xt_vaûd_node
) {

965 
pos_off£t
 = (
fûe_hód_node
Ë+ (
fûe_ªc‹d_node
Ë* (
cur_dñ_node
 - 1);

966 
ªt
 = 
	`f£ek
(
°ªam
, 
pos_off£t
, 
SEEK_SET
);

967 i‡(
ªt
 < 0) {

968  -
EFILE_SEEK_FAIL
;

971 
	`mem£t
(&
√xt_ªc‹d_node
, 0, 
size
);

972 
ªt
 = 
	`‰ód
(&
√xt_ªc‹d_node
, 
size
, 1, 
°ªam
);

973 i‡(
ªt
 != 1) {

974 i‡(
	`„of
(
°ªam
) != 0)

975  -
EFILE_EOF
;

977 i‡(
	`„º‹
(
°ªam
) != 0)

978  -
EFILE_WR_FAIL
;

981 
ªt
 = 
	`f£ek
(
°ªam
, 
pos_off£t
, 
SEEK_SET
);

982 i‡(
ªt
 < 0) {

983  -
EFILE_SEEK_FAIL
;

986 
√xt_ªc‹d_node
.
¥ev_vaûd_ªc‹d
 = 
ªc‹d_node
.prev_vaild_record;

987 
ªt
 = 
	`fwrôe
(&
√xt_ªc‹d_node
, 
size
, 1, 
°ªam
);

988 i‡(
ªt
 != 1){

989 i‡(
	`„of
(
°ªam
) != 0)

990  -
EFILE_EOF
;

992 i‡(
	`„º‹
(
°ªam
) != 0)

993  -
EFILE_WR_FAIL
;

996 
cur_dñ_node
 ++;

1000 
cur_dñ_node
 = 
off£t
;

1001 
¥ev_dñ_node
 = 
ªc‹d_node
.
¥ev_dñ_ªc‹d
;

1002 
√xt_dñ_node
 = 
ªc‹d_node
.
√xt_dñ_ªc‹d
;

1004 i‡(
¥ev_dñ_node
 == 0)

1005 
¥ev_dñ_node
 = 1;

1007 i‡(
√xt_dñ_node
 == 0)

1008 
√xt_dñ_node
 = 
hód_node
.
ªc‹d_tŸÆ_cou¡
;

1011 
¥ev_dñ_node
 < 
cur_dñ_node
) {

1012 
pos_off£t
 = (
fûe_hód_node
Ë+ (
fûe_ªc‹d_node
Ë* (
¥ev_dñ_node
 - 1);

1013 
ªt
 = 
	`f£ek
(
°ªam
, 
pos_off£t
, 
SEEK_SET
);

1014 i‡(
ªt
 < 0) {

1015  -
EFILE_SEEK_FAIL
;

1018 
	`mem£t
(&
¥ev_ªc‹d_node
, 0, 
size
);

1019 
ªt
 = 
	`‰ód
(&
¥ev_ªc‹d_node
, 
size
, 1, 
°ªam
);

1020 i‡(
ªt
 != 1) {

1021 i‡(
	`„of
(
°ªam
) != 0)

1022  -
EFILE_EOF
;

1024 i‡(
	`„º‹
(
°ªam
) != 0)

1025  -
EFILE_WR_FAIL
;

1028 
ªt
 = 
	`f£ek
(
°ªam
, 
pos_off£t
, 
SEEK_SET
);

1029 i‡(
ªt
 < 0) {

1030  -
EFILE_SEEK_FAIL
;

1033 
¥ev_ªc‹d_node
.
√xt_dñ_ªc‹d
 = 
off£t
;

1034 
ªt
 = 
	`fwrôe
(&
¥ev_ªc‹d_node
, 
size
, 1, 
°ªam
);

1035 i‡(
ªt
 != 1){

1036 i‡(
	`„of
(
°ªam
) != 0)

1037  -
EFILE_EOF
;

1039 i‡(
	`„º‹
(
°ªam
) != 0)

1040  -
EFILE_WR_FAIL
;

1043 
¥ev_dñ_node
 ++;

1047 
cur_dñ_node
 += 1;

1048 
cur_dñ_node
 <
√xt_dñ_node
) {

1049 
pos_off£t
 = (
fûe_hód_node
Ë+ (
fûe_ªc‹d_node
Ë* (
cur_dñ_node
 - 1);

1050 
ªt
 = 
	`f£ek
(
°ªam
, 
pos_off£t
, 
SEEK_SET
);

1051 i‡(
ªt
 < 0) {

1052  -
EFILE_SEEK_FAIL
;

1055 
	`mem£t
(&
√xt_ªc‹d_node
, 0, 
size
);

1056 
ªt
 = 
	`‰ód
(&
√xt_ªc‹d_node
, 
size
, 1, 
°ªam
);

1057 i‡(
ªt
 != 1) {

1058 i‡(
	`„of
(
°ªam
) != 0)

1059  -
EFILE_EOF
;

1061 i‡(
	`„º‹
(
°ªam
) != 0)

1062  -
EFILE_WR_FAIL
;

1065 
ªt
 = 
	`f£ek
(
°ªam
, 
pos_off£t
, 
SEEK_SET
);

1066 i‡(
ªt
 < 0) {

1067  -
EFILE_SEEK_FAIL
;

1070 
√xt_ªc‹d_node
.
¥ev_dñ_ªc‹d
 = 
off£t
;

1071 
ªt
 = 
	`fwrôe
(&
√xt_ªc‹d_node
, 
size
, 1, 
°ªam
);

1072 i‡(
ªt
 != 1){

1073 i‡(
	`„of
(
°ªam
) != 0)

1074  -
EFILE_EOF
;

1076 i‡(
	`„º‹
(
°ªam
) != 0)

1077  -
EFILE_WR_FAIL
;

1080 
cur_dñ_node
 ++;

1084 
hód_node
.
ªc‹d_vaûd_cou¡
 --;

1085 
hód_node
.
ªc‹d_dñ_cou¡
 ++;

1088 i‡(
ªc‹d_node
.
¥ev_vaûd_ªc‹d
 == 0)

1089 
hód_node
.
fú°_vaûd_ªc‹d
 = 
ªc‹d_node
.
√xt_vaûd_ªc‹d
;

1092 i‡(
ªc‹d_node
.
√xt_vaûd_ªc‹d
 == 0)

1093 
hód_node
.
œ°_vaûd_ªc‹d
 = 
ªc‹d_node
.
¥ev_vaûd_ªc‹d
;

1096 i‡(
ªc‹d_node
.
¥ev_dñ_ªc‹d
 == 0) {

1097 
hód_node
.
fú°_dñ_ªc‹d
 = 
off£t
;

1101 i‡(
ªc‹d_node
.
√xt_dñ_ªc‹d
 == 0) {

1102 
hód_node
.
œ°_dñ_ªc‹d
 = 
off£t
;

1105 
ªt
 = 
	`fûe_›s_wrôe_hód
(
°ªam
, &
hód_node
);

1106 i‡(
ªt
 < 0)

1107  
ªt
;

1109 
	`sync
();

1111  
SUCCESS
;

1112 
	}
}

1114 
fûe_›î©e
 
	gg_fûe_›s
 = {

1115 .
¸ót_dú
 = 
fûe_›s_¸ót_dú
,

1116 .
	gªmove_dú
 = 
fûe_›s_dñ_dú
,

1117 .
	gªmove_dú_f
 = 
fûe_›s_f‹˚_dñ_dú
,

1119 .
	g¸ót_fûe
 = 
fûe_›s_¸ót_fûe
,

1120 .
	gdñëe_fûe
 = 
fûe_›s_dñ_fûe
,

1122 .
	g›í_fûe
 = 
fûe_›s_›í_fûe
,

1123 .
	g˛o£_fûe
 = 
fûe_›s_˛o£_fûe
,

1125 .
	gªad_hód
 = 
fûe_›s_ªad_hód
,

1126 .
	gªad_ªc‹d
 = 
fûe_›s_ªad_ªc‹d
,

1127 .
	g˛ór_ªc‹d
 = 
fûe_›s_˛ór_ªc‹d
,

1128 .
	gwrôe_hód
 = 
fûe_›s_wrôe_hód
,

1129 .
	g≠≥nd_ªc‹d
 = 
fûe_›s_≠≥nd_ªc‹d
,

1130 .
	gmodify_ªc‹d
 = 
fûe_›s_modify_ªc‹d
,

1131 .
	gdñëe_ªc‹d
 = 
fûe_›s_dñ_ªc‹d
,

1135 
fûe_›î©e
 * 
	$gë_fûe_›s
()

1137  &
g_fûe_›s
;

1138 
	}
}

1145 
	gîr_num
 = 0;

1147 
	$maö
()

1149 
ªt
;

1150 
FILE
 *
Â
;

1152 * 
dú
 = "target_tst/";

1153 * 
fûe
 = "./target_tst/tst_file";

1155 
fûe_hód_node
 
hód_node
;

1156 
fûe_ªc‹d_node
 
ªc‹d_node
;

1158 
ªt
 = 
	`fûe_›s_¸ót_dú
(
dú
);

1159 i‡(
ªt
 < 0) {

1160 
	`¥ötf
("creat dir failed\n");

1164 
ªt
 = 
	`fûe_›s_¸ót_fûe
(
fûe
, 1, 10);

1165 i‡(
ªt
 < 0) {

1166 
	`¥ötf
("creat file failed\n");

1170 
Â
 = 
	`f›í
(
fûe
, "rb+");

1171 i‡(
Â
 =
NULL
)

1172  -
EFILE_OPEN_FAIL
;

1174 
	`mem£t
(&
hód_node
, 0, (head_node));

1175 
ªt
 = 
	`fûe_›s_ªad_hód
(
Â
, &
hód_node
);

1176 i‡(
ªt
 < 0) {

1177 
	`¥ötf
("read head failed\n");

1181 
	`¥ötf
("hód_node.«mêi†%s\n", 
hód_node
.
«me
);

1182 
	`¥ötf
("hód_node.modêi†%d\n", 
hód_node
.
mode
);

1183 
	`¥ötf
("hód_mode.max_ªc‹d i†%d\n", 
hód_node
.
max_ªc‹d
);

1184 
	`¥ötf
("hód_node.ªc‹dÅŸÆ cou¡ i†%d\n", 
hód_node
.
ªc‹d_tŸÆ_cou¡
);

1185 
	`¥ötf
("hód_mode.ªc‹d vaûd cou¡ i†%d\n", 
hód_node
.
ªc‹d_vaûd_cou¡
);

1186 
	`¥ötf
("hód_node.ªc‹d dñ cou¡ i†%d\n", 
hód_node
.
ªc‹d_dñ_cou¡
);

1188 
	`¥ötf
("\nAppendÑecord 1,2...\n");

1190 
	`mem£t
(&
ªc‹d_node
, 0, (record_node));

1191 
	`•rötf
(
ªc‹d_node
.
d©a
, "%s", "abcdedf");

1193 
ªt
 = 
	`fûe_›s_≠≥nd_ªc‹d
(
Â
, &
ªc‹d_node
);

1194 i‡(
ªt
 < 0) {

1195 
	`¥ötf
("appendÑecord failed\n");

1199 
	`mem£t
(&
ªc‹d_node
, 0, (record_node));

1200 
	`•rötf
(
ªc‹d_node
.
d©a
, "%s", "ABCDEDF");

1202 
ªt
 = 
	`fûe_›s_≠≥nd_ªc‹d
(
Â
, &
ªc‹d_node
);

1203 i‡(
ªt
 < 0) {

1204 
	`¥ötf
("appendÑecord failed\n");

1208 
	`mem£t
(&
hód_node
, 0, (head_node));

1209 
ªt
 = 
	`fûe_›s_ªad_hód
(
Â
, &
hód_node
);

1210 i‡(
ªt
 < 0) {

1211 
	`¥ötf
("read head failed\n");

1215 
	`¥ötf
("\nhód_node.ªc‹dÅŸÆ cou¡ i†%d\n", 
hód_node
.
ªc‹d_tŸÆ_cou¡
);

1216 
	`¥ötf
("hód_mode.ªc‹d vaûd cou¡ i†%d\n", 
hód_node
.
ªc‹d_vaûd_cou¡
);

1217 
	`¥ötf
("hód_node.ªc‹d dñ cou¡ i†%d\n", 
hód_node
.
ªc‹d_dñ_cou¡
);

1219 
	`mem£t
(&
ªc‹d_node
, 0, (record_node));

1220 
ªt
 = 
	`fûe_›s_ªad_ªc‹d
(
Â
, 1, &
ªc‹d_node
);

1221 i‡(
ªt
 < 0) {

1222 
	`¥ötf
("readÑecord failed\n");

1226 
	`¥ötf
("\nRecord 1...\n");

1227 
	`¥ötf
("ªc‹d.Êag i†%d\n", 
ªc‹d_node
.
Êag
);

1228 
	`¥ötf
("ªc‹d.¥ev vldÑe¯i†%d\n", 
ªc‹d_node
.
¥ev_vaûd_ªc‹d
);

1229 
	`¥ötf
("ªc‹d.√xàvldÑe¯i†%d\n", 
ªc‹d_node
.
√xt_vaûd_ªc‹d
);

1230 
	`¥ötf
("ªc‹d.¥ev dñÑe¯i†%d\n", 
ªc‹d_node
.
¥ev_dñ_ªc‹d
);

1231 
	`¥ötf
("ªc‹d.√xàdñÑe¯i†%d\n", 
ªc‹d_node
.
√xt_dñ_ªc‹d
);

1232 
	`¥ötf
("ªc‹d.d©®i†%s\n", 
ªc‹d_node
.
d©a
);

1235 
	`mem£t
(&
ªc‹d_node
, 0, (record_node));

1236 
ªt
 = 
	`fûe_›s_ªad_ªc‹d
(
Â
, 2, &
ªc‹d_node
);

1237 i‡(
ªt
 < 0) {

1238 
	`¥ötf
("readÑecord failed\n");

1242 
	`¥ötf
("\nRecord 2...\n");

1243 
	`¥ötf
("ªc‹d.Êag i†%d\n", 
ªc‹d_node
.
Êag
);

1244 
	`¥ötf
("ªc‹d.¥ev vldÑe¯i†%d\n", 
ªc‹d_node
.
¥ev_vaûd_ªc‹d
);

1245 
	`¥ötf
("ªc‹d.√xàvldÑe¯i†%d\n", 
ªc‹d_node
.
√xt_vaûd_ªc‹d
);

1246 
	`¥ötf
("ªc‹d.¥ev dñÑe¯i†%d\n", 
ªc‹d_node
.
¥ev_dñ_ªc‹d
);

1247 
	`¥ötf
("ªc‹d.√xàdñÑe¯i†%d\n", 
ªc‹d_node
.
√xt_dñ_ªc‹d
);

1248 
	`¥ötf
("ªc‹d.d©®i†%s\n", 
ªc‹d_node
.
d©a
);

1250 
	`¥ötf
("\nModify Record 1...\n");

1251 
	`mem£t
(&
ªc‹d_node
, 0, (record_node));

1252 
ªt
 = 
	`fûe_›s_ªad_ªc‹d
(
Â
, 1, &
ªc‹d_node
);

1253 i‡(
ªt
 < 0) {

1254 
	`¥ötf
("readÑecord failed\n");

1258 
	`•rötf
(
ªc‹d_node
.
d©a
, "%s", "leonardoÖhysh");

1260 
ªt
 = 
	`fûe_›s_modify_ªc‹d
(
Â
, 1, &
ªc‹d_node
);

1261 i‡(
ªt
 < 0) {

1262 
	`¥ötf
("modifyÑecord failed\n");

1266 
	`mem£t
(&
ªc‹d_node
, 0, (record_node));

1267 
ªt
 = 
	`fûe_›s_ªad_ªc‹d
(
Â
, 1, &
ªc‹d_node
);

1268 i‡(
ªt
 < 0) {

1269 
	`¥ötf
("readÑecord failed\n");

1273 
	`¥ötf
("\nRecord 1...\n");

1274 
	`¥ötf
("ªc‹d.Êag i†%d\n", 
ªc‹d_node
.
Êag
);

1275 
	`¥ötf
("ªc‹d.¥ev vldÑe¯i†%d\n", 
ªc‹d_node
.
¥ev_vaûd_ªc‹d
);

1276 
	`¥ötf
("ªc‹d.√xàvldÑe¯i†%d\n", 
ªc‹d_node
.
√xt_vaûd_ªc‹d
);

1277 
	`¥ötf
("ªc‹d.¥ev dñÑe¯i†%d\n", 
ªc‹d_node
.
¥ev_dñ_ªc‹d
);

1278 
	`¥ötf
("ªc‹d.√xàdñÑe¯i†%d\n", 
ªc‹d_node
.
√xt_dñ_ªc‹d
);

1279 
	`¥ötf
("ªc‹d.d©®i†%s\n", 
ªc‹d_node
.
d©a
);

1281 
	`mem£t
(&
ªc‹d_node
, 0, (record_node));

1282 
ªt
 = 
	`fûe_›s_ªad_ªc‹d
(
Â
, 2, &
ªc‹d_node
);

1283 i‡(
ªt
 < 0) {

1284 
	`¥ötf
("readÑecord failed\n");

1288 
	`¥ötf
("\nRecord 2...\n");

1289 
	`¥ötf
("ªc‹d.Êag i†%d\n", 
ªc‹d_node
.
Êag
);

1290 
	`¥ötf
("ªc‹d.¥ev vldÑe¯i†%d\n", 
ªc‹d_node
.
¥ev_vaûd_ªc‹d
);

1291 
	`¥ötf
("ªc‹d.√xàvldÑe¯i†%d\n", 
ªc‹d_node
.
√xt_vaûd_ªc‹d
);

1292 
	`¥ötf
("ªc‹d.¥ev dñÑe¯i†%d\n", 
ªc‹d_node
.
¥ev_dñ_ªc‹d
);

1293 
	`¥ötf
("ªc‹d.√xàdñÑe¯i†%d\n", 
ªc‹d_node
.
√xt_dñ_ªc‹d
);

1294 
	`¥ötf
("ªc‹d.d©®i†%s\n", 
ªc‹d_node
.
d©a
);

1296 
	`¥ötf
("\nDeleted Record 1...\n\n");

1298 
ªt
 = 
	`fûe_›s_dñ_ªc‹d
(
Â
, 1);

1299 i‡(
ªt
 < 0) {

1300 
	`¥ötf
("delelteÑecord failed\n");

1304 
	`mem£t
(&
hód_node
, 0, (head_node));

1305 
ªt
 = 
	`fûe_›s_ªad_hód
(
Â
, &
hód_node
);

1306 i‡(
ªt
 < 0) {

1307 
	`¥ötf
("read head failed\n");

1311 
	`¥ötf
("hód_node.fú° vaûdÑec‹d i†%d\n", 
hód_node
.
fú°_vaûd_ªc‹d
);

1312 
	`¥ötf
("hód_node.œ° vaûdÑec‹d i†%d\n", 
hód_node
.
œ°_vaûd_ªc‹d
);

1313 
	`¥ötf
("hód_mode.fú° dñÑec‹d %d\n", 
hód_node
.
fú°_dñ_ªc‹d
);

1314 
	`¥ötf
("hód_mode.œ° dñÑec‹d %d\n", 
hód_node
.
œ°_dñ_ªc‹d
);

1316 
	`mem£t
(&
ªc‹d_node
, 0, (record_node));

1317 
ªt
 = 
	`fûe_›s_ªad_ªc‹d
(
Â
, 1, &
ªc‹d_node
);

1318 i‡(
ªt
 < 0) {

1319 
	`¥ötf
("readÑecord failed\n");

1323 
	`¥ötf
("\nRecord 1...\n");

1324 
	`¥ötf
("ªc‹d.Êag i†%d\n", 
ªc‹d_node
.
Êag
);

1325 
	`¥ötf
("ªc‹d.¥ev vldÑe¯i†%d\n", 
ªc‹d_node
.
¥ev_vaûd_ªc‹d
);

1326 
	`¥ötf
("ªc‹d.√xàvldÑe¯i†%d\n", 
ªc‹d_node
.
√xt_vaûd_ªc‹d
);

1327 
	`¥ötf
("ªc‹d.¥ev dñÑe¯i†%d\n", 
ªc‹d_node
.
¥ev_dñ_ªc‹d
);

1328 
	`¥ötf
("ªc‹d.√xàdñÑe¯i†%d\n", 
ªc‹d_node
.
√xt_dñ_ªc‹d
);

1329 
	`¥ötf
("ªc‹d.d©®i†%s\n", 
ªc‹d_node
.
d©a
);

1332 
	`mem£t
(&
ªc‹d_node
, 0, (record_node));

1333 
ªt
 = 
	`fûe_›s_ªad_ªc‹d
(
Â
, 2, &
ªc‹d_node
);

1334 i‡(
ªt
 < 0) {

1335 
	`¥ötf
("readÑecord failed\n");

1339 
	`¥ötf
("\nRecord 2...\n");

1340 
	`¥ötf
("ªc‹d.Êag i†%d\n", 
ªc‹d_node
.
Êag
);

1341 
	`¥ötf
("ªc‹d.¥ev vldÑe¯i†%d\n", 
ªc‹d_node
.
¥ev_vaûd_ªc‹d
);

1342 
	`¥ötf
("ªc‹d.√xàvldÑe¯i†%d\n", 
ªc‹d_node
.
√xt_vaûd_ªc‹d
);

1343 
	`¥ötf
("ªc‹d.¥ev dñÑe¯i†%d\n", 
ªc‹d_node
.
¥ev_dñ_ªc‹d
);

1344 
	`¥ötf
("ªc‹d.√xàdñÑe¯i†%d\n", 
ªc‹d_node
.
√xt_dñ_ªc‹d
);

1345 
	`¥ötf
("ªc‹d.d©®i†%s\n", 
ªc‹d_node
.
d©a
);

1347 
	`mem£t
(&
hód_node
, 0, (head_node));

1348 
ªt
 = 
	`fûe_›s_ªad_hód
(
Â
, &
hód_node
);

1349 i‡(
ªt
 < 0) {

1350 
	`¥ötf
("read head failed\n");

1354 
	`¥ötf
("\nhód_node.ªc‹dÅŸÆ cou¡ i†%d\n", 
hód_node
.
ªc‹d_tŸÆ_cou¡
);

1355 
	`¥ötf
("hód_node.ªc‹d vaûd cou¡ i†%d\n", 
hód_node
.
ªc‹d_vaûd_cou¡
);

1356 
	`¥ötf
("hód_node.ªc‹d dñ cou¡ i†%d\n", 
hód_node
.
ªc‹d_dñ_cou¡
);

1358 
	`f˛o£
(
Â
);

1360 
	`¥ötf
("\nClear Record...\n\n");

1362 
	`fûe_›s_˛ór_ªc‹d
(
fûe
);

1364 
	`f›í
(
fûe
, "rb+");

1366 
	`mem£t
(&
hód_node
, 0, (head_node));

1367 
ªt
 = 
	`fûe_›s_ªad_hód
(
Â
, &
hód_node
);

1368 i‡(
ªt
 < 0) {

1369 
	`¥ötf
("read head failed\n");

1373 
	`¥ötf
("hód_node.ªc‹dÅŸÆ cou¡ i†%d\n", 
hód_node
.
ªc‹d_tŸÆ_cou¡
);

1374 
	`¥ötf
("hód_mode.ªc‹d vaûd cou¡ i†%d\n", 
hód_node
.
ªc‹d_vaûd_cou¡
);

1376 
	`f˛o£
(
Â
);

1379 
	}
}

	@misc/plu.c

10 
	~<°dio.h
>

11 
	~<°dlib.h
>

12 
	~<uni°d.h
>

13 
	~<°rög.h
>

14 
	~<as£π.h
>

15 
	~<f˙é.h
>

17 
	~"îr‹.h
"

18 
	~"comm⁄.h
"

19 
	~"c⁄fig.h
"

20 
	~"fûe_c‹e.h
"

21 
	~"∂u.h
"

29 
	$∂u_fûe_idx_by_«me
(*
«me
, *
off£t
)

31 
i
, 
ªt
, 
tŸÆ
;

32 
uöt
 
Àn
, 
¸c32
;

33 
FILE
 *
Â
;

34 
fûe_hód_node
 
hód_node
;

35 
fûe_ªc‹d_node
 
ªc‹d_node
;

36 
∂u_«me_idx
 
«me_idx
;

37 
fûe_›î©e
 *
fûe_›s
 = 
	`gë_fûe_›s
();

39 #ifde‡
CONFIG_DEBUG


40 
	`as£π
(
«me
 !
NULL
);

41 
	`as£π
(
fûe_›s
 !
NULL
);

44 
	`mem£t
(&
hód_node
, 0, (head_node));

45 
	`mem£t
(&
ªc‹d_node
, 0, (record_node));

47 
Â
 = 
	`f›í
(
PLU_NAME_IDX_FILE
, "rb+");

48 if(
Â
 =
NULL
)

49  -
EFILE_OPEN_FAIL
;

51 
Àn
 = 
	`°æí
(
«me
);

52 
¸c32
 = 
	`¸c32_chk
((
uch¨
 *)
«me
, 
Àn
);

54 
ªt
 = 
fûe_›s
->
	`ªad_hód
(
Â
, &
hód_node
);

55 i‡(
ªt
 < 0)

56 
Áû
;

58 
tŸÆ
 = 
hód_node
.
ªc‹d_tŸÆ_cou¡
;

59 
i
 = 0; i < 
tŸÆ
; i++) {

60 
ªt
 = 
fûe_›s
->
	`ªad_ªc‹d
(
Â
, 
i
 + 1, &
ªc‹d_node
);

61 i‡(
ªt
 < 0)

62 
Áû
;

64 
	`mem˝y
(&
«me_idx
, 
ªc‹d_node
.
d©a
, (name_idx));

66 i‡(
ªc‹d_node
.
Êag
 =
DELETED
) {

67 i‡(
«me_idx
.
¸c32
 == crc32) {

68 *
off£t
 = 
i
 + 1;

69 
ªt
 = -
EPLU_DEL_NAME
;

70 
Áû
;

75 i‡(
«me_idx
.
¸c32
 != crc32)

78 *
off£t
 = 
i
 + 1;

79 
ªt
 = 
SUCCESS
;

85 i‡(
i
 =
tŸÆ
)

86 
ªt
 = -
EPLU_NO_NAME
;

88 
Áû
:

89 
	`f˛o£
(
Â
);

90  
ªt
;

91 
	}
}

100 
	$∂u_fûe_ªad_«me_idx
(
off£t
, 
∂u_«me_idx
 *
«me_idx
)

102 
ªt
;

103 
FILE
 *
Â
;

105 
fûe_ªc‹d_node
 
ªc‹d_node
;

106 
fûe_›î©e
 *
fûe_›s
 = 
	`gë_fûe_›s
();

108 
Â
 = 
	`f›í
(
PLU_NAME_IDX_FILE
, "rb+");

109 i‡(
Â
 =
NULL
)

110  -
EFILE_OPEN_FAIL
;

112 
	`mem£t
(&
ªc‹d_node
, 0, (record_node));

114 
ªt
 = 
fûe_›s
->
	`ªad_ªc‹d
(
Â
, 
off£t
, &
ªc‹d_node
);

115 i‡(
ªt
 < 0)

116 
Áû
;

118 
	`mem˝y
(
«me_idx
, 
ªc‹d_node
.
d©a
, (*name_idx));

120 
ªt
 = 
SUCCESS
;

121 
Áû
:

122 
	`f˛o£
(
Â
);

123  
ªt
;

124 
	}
}

130 
	$∂u_fûe_modify_«me_idx
(
off£t
, 
∂u_«me_idx
 * 
«me_idx
)

132  
SUCCESS
;

133 
	}
}

142 
	$∂u_fûe_≠≥nd_«me_idx
(*
«me
, 
∂u_num
)

144 
ªt
;

145 
Àn
;

146 
off£t
 = 0;

148 
FILE
 *
Â
;

149 
fûe_ªc‹d_node
 
ªc‹d_node
;

150 
∂u_«me_idx
 
«me_idx
;

151 
fûe_›î©e
 *
fûe_›s
 = 
	`gë_fûe_›s
();

153 #ifde‡
CONFIG_DEBUG


154 
	`as£π
(
«me
 !
NULL
);

155 
	`as£π
(
fûe_›s
 !
NULL
);

158 
	`mem£t
(&
ªc‹d_node
, 0, (record_node));

159 
	`mem£t
(&
«me_idx
, 0, (name_idx));

161 
Àn
 = 
	`°æí
(
«me
);

162 
«me_idx
.
¸c32
 = 
	`¸c32_chk
((
uch¨
 *)
«me
, 
Àn
);

163 
«me_idx
.
∂u_num
 =Ölu_num;

164 
	`mem˝y
(
ªc‹d_node
.
d©a
, &
«me_idx
, (name_idx));

166 
Â
 = 
	`f›í
(
PLU_NAME_IDX_FILE
, "rb+");

167 i‡(
Â
 =
NULL
)

168  -
EFILE_OPEN_FAIL
;

170 
ªt
 = 
	`∂u_fûe_idx_by_«me
(
«me
, &
off£t
);

171 i‡(
ªt
 =
SUCCESS
) {

173 
ªt
 = -
EPLU_NAME_EXSIT
;

174 
Áû
;

177 i‡(
ªt
 =-
EPLU_DEL_NAME
) {

178 
ªt
 = 
fûe_›s
->
	`modify_ªc‹d
(
Â
, 
off£t
, &
ªc‹d_node
);

179 i‡(
ªt
 < 0)

180 
Áû
;

181 } i‡(
ªt
 =-
EPLU_NO_NAME
) {

182 
ªt
 = 
fûe_›s
->
	`≠≥nd_ªc‹d
(
Â
, &
ªc‹d_node
);

183 i‡(
ªt
 < 0)

184 
Áû
;

188 
ªt
 = 
SUCCESS
;

189 
Áû
:

190 
	`f˛o£
(
Â
);

191  
SUCCESS
;

192 
	}
}

199 
	$∂u_fûe_dñëe_«me_idx
(* 
«me
)

201 
ªt
;

202 
off£t
;

204 
FILE
 *
Â
;

205 
fûe_›î©e
 *
fûe_›s
 = 
	`gë_fûe_›s
();

207 #ifde‡
CONFIG_DEBUG


208 
	`as£π
(
«me
 !
NULL
);

209 
	`as£π
(
fûe_›s
 !
NULL
);

212 
Â
 = 
	`f›í
(
PLU_BC_IDX_FILE
, "rb+");

213 i‡(
Â
 =
NULL
)

214  -
EFILE_OPEN_FAIL
;

216 
ªt
 = 
	`∂u_fûe_idx_by_«me
(
«me
, &
off£t
);

217 i‡(
ªt
 =
SUCCESS
) {

219 
ªt
 = 
fûe_›s
->
	`dñëe_ªc‹d
(
Â
, 
off£t
);

220 i‡(
ªt
 < 0)

221 
Áû
;

224 
ªt
 = 
SUCCESS
;

225 
Áû
:

226 
	`f˛o£
(
Â
);

227  
ªt
;

228 
	}
}

231 #ifde‡
CONFIG_HHP


237 
	$∂u_fûe_idx_by_b¨c‹d
(*
b¨code
, *
off£t
)

239 
i
, 
ªt
, 
tŸÆ
;

240 
uöt
 
¸c32
;

241 
FILE
 *
Â
;

242 
fûe_hód_node
 
hód_node
;

243 
fûe_ªc‹d_node
 
ªc‹d_node
;

244 
∂u_b¨code_idx
 
b¨code_idx
;

245 
fûe_›î©e
 *
fûe_›s
 = 
	`gë_fûe_›s
();

247 #ifde‡
CONFIG_DEBUG


248 
	`as£π
(
b¨code
 !
NULL
);

249 
	`as£π
(
fûe_›s
 !
NULL
);

252 
	`mem£t
(&
hód_node
, 0, (head_node));

253 
	`mem£t
(&
ªc‹d_node
, 0, (record_node));

255 
Â
 = 
	`f›í
(
PLU_BC_IDX_FILE
, "rb+");

256 if(
Â
 =
NULL
)

257  -
EFILE_OPEN_FAIL
;

259 
¸c32
 = 
	`¸c32_chk
(
b¨code
, 12);

261 
ªt
 = 
fûe_›s
->
	`ªad_hód
(
Â
, &
hód_node
);

262 i‡(
ªt
 < 0)

263 
Áû
;

265 
tŸÆ
 = 
hód_node
.
ªc‹d_tŸÆ_cou¡
;

266 
i
 = 0; i < 
tŸÆ
; i++) {

267 
ªt
 = 
fûe_›s
->
	`ªad_ªc‹d
(
Â
, 
i
 + 1, &
ªc‹d_node
);

268 i‡(
ªt
 < 0)

269 
Áû
;

271 
	`mem˝y
(&
b¨code_idx
, 
ªc‹d_node
.
d©a
, (barcode_idx));

273 i‡(
ªc‹d_node
.
Êag
 =
DELETED
) {

274 i‡(
b¨code_idx
.
¸c32
 == crc32) {

275 *
off£t
 = 
i
 + 1;

276 
ªt
 = -
EPLU_DEL_BARCODE
;

277 
Áû
;

283 i‡(
b¨code_idx
.
¸c32
 != crc32)

286 *
off£t
 = 
i
 + 1;

287 
ªt
 = 
SUCCESS
;

293 i‡(
i
 =
tŸÆ
)

294 
ªt
 = -
EPLU_NO_BARCODE
;

296 
Áû
:

297 
	`f˛o£
(
Â
);

298  
ªt
;

299 
	}
}

302 #ifde‡
CONFIG_HHP


304 
	$∂u_fûe_ªad_b¨c‹d_idx
(
off£t
, 
∂u_b¨code_idx
 * 
b¨_idx
)

306 
ªt
;

307 
FILE
 *
Â
;

309 
fûe_ªc‹d_node
 
ªc‹d_node
;

310 
fûe_›î©e
 *
fûe_›s
 = 
	`gë_fûe_›s
();

312 
Â
 = 
	`f›í
(
PLU_BC_IDX_FILE
, "rb+");

313 i‡(
Â
 =
NULL
)

314  -
EFILE_OPEN_FAIL
;

316 
	`mem£t
(&
ªc‹d_node
, 0, (record_node));

318 
ªt
 = 
fûe_›s
->
	`ªad_ªc‹d
(
Â
, 
off£t
, &
ªc‹d_node
);

319 i‡(
ªt
 < 0)

320 
Áû
;

322 
	`mem˝y
(
b¨_idx
, 
ªc‹d_node
.
d©a
, (*bar_idx));

324 
ªt
 = 
SUCCESS
;

325 
Áû
:

326 
	`f˛o£
(
Â
);

327  
ªt
;

328 
	}
}

331 #ifde‡
CONFIG_HHP


335 
	$∂u_fûe_modify_b¨code_idx
(
off£t
, 
∂u_num
)

337  
SUCCESS
;

338 
	}
}

341 #ifde‡
CONFIG_HHP


348 
	$∂u_fûe_≠≥nd_b¨c‹d_idx
(*
b¨code
, 
∂u_num
)

350 
ªt
;

351 
off£t
;

352 
FILE
 *
Â
;

353 
fûe_ªc‹d_node
 
ªc‹d_node
;

354 
∂u_b¨code_idx
 
b¨code_idx
;

355 
fûe_›î©e
 *
fûe_›s
 = 
	`gë_fûe_›s
();

357 #ifde‡
CONFIG_DEBUG


358 
	`as£π
(
b¨code
 !
NULL
);

359 
	`as£π
(
fûe_›s
 !
NULL
);

362 
	`mem£t
(&
ªc‹d_node
, 0, (record_node));

363 
	`mem£t
(&
b¨code_idx
, 0, (barcode_idx));

365 
b¨code_idx
.
¸c32
 = 
	`¸c32_chk
(
b¨code
, 12);

366 
b¨code_idx
.
∂u_num
 =Ölu_num;

367 
	`mem˝y
(
ªc‹d_node
.
d©a
, &
b¨code_idx
, (barcode_idx));

369 
Â
 = 
	`f›í
(
PLU_BC_IDX_FILE
, "rb+");

370 i‡(
Â
 =
NULL
)

371  -
EFILE_OPEN_FAIL
;

373 
ªt
 = 
	`∂u_fûe_idx_by_b¨c‹d
(
b¨code
, &
off£t
);

374 i‡(
ªt
 =
SUCCESS
) {

376 
ªt
 = -
EPLU_BARCODE_EXSIT
;

377 
Áû
;

380 i‡(
ªt
 =-
EPLU_DEL_BARCODE
) {

381 
ªt
 = 
fûe_›s
->
	`modify_ªc‹d
(
Â
, 
off£t
, &
ªc‹d_node
);

382 i‡(
ªt
 < 0)

383 
Áû
;

384 } i‡(
ªt
 =-
EPLU_NO_BARCODE
) {

385 
ªt
 = 
fûe_›s
->
	`≠≥nd_ªc‹d
(
Â
, &
ªc‹d_node
);

386 i‡(
ªt
 < 0)

387 
Áû
;

391 
ªt
 = 
SUCCESS
;

392 
Áû
:

393 
	`f˛o£
(
Â
);

394  
ªt
;

395 
	}
}

399 #ifde‡
CONFIG_HHP


405 
	$∂u_fûe_dñëe_b¨code_idx
(*
b¨code
)

407 
ªt
;

408 
off£t
;

409 
FILE
 *
Â
;

410 
fûe_›î©e
 *
fûe_›s
 = 
	`gë_fûe_›s
();

412 #ifde‡
CONFIG_DEBUG


413 
	`as£π
(
b¨code
 !
NULL
);

414 
	`as£π
(
fûe_›s
 !
NULL
);

417 
Â
 = 
	`f›í
(
PLU_BC_IDX_FILE
, "rb+");

418 i‡(
Â
 =
NULL
)

419  -
EFILE_OPEN_FAIL
;

421 
ªt
 = 
	`∂u_fûe_idx_by_b¨c‹d
(
b¨code
, &
off£t
);

422 i‡(
ªt
 =
SUCCESS
) {

424 
ªt
 = 
fûe_›s
->
	`dñëe_ªc‹d
(
Â
, 
off£t
);

425 i‡(
ªt
 < 0)

426 
Áû
;

428 
ªt
 = 
SUCCESS
;

431 
Áû
:

432 
	`f˛o£
(
Â
);

433  
FAIL
;

434 
	}
}

445 
	$∂u_fûe_ªad_d±_cfg
(
d±_num
, 
d±_cfg_ôem
 * 
d±_cfg
)

447 
ªt
;

448 
FILE
 *
Â
;

449 
fûe_ªc‹d_node
 
ªc‹d_node
;

450 
fûe_›î©e
 * 
fûe_›s
 = 
	`gë_fûe_›s
();

452 #ifde‡
CONFIG_DEBUG


453 
	`as£π
(
d±_cfg
 !
NULL
);

454 
	`as£π
(
d±_num
 >= 1 && dpt_num <= 20);

457 
Â
 = 
	`f›í
(
DPT_CFG_FILE
, "rb+");

458 i‡(
Â
 =
NULL
)

459  -
EFILE_OPEN_FAIL
;

461 
	`mem£t
(&
ªc‹d_node
, 0, (record_node));

463 
ªt
 = 
fûe_›s
->
	`ªad_ªc‹d
(
Â
, 
d±_num
, &
ªc‹d_node
);

464 i‡(
ªt
 < 0)

465 
Áû
;

467 
	`mem˝y
(
d±_cfg
, 
ªc‹d_node
.
d©a
, (*dpt_cfg));

469 
ªt
 = 
SUCCESS
;

470 
Áû
:

471 
	`f˛o£
(
Â
);

472  
ªt
;

473 
	}
}

480 
	$∂u_fûe_≠≥nd_d±_cfg
(
d±_cfg_ôem
 * 
d±_cfg
)

482 
ªt
;

483 
FILE
 *
Â
;

484 
fûe_ªc‹d_node
 
ªc‹d_node
;

485 
fûe_›î©e
 * 
fûe_›s
 = 
	`gë_fûe_›s
();

487 #ifde‡
CONFIG_DEBUG


488 
	`as£π
(
d±_cfg
 !
NULL
);

489 
	`as£π
(
fûe_›s
 !
NULL
);

492 
Â
 = 
	`f›í
(
DPT_CFG_FILE
, "rb+");

493 i‡(
Â
 =
NULL
)

494  -
EFILE_OPEN_FAIL
;

496 
	`mem£t
(&
ªc‹d_node
, 0, (record_node));

498 
ªc‹d_node
.
Êag
 = 
IN_USING
;

499 
	`mem˝y
(
ªc‹d_node
.
d©a
, 
d±_cfg
, (
d±_cfg_ôem
));

501 
ªt
 = 
fûe_›s
->
	`≠≥nd_ªc‹d
(
Â
, &
ªc‹d_node
);

502 i‡(
ªt
 < 0)

503 
Áû
;

505 
ªt
 = 
SUCCESS
;

506 
Áû
:

507 
	`f˛o£
(
Â
);

508  
ªt
;

509 
	}
}

517 
	$∂u_fûe_modify_d±_cfg
(
d±_num
, 
d±_cfg_ôem
 * 
d±_cfg
)

519 
ªt
;

520 
FILE
 *
Â
;

521 
fûe_ªc‹d_node
 
ªc‹d_node
;

522 
fûe_›î©e
 * 
fûe_›s
 = 
	`gë_fûe_›s
();

524 #ifde‡
CONFIG_DEBUG


525 
	`as£π
(
d±_cfg
 !
NULL
);

526 
	`as£π
(
d±_num
 >= 1 && dpt_num <= 20);

529 
Â
 = 
	`f›í
(
DPT_CFG_FILE
, "rb+");

530 i‡(
Â
 =
NULL
)

531  -
EFILE_OPEN_FAIL
;

533 
	`mem£t
(&
ªc‹d_node
, 0, (record_node));

535 
ªt
 = 
fûe_›s
->
	`ªad_ªc‹d
(
Â
, 
d±_num
, &
ªc‹d_node
);

536 i‡(
ªt
 < 0)

537 
Áû
;

539 
	`mem˝y
(
ªc‹d_node
.
d©a
, 
d±_cfg
, (
d±_cfg_ôem
));

541 
ªt
 = 
fûe_›s
->
	`modify_ªc‹d
(
Â
, 
d±_num
, &
ªc‹d_node
);

542 i‡(
ªt
 < 0)

543 
Áû
;

545 
ªt
 = 
SUCCESS
;

546 
Áû
:

547 
	`f˛o£
(
Â
);

548  
SUCCESS
;

549 
	}
}

555 
	$∂u_fûe_gë_‰ì_d±
()

557 
ªt
;

558 
ödex
;

559 
d±_cfg_ôem
 
d±_cfg
;

560 
	`mem£t
(&
d±_cfg
, 0, (dpt_cfg));

562 
ödex
 = 0;

563 
ödex
 = 0; index < 20; index++) {

564 
ªt
 = 
	`∂u_fûe_ªad_d±_cfg
(
ödex
 + 1, &
d±_cfg
);

565 i‡(
ªt
 < 0)

566  
ªt
;

568 i‡(
d±_cfg
.
Êag
 =
FREE_ITEM
)

572  
ödex
 + 1;

573 
	}
}

579 
	$∂u_fûe_gë_d±_amou¡
()

581 
ªt
;

582 
ödex
, 
amou¡
;

583 
d±_cfg_ôem
 
d±_cfg
;

585 
	`mem£t
(&
d±_cfg
, 0, (dpt_cfg));

587 
amou¡
 = 0;

588 
ödex
 = 0;

589 
ödex
 = 0; index < 20; index++) {

590 
ªt
 = 
	`∂u_fûe_ªad_d±_cfg
(
ödex
 + 1, &
d±_cfg
);

591 i‡(
ªt
 < 0)

592  
ªt
;

594 i‡(
d±_cfg
.
Êag
 =
BUSY_ITEM
)

595 
amou¡
++;

598  
amou¡
;

599 
	}
}

606 
	$∂u_fûe_is_‰ì_d±
(
d±_num
)

608 
ªt
;

609 
d±_cfg_ôem
 
cfg_ôem
;

611 #ifde‡
CONFIG_DEBUG


612 
	`as£π
(
d±_num
 >= 1 && dpt_num <= 20);

615 
	`mem£t
(&
cfg_ôem
, 0, (cfg_item));

617 
ªt
 = 
	`∂u_fûe_ªad_d±_cfg
(
d±_num
, &
cfg_ôem
);

618 i‡(
ªt
 < 0)

619  
ªt
;

621 i‡(
cfg_ôem
.
Êag
 =
FREE_ITEM
)

622  
POSITIVE
;

624  
NEGATIVE
;

625 
	}
}

633 
	$∂u_fûe_ªad_d±
(
d±_num
, 
d±_ôem
 * dpt_item)

635 
ªt
;

636 
«me
[
MAX_FILE_NAME_SIZE
 + 1] = {0};

637 
FILE
 *
Â
;

638 
fûe_ªc‹d_node
 
ªc‹d_node
;

639 
fûe_›î©e
 * 
fûe_›s
 = 
	`gë_fûe_›s
();

641 #ifde‡
CONFIG_DEBUG


642 
	`as£π
(
d±_num
 >= 1 && dpt_num <= 20);

643 
	`as£π
(
d±_ôem
 !
NULL
);

644 
	`as£π
(
fûe_›s
 !
NULL
);

648 
ªt
 = 
	`∂u_fûe_is_‰ì_d±
(
d±_num
);

649 i‡(
ªt
 !
NEGATIVE
)

650  -
EPLU_DPT_IS_FREE
;

652 
	`mem£t
(&
ªc‹d_node
, 0, (record_node));

653 
	`¢¥ötf
(
«me
, 
MAX_FILE_NAME_SIZE
, "%s%s%d%s", 
COM_PATH
, 
DPT_FILE_PREFIX
,

654 
d±_num
, 
DPT_FILE_SUFFIX
);

656 
Â
 = 
	`f›í
(
«me
, "rb+");

657 i‡(
Â
 =
NULL
)

658  -
EFILE_OPEN_FAIL
;

660 
	`mem£t
(&
ªc‹d_node
, 0, (record_node));

661 
ªt
 = 
fûe_›s
->
	`ªad_ªc‹d
(
Â
, 1, &
ªc‹d_node
);

662 i‡(
ªt
 < 0)

663 
Áû
;

665 
	`mem˝y
(
d±_ôem
, 
ªc‹d_node
.
d©a
, (*dpt_item));

667 
ªt
 = 
SUCCESS
;

668 
Áû
:

669 
	`f˛o£
(
Â
);

670  
ªt
;

671 
	}
}

680 
	$∂u_fûe_≠≥nd_d±
(
d±_num
, 
d±_ôem
 * dpt_item)

682 
ªt
;

683 
«me
[
MAX_FILE_NAME_SIZE
] = {0};

684 
FILE
 *
Â
;

685 
fûe_ªc‹d_node
 
ªc‹d_node
;

686 
d±_cfg_ôem
 dpt_cfg_item;

687 
fûe_›î©e
 * 
fûe_›s
 = 
	`gë_fûe_›s
();

689 #ifde‡
CONFIG_DEBUG


690 
	`as£π
(
d±_num
 >= 1 && dpt_num <= 20);

691 
	`as£π
(
d±_ôem
 !
NULL
);

692 
	`as£π
(
fûe_›s
 !
NULL
);

695 
ªt
 = 
	`∂u_fûe_is_‰ì_d±
(
d±_num
);

696 i‡(
ªt
 !
POSITIVE
)

697  -
EPLU_DPT_IS_BUSY
;

699 
	`mem£t
(&
ªc‹d_node
, 0, (record_node));

700 
	`mem£t
(&
d±_cfg_ôem
, 0, (dpt_cfg_item));

702 
	`¢¥ötf
(
«me
, 
MAX_FILE_NAME_SIZE
, "%s%s%d%s", 
COM_PATH
, 
DPT_FILE_PREFIX
,

703 
d±_num
, 
DPT_FILE_SUFFIX
);

705 
Â
 = 
	`f›í
(
«me
, "rb+");

706 i‡(
Â
 =
NULL
)

707  -
EFILE_OPEN_FAIL
;

712 
d±_ôem
->
d±_num
 = dpt_num;

713 
ªc‹d_node
.
Êag
 = 
IN_USING
;

714 
	`mem˝y
(
ªc‹d_node
.
d©a
, 
d±_ôem
, (dpt_item));

716 
ªt
 = 
fûe_›s
->
	`≠≥nd_ªc‹d
(
Â
, &
ªc‹d_node
);

717 i‡(
ªt
 < 0)

718 
Áû
;

723 
ªt
 = 
	`∂u_fûe_ªad_d±_cfg
(
d±_num
, &
d±_cfg_ôem
);

724 i‡(
ªt
 < 0)

725 
Áû
;

727 
d±_cfg_ôem
.
Êag
 = 
BUSY_ITEM
;

729 
ªt
 = 
	`∂u_fûe_modify_d±_cfg
(
d±_num
, &
d±_cfg_ôem
);

730 i‡(
ªt
 < 0)

731 
Áû
;

733 
Áû
:

734 
	`f˛o£
(
Â
);

735  
ªt
;

736 
	}
}

744 
	$∂u_fûe_modify_d±
(
d±_num
, 
d±_ôem
 *dpt_item)

746 
ªt
;

747 
«me
[
MAX_FILE_NAME_SIZE
 + 1] = {0};

749 
FILE
 *
Â
;

750 
fûe_ªc‹d_node
 
ªc‹d_node
;

751 
fûe_›î©e
 * 
fûe_›s
 = 
	`gë_fûe_›s
();

753 #ifde‡
CONFIG_DEBUG


754 
	`as£π
(
d±_num
 >= 1 && dpt_num <= 20);

755 
	`as£π
(
d±_ôem
 !
NULL
);

756 
	`as£π
(
fûe_›s
 !
NULL
);

759 
ªt
 = 
	`∂u_fûe_is_‰ì_d±
(
d±_num
);

760 i‡(
ªt
 !
NEGATIVE
)

761  -
EPLU_DPT_IS_FREE
;

763 
	`mem£t
(&
ªc‹d_node
, 0, (record_node));

765 
	`¢¥ötf
(
«me
, 
MAX_FILE_NAME_SIZE
, "%s%s%d%s", 
COM_PATH
, 
DPT_FILE_PREFIX
,

766 
d±_num
, 
DPT_FILE_SUFFIX
);

768 
Â
 = 
	`f›í
(
«me
, "rb+");

769 i‡(
Â
 =
NULL
)

770  -
EFILE_OPEN_FAIL
;

772 
ªt
 = 
fûe_›s
->
	`ªad_ªc‹d
(
Â
, 1, &
ªc‹d_node
);

773 i‡(
ªt
 < 0)

774 
Áû
;

776 
	`mem˝y
(
ªc‹d_node
.
d©a
, 
d±_ôem
, (dpt_item));

777 
ªt
 = 
fûe_›s
->
	`modify_ªc‹d
(
Â
, 1, &
ªc‹d_node
);

778 i‡(
ªt
 < 0)

779 
Áû
;

781 
ªt
 = 
SUCCESS
;

782 
Áû
:

783 
	`f˛o£
(
Â
);

784  
ªt
;

785 
	}
}

793 
	$∂u_fûe_dñëe_d±
(
d±_num
)

795 
ªt
;

796 
«me
[
MAX_FILE_NAME_SIZE
] = {0};

798 
FILE
 *
Â
;

799 
fûe_hód_node
 
hód_node
;

800 
fûe_ªc‹d_node
 
ªc‹d_node
;

801 
d±_cfg_ôem
 dpt_cfg_item;

802 
fûe_›î©e
 * 
fûe_›s
 = 
	`gë_fûe_›s
();

804 #ifde‡
CONFIG_DEBUG


805 
	`as£π
(
d±_num
 >= 1 && dpt_num <= 20);

806 
	`as£π
(
fûe_›s
 !
NULL
);

809 
ªt
 = 
	`∂u_fûe_is_‰ì_d±
(
d±_num
);

810 i‡(
ªt
 !
NEGATIVE
)

811  -
EPLU_DPT_IS_FREE
;

813 
	`mem£t
(&
hód_node
, 0, (head_node));

814 
	`mem£t
(&
ªc‹d_node
, 0, (record_node));

815 
	`mem£t
(&
d±_cfg_ôem
, 0, (dpt_cfg_item));

817 
	`¢¥ötf
(
«me
, 
MAX_FILE_NAME_SIZE
, "%s%s%d%s", 
COM_PATH
, 
DPT_FILE_PREFIX
,

818 
d±_num
, 
DPT_FILE_SUFFIX
);

820 
Â
 = 
	`f›í
(
«me
, "rb+");

821 i‡(
Â
 =
NULL
)

822  -
EFILE_OPEN_FAIL
;

824 
ªt
 = 
fûe_›s
->
	`ªad_hód
(
Â
, &
hód_node
);

825 i‡(
ªt
 < 0)

826 
Áû
;

831 i‡(
hód_node
.
ªc‹d_vaûd_cou¡
 > 1) {

832 
ªt
 = -
EPLU_DPT_NOT_EMPTY
;

833 
Áû
;

837 
ªt
 = 
fûe_›s
->
	`˛ór_ªc‹d
(
«me
);

838 i‡(
ªt
 < 0)

839 
Áû
;

844 
ªt
 = 
	`∂u_fûe_ªad_d±_cfg
(
d±_num
, &
d±_cfg_ôem
);

845 i‡(
ªt
 < 0)

846 
Áû
;

848 
d±_cfg_ôem
.
Êag
 = 
FREE_ITEM
;

850 
ªt
 = 
	`∂u_fûe_modify_d±_cfg
(
d±_num
, &
d±_cfg_ôem
);

851 i‡(
ªt
 < 0)

852 
Áû
;

854 
ªt
 = 
SUCCESS
;

855 
Áû
:

856 
	`f˛o£
(
Â
);

857  
ªt
;

858 
	}
}

866 
	$∂u_fûe_ªad_∂u
(
∂u_num
, 
∂u_ôem
 *Ölu_item)

868 
ªt
;

869 
d±_num
;

870 
∂u_off£t
;

871 
«me
[
MAX_FILE_NAME_SIZE
] = {0};

873 
FILE
 *
Â
;

874 
fûe_ªc‹d_node
 
ªc‹d_node
;

875 
fûe_›î©e
 * 
fûe_›s
 = 
	`gë_fûe_›s
();

877 
	`mem£t
(&
ªc‹d_node
, 0, (record_node));

879 
d±_num
 = 
∂u_num
 / 1000;

880 
∂u_off£t
 = 
∂u_num
 - 
d±_num
 * 1000;

881 
∂u_off£t
 += 2;

883 #ifde‡
CONFIG_DEBUG


884 
	`as£π
(
d±_num
 >= 1&& dpt_num <= 20);

885 
	`as£π
(
fûe_›s
 !
NULL
);

887 i‡(
d±_num
 < 1 || dpt_num > 20)

888  -
EPLU_BAD_DPT_NUM
;

891 
ªt
 = 
	`∂u_fûe_is_‰ì_d±
(
d±_num
);

892 i‡(
ªt
 =
POSITIVE
)

893  -
EPLU_DPT_IS_FREE
;

895 
	`¢¥ötf
(
«me
, 
MAX_FILE_NAME_SIZE
, "%s%s%d%s", 
COM_PATH
, 
DPT_FILE_PREFIX
,

896 
d±_num
, 
DPT_FILE_SUFFIX
);

898 
Â
 = 
	`f›í
(
«me
, "rb+");

899 i‡(
Â
 =
NULL
)

900  -
EFILE_OPEN_FAIL
;

902 
ªt
 = 
fûe_›s
->
	`ªad_ªc‹d
(
Â
, 
∂u_off£t
, &
ªc‹d_node
);

903 i‡(
ªt
 < 0)

904 
Áû
;

906 
	`mem˝y
(
∂u_ôem
, 
ªc‹d_node
.
d©a
, (*plu_item));

908 
ªt
 = 
SUCCESS
;

909 
Áû
:

910 
	`f˛o£
(
Â
);

911  
ªt
;

912 
	}
}

919 
	$∂u_fûe_gë_‰ì_∂u
(
d±_num
)

921 
ªt
;

922 
‰ì_∂u
;

923 
«me
[
MAX_FILE_NAME_SIZE
] = {0};

925 
FILE
 *
Â
;

926 
fûe_hód_node
 
hód_node
;

927 
fûe_›î©e
 * 
fûe_›s
 = 
	`gë_fûe_›s
();

929 #ifde‡
CONFIG_DEBUG


930 
	`as£π
(
d±_num
 >= 1 && dpt_num <= 20);

931 
	`as£π
(
fûe_›s
 !
NULL
);

934 
ªt
 = 
	`∂u_fûe_is_‰ì_d±
(
d±_num
);

935 i‡(
ªt
 =
POSITIVE
)

936  -
EPLU_DPT_IS_FREE
;

938 
	`¢¥ötf
(
«me
, 
MAX_FILE_NAME_SIZE
, "%s%s%d%s", 
COM_PATH
, 
DPT_FILE_PREFIX
,

939 
d±_num
, 
DPT_FILE_SUFFIX
);

941 
Â
 = 
	`f›í
(
«me
, "rb+");

942 i‡(
Â
 =
NULL
)

943  -
EFILE_OPEN_FAIL
;

945 
ªt
 = 
fûe_›s
->
	`ªad_hód
(
Â
, &
hód_node
);

946 i‡(
ªt
 < 0) {

947 
	`f˛o£
(
Â
);

948  
ªt
;

950 
	`f˛o£
(
Â
);

952 
‰ì_∂u
 = 
d±_num
 * 1000;

955 i‡(
hód_node
.
fú°_dñ_ªc‹d
 != 0)

956 
‰ì_∂u
 +
hód_node
.
fú°_dñ_ªc‹d
;

958 
‰ì_∂u
 +
hód_node
.
ªc‹d_tŸÆ_cou¡
 + 1;

963 
‰ì_∂u
 -= 2;

964  
‰ì_∂u
;

965 
	}
}

971 
	$∂u_fûe_öc_cou¡
()

973 
ªt
;

974 
FILE
 *
Â
;

975 
∂u_cou¡
Ölu_count;

976 
fûe_ªc‹d_node
 
ªc‹d_node
;

977 
fûe_hód_node
 
hód_node
;

978 
fûe_›î©e
 *
fûe_›s
 = 
	`gë_fûe_›s
();

980 
Â
 = 
	`f›í
(
PLU_COUNT_FILE
, "rb+");

981 i‡(
Â
 =
NULL
)

982  -
EFILE_OPEN_FAIL
;

984 
	`mem£t
(&
∂u_cou¡
, 0, (plu_count));

985 
	`mem£t
(&
ªc‹d_node
, 0, (record_node));

986 
	`mem£t
(&
hód_node
, 0, (head_node));

988 
ªt
 = 
fûe_›s
->
	`ªad_hód
(
Â
, &
hód_node
);

989 i‡(
ªt
 < 0)

990 
Áû
;

993 i‡(
hód_node
.
ªc‹d_vaûd_cou¡
 == 0) {

994 
∂u_cou¡
.plu_count = 1;

995 
	`mem˝y
(
ªc‹d_node
.
d©a
, &
∂u_cou¡
, (plu_count));

996 
ªt
 = 
fûe_›s
->
	`≠≥nd_ªc‹d
(
Â
, &
ªc‹d_node
);

997 i‡(
ªt
 < 0)

998 
Áû
;

1000 
ªt
 = 
fûe_›s
->
	`ªad_ªc‹d
(
Â
, 1, &
ªc‹d_node
);

1001 i‡(
ªt
 < 0)

1002 
Áû
;

1004 
	`mem˝y
(&
∂u_cou¡
, 
ªc‹d_node
.
d©a
, (plu_count));

1006 
∂u_cou¡
.plu_count ++;

1008 
	`mem˝y
(
ªc‹d_node
.
d©a
, &
∂u_cou¡
, (plu_count));

1010 
ªt
 = 
fûe_›s
->
	`modify_ªc‹d
(
Â
, 1, &
ªc‹d_node
);

1011 i‡(
ªt
 < 0)

1012 
Áû
;

1015 
ªt
 = 
SUCCESS
;

1017 
Áû
:

1018 
	`f˛o£
(
Â
);

1019  
ªt
;

1020 
	}
}

1026 
	$∂u_fûe_dec_cou¡
()

1028 
ªt
;

1029 
FILE
 *
Â
;

1031 
∂u_cou¡
Ölu_count;

1032 
fûe_ªc‹d_node
 
ªc‹d_node
;

1033 
fûe_›î©e
 *
fûe_›s
 = 
	`gë_fûe_›s
();

1035 
Â
 = 
	`f›í
(
PLU_COUNT_FILE
, "rb+");

1036 i‡(
Â
 =
NULL
)

1037  -
EFILE_OPEN_FAIL
;

1039 
	`mem£t
(&
ªc‹d_node
, 0, (record_node));

1041 
ªt
 = 
fûe_›s
->
	`ªad_ªc‹d
(
Â
, 1, &
ªc‹d_node
);

1042 i‡(
ªt
 < 0)

1043 
Áû
;

1045 
	`mem˝y
(&
∂u_cou¡
, 
ªc‹d_node
.
d©a
, (plu_count));

1047 
∂u_cou¡
.plu_count --;

1049 
	`mem˝y
(
ªc‹d_node
.
d©a
, &
∂u_cou¡
, (plu_count));

1051 
ªt
 = 
fûe_›s
->
	`modify_ªc‹d
(
Â
, 1, &
ªc‹d_node
);

1052 i‡(
ªt
 < 0)

1053 
Áû
;

1055 
ªt
 = 
SUCCESS
;

1057 
Áû
:

1058 
	`f˛o£
(
Â
);

1059  
ªt
;

1060 
	}
}

1067 
	$∂u_fûe_gë_∂u_cou¡
(*
cou¡
)

1069 
ªt
;

1070 
FILE
 *
Â
;

1071 
∂u_cou¡
Ölu_count;

1072 
fûe_ªc‹d_node
 
ªc‹d_node
;

1073 
fûe_›î©e
 *
fûe_›s
 = 
	`gë_fûe_›s
();

1075 
Â
 = 
	`f›í
(
PLU_COUNT_FILE
, "rb+");

1076 i‡(
Â
 =
NULL
)

1077  -
EFILE_OPEN_FAIL
;

1079 
	`mem£t
(&
ªc‹d_node
, 0, (record_node));

1081 
ªt
 = 
fûe_›s
->
	`ªad_ªc‹d
(
Â
, 1, &
ªc‹d_node
);

1082 i‡(
ªt
 < 0) {

1083 i‡(
ªt
 =-
EFILE_OFFSET_OVER_FLOW
) {

1084 *
cou¡
 = 0;

1085 
ªt
 = 
SUCCESS
;

1086 
Áû
;

1089 
	`mem˝y
(&
∂u_cou¡
, 
ªc‹d_node
.
d©a
, (plu_count));

1091 *
cou¡
 = 
∂u_cou¡
.plu_count;

1093 
ªt
 = 
SUCCESS
;

1094 
Áû
:

1095 
	`f˛o£
(
Â
);

1096  
ªt
;

1097 
	}
}

1105 
	$∂u_fûe_≠≥nd_∂u
(
‰ì_∂u
, 
∂u_ôem
 *Ölu_item)

1107 
ªt
;

1108 
d±_num
;

1109 
∂u_off£t
;

1110 
«me
[
MAX_FILE_NAME_SIZE
] = {0};

1112 
FILE
 *
Â
;

1113 
fûe_hód_node
 
hód_node
;

1114 
fûe_ªc‹d_node
 
ªc‹d_node
;

1115 
fûe_›î©e
 * 
fûe_›s
 = 
	`gë_fûe_›s
();

1117 
	`mem£t
(&
hód_node
, 0, (head_node));

1118 
	`mem£t
(&
ªc‹d_node
, 0, (record_node));

1120 
d±_num
 = 
‰ì_∂u
 / 1000;

1121 
∂u_off£t
 = 
‰ì_∂u
 - 
d±_num
 * 1000;

1122 
∂u_off£t
 += 2;

1124 #ifde‡
CONFIG_DEBUG


1125 
	`as£π
(
d±_num
 >= 1&& dpt_num <= 20);

1126 
	`as£π
(
fûe_›s
 !
NULL
);

1129 #ifde‡
CONFIG_HHP


1131 
Àn
;

1132 
Àn
 = 
	`°æí
(
∂u_ôem
->
b¨code
);

1133 i‡(
Àn
 =
PLU_BC_LEN
) {

1134 
ªt
 = 
	`∂u_fûe_≠≥nd_b¨c‹d_idx
(
∂u_ôem
->
b¨code
, 
‰ì_∂u
);

1135 i‡(
ªt
 !
SUCCESS
)

1136  
ªt
;

1141 
ªt
 = 
	`∂u_fûe_≠≥nd_«me_idx
(
∂u_ôem
->
«me
, 
‰ì_∂u
);

1142 i‡(
ªt
 !
SUCCESS
)

1143  
ªt
;

1145 
ªt
 = 
	`∂u_fûe_is_‰ì_d±
(
d±_num
);

1146 i‡(
ªt
 =
POSITIVE
)

1147  -
EPLU_DPT_IS_FREE
;

1149 
	`¢¥ötf
(
«me
, 
MAX_FILE_NAME_SIZE
, "%s%s%d%s", 
COM_PATH
, 
DPT_FILE_PREFIX
,

1150 
d±_num
, 
DPT_FILE_SUFFIX
);

1152 
Â
 = 
	`f›í
(
«me
, "rb+");

1153 i‡(
Â
 =
NULL
)

1154  -
EFILE_OPEN_FAIL
;

1156 
ªt
 = 
fûe_›s
->
	`ªad_hód
(
Â
, &
hód_node
);

1157 i‡(
ªt
 < 0)

1158 
Áû
;

1160 
∂u_ôem
->
∂u_num
 = 
‰ì_∂u
;

1161 
ªc‹d_node
.
Êag
 = 
IN_USING
;

1162 
	`mem˝y
(
ªc‹d_node
.
d©a
, 
∂u_ôem
, (*plu_item));

1165 i‡(
hód_node
.
ªc‹d_tŸÆ_cou¡
 < 
∂u_off£t
) {

1166 
ªt
 = 
fûe_›s
->
	`≠≥nd_ªc‹d
(
Â
, &
ªc‹d_node
);

1167 i‡(
ªt
 < 0)

1168 
Áû
;

1171 
ªt
 = 
fûe_›s
->
	`modify_ªc‹d
(
Â
, 
∂u_off£t
, &
ªc‹d_node
);

1172 i‡(
ªt
 < 0)

1173 
Áû
;

1176 
ªt
 = 
	`∂u_fûe_öc_cou¡
();

1177 i‡(
ªt
 < 0)

1178 
Áû
;

1180 
ªt
 = 
SUCCESS
;

1181 
Áû
:

1182 
	`f˛o£
(
Â
);

1183  
ªt
;

1184 
	}
}

1192 
	$∂u_fûe_modify_∂u
(
∂u_num
, 
∂u_ôem
 *Ölu_item)

1194 
ªt
;

1195 
d±_num
;

1196 
∂u_off£t
;

1197 
«me
[
MAX_FILE_NAME_SIZE
] = {0};

1199 
FILE
 *
Â
;

1200 
fûe_ªc‹d_node
 
ªc‹d_node
;

1201 
fûe_›î©e
 * 
fûe_›s
 = 
	`gë_fûe_›s
();

1203 
	`mem£t
(&
ªc‹d_node
, 0, (record_node));

1205 
d±_num
 = 
∂u_num
 / 1000;

1206 
∂u_off£t
 = 
∂u_num
 - 
d±_num
 * 1000;

1207 
∂u_off£t
 += 2;

1209 #ifde‡
CONFIG_DEBUG


1210 
	`as£π
(
d±_num
 >= 1&& dpt_num <= 20);

1211 
	`as£π
(
fûe_›s
 !
NULL
);

1214 
ªt
 = 
	`∂u_fûe_is_‰ì_d±
(
d±_num
);

1215 i‡(
ªt
 =
POSITIVE
)

1216  -
EPLU_DPT_IS_FREE
;

1218 
	`¢¥ötf
(
«me
, 
MAX_FILE_NAME_SIZE
, "%s%s%d%s", 
COM_PATH
, 
DPT_FILE_PREFIX
,

1219 
d±_num
, 
DPT_FILE_SUFFIX
);

1221 
Â
 = 
	`f›í
(
«me
, "rb+");

1222 i‡(
Â
 =
NULL
)

1223  -
EFILE_OPEN_FAIL
;

1225 
	`mem˝y
(
ªc‹d_node
.
d©a
, 
∂u_ôem
, (*plu_item));

1227 
ªt
 = 
fûe_›s
->
	`modify_ªc‹d
(
Â
, 
∂u_off£t
, &
ªc‹d_node
);

1228 i‡(
ªt
 < 0)

1229 
Áû
;

1231 
ªt
 = 
SUCCESS
;

1232 
Áû
:

1233 
	`f˛o£
(
Â
);

1234  
ªt
;

1235 
	}
}

1242 
	$∂u_fûe_dñ_∂u
(
∂u_num
)

1244 
ªt
;

1245 
d±_num
;

1246 
∂u_off£t
;

1247 
«me
[
MAX_FILE_NAME_SIZE
] = {0};

1249 
FILE
 *
Â
;

1250 
fûe_ªc‹d_node
 
ªc‹d_node
;

1251 
∂u_ôem
Ölu_item;

1252 
fûe_›î©e
 * 
fûe_›s
 = 
	`gë_fûe_›s
();

1254 
	`mem£t
(&
∂u_ôem
, 0, (plu_item));

1255 
	`mem£t
(&
ªc‹d_node
, 0, (record_node));

1257 
d±_num
 = 
∂u_num
 / 1000;

1258 
∂u_off£t
 = 
∂u_num
 - 
d±_num
 * 1000;

1259 
∂u_off£t
 += 2;

1261 #ifde‡
CONFIG_DEBUG


1262 
	`as£π
(
d±_num
 >= 1&& dpt_num <= 20);

1263 
	`as£π
(
fûe_›s
 !
NULL
);

1266 
ªt
 = 
	`∂u_fûe_is_‰ì_d±
(
d±_num
);

1267 i‡(
ªt
 =
POSITIVE
)

1268  -
EPLU_DPT_IS_FREE
;

1270 
	`¢¥ötf
(
«me
, 
MAX_FILE_NAME_SIZE
, "%s%s%d%s", 
COM_PATH
, 
DPT_FILE_PREFIX
,

1271 
d±_num
, 
DPT_FILE_SUFFIX
);

1273 
Â
 = 
	`f›í
(
«me
, "rb+");

1274 i‡(
Â
 =
NULL
)

1275  -
EFILE_OPEN_FAIL
;

1277 
ªt
 = 
fûe_›s
->
	`ªad_ªc‹d
(
Â
, 
∂u_off£t
, &
ªc‹d_node
);

1278 i‡(
ªt
 < 0)

1279 
Áû
;

1281 
	`mem˝y
(&
∂u_ôem
, 
ªc‹d_node
.
d©a
, (plu_item));

1283 #ifde‡
CONFIG_HHP


1285 
Àn
;

1286 
Àn
 = 
	`°æí
(
∂u_ôem
.
b¨code
);

1287 i‡(
Àn
 =
PLU_BC_LEN
) {

1288 
ªt
 = 
	`∂u_fûe_dñëe_b¨code_idx
(
∂u_ôem
.
b¨code
);

1289 i‡(
ªt
 !
SUCCESS
)

1290 
Áû
;

1295 
ªt
 = 
	`∂u_fûe_dñëe_«me_idx
(
∂u_ôem
.
«me
);

1296 i‡(
ªt
 !
SUCCESS
)

1297 
Áû
;

1299 
	`mem£t
(
ªc‹d_node
.
d©a
, 0, 
MAX_RECORD_SIZE
);

1301 
ªt
 = 
fûe_›s
->
	`modify_ªc‹d
(
Â
, 
∂u_off£t
, &
ªc‹d_node
);

1302 i‡(
ªt
 < 0)

1303 
Áû
;

1305 
ªt
 = 
fûe_›s
->
	`dñëe_ªc‹d
(
Â
, 
∂u_off£t
);

1306 i‡(
ªt
 < 0)

1307 
Áû
;

1309 
ªt
 = 
	`∂u_fûe_dec_cou¡
();

1310 i‡(
ªt
 < 0)

1311 
Áû
;

1313 
ªt
 = 
SUCCESS
;

1314 
Áû
:

1315 
	`f˛o£
(
Â
);

1316  
ªt
;

1317 
	}
}

1324 
	$∂u_fûe_ödex_by_«me
(*
«me
, 
∂u_ôem
 *
ôem
)

1326 
ªt
;

1327 
off£t
 = 0;

1328 
∂u_«me_idx
 
«me_idx
;

1330 
ªt
 = 
	`∂u_fûe_idx_by_«me
(
«me
, &
off£t
);

1331 i‡(
ªt
 !
SUCCESS
) {

1332  
ªt
;

1335 
ªt
 = 
	`∂u_fûe_ªad_«me_idx
(
off£t
, &
«me_idx
);

1336 i‡(
ªt
 < 0) {

1337  
ªt
;

1340 
ªt
 = 
	`∂u_fûe_ªad_∂u
(
«me_idx
.
∂u_num
, 
ôem
);

1341 i‡(
ªt
 < 0) {

1342  
ªt
;

1345  
SUCCESS
;

1346 
	}
}

1348 #ifde‡
CONFIG_HHP


1354 
	$∂u_fûe_ödex_by_bc
(*
bc
, 
∂u_ôem
 * 
ôem
)

1356 
ªt
;

1357 
off£t
 = 0;

1358 
∂u_b¨code_idx
 
bc_idx
;

1360 
ªt
 = 
	`∂u_fûe_idx_by_b¨c‹d
(
bc
, &
off£t
);

1361 i‡(
ªt
 !
SUCCESS
) {

1362  
ªt
;

1365 
ªt
 = 
	`∂u_fûe_ªad_b¨c‹d_idx
(
off£t
, &
bc_idx
);

1366 i‡(
ªt
 < 0) {

1367  
ªt
;

1370 
ªt
 = 
	`∂u_fûe_ªad_∂u
(
bc_idx
.
∂u_num
, 
ôem
);

1371 i‡(
ªt
 < 0) {

1372  
ªt
;

1375  
SUCCESS
;

1376 
	}
}

1383 
	$∂u_fûe_¸óã_fûe
()

1385 
ªt
;

1386 
«me
[
MAX_FILE_NAME_SIZE
] = {0};

1387 
d±_cfg_ôem
 
d±_cfg
;

1388 
fûe_›î©e
 * 
fûe_›s
 = 
	`gë_fûe_›s
();

1390 #ifde‡
CONFIG_DEBUG


1391 
	`as£π
(
fûe_›s
 !
NULL
);

1392 
	`debug_msg
("DOING PLU CREATE FILES.\n");

1395 
ªt
 = 
fûe_›s
->
	`¸ót_dú
(
COM_PATH
);

1396 i‡(
ªt
 < 0)

1397  
ªt
;

1399 
ªt
 = 
fûe_›s
->
	`¸ót_fûe
(
COM_CFG_FILE
, 
COM_CFG_FILE_MODE
, 
COM_CFG_REC_NUM
);

1400 i‡(
ªt
 < 0)

1401  
ªt
;

1403 
ªt
 = 
fûe_›s
->
	`¸ót_fûe
(
DPT_CFG_FILE
, 
DPT_CFG_FILE_MODE
, 
DPT_CFG_REC_NUM
);

1404 i‡(
ªt
 < 0)

1405  
ªt
;

1410 
ödex
 = 1;

1411 
ödex
 = 1; index <
DPT_CFG_REC_NUM
; index++) {

1412 
	`¢¥ötf
(
«me
, 
MAX_FILE_NAME_SIZE
, "%s%s%d%s", 
COM_PATH
, 
DPT_FILE_PREFIX
,

1413 
ödex
, 
DPT_FILE_SUFFIX
);

1415 
ªt
 = 
fûe_›s
->
	`¸ót_fûe
(
«me
, 
DPT_FILE_MODE
, 
DPT_REC_NUM
);

1416 i‡(
ªt
 < 0)

1417  
ªt
;

1420 
ªt
 = 
fûe_›s
->
	`¸ót_fûe
(
PLU_BC_IDX_FILE
, 
PLU_BC_IDX_FILE_MODE
, 
PLU_BC_IDX_REC_NUM
);

1421 i‡(
ªt
 < 0)

1422  
ªt
;

1424 
ªt
 = 
fûe_›s
->
	`¸ót_fûe
(
PLU_NAME_IDX_FILE
, 
PLU_NAME_IDX_FILE_MODE
, 
PLU_NAME_IDX_REC_NUM
);

1425 i‡(
ªt
 < 0)

1426  
ªt
;

1428 
ªt
 = 
fûe_›s
->
	`¸ót_fûe
(
PLU_COUNT_FILE
, 
PLU_COUNT_FILE_MODE
, 
PLU_COUNT_REC_NUM
);

1429 i‡(
ªt
 < 0)

1430  
ªt
;

1432 
ödex
 = 0; index < 
DPT_CFG_REC_NUM
; index++) {

1433 
d±_cfg
.
Êag
 = 
FREE_ITEM
;

1434 
d±_cfg
.
d±_num
 = 
ödex
 + 1;

1436 
ªt
 = 
	`∂u_fûe_≠≥nd_d±_cfg
(&
d±_cfg
);

1437 i‡(
ªt
 < 0)

1438  
ªt
;

1445  
SUCCESS
;

1446 
	}
}

1451 
∂u_›î©e
 
	gg_∂u_›s
 = {

1452 .
gë_‰ì_d±
 = 
∂u_fûe_gë_‰ì_d±
,

1453 .
	gis_‰ì_d±
 = 
∂u_fûe_is_‰ì_d±
,

1454 .
	gªad_d±
 = 
∂u_fûe_ªad_d±
,

1455 .
	g≠≥nd_d±
 = 
∂u_fûe_≠≥nd_d±
,

1456 .
	gmodify_d±
 = 
∂u_fûe_modify_d±
,

1457 .
	gdñëe_d±
 = 
∂u_fûe_dñëe_d±
,

1459 .
	gªad_∂u
 = 
∂u_fûe_ªad_∂u
,

1460 .
	ggë_‰ì_∂u
 = 
∂u_fûe_gë_‰ì_∂u
,

1461 .
	g≠≥nd_∂u
 = 
∂u_fûe_≠≥nd_∂u
,

1462 .
	gmodify_∂u
 = 
∂u_fûe_modify_∂u
,

1463 .
	gdñëe_∂u
 = 
∂u_fûe_dñ_∂u
,

1465 .
	gödex_by_«me
 = 
∂u_fûe_ödex_by_«me
,

1466 #ifde‡
CONFIG_HHP


1467 .
	gödex_by_bc
 = 
∂u_fûe_ödex_by_bc
,

1470 .
	ggë_∂u_cou¡
 = 
∂u_fûe_gë_∂u_cou¡
,

1471 .
	g∂u_öô
 = 
∂u_fûe_¸óã_fûe
,

1474 
∂u_›î©e
 * 
	$gë_∂u_›s
()

1476  &
g_∂u_›s
;

1477 
	}
}

1484 
	gîr_num
;

1486 
	$maö
()

1488 
ªt
;

1490 
∂u_ôem
 
t°_∂u
;

1491 
d±_ôem
 
t°_d±
;

1492 
∂u_«me_idx
 
«me_idx
;

1493 
∂u_b¨code_idx
 
bc_idx
;

1495 *
d±_«me
 = "Book";

1496 *
∂u_«me
 = "Cook Book";

1497 *
t°_b¨code
 = "6954562351233";

1499 
d±_num
;

1500 
∂u_num
;

1501 
off£t
;

1503 
	`¥ötf
("Adding...\n");

1504 
	`¥ötf
("DPTÇamêi†%s\n", 
d±_«me
);

1505 
	`¥ötf
("PLUÇamêi†%s\n", 
∂u_«me
);

1506 
	`¥ötf
("PLU b¨codêi†%s\n", 
t°_b¨code
);

1508 
ªt
 = 
	`∂u_fûe_¸óã_fûe
();

1509 i‡(
ªt
 < 0) {

1510 
	`¥ötf
("create fileÉrror\n");

1514 
	`sync
();

1516 
	`¥ötf
("create file done\n");

1518 
	`mem£t
(&
t°_∂u
, 0, (tst_plu));

1519 
	`mem£t
(&
t°_d±
, 0, (tst_dpt));

1521 
	`mem˝y
(
t°_d±
.
«me
, 
d±_«me
, 
	`°æí
(dpt_name));

1522 
	`mem˝y
(
t°_∂u
.
«me
, 
∂u_«me
, 
	`°æí
(plu_name));

1523 
	`mem˝y
(
t°_∂u
.
b¨code
, 
t°_b¨code
, 
	`°æí
(tst_barcode));

1525 
d±_num
 = 
	`∂u_fûe_gë_‰ì_d±
();

1526 
ªt
 = 
	`∂u_fûe_≠≥nd_d±
(
d±_num
, &
t°_d±
);

1527 i‡(
ªt
 < 0) {

1528 
	`¥ötf
("append dptÉrror\n");

1532 
	`mem£t
(&
t°_d±
, 0, (tst_dpt));

1533 
ªt
 = 
	`∂u_fûe_ªad_d±
(
d±_num
, &
t°_d±
);

1534 i‡(
ªt
 < 0) {

1535 
	`¥ötf
("read dptÉrror\n");

1539 
	`¥ötf
("‰ì d±_num i†%d\n", 
d±_num
);

1540 
	`¥ötf
("d±Çamêi†%s\n", 
t°_d±
.
«me
);

1542 
∂u_num
 = 
	`∂u_fûe_gë_‰ì_∂u
(
d±_num
);

1543 
ªt
 = 
	`∂u_fûe_≠≥nd_∂u
(
∂u_num
, &
t°_∂u
);

1544 i‡(
ªt
 < 0) {

1545 
	`¥ötf
("appendÖluÉrror\n");

1549 
	`sync
();

1551 
	`¥ötf
("‰ìÖlu_num i†%d\n", 
∂u_num
);

1553 
ªt
 = 
	`∂u_fûe_idx_by_«me
(
∂u_«me
, &
off£t
);

1554 i‡(
ªt
 !
SUCCESS
) {

1555 
	`¥ötf
("index byÇame failed\n");

1559 
ªt
 = 
	`∂u_fûe_ªad_«me_idx
(
off£t
, &
«me_idx
);

1560 i‡(
ªt
 < 0) {

1561 
	`¥ötf
("readÇame index failed \n");

1565 
	`¥ötf
("«me_idx b¨codêi†%d\n", 
«me_idx
.
¸c32
);

1566 
	`¥ötf
("«me_idxÖlu_num i†%d\n", 
«me_idx
.
∂u_num
);

1568 
ªt
 = 
	`∂u_fûe_ªad_∂u
(
«me_idx
.
∂u_num
, &
t°_∂u
);

1569 i‡(
ªt
 < 0) {

1570 
	`¥ötf
("readÖlu failed\n");

1574 
	`¥ötf
("∂u iãmÇamêi†%s\n", 
t°_∂u
.
«me
);

1575 
	`¥ötf
("∂u iãm b¨codêi†%s\n", 
t°_∂u
.
b¨code
);

1577 
ªt
 = 
	`∂u_fûe_idx_by_b¨c‹d
(
t°_b¨code
, &
off£t
);

1578 i‡(
ªt
 !
SUCCESS
) {

1579 
	`¥ötf
("index byÇame failed\n");

1583 
ªt
 = 
	`∂u_fûe_ªad_b¨c‹d_idx
(
off£t
, &
bc_idx
);

1584 i‡(
ªt
 < 0) {

1585 
	`¥ötf
("readÇame index failed \n");

1589 
	`¥ötf
("«me_idx crc32 i†%ld\n", 
bc_idx
.
¸c32
);

1590 
	`¥ötf
("«me_idxÖlu_num i†%d\n", 
bc_idx
.
∂u_num
);

1592 
ªt
 = 
	`∂u_fûe_ªad_∂u
(
bc_idx
.
∂u_num
, &
t°_∂u
);

1593 i‡(
ªt
 < 0) {

1594 
	`¥ötf
("readÖlu failed\n");

1598 
	`¥ötf
("∂u iãmÇamêi†%s\n", 
t°_∂u
.
«me
);

1599 
	`¥ötf
("∂u iãm b¨codêi†%s\n", 
t°_∂u
.
b¨code
);

1602 
	}
}

	@misc/power.c

9 
	~"c⁄fig.h
"

10 
	~"comm⁄.h
"

11 
	~"powî.h
"

16 
	$powî_check_powî_°©e
()

18 #ifde‡
CONFIG_REV_BETA


19  
POSITIVE
;

24  
POSITIVE
;

26 
	}
}

28 
powî_°©e
 
	gpm_ba£
 = {

30 .
check_powî_°©e
 = 
powî_check_powî_°©e
,

33 
powî_°©e
 * 
	$gë_powî_°©e
()

35  &
pm_ba£
;

36 
	}
}

	@misc/real_time.c

9 
	~<°dio.h
>

10 
	~<°dlib.h
>

11 
	~<°rög.h
>

12 
	~<uni°d.h
>

13 
	~<as£π.h
>

14 
	~<löux/πc.h
>

15 
	~<f˙é.h
>

16 
	~<sys/io˘l.h
>

17 
	~<sys/time.h
>

18 
	~<sys/ty≥s.h
>

19 
	~<time.h
>

21 
	~"comm⁄.h
"

22 
	~"c⁄fig.h
"

23 
	~"ªÆ_time.h
"

25 
bcd_d©e
 
	gdódlöe
 = {

26 .
yór
 = 
DEADLINE_Y
,

27 .
	gm⁄
 = 
DEADLINE_M
,

28 .
	gday
 = 
DEADLINE_D
,

37 
	$π_cmp_gªg_time
(
gªg_time
 * 
a_time
, gªg_timê*
b_time
)

39 
ªt
;

42 
ªt
 = 
a_time
->
hour
 - 
b_time
->hour;

43 i‡(
ªt
 != 0)

44  
ªt
;

46 
ªt
 = 
a_time
->
mö
 - 
b_time
->min;

47 i‡(
ªt
 != 0)

48  
ªt
;

50 
ªt
 = 
a_time
->
£c
 - 
b_time
->sec;

51 i‡(
ªt
 != 0)

52  
ªt
;

54  
ªt
;

55 
	}
}

62 
	$π_gë_cur_time
(
gªg_time
 *
time
)

64 
ªtvÆ
,
fd
;

65 
πc_time
 
πc_tm
;

67 
fd
 = 
	`›í
(
RTC_DEV
, 
O_RDWR
);

68 if(
fd
 == -1) {

69 
	`¥ötf
("error: open /dev/rtc");

70  
FAIL
;

74 
ªtvÆ
 = 
	`io˘l
(
fd
, 
RTC_RD_TIME
,&
πc_tm
);

75 if(
ªtvÆ
 == -1) {

76 
	`¥ötf
("error : RTC_RD_TIME ioctl");

77 
Áû
;

81 
time
->
hour
 = 
πc_tm
.
tm_hour
;

82 
time
->
mö
 = 
πc_tm
.
tm_mö
;

83 
time
->
£c
 = 
πc_tm
.
tm_£c
;

85 
ªtvÆ
 = 
SUCCESS
;

87 
Áû
:

88 
	`˛o£
(
fd
);

89  
ªtvÆ
;

90 
	}
}

97 
	$π_£t_cur_time
(
gªg_time
 *
time
)

99 
ªtvÆ
,
fd
;

100 
πc_time
 
πc_tm
;

102 
fd
 = 
	`›í
(
RTC_DEV
, 
O_RDWR
);

103 if(
fd
 == -1)

105 
	`¥ötf
("error: open /dev/rtc");

106  
FAIL
;

110 
ªtvÆ
 = 
	`io˘l
(
fd
, 
RTC_RD_TIME
, &
πc_tm
);

111 if(
ªtvÆ
 == -1)

113 
	`¥ötf
("error : RTC_RD_TIME ioctl");

114 
Áû
;

118 
πc_tm
.
tm_hour
 = 
time
->
hour
;

119 
πc_tm
.
tm_mö
 = 
time
->
mö
;

120 
πc_tm
.
tm_£c
 = 
time
->
£c
;

122 
ªtvÆ
 = 
	`io˘l
(
fd
, 
RTC_SET_TIME
, &
πc_tm
);

123 if(
ªtvÆ
 == -1)

125 
	`¥ötf
("error : RTC_SET_TIME ioctl");

126 
Áû
;

130 
ªtvÆ
 = 
SUCCESS
;

132 
Áû
:

133 
	`˛o£
(
fd
);

134  
ªtvÆ
;

135 
	}
}

143 
	$π_cmp_bcd_d©e
(
bcd_d©e
 * 
a_d©e
, bcd_d©ê* 
b_d©e
)

145 
ªt
;

148 
ªt
 = 
	`memcmp
(
a_d©e
->
yór
, 
b_d©e
->year, 2);

149 i‡(
ªt
 != 0)

150  
ªt
;

153 
ªt
 = 
	`memcmp
(&
a_d©e
->
m⁄
, &
b_d©e
->mon, 1);

154 i‡(
ªt
 != 0)

155  
ªt
;

158 
ªt

	`memcmp
(&
a_d©e
->
day
, &
b_d©e
->day, 1);

160  
ªt
;

161 
	}
}

168 
	$π_£t_cur_d©e
(
bcd_d©e
 *
d©e
)

170 
ªtvÆ
,
fd
;

171 
πc_time
 
πc_tm
;

173 
uöt
 
yór
, 
m⁄
, 
day
;

175 
	`bcd_to_gªg
(
d©e
, &
yór
, &
m⁄
, &
day
);

177 
fd
 = 
	`›í
(
RTC_DEV
, 
O_RDWR
);

178 if(
fd
 == -1)

180 
	`debug_msg
("error: open /dev/rtc0\n");

181  
FAIL
;

185 
ªtvÆ
 = 
	`io˘l
(
fd
, 
RTC_RD_TIME
, &
πc_tm
);

186 if(
ªtvÆ
 == -1)

188 
	`debug_msg
("error : RTC_RD_TIME ioctl\n");

189 
Áû
;

193 
πc_tm
.
tm_yór
 = 
yór
 - 1900;

194 
πc_tm
.
tm_m⁄
 = 
m⁄
 - 1;

195 
πc_tm
.
tm_mday
 = 
day
;

197 
ªtvÆ
 = 
	`io˘l
(
fd
, 
RTC_SET_TIME
, &
πc_tm
);

198 if(
ªtvÆ
 == -1)

200 
	`debug_msg
("error : RTC_SET_TIME ioctl\n");

201 
Áû
;

205 
ªtvÆ
 = 
SUCCESS
;

207 
Áû
:

208 
	`˛o£
(
fd
);

209  
ªtvÆ
;

210 
	}
}

217 
	$π_gë_cur_d©e
(
bcd_d©e
 * 
d©e
)

219 
ªtvÆ
,
fd
;

220 
πc_time
 
πc_tm
;

222 
yór
, 
m⁄
, 
day
;

224 
fd
 = 
	`›í
(
RTC_DEV
, 
O_RDWR
);

225 if(
fd
 == -1) {

226 
	`¥ötf
("error: open /dev/rtc0\n");

227  
FAIL
;

231 
ªtvÆ
=
	`io˘l
(
fd
, 
RTC_RD_TIME
, &
πc_tm
);

232 if(
ªtvÆ
 == -1) {

233 
	`¥ötf
("error : RTC_RD_TIME ioctl\n");

234 
Áû
;

238 
yór
 = 
πc_tm
.
tm_yór
 + 1900;

239 
m⁄
 = 
πc_tm
.
tm_m⁄
 + 1;

240 
day
 = 
πc_tm
.
tm_mday
;

242 
	`gªg_to_bcd
(
d©e
, 
yór
, 
m⁄
, 
day
);

244 
ªtvÆ
 = 
SUCCESS
;

246 
Áû
:

247 
	`˛o£
(
fd
);

248  
ªtvÆ
;

249 
	}
}

256 
	$π_gë_¥ev_d©e
(
bcd_d©e
 * 
d©e
)

258 
uöt
 
t›_yór
;

259 
uöt
 
bŸ_yór
;

261 
uöt
 
yór
;

262 
uöt
 
m⁄
;

263 
uöt
 
day
;

265 
	`bcd_to_dec
(&
d©e
->
yór
[0], &
t›_yór
);

266 
	`bcd_to_dec
(&
d©e
->
yór
[1], &
bŸ_yór
);

268 
	`bcd_to_dec
(&
d©e
->
m⁄
, &mon);

269 
	`bcd_to_dec
(&
d©e
->
day
, &day);

271 
yór
 = 
t›_yór
 * 100 + 
bŸ_yór
;

274 
uöt
 
jd
;

275 
jd
 = 
	`gªg_to_julün
(
yór
, 
m⁄
, 
day
);

276 
jd
--;

279 
	`julün_to_gªg
(
jd
, &
yór
, &
m⁄
, &
day
);

281 
t›_yór
 = 
yór
 / 100;

282 
bŸ_yór
 = 
yór
 - 
t›_yór
 * 100;

284 
	`dec_to_bcd
(&
t›_yór
, &
d©e
->
yór
[0]);

285 
	`dec_to_bcd
(&
bŸ_yór
, &
d©e
->
yór
[1]);

287 
	`dec_to_bcd
(&
m⁄
, &
d©e
->mon);

288 
	`dec_to_bcd
(&
day
, &
d©e
->day);

290  
SUCCESS
;

291 
	}
}

298 
	$π_gë_√xt_d©e
(
bcd_d©e
 * 
d©e
)

300 
uöt
 
t›_yór
;

301 
uöt
 
bŸ_yór
;

303 
uöt
 
yór
;

304 
uöt
 
m⁄
;

305 
uöt
 
day
;

307 
	`bcd_to_dec
(&
d©e
->
yór
[0], &
t›_yór
);

308 
	`bcd_to_dec
(&
d©e
->
yór
[1], &
bŸ_yór
);

310 
	`bcd_to_dec
(&
d©e
->
m⁄
, &mon);

311 
	`bcd_to_dec
(&
d©e
->
day
, &day);

313 
yór
 = 
t›_yór
 * 100 + 
bŸ_yór
;

316 
uöt
 
jd
;

317 
jd
 = 
	`gªg_to_julün
(
yór
, 
m⁄
, 
day
);

318 
jd
++;

321 
	`julün_to_gªg
(
jd
, &
yór
, &
m⁄
, &
day
);

323 
t›_yór
 = 
yór
 / 100;

324 
bŸ_yór
 = 
yór
 - 
t›_yór
 * 100;

326 
	`dec_to_bcd
(&
t›_yór
, &
d©e
->
yór
[0]);

327 
	`dec_to_bcd
(&
bŸ_yór
, &
d©e
->
yór
[1]);

329 
	`dec_to_bcd
(&
m⁄
, &
d©e
->mon);

330 
	`dec_to_bcd
(&
day
, &
d©e
->day);

332  
SUCCESS
;

333 
	}
}

336 #ifde‡
CONFIG_CHECK_DEADLINE


337 
	$π_check_dódlöe
(
bcd_d©e
 * 
today
)

340  
SUCCESS
;

341 
	}
}

343 
	$π_check_dódlöe
(
bcd_d©e
 * 
today
)

345  
SUCCESS
;

346 
	}
}

349 
π_›î©e
 
	gg_π_›î©e
 = {

350 .
cmp_bcd_d©e
 = 
π_cmp_bcd_d©e
,

351 .
	ggë_cur_d©e
 = 
π_gë_cur_d©e
,

352 .
	g£t_cur_d©e
 = 
π_£t_cur_d©e
,

354 .
	ggë_√xt_d©e
 = 
π_gë_√xt_d©e
,

355 .
	ggë_¥ev_d©e
 = 
π_gë_¥ev_d©e
,

357 .
	gcmp_gªg_time
 = 
π_cmp_gªg_time
,

358 .
	ggë_cur_time
 = 
π_gë_cur_time
,

359 .
	g£t_cur_time
 = 
π_£t_cur_time
,

365 
π_›î©e
 * 
	$gë_π_›s
()

367  &
g_π_›î©e
;

368 
	}
}

371 
	$maö
()

373 
y
, 
m
, 
d
;

374 
bcd_d©e
 
d©e
;

376 
	`¥ötf
("Input Y M D:");

377 
	`sˇnf
("%d %d %d", &
y
, &
m
, &
d
);

379 
	`gªg_to_bcd
(&
d©e
, 
y
, 
m
, 
d
);

381 
	`π_gë_√xt_d©e
(&
d©e
);

383 
	`bcd_to_gªg
(&
d©e
, &
y
, &
m
, &
d
);

385 
	`¥ötf
("\nNexàd©e: %d-%02d-%02d\n", 
y
, 
m
, 
d
);

388 
	}
}

	@misc/uart.c

9 
	~<°dio.h
>

10 
	~<°dlib.h
>

11 
	~<uni°d.h
>

12 
	~<sys/ty≥s.h
>

13 
	~<sys/°©.h
>

14 
	~<f˙é.h
>

15 
	~<ãrmios.h
>

16 
	~<î∫o.h
>

17 
	~<°rög.h
>

19 
	~"c⁄fig.h
"

20 
	~"comm⁄.h
"

22 
	g•ìd_¨r
[] = { 
B38400
, 
B19200
, 
B9600
, 
B4800
, 
B2400
, 
B1200
, 
B300
,

23 
B38400
, 
B19200
, 
B9600
, 
B4800
, 
B2400
, 
B1200
, 
B300
, };

25 
	g«me_¨r
[] = {38400, 19200, 9600, 4800, 2400, 1200, 300,

34 
	$£t_•ìd
(
fd
, 
•ìd
)

36 
i
;

37 
°©us
;

39 
ãrmios
 
›t
;

40 
	`tcgë©å
(
fd
, &
›t
);

42 
i
0; i < (
•ìd_¨r
) / (); i++) {

43 i‡(
•ìd
 =
«me_¨r
[
i
]) {

44 
	`tcÊush
(
fd
, 
TCIOFLUSH
);

45 
	`cf£ti•ìd
(&
›t
, 
•ìd_¨r
[
i
]);

46 
	`cf£to•ìd
(&
›t
, 
•ìd_¨r
[
i
]);

47 
°©us
 = 
	`tc£èâr
(
fd
, 
TCSANOW
, &
›t
);

48 i‡(
°©us
 != 0) {

49 
	`≥º‹
("tcsetattr fd1");

51  
FAIL
;

55 
	`tcÊush
(
fd
, 
TCIOFLUSH
);

58  
SUCCESS
;

59 
	}
}

68 
	$£t_∑rôy
(
fd
, 
d©abôs
, 
°›bôs
, 
∑rôy
)

70 
ãrmios
 
›ti⁄
;

72 i‡(
	`tcgë©å
(
fd
, &
›ti⁄
) != 0) {

73 
	`≥º‹
("SetupSerial 1");

77 
›ti⁄
.
c_cÊag
 &~
CSIZE
;

78 
d©abôs
) {

80 
›ti⁄
.
c_cÊag
 |
CS7
;

84 
›ti⁄
.
c_cÊag
 |
CS8
;

88 
	`Ârötf
(
°dîr
, "Unsupported data size\n");

92 
°›bôs
) {

94 
›ti⁄
.
c_cÊag
 &~
CSTOPB
;

98 
›ti⁄
.
c_cÊag
 |
CSTOPB
;

102 
	`Ârötf
(
°dîr
,"Unsupported stop bits\n");

106 
∑rôy
)

110 
›ti⁄
.
c_cÊag
 &~
PARENB
;

111 
›ti⁄
.
c_iÊag
 &~
INPCK
;

116 
›ti⁄
.
c_cÊag
 |(
PARODD
 | 
PARENB
);

117 
›ti⁄
.
c_iÊag
 |
INPCK
;

122 
›ti⁄
.
c_cÊag
 |
PARENB
;

123 
›ti⁄
.
c_cÊag
 &~
PARODD
;

124 
›ti⁄
.
c_iÊag
 |
INPCK
;

129 
›ti⁄
.
c_cÊag
 &~
PARENB
;

130 
›ti⁄
.
c_cÊag
 &~
CSTOPB
;

134 
	`Ârötf
(
°dîr
,"UnsupportedÖarity\n");

135  
FAIL
;

138 
›ti⁄
.
c_cc
[
VTIME
] = 
MAX_CARD_TIMEOUT
 * 10;

139 
›ti⁄
.
c_cc
[
VMIN
] = 0;

141 
	`tcÊush
(
fd
, 
TCIFLUSH
);

143 i‡(
	`tc£èâr
(
fd
,
TCSANOW
, &
›ti⁄
) != 0) {

144 
	`≥º‹
("SetupSerial 3");

145  
FAIL
;

148  
SUCCESS
;

149 
	}
}

156 
	$›í_u¨t
(*
dev
, 
Êag
)

158 
fd
;

160 
fd
 = 
	`›í
(
dev
, 
Êag
 | 
O_NOCTTY
);

161 i‡(-1 =
fd
) {

162 
	`≥º‹
("Can't Open Serial Port");

163  
FAIL
;

166  
fd
;

168 
	}
}

177 
	$ªad_u¨t
(
fd
, 
uch¨
 *
buf
, 
size
)

179 
ªt
;

180 
uch¨
 
ch
 = 0;

181 
off£t
 = 0, 
lo›
 = 0;

183 i‡(
fd
 < 0) {

184  
FAIL
;

187 
lo›
 = 
size
 + 10;

189 
lo›
 > 0) {

190 
ªt
 = 
	`ªad
(
fd
, &
ch
, 1);

191 i‡(
ªt
 == 1) {

192 
buf
[
off£t
++] = 
ch
;

193 i‡(
off£t
 =
size
)

194  
SUCCESS
;

199 i‡(
ªt
 < 0 && 
î∫o
 !
EINTR
 &&Éºnÿ!
EAGAIN
) {

200 
	`debug_msg
("\nRead Uart Error!\n");

201  
FAIL
;

204 
lo›
--;

208  
FAIL
;

209 
	}
}

218 
	$wrôe_u¨t
(
fd
, 
uch¨
 *
buf
, 
size
)

220 
ªt
;

222 i‡(
fd
 < 0) {

223  
FAIL
;

226 
ªt
 = 
	`wrôe
(
fd
, 
buf
, 
size
);

228  
ªt
;

229 
	}
}

235 
	$Êush_u¨t
(
fd
)

237  
	`tcÊush
(
fd
, 
TCIOFLUSH
);

238 
	}
}

245 
	$kb_u¨t_£tup
(
fd
)

247 
ãrmios
 
›ti⁄
;

249 
	`mem£t
(&
›ti⁄
, 0, (option));

250 
›ti⁄
.
c_cÊag
 = 
B9600
|
CS8
|
CLOCAL
|
CREAD
;

251 
›ti⁄
.
c_iÊag
 = 
IGNPAR
;

252 
›ti⁄
.
c_oÊag
 = 0;

253 
›ti⁄
.
c_lÊag
 = 0;

254 
›ti⁄
.
c_cc
[
VMIN
] = 0;

255 
›ti⁄
.
c_cc
[
VTIME
] = 30;

257 
	`tcÊush
(
fd
, 
TCIFLUSH
);

259 if(
	`tc£èâr
(
fd
, 
TCSANOW
, &
›ti⁄
) < 0){

260  
FAIL
;

263  
SUCCESS
;

264 
	}
}

271 
	$ˇrd_u¨t_£tup
(
fd
)

274 
ãrmios
 
›ti⁄
;

276 
	`mem£t
(&
›ti⁄
, 0, (option));

277 
›ti⁄
.
c_cÊag
 = 
B9600
|
CS8
|
CLOCAL
|
CREAD
;

278 
›ti⁄
.
c_iÊag
 = 
IGNPAR
;

279 
›ti⁄
.
c_oÊag
 = 0;

280 
›ti⁄
.
c_lÊag
 = 0;

281 
›ti⁄
.
c_cc
[
VMIN
] = 0;

282 
›ti⁄
.
c_cc
[
VTIME
] = 30;

284 
	`tcÊush
(
fd
, 
TCIFLUSH
);

286 if(
	`tc£èâr
(
fd
, 
TCSANOW
, &
›ti⁄
) < 0){

287  
FAIL
;

291 
ªt
;

292 
	`£t_•ìd
(
fd
, 9600);

293 
ªt
 = 
	`£t_∑rôy
(
fd
, 8, 1, 'N');

294 i‡(
ªt
 < 0)

295  
FAIL
;

298  
SUCCESS
;

299 
	}
}

	@print/print-core.c

9 
	~<°dio.h
>

10 
	~<°dlib.h
>

11 
	~<uni°d.h
>

12 
	~<°rög.h
>

13 
	~<sys/ty≥s.h
>

14 
	~<sys/°©.h
>

15 
	~<f˙é.h
>

16 
	~<î∫o.h
>

18 
	~"c⁄fig.h
"

19 
	~"comm⁄.h
"

20 
	~"îr‹.h
"

21 
	~"èx_fûe_›.h
"

23 
	~"¥öt.h
"

25 
¥öãr_ty≥
 * 
	gg_¥öãr
[
MAX_PRINT_TYPE
] = {0};

30 
	$¥öt_sys_boŸ_check
()

32 
ªt
;

34 i‡(
g_¥öãr
[
FLAT_PRINT_TYPE
] !
NULL
) {

35 i‡(
g_¥öãr
[
FLAT_PRINT_TYPE
]->
¥öt_›s
->
¥öt_boŸ_check
 !
NULL
) {

36 
ªt
 = 
g_¥öãr
[
FLAT_PRINT_TYPE
]->
¥öt_›s
->
	`¥öt_boŸ_check
();

37 i‡(
ªt
 < 0)

38  
ªt
;

42 i‡(
g_¥öãr
[
ROLL_PRINT_TYPE
] !
NULL
) {

43 i‡(
g_¥öãr
[
ROLL_PRINT_TYPE
]->
¥öt_›s
->
¥öt_boŸ_check
 !
NULL
) {

44 
ªt
 = 
g_¥öãr
[
ROLL_PRINT_TYPE
]->
¥öt_›s
->
	`¥öt_boŸ_check
();

45 i‡(
ªt
 < 0)

46  
ªt
;

50  
SUCCESS
;

51 
	}
}

53 
	$¥öt_sys_¥ï¨e
()

55 
ªt
;

57 i‡(
g_¥öãr
[
FLAT_PRINT_TYPE
] !
NULL
) {

58 i‡(
g_¥öãr
[
FLAT_PRINT_TYPE
]->
¥öt_›s
->
¥öt_¥ï¨e
 !
NULL
) {

59 
ªt
 = 
g_¥öãr
[
FLAT_PRINT_TYPE
]->
¥öt_›s
->
	`¥öt_¥ï¨e
();

60 i‡(
ªt
 < 0)

61  
ªt
;

65 i‡(
g_¥öãr
[
ROLL_PRINT_TYPE
] !
NULL
) {

66 i‡(
g_¥öãr
[
ROLL_PRINT_TYPE
]->
¥öt_›s
->
¥öt_¥ï¨e
 !
NULL
) {

67 
ªt
 = 
g_¥öãr
[
ROLL_PRINT_TYPE
]->
¥öt_›s
->
	`¥öt_¥ï¨e
();

68 i‡(
ªt
 < 0)

69  
ªt
;

73  
SUCCESS
;

74 
	}
}

76 
	$¥öt_sys_£lf_check
()

78 
ªt
;

80 i‡(
g_¥öãr
[
FLAT_PRINT_TYPE
] !
NULL
) {

81 i‡(
g_¥öãr
[
FLAT_PRINT_TYPE
]->
¥öt_›s
->
¥öt_£lf_check
 !
NULL
) {

82 
ªt
 = 
g_¥öãr
[
FLAT_PRINT_TYPE
]->
¥öt_›s
->
	`¥öt_£lf_check
();

83 i‡(
ªt
 < 0)

84  
ªt
;

88 i‡(
g_¥öãr
[
ROLL_PRINT_TYPE
] !
NULL
) {

89 i‡(
g_¥öãr
[
ROLL_PRINT_TYPE
]->
¥öt_›s
->
¥öt_£lf_check
 !
NULL
) {

90 
ªt
 = 
g_¥öãr
[
ROLL_PRINT_TYPE
]->
¥öt_›s
->
	`¥öt_£lf_check
();

91 i‡(
ªt
 < 0)

92  
ªt
;

96  
SUCCESS
;

98 
	}
}

100 
	$¥öt_sys_mach_öfo
(
machöe_öfo_ªc‹d
 * 
mach_öfo
)

102 
ªt
;

103 
cur_¥öt
;

104 
¥öt_sys
 *Öröt_sy†
	`gë_¥öt_sys
();

106 
cur_¥öt
 = 
¥öt_sys
->cur_print;

107 i‡(
g_¥öãr
[
cur_¥öt
] =
NULL
)

108  
FAIL
;

110 i‡(
g_¥öãr
[
cur_¥öt
]->
¥öt_›s
->
¥öt_mach_öfo
 !
NULL
) {

111 
ªt
 = 
g_¥öãr
[
cur_¥öt
]->
¥öt_›s
->
	`¥öt_mach_öfo
(
mach_öfo
);

112 i‡(
ªt
 < 0)

113  
ªt
;

115  
SUCCESS
;

121 i‡(
cur_¥öt
 =
FLAT_PRINT_TYPE
)

122 
cur_¥öt
 = 
ROLL_PRINT_TYPE
;

124 
cur_¥öt
 = 
FLAT_PRINT_TYPE
;

126 i‡(
g_¥öãr
[
cur_¥öt
] =
NULL
)

127  
FAIL
;

129 i‡(
g_¥öãr
[
cur_¥öt
]->
¥öt_›s
->
¥öt_mach_öfo
 !
NULL
) {

130 
ªt
 = 
g_¥öãr
[
cur_¥öt
]->
¥öt_›s
->
	`¥öt_mach_öfo
(
mach_öfo
);

131 i‡(
ªt
 < 0)

132  
ªt
;

134  
SUCCESS
;

137  
FAIL
;

138 
	}
}

140 
	$¥öt_sys_demo_övoi˚
()

142 
ªt
;

143 
cur_¥öt
;

144 
¥öt_sys
 *Öröt_sy†
	`gë_¥öt_sys
();

146 
cur_¥öt
 = 
¥öt_sys
->cur_print;

147 i‡(
g_¥öãr
[
cur_¥öt
] =
NULL
)

148  
FAIL
;

150 i‡(
g_¥öãr
[
cur_¥öt
]->
¥öt_›s
->
¥öt_demo_övoi˚
 !
NULL
) {

151 
ªt
 = 
g_¥öãr
[
cur_¥öt
]->
¥öt_›s
->
	`¥öt_demo_övoi˚
();

152 i‡(
ªt
 < 0)

153  
ªt
;

155  
SUCCESS
;

161 i‡(
cur_¥öt
 =
FLAT_PRINT_TYPE
)

162 
cur_¥öt
 = 
ROLL_PRINT_TYPE
;

164 
cur_¥öt
 = 
FLAT_PRINT_TYPE
;

166 i‡(
g_¥öãr
[
cur_¥öt
] =
NULL
)

167  
FAIL
;

169 i‡(
g_¥öãr
[
cur_¥öt
]->
¥öt_›s
->
¥öt_demo_övoi˚
 !
NULL
) {

170 
ªt
 = 
g_¥öãr
[
cur_¥öt
]->
¥öt_›s
->
	`¥öt_demo_övoi˚
();

171 i‡(
ªt
 < 0)

172  
ªt
;

174  
SUCCESS
;

177  
FAIL
;

178 
	}
}

180 
	$¥öt_sys_rﬁl_öfo
(
èx_sys_u£d_rﬁl_id_ªc‹d
 *
rﬁl_ªc
)

182 
ªt
;

183 
cur_¥öt
;

184 
¥öt_sys
 *Öröt_sy†
	`gë_¥öt_sys
();

186 
cur_¥öt
 = 
¥öt_sys
->cur_print;

187 i‡(
g_¥öãr
[
cur_¥öt
] =
NULL
)

188  
FAIL
;

190 i‡(
g_¥öãr
[
cur_¥öt
]->
¥öt_›s
->
¥öt_rﬁl_öfo
 !
NULL
) {

191 
ªt
 = 
g_¥öãr
[
cur_¥öt
]->
¥öt_›s
->
	`¥öt_rﬁl_öfo
(
rﬁl_ªc
);

192 i‡(
ªt
 < 0)

193  
ªt
;

195  
SUCCESS
;

201 i‡(
cur_¥öt
 =
FLAT_PRINT_TYPE
)

202 
cur_¥öt
 = 
ROLL_PRINT_TYPE
;

204 
cur_¥öt
 = 
FLAT_PRINT_TYPE
;

206 i‡(
g_¥öãr
[
cur_¥öt
] =
NULL
)

207  
FAIL
;

209 i‡(
g_¥öãr
[
cur_¥öt
]->
¥öt_›s
->
¥öt_rﬁl_öfo
 !
NULL
) {

210 
ªt
 = 
g_¥öãr
[
cur_¥öt
]->
¥öt_›s
->
	`¥öt_rﬁl_öfo
(
rﬁl_ªc
);

211 i‡(
ªt
 < 0)

212  
ªt
;

214  
SUCCESS
;

217  
FAIL
;

218 
	}
}

220 
	$¥öt_sys_≥riod_öfo
(
èx_sys_≥riod_cﬁÀ˘_ªc‹d
 * 
≥riod_ªc
)

222 
ªt
;

223 
cur_¥öt
;

224 
¥öt_sys
 *Öröt_sy†
	`gë_¥öt_sys
();

226 
cur_¥öt
 = 
¥öt_sys
->cur_print;

227 i‡(
g_¥öãr
[
cur_¥öt
] =
NULL
)

228  
FAIL
;

230 i‡(
g_¥öãr
[
cur_¥öt
]->
¥öt_›s
->
¥öt_≥riod_öfo
 !
NULL
) {

231 
ªt
 = 
g_¥öãr
[
cur_¥öt
]->
¥öt_›s
->
	`¥öt_≥riod_öfo
(
≥riod_ªc
);

232 i‡(
ªt
 < 0)

233  
ªt
;

235  
SUCCESS
;

241 i‡(
cur_¥öt
 =
FLAT_PRINT_TYPE
)

242 
cur_¥öt
 = 
ROLL_PRINT_TYPE
;

244 
cur_¥öt
 = 
FLAT_PRINT_TYPE
;

246 i‡(
g_¥öãr
[
cur_¥öt
] =
NULL
)

247  
FAIL
;

249 i‡(
g_¥öãr
[
cur_¥öt
]->
¥öt_›s
->
¥öt_≥riod_öfo
 !
NULL
) {

250 
ªt
 = 
g_¥öãr
[
cur_¥öt
]->
¥öt_›s
->
	`¥öt_≥riod_öfo
(
≥riod_ªc
);

251 i‡(
ªt
 < 0)

252  
ªt
;

254  
SUCCESS
;

257  
FAIL
;

258 
	}
}

260 
	$¥öt_sys_daûy_öfo
(
èx_sys_daûy_cﬁÀ˘_ªc‹d
 *
daûy_ªc
)

262 
ªt
;

263 
cur_¥öt
;

264 
¥öt_sys
 *Öröt_sy†
	`gë_¥öt_sys
();

266 
cur_¥öt
 = 
¥öt_sys
->cur_print;

267 i‡(
g_¥öãr
[
cur_¥öt
] =
NULL
)

268  
FAIL
;

270 i‡(
g_¥öãr
[
cur_¥öt
]->
¥öt_›s
->
¥öt_daûy_öfo
 !
NULL
) {

271 
ªt
 = 
g_¥öãr
[
cur_¥öt
]->
¥öt_›s
->
	`¥öt_daûy_öfo
(
daûy_ªc
);

272 i‡(
ªt
 < 0)

273  
ªt
;

275  
SUCCESS
;

281 i‡(
cur_¥öt
 =
FLAT_PRINT_TYPE
)

282 
cur_¥öt
 = 
ROLL_PRINT_TYPE
;

284 
cur_¥öt
 = 
FLAT_PRINT_TYPE
;

286 i‡(
g_¥öãr
[
cur_¥öt
] =
NULL
)

287  
FAIL
;

289 i‡(
g_¥öãr
[
cur_¥öt
]->
¥öt_›s
->
¥öt_daûy_öfo
 !
NULL
) {

290 
ªt
 = 
g_¥öãr
[
cur_¥öt
]->
¥öt_›s
->
	`¥öt_daûy_öfo
(
daûy_ªc
);

291 i‡(
ªt
 < 0)

292  
ªt
;

294  
SUCCESS
;

297  
FAIL
;

298 
	}
}

300 
	$¥öt_sys_de˛¨e_öfo
(
èx_sys_de˛¨e_duty_ªc‹d
 *
de˛¨e_ªc
)

302 
ªt
;

303 
cur_¥öt
;

304 
¥öt_sys
 *Öröt_sy†
	`gë_¥öt_sys
();

306 
cur_¥öt
 = 
¥öt_sys
->cur_print;

307 i‡(
g_¥öãr
[
cur_¥öt
] =
NULL
)

308  
FAIL
;

310 i‡(
g_¥öãr
[
cur_¥öt
]->
¥öt_›s
->
¥öt_de˛¨e_öfo
 !
NULL
) {

311 
ªt
 = 
g_¥öãr
[
cur_¥öt
]->
¥öt_›s
->
	`¥öt_de˛¨e_öfo
(
de˛¨e_ªc
);

312 i‡(
ªt
 < 0)

313  
ªt
;

315  
SUCCESS
;

321 i‡(
cur_¥öt
 =
FLAT_PRINT_TYPE
)

322 
cur_¥öt
 = 
ROLL_PRINT_TYPE
;

324 
cur_¥öt
 = 
FLAT_PRINT_TYPE
;

326 i‡(
g_¥öãr
[
cur_¥öt
] =
NULL
)

327  
FAIL
;

329 i‡(
g_¥öãr
[
cur_¥öt
]->
¥öt_›s
->
¥öt_de˛¨e_öfo
 !
NULL
) {

330 
ªt
 = 
g_¥öãr
[
cur_¥öt
]->
¥öt_›s
->
	`¥öt_de˛¨e_öfo
(
de˛¨e_ªc
);

331 i‡(
ªt
 < 0)

332  
ªt
;

334  
SUCCESS
;

337  
FAIL
;

338 
	}
}

340 
	$¥öt_sys_övoi˚
(
èx_sys_övoi˚_dëaû_ªc‹d
 *
öv_dëaû
)

342 
ªt
;

343 
cur_¥öt
;

344 
¥öt_sys
 *Öröt_sy†
	`gë_¥öt_sys
();

346 
cur_¥öt
 = 
¥öt_sys
->cur_print;

347 i‡(
g_¥öãr
[
cur_¥öt
] =
NULL
)

348  
FAIL
;

350 i‡(
g_¥öãr
[
cur_¥öt
]->
¥öt_›s
->
¥öt_övoi˚
 !
NULL
) {

351 
ªt
 = 
g_¥öãr
[
cur_¥öt
]->
¥öt_›s
->
	`¥öt_övoi˚
(
öv_dëaû
);

352 i‡(
ªt
 < 0)

353  
ªt
;

355  
SUCCESS
;

361 i‡(
cur_¥öt
 =
FLAT_PRINT_TYPE
)

362 
cur_¥öt
 = 
ROLL_PRINT_TYPE
;

364 
cur_¥öt
 = 
FLAT_PRINT_TYPE
;

366 i‡(
g_¥öãr
[
cur_¥öt
] =
NULL
)

367  
FAIL
;

369 i‡(
g_¥öãr
[
cur_¥öt
]->
¥öt_›s
->
¥öt_övoi˚
 !
NULL
) {

370 
ªt
 = 
g_¥öãr
[
cur_¥öt
]->
¥öt_›s
->
	`¥öt_övoi˚
(
öv_dëaû
);

371 i‡(
ªt
 < 0)

372  
ªt
;

374  
SUCCESS
;

377  
FAIL
;

378 
	}
}

380 
¥öt_›s
 
	g¥öt_sys_›s
 = {

381 .
¥öt_boŸ_check
 = 
¥öt_sys_boŸ_check
,

382 .
	g¥öt_¥ï¨e
 = 
¥öt_sys_¥ï¨e
,

383 .
	g¥öt_£lf_check
 = 
¥öt_sys_£lf_check
,

384 .
	g¥öt_mach_öfo
 = 
¥öt_sys_mach_öfo
,

385 .
	g¥öt_demo_övoi˚
 = 
¥öt_sys_demo_övoi˚
,

386 .
	g¥öt_rﬁl_öfo
 = 
¥öt_sys_rﬁl_öfo
,

387 .
	g¥öt_≥riod_öfo
 = 
¥öt_sys_≥riod_öfo
,

388 .
	g¥öt_daûy_öfo
 = 
¥öt_sys_daûy_öfo
,

389 .
	g¥öt_de˛¨e_öfo
 = 
¥öt_sys_de˛¨e_öfo
,

390 .
	g¥öt_övoi˚
 = 
¥öt_sys_övoi˚
,

394 
¥öãr_ty≥
 * 
gë_Ê©_¥öãr
();

395 
¥öãr_ty≥
 * 
gë_rﬁl_¥öãr
();

403 
	$¥öt_sys_öô
(
¥öt_sys
 *Örint_sys)

405 
ªt
;

406 
fd
;

407 
machöe_öfo_ªc‹d
 
mach_ªc
;

409 
ªt
 = 
	`èx_fûe_ªad_mach_öfo
(&
mach_ªc
);

410 i‡(
ªt
 < 0)

411  
ªt
;

414 i‡(
mach_ªc
.
cur_¥öt
 =
ROLL_PRINT_TYPE
) {

415 
¥öt_sys
->
cur_¥öt
 = 
ROLL_PRINT_TYPE
;

416 
¥öt_sys
->
¥öt_nb
 = 
mach_ªc
.print_nb;

417 
¥öt_sys
->
¥öt_ty≥
 = 
	`gë_rﬁl_¥öãr
();

418 
¥öt_sys
->
›s
 = 
	`gë_rﬁl_¥öãr
()->
¥öt_›s
;

420  
SUCCESS
;

424 
fd
 = 
	`›í
(
PRINT_DEV
, 
O_RDWR
);

425 i‡(
fd
 > 0) {

426 
¥öt_sys
->
cur_¥öt
 = 
FLAT_PRINT_TYPE
;

427 
¥öt_sys
->
¥öt_nb
 = 
mach_ªc
.print_nb;

428 
¥öt_sys
->
¥öt_ty≥
 = 
	`gë_Ê©_¥öãr
();

429 
¥öt_sys
->
›s
 = 
	`gë_Ê©_¥öãr
()->
¥öt_›s
;

431 
	`˛o£
(
fd
);

432  
SUCCESS
;

437 i‡(
mach_ªc
.
¥öt_nb
 == 2) {

438 
¥öt_sys
->
cur_¥öt
 = 
ROLL_PRINT_TYPE
;

439 
¥öt_sys
->
¥öt_nb
 = 
mach_ªc
.print_nb;

440 
¥öt_sys
->
¥öt_ty≥
 = 
	`gë_rﬁl_¥öãr
();

441 
¥öt_sys
->
›s
 = 
	`gë_rﬁl_¥öãr
()->
¥öt_›s
;

443  
SUCCESS
;

447  -
EPRINT_NO_PRINTER
;

448 
	}
}

450 
¥öt_sys
 
	gg_¥öt_sys
 = {

451 .
¥öt_sys_öô
 =Örint_sys_init,

454 
¥öt_sys
 * 
	$gë_¥öt_sys
()

456  &
g_¥öt_sys
;

457 
	}
}

	@print/print-flat.c

8 
	~<°dio.h
>

9 
	~<°dlib.h
>

10 
	~<uni°d.h
>

11 
	~<°rög.h
>

12 
	~<sys/ty≥s.h
>

13 
	~<sys/°©.h
>

14 
	~<f˙é.h
>

15 
	~<î∫o.h
>

17 
	~"c⁄fig.h
"

18 
	~"comm⁄.h
"

19 
	~"îr‹.h
"

21 
	~"¥öt.h
"

22 
	~"¥öt-Ê©.h
"

25 
¥öt_‰ame
 * 
	gg_¥öt_‰ame
 = 
NULL
;

27 
	gg_PRINT_FD_INIT
 = 
NEGATIVE
;

28 
	gg_PRINT_UNIT_INIT
 = 
NEGATIVE
;

30 
¥öt_‰ame
 * 
	$gë_¥öt_‰ame
()

32 i‡(
g_¥öt_‰ame
 =
NULL
) {

33 
g_¥öt_‰ame
 = (
¥öt_‰ame
 *)
	`mÆloc
((print_frame));

34 i‡(
g_¥öt_‰ame
 =
NULL
)

35  
NULL
;

38  
g_¥öt_‰ame
;

39 
	}
}

48 
	$¥öt_c⁄f
(
FILE
 *
¥öt_Â
, 
CMD
)

50 
ªt
;

51 
buf
[20];

53 i‡(
¥öt_Â
 =
NULL
)

54  -
EPRINT_NODEV
;

56 
CMD
) {

57 
CMD_PRINTER_INIT
:

58 
ªt
 = 
	`Ârötf
(
¥öt_Â
, "%c%c", 0x1B, 0x40);

59 i‡(
ªt
 != 2)

60  -
EPRINT_WR_ERR
;

64 
CMD_SET_LEFT_MARGIN
:

65 
ªt
 = 
	`Ârötf
(
¥öt_Â
, "%c%c%c", 0x1B, 0x6C, 
DEFAULT_LEFT_MARGIN
);

66 i‡(
ªt
 != 3)

67  -
EPRINT_WR_ERR
;

71 
CMD_SET_RIGHT_MARGIN
:

72 
ªt
 = 
	`Ârötf
(
¥öt_Â
, "%c%c%c", 0x1B, 0x51, 
DEFAULT_RIGHT_MARGIN
);

73 i‡(
ªt
 != 3)

74  -
EPRINT_WR_ERR
;

78 
CMD_SET_MOVE_UNIT
:

79 i‡(
g_PRINT_UNIT_INIT
 !
POSITIVE
) {

80 
ªt
 = 
	`Ârötf
(
¥öt_Â
, "%c%c%c%c%c%c", 0x1B, 0x28, 0x55, 1, 0, 
DEFAULT_MOVE_UNIT
);

81 i‡(
ªt
 != 6)

82  -
EPRINT_WR_ERR
;

84 
g_PRINT_UNIT_INIT
 = 
POSITIVE
;

89 
CMD_SET_TOP_MARGIN
:

90 i‡(
g_PRINT_UNIT_INIT
 == 1) {

91 
ªt
 = 
	`Ârötf
(
¥öt_Â
, "%c%c%c%c%c%c%c%c%c", 0x1b, 0x28, 0x43, 4, 0,

92 
DEFAULT_TOP_PARA_T1
, 
DEFAULT_TOP_PARA_T2
,

93 
DEFAULT_BOT_PARA_B1
, 
DEFAULT_BOT_PARA_B2
);

94 i‡(
ªt
 != 9)

95  -
EPRINT_WR_ERR
;

98  -
EPRINT_NOMOVEUNIT
;

102 
CMD_SET_LINE_SPACE
:

103 
ªt
 = 
	`Ârötf
(
¥öt_Â
, "%c%c", 0x1B, 0x32);

104 i‡(
ªt
 != 2)

105  -
EPRINT_WR_ERR
;

109 
CMD_ENTER_CHINESE
:

110 
ªt
 = 
	`Ârötf
(
¥öt_Â
, "%c%c", 0x1C, 0x26);

111 i‡(
ªt
 != 2)

112  -
EPRINT_WR_ERR
;

116 
CMD_EXIT_CHINESE
:

117 
ªt
 = 
	`Ârötf
(
¥öt_Â
, "%c%c", 0x1C, 0x2E);

118 i‡(
ªt
 != 2)

119  -
EPRINT_WR_ERR
;

123 
CMD_CHECK_PAPER
:

124 
ªt
 = 
	`Ârötf
(
¥öt_Â
, "%c%c%c", 0x1d, 0x72, 0x49);

125 i‡(
ªt
 != 2)

126  -
EPRINT_WR_ERR
;

128 
ªt
 = 
	`‰ód
(
buf
, 1, 1, 
¥öt_Â
);

129 i‡(
ªt
 != 1)

130  -
EPRINT_RD_ERR
;

133 i‡(
buf
[0] == 0)

134  
POSITIVE
;

136  -
EPRINT_NOPAPER
;

139 
CMD_NEXT_PAGE
:

140 
ªt
 = 
	`Ârötf
(
¥öt_Â
, "%c", 0x0C);

141 i‡(
ªt
 != 1)

142  -
EPRINT_WR_ERR
;

147  -
EPRINT_NOCMD
;

151  
SUCCESS
;

152 
	}
}

159 
	$¥öt_öô
()

161 
FILE
 *
¥öt_Â
;

163 
¥öt_‰ame
 * 
‰ame
;

165 i‡(
g_PRINT_FD_INIT
 != 1) {

166 
¥öt_Â
 = 
	`f›í
(
PRINT_DEV
, "w+");

167 i‡(
¥öt_Â
 =
NULL
)

168  -
EPRINT_NODEV
;

170 
	`¥öt_c⁄f
(
¥öt_Â
, 
CMD_PRINTER_INIT
);

174 
	`¥öt_c⁄f
(
¥öt_Â
, 
CMD_SET_LINE_SPACE
);

177 
g_PRINT_FD_INIT
 = 1;

179 
	`f˛o£
(
¥öt_Â
);

182 
‰ame
 = 
	`gë_¥öt_‰ame
();

183 i‡(
‰ame
 =
NULL
)

184  -
EPRINT_NOMEM
;

186 
	`mem£t
(
‰ame
, 0, (*frame));

188  
SUCCESS
;

189 
	}
}

196 
	$¥öt_£t_h‹_pos
(
FILE
 *
Â
, 
pos
)

198 i‡(
pos
 == 0) {

199 
	`Ârötf
(
Â
, "%c%c%c", 0x1B, 0x44, 0);

200  
SUCCESS
;

203 
	`Ârötf
(
Â
, "%c%c%c%c", 0x1B, 0x44, 
pos
, 0);

204 
	`Ârötf
(
Â
, "%c", 0x09);

206  
SUCCESS
;

207 
	}
}

213 
	$¥öt_£t_vî_pos
(
FILE
 *
Â
, 
pos
)

215 i‡(
pos
 == 0) {

216 
	`Ârötf
(
Â
, "%c%c%c", 0x1B, 0x42, 0);

217  
SUCCESS
;

220 
	`Ârötf
(
Â
, "%c%c%c%c", 0x1B, 0x42, 
pos
, 0);

221 
	`Ârötf
(
Â
, "%c", 0x0B);

223  
SUCCESS
;

224 
	}
}

229 
	$¥öt_•a˚
(*
buf
, 
num
)

231 
i
 = 0;

232 
size
 = 0;

233 
i
 = 0; i < 
num
; i++)

234 
size
 +
	`•rötf
(
buf
 + size, " ");

236  
size
;

237 
	}
}

242 
	$¥öt_£t_tôÀ
(*
d©e
, *
ty≥
, 
övoi˚_num
)

244 *
tmp
;

246 
¥öt_‰ame
 * 
‰ame
 = 
	`gë_¥öt_‰ame
();

247 i‡(
‰ame
 =
NULL
)

248  -
EPRINT_NOMEM
;

250 
tmp
 = 
‰ame
->
tôÀ
.
d©e
;

251 
	`mem£t
(
tmp
, 0, 
MAX_DATE_LENGTH
 + 1);

252 
	`¢¥ötf
(
tmp
, 
MAX_DATE_LENGTH
, "%s", 
d©e
);

254 
tmp
 = 
‰ame
->
tôÀ
.
ty≥
;

255 
	`mem£t
(
tmp
, 0, 
MAX_TITLE_LENGTH
 + 1);

256 
	`¢¥ötf
(
tmp
, 
MAX_TITLE_LENGTH
, "%s", 
ty≥
);

258 
tmp
 = 
‰ame
->
tôÀ
.
övoi˚_num
;

259 
	`mem£t
(
tmp
, 0, 
MAX_NUM_LENGTH
 + 1);

260 
	`¢¥ötf
(
tmp
, 
MAX_NUM_LENGTH
, "%012d", 
övoi˚_num
);

262  
SUCCESS
;

263 
	}
}

265 
	$¥öt_£t_∑yì_öfo
(*
∑yì
, *
èxnum
)

267 *
tmp
;

269 
¥öt_‰ame
 * 
‰ame
 = 
	`gë_¥öt_‰ame
();

270 i‡(
‰ame
 =
NULL
)

271  -
EPRINT_NOMEM
;

273 
tmp
 = 
‰ame
->
∑yì_öfo
.
∑yì_tôÀ
;

274 
	`mem£t
(
tmp
, 0, 
MAX_TITLE_LENGTH
 + 1);

275 
	`¢¥ötf
(
tmp
, 
MAX_TITLE_LENGTH
, "%s", "Êî∂Ê¨æÂçï‰ΩçÔºö");

277 
tmp
 = 
‰ame
->
∑yì_öfo
.
∑yì_ôem
;

278 
	`mem£t
(
tmp
, 0, 
MAX_CHAR_PER_ITEM
 + 1);

279 
	`¢¥ötf
(
tmp
, 
MAX_TITLE_LENGTH
, "%s", 
∑yì
);

281 
tmp
 = 
‰ame
->
∑yì_öfo
.
èx_tôÀ
;

282 
	`mem£t
(
tmp
, 0, 
MAX_TITLE_LENGTH
 + 1);

283 
	`¢¥ötf
(
tmp
, 
MAX_TITLE_LENGTH
, "%s", "Á®éÊéßÁÆ°ÁêÜÁ†ÅÔºö");

285 
tmp
 = 
‰ame
->
∑yì_öfo
.
èx_num
;

286 
	`mem£t
(
tmp
, 0, 
MAX_NUM_LENGTH
 + 1);

287 
	`¢¥ötf
(
tmp
, 
MAX_NUM_LENGTH
, "%s", 
èxnum
);

289  
SUCCESS
;

290 
	}
}

292 
	$¥öt_£t_buyî_öfo
(*
buyî
)

294 *
tmp
;

296 
¥öt_‰ame
 *
‰ame
 = 
	`gë_¥öt_‰ame
();

297 i‡(
‰ame
 =
NULL
)

298  -
EPRINT_NOMEM
;

300 
tmp
 = 
‰ame
->
buyî_öfo
.
buyî_tôÀ
;

301 
	`mem£t
(
tmp
, 0, 
MAX_TITLE_LENGTH
 + 1);

302 
	`¢¥ötf
(
tmp
, 
MAX_TITLE_LENGTH
, "%s", "‰ªòÊ¨æÂçï‰ΩçÔºö");

304 
tmp
 = 
‰ame
->
buyî_öfo
.
buyî_ty≥
;

305 
	`mem£t
(
tmp
, 0, 
MAX_CHAR_PER_ITEM
 + 1);

306 
	`¢¥ötf
(
tmp
, 
MAX_CHAR_PER_ITEM
, "%s", 
buyî
);

308  
SUCCESS
;

310 
	}
}

312 
	$¥öt_£t_comm_tôÀ
()

314 *
tmp
;

316 
¥öt_‰ame
 * 
‰ame
 = 
	`gë_¥öt_‰ame
();

317 i‡(
‰ame
 =
NULL
)

318  -
EPRINT_NOMEM
;

320 
tmp
 = 
‰ame
->
comm_tôÀ
.
ty≥
;

321 
	`mem£t
(
tmp
, 0, 
MAX_TITLE_LENGTH
);

322 
	`¢¥ötf
(
tmp
, 
MAX_TITLE_LENGTH
, "%s", "ÁªèËê•È°πÁõÆ");

324 
tmp
 = 
‰ame
->
comm_tôÀ
.
cou¡
;

325 
	`mem£t
(
tmp
, 0, 
MAX_TITLE_LENGTH
);

326 
	`¢¥ötf
(
tmp
, 
MAX_TITLE_LENGTH
, "%s", "Êï∞Èáè");

328 
tmp
 = 
‰ame
->
comm_tôÀ
.
¥i˚
;

329 
	`mem£t
(
tmp
, 0, 
MAX_TITLE_LENGTH
);

330 
	`¢¥ötf
(
tmp
, 
MAX_TITLE_LENGTH
, "%s", "Âçï‰ª∑");

332 
tmp
 = 
‰ame
->
comm_tôÀ
.
m⁄√y
;

333 
	`mem£t
(
tmp
, 0, 
MAX_TITLE_LENGTH
);

334 
	`¢¥ötf
(
tmp
, 
MAX_TITLE_LENGTH
, "%s", "ÈáëÈ¢ù");

336  
SUCCESS
;

337 
	}
}

339 
	$¥öt_£t_comm_öfo
(
num
, 
èx_sys_comm_ôem
 *
comm_öfo
)

341 *
tmp
;

342 
¥öt_‰ame
 * 
‰ame
 = 
	`gë_¥öt_‰ame
();

343 i‡(
‰ame
 =
NULL
)

344  -
EPRINT_NOMEM
;

346 
tmp
 = 
‰ame
->
comm_ôems
[
num
].
ôem_«me
;

347 
	`mem£t
(
tmp
, 0, 
MAX_CHAR_PER_ITEM
);

348 
	`¢¥ötf
(
tmp
, 
MAX_CHAR_PER_ITEM
, "%s", 
comm_öfo
->
comm_∂u_«me
);

350 
tmp
 = 
‰ame
->
comm_ôems
[
num
].
ôem_cou¡
;

351 
	`mem£t
(
tmp
, 0, 
MAX_NUM_LENGTH
);

352 
	`¢¥ötf
(
tmp
, 
MAX_NUM_LENGTH
, "%.2f", ()
comm_öfo
->
num
);

354 
tmp
 = 
‰ame
->
comm_ôems
[
num
].
ôem_¥i˚
;

355 
	`mem£t
(
tmp
, 0, 
MAX_NUM_LENGTH
);

356 
	`¢¥ötf
(
tmp
, 
MAX_NUM_LENGTH
, "%.2f", ()
comm_öfo
->
comm_¥i˚
);

358 
tmp
 = 
‰ame
->
comm_ôems
[
num
].
ôem_m⁄√y
;

359 
	`mem£t
(
tmp
, 0, 
MAX_NUM_LENGTH
);

360 
	`¢¥ötf
(
tmp
, 
MAX_NUM_LENGTH
, "%.2f", ()
comm_öfo
->
amou¡
);

362  
SUCCESS
;

363 
	}
}

365 
	$¥öt_£t_m⁄√y
(*
chöe£
, 
amou¡
)

367 *
tmp
;

369 
¥öt_‰ame
 * 
‰ame
 = 
	`gë_¥öt_‰ame
();

370 i‡(
‰ame
 =
NULL
)

371  -
EPRINT_NOMEM
;

373 
tmp
 = 
‰ame
->
m⁄√y
.
up_ˇ£_tôÀ
;

374 
	`mem£t
(
tmp
, 0, 
MAX_TITLE_LENGTH
);

375 
	`¢¥ötf
(
tmp
, 
MAX_TITLE_LENGTH
, "%s", "Â§ßÂÜôÔºàRMBÔºâÔºö");

377 
tmp
 = 
‰ame
->
m⁄√y
.
up_tŸÆ
;

378 
	`mem£t
(
tmp
, 0, 
MAX_CHAR_PER_ITEM
);

379 
	`¢¥ötf
(
tmp
, 
MAX_CHAR_PER_ITEM
, "%s", 
chöe£
);

381 
tmp
 = 
‰ame
->
m⁄√y
.
low_ˇ£_tôÀ
;

382 
	`mem£t
(
tmp
, 0, 
MAX_TITLE_LENGTH
);

383 
	`¢¥ötf
(
tmp
, 
MAX_TITLE_LENGTH
, "%s", "Â∞èÂÜôÔºö");

385 
tmp
 = 
‰ame
->
m⁄√y
.
low_tŸÆ
;

386 
	`mem£t
(
tmp
, 0, 
MAX_MONNEY_LENGHT
);

387 
	`¢¥ötf
(
tmp
, 
MAX_MONNEY_LENGHT
, "%.2f", ()
amou¡
);

389  
SUCCESS
;

390 
	}
}

392 
	$¥öt_£t_ªg_öfo
(*
ªg_«me
, *
ªg_num
)

394 *
tmp
;

395 
i
;

397 
¥öt_‰ame
 * 
‰ame
 = 
	`gë_¥öt_‰ame
();

398 i‡(
‰ame
 =
NULL
)

399  -
EPRINT_NOMEM
;

401 
tmp
 = 
‰ame
->
ªg_öfo
.
ªg_tôÀ
;

402 
	`mem£t
(
tmp
, 0, 
MAX_TITLE_LENGTH
);

403 
	`¢¥ötf
(
tmp
, 
MAX_TITLE_LENGTH
, "%s", "ÂºÄÁ•®‰∫∫Ôºö");

405 
tmp
 = 
‰ame
->
ªg_öfo
.
ªg_«me
;

406 
	`mem£t
(
tmp
, 0, 
MAX_TITLE_LENGTH
);

407 
	`¢¥ötf
(
tmp
, 
MAX_TITLE_LENGTH
, "%s", 
ªg_«me
);

409 
tmp
 = 
‰ame
->
ªg_öfo
.
ªg_num_tôÀ
;

410 
	`mem£t
(
tmp
, 0, 
MAX_TITLE_LENGTH
);

411 
	`¢¥ötf
(
tmp
, 
MAX_TITLE_LENGTH
, "%s", "Ê≥®ÂÜåÂè∑Ôºö");

414 
tmp
 = 
‰ame
->
ªg_öfo
.
ªg_num
;

415 
	`mem£t
(
tmp
, 0, 
MAX_NUM_LENGTH
);

419 
i
 = 0; i < 8; i++)

420 
	`¢¥ötf
(
tmp
 + 
i
 * 2, 
MAX_NUM_LENGTH
, "%02x", 
ªg_num
[i]);

422  
SUCCESS
;

423 
	}
}

429 
	$¥öt_d⁄e_˛ón
(
FILE
 *
Â
, 
¥öt_‰ame
 * 
cur_‰ame
)

432 
	`Ârötf
(
Â
, "%c", 0x0c);

434 
g_PRINT_FD_INIT
 = 0;

435 
g_PRINT_UNIT_INIT
 = 0;

437 
	`¥öt_£t_h‹_pos
(
Â
, 0);

438 
	`¥öt_£t_vî_pos
(
Â
, 0);

440 
	`mem£t
(
cur_‰ame
, 0, (*cur_frame));

442 
	`f˛o£
(
Â
);

444  
SUCCESS
;

445 
	}
}

451 
	$¥öt_check
()

453 
FILE
 *
¥öt_Â
;

455 
ªt
 = 
SUCCESS
;

457 
¥öt_Â
 = 
	`f›í
(
PRINT_DEV
, "w+");

458 i‡(
¥öt_Â
 =
NULL
)

459  -
EPRINT_NODEV
;

462 
ªt
 = 
	`¥öt_c⁄f
(
¥öt_Â
, 
CMD_CHECK_PAPER
);

463 i‡(
ªt
 !
POSITIVE
)

464 
ªt
 = -
EPRINT_NOPAPER
;

466 
	`f˛o£
(
¥öt_Â
);

468  
ªt
;

469 
	}
}

475 
	$do_¥öt_övoke
()

477 
i
, 
ôem_num
;

479 
¥öt_‰ame
 * 
cur_‰ame
 = 
	`gë_¥öt_‰ame
();

480 i‡(
cur_‰ame
 =
NULL
)

481  -
EPRINT_NOMEM
;

484 
FILE
 *
Â
 = 
	`f›í
(
PRINT_DEV
, "w+");

485 i‡(
Â
 =
NULL
)

486  -
EPRINT_NODEV
;

488 
	`Ârötf
(
Â
, "\n");

489 
	`¥öt_£t_vî_pos
(
Â
, 20);

492 
	`¥öt_£t_h‹_pos
(
Â
, 
INV_DATE_POS
);

493 
	`Ârötf
(
Â
, "%s", 
cur_‰ame
->
tôÀ
.
d©e
);

494 
	`¥öt_£t_h‹_pos
(
Â
, 0);

496 
	`¥öt_£t_h‹_pos
(
Â
, 
INV_TYPE_POS
);

497 
	`Ârötf
(
Â
, "%s", 
cur_‰ame
->
tôÀ
.
ty≥
);

498 
	`¥öt_£t_h‹_pos
(
Â
, 0);

500 
	`¥öt_£t_h‹_pos
(
Â
, 
INV_NUM_POS
);

501 
	`Ârötf
(
Â
, "%s\n", 
cur_‰ame
->
tôÀ
.
övoi˚_num
);

502 
	`¥öt_£t_h‹_pos
(
Â
, 0);

504 
	`Ârötf
(
Â
, "\n");

507 
	`Ârötf
(
Â
, "%†", 
cur_‰ame
->
∑yì_öfo
.
∑yì_tôÀ
);

508 
	`Ârötf
(
Â
, "%s", 
cur_‰ame
->
∑yì_öfo
.
∑yì_ôem
);

510 
	`¥öt_£t_h‹_pos
(
Â
, 
TAX_NUM_POS
);

512 
	`Ârötf
(
Â
, "%†", 
cur_‰ame
->
∑yì_öfo
.
èx_tôÀ
);

513 
	`Ârötf
(
Â
, "%s\n", 
cur_‰ame
->
∑yì_öfo
.
èx_num
);

515 
	`¥öt_£t_h‹_pos
(
Â
, 0);

518 
	`Ârötf
(
Â
, "%s", 
cur_‰ame
->
buyî_öfo
.
buyî_tôÀ
);

519 
	`Ârötf
(
Â
, "%s\n", 
cur_‰ame
->
buyî_öfo
.
buyî_ty≥
);

521 
	`Ârötf
(
Â
, "\n");

524 
	`Ârötf
(
Â
, "%s", 
cur_‰ame
->
comm_tôÀ
.
ty≥
);

526 
	`¥öt_£t_h‹_pos
(
Â
, 
COMM_COUNT_POS
);

527 
	`Ârötf
(
Â
, "%s", 
cur_‰ame
->
comm_tôÀ
.
cou¡
);

528 
	`¥öt_£t_h‹_pos
(
Â
, 0);

530 
	`¥öt_£t_h‹_pos
(
Â
, 
COMM_UNIT_POS
);

531 
	`Ârötf
(
Â
, "%s", 
cur_‰ame
->
comm_tôÀ
.
¥i˚
);

532 
	`¥öt_£t_h‹_pos
(
Â
, 0);

534 
	`¥öt_£t_h‹_pos
(
Â
, 
COMM_MONNEY_POS
);

535 
	`Ârötf
(
Â
, "%s\n", 
cur_‰ame
->
comm_tôÀ
.
m⁄√y
);

536 
	`¥öt_£t_h‹_pos
(
Â
, 0);

539 
ôem_num
 = 
cur_‰ame
->
comm_num
;

541 
i
 = 0; i < 
ôem_num
; i++) {

542 
	`Ârötf
(
Â
, "%s", 
cur_‰ame
->
comm_ôems
[
i
].
ôem_«me
);

544 
	`¥öt_£t_h‹_pos
(
Â
, 
COMM_COUNT_POS
);

545 
	`Ârötf
(
Â
, "%s", 
cur_‰ame
->
comm_ôems
[
i
].
ôem_cou¡
);

546 
	`¥öt_£t_h‹_pos
(
Â
, 0);

548 
	`¥öt_£t_h‹_pos
(
Â
, 
COMM_UNIT_POS
);

549 
	`Ârötf
(
Â
, "%s", 
cur_‰ame
->
comm_ôems
[
i
].
ôem_¥i˚
);

550 
	`¥öt_£t_h‹_pos
(
Â
, 0);

552 
	`¥öt_£t_h‹_pos
(
Â
, 
COMM_MONNEY_POS
);

553 
	`Ârötf
(
Â
, "%s\n", 
cur_‰ame
->
comm_ôems
[
i
].
ôem_m⁄√y
);

554 
	`¥öt_£t_h‹_pos
(
Â
, 0);

558 
	`¥öt_£t_vî_pos
(
Â
, 
MONEY_VER_POS
);

561 
	`Ârötf
(
Â
, "%s", 
cur_‰ame
->
m⁄√y
.
up_ˇ£_tôÀ
);

562 
	`Ârötf
(
Â
, "%s", 
cur_‰ame
->
m⁄√y
.
up_tŸÆ
);

564 
	`¥öt_£t_h‹_pos
(
Â
, 
MONEY_HOR_POS
);

566 
	`Ârötf
(
Â
, "%s", 
cur_‰ame
->
m⁄√y
.
low_ˇ£_tôÀ
);

567 
	`Ârötf
(
Â
, "%s\n", 
cur_‰ame
->
m⁄√y
.
low_tŸÆ
);

569 
	`¥öt_£t_h‹_pos
(
Â
, 0);

572 
	`Ârötf
(
Â
, "%s", 
cur_‰ame
->
ªg_öfo
.
ªg_tôÀ
);

573 
	`Ârötf
(
Â
, "%s", 
cur_‰ame
->
ªg_öfo
.
ªg_«me
);

575 
	`¥öt_£t_h‹_pos
(
Â
, 
REG_NUM_POS
);

577 
	`Ârötf
(
Â
, "%s", 
cur_‰ame
->
ªg_öfo
.
ªg_num_tôÀ
);

578 
	`Ârötf
(
Â
, "%s\n", 
cur_‰ame
->
ªg_öfo
.
ªg_num
);

580 
	`¥öt_£t_h‹_pos
(
Â
, 0);

581 
	`¥öt_£t_vî_pos
(
Â
, 0);

584 
	`¥öt_d⁄e_˛ón
(
Â
, 
cur_‰ame
);

586  
SUCCESS
;

587 
	}
}

594 
	$¥öt_övoi˚
(
èx_sys_övoi˚_dëaû_ªc‹d
 * 
öv_dëaû
)

596 
ªt
, 
i
, 
ôem_num
;

597 
uöt
 
y
, 
m
, 
d
;

598 
buf
[20 + 1] = {0};

600 
¥öt_‰ame
 * 
‰ame
 = 
	`gë_¥öt_‰ame
();

602 
	`debug_msg
("[Printer]:Örint_init...");

603 
g_PRINT_FD_INIT
 = 0;

604 
ªt
 = 
	`¥öt_öô
();

605 i‡(
ªt
 < 0)

606  -
EPRINT_INITFAIL
;

608 
	`debug_msg
("done\n");

616 
	`bcd_to_gªg
(&
öv_dëaû
->
övoi˚
.
d©e
, &
y
, &
m
, &
d
);

617 
	`•rötf
(
buf
, "%d-%02d-%02d", 
y
, 
m
, 
d
);

619 
	`¥öt_£t_tôÀ
(
buf
, "ÊúçÂä°‰∏ö", 
öv_dëaû
->
dëaû_öv_num
);

620 
	`¥öt_£t_∑yì_öfo
(
öv_dëaû
->
èx_∑yì
, (*)öv_dëaû->
dëaû_fisˇl_code
);

621 
	`¥öt_£t_buyî_öfo
(
öv_dëaû
->
∑yî_«me
);

622 
	`¥öt_£t_comm_tôÀ
();

624 
ôem_num
 = 
öv_dëaû
->item_num;

625 
i
 = 0; i < 
ôem_num
; i++) {

626 
	`¥öt_£t_comm_öfo
(
i
, &
öv_dëaû
->
ôem
[i]);

629 
‰ame
->
comm_num
 = 
öv_dëaû
->
ôem_num
;

631 
	`mem£t
(
buf
, 0, 20 + 1);

632 
	`chöe£_„e
(()
öv_dëaû
->
dëaû_amt_tŸÆ
, 
buf
);

634 
	`¥öt_£t_m⁄√y
(
buf
, 
öv_dëaû
->
dëaû_amt_tŸÆ
);

635 
	`¥öt_£t_ªg_öfo
(
öv_dëaû
->
døwî
, (*)öv_dëaû->
ªgi°î_num
);

637 
ªt
 = 
	`do_¥öt_övoke
();

638 i‡(
ªt
 !
SUCCESS
)

639  
ªt
;

641  
SUCCESS
;

642 
	}
}

648 
	$¥öt_boŸ_check
()

650 
¥öt_fd
 = 
	`›í
(
PRINT_DEV
, 
O_RDWR
 | 
O_NONBLOCK
);

651 i‡(
¥öt_fd
 < 0)

652  -
EPRINT_NODEV
;

654 
	`˛o£
(
¥öt_fd
);

656  
SUCCESS
;

657 
	}
}

659 
¥öt_›s
 
	gÊ©_¥öt_›s
 = {

660 .
¥öt_boŸ_check
 =Örint_boot_check,

661 .
	g¥öt_övoi˚
 = 
¥öt_övoi˚
,

662 .
	g¥öt_¥ï¨e
 = 
¥öt_check
,

665 
¥öãr_ty≥
 
	gÊ©_¥öãr_ty≥
 = {

666 .
id
 = 
FLAT_PRINT_TYPE
,

667 .
	g°©e
 = 
PRINT_UP
,

668 .
	g«me
 = "FP-650K",

669 .
	g¥öt_›s
 = &
Ê©_¥öt_›s
,

672 
¥öãr_ty≥
 * 
	$gë_Ê©_¥öãr
()

674  &
Ê©_¥öãr_ty≥
;

675 
	}
}

	@print/print-flat.h

9 #i‚de‡
__PRINT_FLAT_H__


10 
	#__PRINT_FLAT_H__


	)

22 
	#DEFAULT_LEFT_MARGIN
 4

	)

23 
	#DEFAULT_RIGHT_MARGIN
 30

	)

24 
	#DEFAULT_MOVE_UNIT
 120

	)

25 
	#DEFAULT_TOP_PARA_T1
 60

	)

26 
	#DEFAULT_TOP_PARA_T2
 1

	)

27 
	#DEFAULT_BOT_PARA_B1
 6

	)

28 
	#DEFAULT_BOT_PARA_B2
 1

	)

31 
	#PRINT_CMD
 10

	)

32 
	#CMD_PRINTER_INIT
 (
PRINT_CMD
 + 1)

	)

33 
	#CMD_SET_LEFT_MARGIN
 (
PRINT_CMD
 + 2)

	)

34 
	#CMD_SET_RIGHT_MARGIN
 (
PRINT_CMD
 + 3)

	)

35 
	#CMD_SET_TOP_MARGIN
 (
PRINT_CMD
 + 4)

	)

36 
	#CMD_SET_LINE_SPACE
 (
PRINT_CMD
 + 5)

	)

37 
	#CMD_SET_MOVE_UNIT
 (
PRINT_CMD
 + 6)

	)

38 
	#CMD_ENTER_CHINESE
 (
PRINT_CMD
 + 7)

	)

39 
	#CMD_EXIT_CHINESE
 (
PRINT_CMD
 + 8)

	)

40 
	#CMD_CHECK_PAPER
 (
PRINT_CMD
 + 9)

	)

41 
	#CMD_NEXT_PAGE
 (
PRINT_CMD
 + 10)

	)

44 
	#INV_DATE_POS
 6

	)

45 
	#INV_TYPE_POS
 25

	)

46 
	#INV_NUM_POS
 35

	)

47 
	#TAX_NUM_POS
 30

	)

48 
	#COMM_COUNT_POS
 22

	)

49 
	#COMM_UNIT_POS
 30

	)

50 
	#COMM_MONNEY_POS
 40

	)

51 
	#MONEY_HOR_POS
 35

	)

52 
	#MONEY_VER_POS
 50

	)

53 
	#REG_NUM_POS
 30

	)

56 
	#CHINESE_CHAR_SIZE
 
CONFIG_CHN_CHAR_SIZE


	)

57 
	#MAX_TITLE_LENGTH
 (10 * 
CHINESE_CHAR_SIZE
)

	)

58 
	#MAX_CHAR_PER_ITEM
 (20 * 
CHINESE_CHAR_SIZE
)

	)

60 
	#MAX_NUM_LENGTH
 25

	)

61 
	#MAX_DATE_LENGTH
 15

	)

62 
	#MAX_MONNEY_LENGHT
 10

	)

63 
	#MAX_COUNT_LENGHT
 5

	)

68 
	s¥öt_tôÀ


70 
	md©e
[
MAX_DATE_LENGTH
 + 1];

71 
	mty≥
[
MAX_TITLE_LENGTH
 + 1];

72 
	mövoi˚_num
[
MAX_NUM_LENGTH
 + 1];

75 
	s¥öt_∑yì_öfo


77 
	m∑yì_tôÀ
[
MAX_TITLE_LENGTH
 + 1];

78 
	m∑yì_ôem
[
MAX_CHAR_PER_ITEM
 + 1];

79 
	mèx_tôÀ
[
MAX_TITLE_LENGTH
 + 1];

80 
	mèx_num
[
MAX_NUM_LENGTH
 + 1];

83 
	s¥öt_buyî_öfo


85 
	mbuyî_tôÀ
[
MAX_TITLE_LENGTH
 + 1];

86 
	mbuyî_ty≥
[
MAX_CHAR_PER_ITEM
 + 1];

89 
	s¥öt_comm_tûe


91 
	mty≥
[
MAX_TITLE_LENGTH
 + 1];

92 
	mcou¡
[
MAX_TITLE_LENGTH
 + 1];

93 
	m¥i˚
[
MAX_TITLE_LENGTH
 + 1];

94 
	mm⁄√y
[
MAX_TITLE_LENGTH
 + 1];

97 
	s¥öt_comm_ôem


99 
	môem_«me
[
MAX_CHAR_PER_ITEM
];

100 
	môem_cou¡
[
MAX_NUM_LENGTH
];

101 
	môem_¥i˚
[
MAX_NUM_LENGTH
];

102 
	môem_m⁄√y
[
MAX_NUM_LENGTH
];

105 
	s¥öt_comm_m⁄√y


107 
	mup_ˇ£_tôÀ
[
MAX_TITLE_LENGTH
];

108 
	mup_tŸÆ
[
MAX_CHAR_PER_ITEM
];

109 
	mlow_ˇ£_tôÀ
[
MAX_TITLE_LENGTH
];

110 
	mlow_tŸÆ
[
MAX_MONNEY_LENGHT
];

113 
	s¥öt_ªg_öfo


115 
	mªg_tôÀ
[
MAX_TITLE_LENGTH
];

116 
	mªg_«me
[
MAX_TITLE_LENGTH
];

117 
	mªg_num_tôÀ
[
MAX_TITLE_LENGTH
];

118 
	mªg_num
[
MAX_NUM_LENGTH
];

130 
	s¥öt_‰ame


132 
¥öt_tôÀ
 
	mtôÀ
;

133 
¥öt_∑yì_öfo
 
	m∑yì_öfo
;

134 
¥öt_buyî_öfo
 
	mbuyî_öfo
;

135 
¥öt_comm_tûe
 
	mcomm_tôÀ
;

138 
	mcomm_num
;

139 
¥öt_comm_ôem
 
	mcomm_ôems
[10];

141 
¥öt_comm_m⁄√y
 
	mm⁄√y
;

142 
¥öt_ªg_öfo
 
	mªg_öfo
;

	@print/print-roll.c

8 
	~<°dio.h
>

9 
	~<°dlib.h
>

10 
	~<uni°d.h
>

11 
	~<°rög.h
>

12 
	~<sys/ty≥s.h
>

13 
	~<sys/°©.h
>

14 
	~<f˙é.h
>

15 
	~<î∫o.h
>

17 
	~"c⁄fig.h
"

18 
	~"comm⁄.h
"

19 
	~"îr‹.h
"

20 
	~"¥öt.h
"

22 
	$¥öt_boŸ_check
()

24  
SUCCESS
;

25 
	}
}

27 
¥öt_›s
 
	grﬁl_¥öt_›s
 = {

28 .
¥öt_boŸ_check
 =Örint_boot_check,

31 
¥öãr_ty≥
 
	grﬁl_¥öãr_ty≥
 = {

32 .
id
 = 
ROLL_PRINT_TYPE
,

33 .
	g°©e
 = 
PRINT_DOWN
,

34 .
	g«me
 = "unknow",

35 .
	g¥öt_›s
 = &
rﬁl_¥öt_›s
,

38 
¥öãr_ty≥
 * 
	$gë_rﬁl_¥öãr
()

40  &
rﬁl_¥öãr_ty≥
;

41 
	}
}

	@start_main.c

9 
	~<±hªad.h
>

10 
	~<sig«l.h
>

11 
	~<°dlib.h
>

12 
	~<uni°d.h
>

14 
	~"c⁄fig.h
"

15 
	~"comm⁄.h
"

16 
	~"u¨t.h
"

17 
	~"öput.h
"

18 
	~"¥öt.h
"

19 
	~"èx_sy°em.h
"

20 
	~"ui_≠i.h
"

21 
	~"∂u.h
"

26 
±hªad_t
 
	gtid
 = 0;

28 
	$sy°em_öô
()

30 
ªt
;

31 
¥öt_sys
 *Öröt_sy†
	`gë_¥öt_sys
();

32 
èx_sy°em
 *Åax_sy°em = 
	`gë_èx_sy°em
();

34 
	`di•œy_öfo
("Ê≠£Âú®ËøõË°åÁ°¨‰ª∂Ëá™Ê£ÄÔºåËØ∑Á®çÂêé...");

36 
ªt
 = 
¥öt_sys
->
	`¥öt_sys_öô
(print_sys);

37 i‡(
ªt
 !
SUCCESS
) {

38 
	`di•œy_w¨n
("ÊâìÂç∞Êú∫Êú™Â∞±Áª™ÔºÅ");

39 
	`di•œy_îr_msg
(
ªt
);

40  
FAIL
;

43 
ªt
 = 
¥öt_sys
->
›s
->
	`¥öt_boŸ_check
();

44 i‡(
ªt
 !
SUCCESS
) {

45 
	`di•œy_w¨n
("ÊâìÂç∞Êú∫Êú™Â∞±Áª™ÔºÅ");

46 
	`di•œy_îr_msg
(
ªt
);

47  
FAIL
;

51 
tid
 = 
	`keybﬂrd_öô
();

52 i‡(
tid
 < 0) {

53 
	`di•œy_w¨n
("ÈîÆÁõòÊú™Â∞±Áª™ÔºÅ");

54 
	`di•œy_îr_msg
(
ªt
);

55  
FAIL
;

59 
ªt
 = 
èx_sy°em
->
	`ˇrd_öô
();

60 i‡(
ªt
 < 0) {

61 
	`di•œy_w¨n
("Á®éÊéßÂç°Êú™Â∞±Áª™ÔºÅ");

62 
	`di•œy_îr_msg
(
ªt
);

63  
FAIL
;

70 
ªt
 = 
èx_sy°em
->
	`is_fisˇl_öô
();

71 i‡(
ªt
 =
POSITIVE
) {

72 
ªt
 = 
èx_sy°em
->
	`powî_⁄_check
();

73 i‡(
ªt
 !
SUCCESS
) {

74 
	`di•œy_w¨n
("‰∏äÁîµËá™Ê£ÄÂ§±Ë¥•ÔºÅ");

75 
	`di•œy_îr_msg
(
ªt
);

76  
FAIL
;

80 
	`¶ìp
(1);

81  
SUCCESS
;

82 
	}
}

84 
	$sign_h™dÀ
(
sig_num
)

86 
ªt
;

87 
ªt
 = 
	`keybﬂrd_°›
();

88 i‡(
ªt
 < 0)

89 
	`debug_msg
("KeyboardÅhread cancel failed.\n");

91 
	`exô
(0);

92 
	}
}

94 
	$maö
()

96 
ªt
;

97 
key
;

99 
	`sig«l
(
SIGINT
, 
sign_h™dÀ
);

101 
ªt
 = 
	`sy°em_öô
();

102 i‡(
ªt
 !
SUCCESS
) {

103 
	`debug_msg
("HW INIT: failed.\n");

105 i‡(
tid
 != 0)

106 
	`keybﬂrd_°›
();

108 
	`exô
(0);

111 
	`check_shutdown
(Ë=
NEGATIVE
) {

112 
	`log_ö
();

114 
	`check_logout
(Ë=
NEGATIVE
) {

115 
	`ui_gë_keycode
(&
key
);

116 
	`ui_h™dÀ_keycode
(
key
);

118 
	`log_out
();

120 
	`shutdown
();

123 
	}
}

	@ui/lcm_api.c

9 
	~<°dio.h
>

10 
	~<°dlib.h
>

11 
	~<sys/ty≥s.h
>

12 
	~<sys/°©.h
>

13 
	~<sys/io˘l.h
>

14 
	~<f˙é.h
>

15 
	~<uni°d.h
>

16 
	~<°rög.h
>

18 
	~"c⁄fig.h
"

19 
	~"îr‹.h
"

20 
	~"comm⁄.h
"

21 
	~"lcm_≠i.h
"

27 
	$lcm_›í
()

29 
fd
;

31 
fd
 = 
	`›í
(
LCM_DEVICE
, 
O_RDWR
);

32 i‡(
fd
 < 0) {

33 
	`debug_msg
("LCM : Open failed.");

34  -
ELCM_OPEN_FAIL
;

37  
fd
;

38 
	}
}

47 
	$¸óã_d©a
(
row
, 
cﬁ
, 
size
, *
°r
, 
lcm_d©a
 *
d©≠
)

49 
lcm_d©a
 *
dp
 = 
d©≠
;

51 
dp
->
row
 =Ñow;

52 
dp
->
cﬁ
 = col;

53 
dp
->
size
 = size;

55 i‡(
°r
 !
NULL
)

56 
	`°r˝y
(
dp
->
öfo
, 
°r
);

58 
	`mem£t
(
dp
->
öfo
, 0, (dp->info));

60  
SUCCESS
;

61 
	}
}

67 
	$lcm_˛ór
()

69 
fd
, 
ªt
;

71 
fd
 = 
	`lcm_›í
();

72 i‡(
fd
 < 0) {

73  
fd
;

76 
ªt
 = 
	`io˘l
(
fd
, 
LCM_CLEAR_CMD
);

77 i‡(
ªt
 < 0) {

78 
	`debug_msg
("LCM : ioctl failed.\n");

79 
ªt
 = -
ELCM_IOCTL_FAIL
;

80 
Áû
;

83 
ªt
 = 
SUCCESS
;

84 
Áû
:

85 
	`˛o£
(
fd
);

86  
ªt
;

87 
	}
}

94 
	$lcm_wrôe
(
lcm_d©a
 *
d©≠
)

96 
fd
, 
ªt
, 
cou¡
;

98 
fd
 = 
	`lcm_›í
();

99 i‡(
fd
 < 0) {

100  
fd
;

103 
cou¡
 = (
lcm_d©a
);

104 
ªt
 = 
	`wrôe
(
fd
, (*)
d©≠
, 
cou¡
);

105 i‡(
ªt
 < 0 ) {

106 
	`debug_msg
("LCM : write failed.\n");

107 
ªt
 = -
ELCM_WR_FAIL
;

108 
Áû
;

111 
ªt
 = 
SUCCESS
;

112 
Áû
:

113 
	`˛o£
(
fd
);

114  
ªt
;

115 
	}
}

125 
	$lcm_£t_curs‹
(
row
, 
cﬁ
, 
curs‹
, 
blök
)

127 
ªt
;

128 
fd
, 
¨gs
 = 0;

130 
fd
 = 
	`lcm_›í
();

131 i‡(
fd
 < 0) {

132  
fd
;

135 
¨gs
 |(
curs‹
 & 0x01) << 10;

136 
¨gs
 |(
blök
 & 0x01) << 9;

137 
¨gs
 |(
row
 & 0xff) << 8;

138 
¨gs
 |(
cﬁ
 & 0xff);

140 
ªt
 = 
	`io˘l
(
fd
, 
LCM_CURSOR_CMD
, 
¨gs
);

141 i‡(
ªt
 < 0) {

142 
ªt
 = -
ELCM_IOCTL_FAIL
;

143 
Áû
;

146 
ªt
 = 
SUCCESS
;

147 
Áû
:

148 
	`˛o£
(
fd
);

149  
ªt
;

150 
	}
}

156 
	$lcm_ªv_löe
(
row
)

158 
ªt
;

159 
fd
, 
¨gs
;

161 
fd
 = 
	`lcm_›í
();

162 i‡(
fd
 < 0) {

163  
fd
;

166 
¨gs
 = 
row
;

167 
ªt
 = 
	`io˘l
(
fd
, 
LCM_REVERSE_CMD
, 
¨gs
);

168 i‡(
ªt
 < 0) {

169 
ªt
 = -
ELCM_IOCTL_FAIL
;

170 
Áû
;

173 
ªt
 = 
SUCCESS
;

174 
Áû
:

175 
	`˛o£
(
fd
);

176  
ªt
;

177 
	}
}

186 
	$lcm_¥ötf
(
row
, 
cﬁ
, *
°r
)

188 
ªt
;

189 
size
;

190 
lcm_d©a
 
d©a
;

192 
	`mem£t
(&
d©a
, 0, (data));

194 i‡(
°r
 !
NULL
) {

195 
size
 = 
	`°æí
(
°r
);

196 i‡(
size
 > 24)

197 
size
 = 24;

198 i‡(
size
 < 0)

199 
size
 = 0;

201 
size
 = 0;

203 
	`¸óã_d©a
(
row
, 
cﬁ
, 
size
, 
°r
, &
d©a
);

205 
ªt
 = 
	`lcm_wrôe
(&
d©a
);

206 i‡(
ªt
 !
SUCCESS
)

207  
ªt
;

209  
SUCCESS
;

210 
	}
}

214 
	$maö
()

216 
fd
 = 0;

217 
ªt
 = 0;

220 
fd
 = 
	`lcm_›í
();

221 i‡(
fd
 < 0) {

222 
	`debug_msg
("LCM : open failed.\n");

223  
FAIL
;

227 
ªt
 = 
	`io˘l
(
fd
, 
LCM_DB5_L
);

228 i‡(
ªt
 < 0){

229 
	`debug_msg
("LCM : ioctl failed.\n");

232 
	`u¶ìp
(10000);

234 
ªt
 = 
	`io˘l
(
fd
, 
LCM_DB5_H
);

235 i‡(
ªt
 < 0) {

236 
	`debug_msg
("LCM : ioctl failed.\n");

241 
	`lcm_¥ötf
(1, 1, "ABCD");

242 
	`lcm_¥ötf
(1, 6, "ABCD");

243 
	`lcm_¥ötf
(3, 1, "ABCD");

244 
	`lcm_¥ötf
(3, 6, "ABCD");

247 
	}
}

	@ui/lcm_api.h

8 #i‚de‡
__LCM_API_H


9 
	#__LCM_API_H


	)

11 
	#LCM_CLEAR_CMD
 
	`_IO
('L', 0x21)

	)

12 
	#LCM_CURSOR_CMD
 
	`_IO
('L', 0x22)

	)

13 
	#LCM_REVERSE_CMD
 
	`_IO
('L', 0x23)

	)

15 
	#ON
 1

	)

16 
	#OFF
 0

	)

22 
	slcm_d©a


24 
	mrow
;

25 
	mcﬁ
;

26 
	msize
;

27 
	möfo
[28];

30 
lcm_˛ór
();

31 
lcm_¥ötf
(
row
, 
cﬁ
, *
°r
);

32 
lcm_£t_curs‹
(
row
, 
cﬁ
, 
curs‹
, 
blök
);

33 
lcm_ªv_löe
(
num
);

	@ui/ui_api.c

11 
	~<°dio.h
>

12 
	~<°rög.h
>

13 
	~<°dlib.h
>

14 
	~<uni°d.h
>

15 
	~<˘y≥.h
>

16 
	~<as£π.h
>

17 
	~<°d¨g.h
>

19 
	~"c⁄fig.h
"

20 
	~"îr‹.h
"

21 
	~"comm⁄.h
"

22 
	~"comm™d.h
"

24 
	~"èx_fûe_›.h
"

25 
	~"keybﬂrd.h
"

26 
	~"öput.h
"

28 
	~"ui.h
"

29 
	~"lcm_≠i.h
"

30 
	~"ui_≠i.h
"

35 
	gg_cur_‰ame_id
 = 0;

36 
	gg_cur_ôem_id
 = 0;

38 
	gg_logout_Êag
 = 
NEGATIVE
;

39 
	gg_shutdown_Êag
 = 
NEGATIVE
;

41 
u£r
 
	glogö_u£r
;

46 
u£r
 * 
	$gë_cur_u£r
()

48  &
logö_u£r
;

49 
	}
}

58 
	$check_u£æevñ
(
Àvñ
)

60 
u£r
 * u£∏
	`gë_cur_u£r
();

62 i‡(
u£r
->
Àvñ
 >=Üevel)

63  
POSITIVE
;

65  
NEGATIVE
;

66 
	}
}

68 
	$£t_logout_Êag
(
Êag
)

70 i‡(
Êag
 =
NEGATIVE
 || fœg =
POSITIVE
)

71 
g_logout_Êag
 = 
Êag
;

73  
FAIL
;

75  
SUCCESS
;

76 
	}
}

78 
	$£t_shutdown_Êag
(
Êag
)

80 i‡(
Êag
 =
NEGATIVE
 || fœg =
POSITIVE
)

81 
g_shutdown_Êag
 = 
Êag
;

83  
FAIL
;

85  
SUCCESS
;

86 
	}
}

88 
	$check_logout
()

90  
g_logout_Êag
 =
POSITIVE
 ? POSITIVE : 
NEGATIVE
;

91 
	}
}

93 
	$check_shutdown
()

95  
g_shutdown_Êag
 =
POSITIVE
 ? POSITIVE : 
NEGATIVE
;

96 
	}
}

98 
ölöe
 
	$gë_cur_‰ame_id
()

100  
g_cur_‰ame_id
;

101 
	}
}

103 
ölöe
 
	$£t_cur_‰ame_id
(
id
)

105 
g_cur_‰ame_id
 = 
id
;

106  
SUCCESS
;

107 
	}
}

109 
ölöe
 
	$push_ui_°©ck
(
id
)

111 
i
;

112 
t›
 = 
g_ui_°ack
.top;

114 i‡(
t›
 < 10) {

115 
g_ui_°ack
.
°ack
[
t›
] = 
id
;

116 
g_ui_°ack
.
t›
 ++;

118  
SUCCESS
;

121 i‡(
t›
 == 10) {

122 
i
 = 0; i < 9; i++) {

123 
g_ui_°ack
.
°ack
[
i
] = g_ui_stack.stack[i + 1];

126 
g_ui_°ack
.
°ack
[
i
] = 
id
;

129  
SUCCESS
;

130 
	}
}

132 
ölöe
 
	$p›_ui_°©ck
()

134 
t›
;

136 
t›
 = 
g_ui_°ack
.top;

137 i‡(
t›
 == 0)

138  
FAIL
;

140 
g_ui_°ack
.
t›
 --;

141  
g_ui_°ack
.
°ack
[
t›
 - 1];

142 
	}
}

147 
‰ame
 * 
	$gë_èrgë_‰ame
(
id
)

149 
Àv_1
, 
Àv_2
, 
Àv_3
;

151 
‰ame
 *
tmp
, *
èrgë
;

153 
Àv_1
 = 
Àv_2
 = 
Àv_3
 = 0;

158 i‡(
id
 < 10) {

159 
Àv_1
 = 
id
;

160 
Àv_2
 = 0;

161 
Àv_3
 = 0;

162 } i‡(
id
 > 10 && id < 100) {

163 
Àv_1
 = 
id
 / 10;

164 
Àv_2
 = 
id
 % 10;

165 
Àv_3
 = 0;

166 } i‡(
id
 > 100) {

167 
Àv_1
 = 
id
 / 100;

168 
Àv_2
 = (
id
 / 10) % 10;

169 
Àv_3
 = 
id
 % 10;

172 
tmp
 = 
g_ui_míus
[
Àv_1
];

173 
èrgë
 = &
tmp
[
Àv_2
 + 
Àv_3
];

175  
èrgë
;

176 
	}
}

178 
ölöe
 
	$gë_ôem_num
(
míu_id
)

180 
‰ame
 *
èrgë
;

182 
èrgë
 = 
	`gë_èrgë_‰ame
(
míu_id
);

184  
èrgë
->
ôem_num
;

185 
	}
}

187 
ölöe
 * 
	$gë_tôÀ
(
míu_id
, 
ôem_id
)

189 
‰ame
 *
èrgë
;

191 
èrgë
 = 
	`gë_èrgë_‰ame
(
míu_id
);

193  (*)(
èrgë
->
ôems
[
ôem_id
].
tôÀ
);

194 
	}
}

196 
ölöe
 
	$gë_cﬁ‹
(
míu_id
, 
ôem_id
)

198 
‰ame
 *
èrgë
;

200 
èrgë
 = 
	`gë_èrgë_‰ame
(
míu_id
);

202  
èrgë
->
ôems
[
ôem_id
].
cﬁ‹
;

203 
	}
}

205 
ölöe
 
	$gë_row
(
míu_id
, 
ôem_id
)

207 
‰ame
 *
èrgë
;

209 
èrgë
 = 
	`gë_èrgë_‰ame
(
míu_id
);

211  
èrgë
->
ôems
[
ôem_id
].
pos
.
row
;

212 
	}
}

214 
ölöe
 
	$gë_cﬁ
(
míu_id
, 
ôem_id
)

216 
‰ame
 *
èrgë
;

218 
èrgë
 = 
	`gë_èrgë_‰ame
(
míu_id
);

220  
èrgë
->
ôems
[
ôem_id
].
pos
.
cﬁ
;

221 
	}
}

223 
ölöe
 
	$gë_∑ª¡_id
(
id
)

225 
∑ª¡_id
;

230 i‡(
id
 < 10) {

231 
∑ª¡_id
 = 0;

232 } i‡(
id
 > 10 && id < 100) {

233 
∑ª¡_id
 = 
id
 / 10;

234 } i‡(
id
 > 100) {

235 
∑ª¡_id
 = 
id
 / 10;

237 
∑ª¡_id
 = 0;

239  
∑ª¡_id
;

240 
	}
}

242 
ölöe
 
	$gë_√xt_id
(
míu_id
, 
ôem_id
)

244 
‰ame
 *
èrgë
;

246 
èrgë
 = 
	`gë_èrgë_‰ame
(
míu_id
);

248  
èrgë
->
ôems
[
ôem_id
].
√xt
.
√xt_id
;

249 
	}
}

252 
ölöe
 
ACTION
 
	$gë_√xt_a˘i⁄
(
míu_id
, 
ôem_id
)

254 
‰ame
 *
èrgë
;

256 
èrgë
 = 
	`gë_èrgë_‰ame
(
míu_id
);

258  
èrgë
->
ôems
[
ôem_id
].
√xt
.
a˘i⁄
;

259 
	}
}

262 
ölöe
 
	$£t_cﬁ‹
(
míu_id
, 
ôem_id
, 
cﬁ‹
)

264 
‰ame
 *
èrgë
;

266 
èrgë
 = 
	`gë_èrgë_‰ame
(
míu_id
);

268 
èrgë
->
ôems
[
ôem_id
].
cﬁ‹
 = color;

271 
	}
}

273 
ölöe
 
	$£t_que°ti⁄_tôÀ
(*
°r
)

275 
‰ame
 *
èrgë
;

277 
èrgë
 = 
	`gë_èrgë_‰ame
(7);

279 i‡(
°r
 =
NULL
)

282 
	`mem£t
(
èrgë
->
ôems
[0].
tôÀ
, 0, (target->items[0].title));

283 
	`°r˝y
(
èrgë
->
ôems
[0].
tôÀ
, 
°r
);

286 
	}
}

294 
	$˛ór_s¸ìn
()

299  
	`lcm_˛ór
();

300 
	}
}

310 
	$show_sim∂e_‰ame
(
sim∂e_‰ame
 * 
‰ame
)

312 
row
, 
cﬁ
;

313 
ôem_num
, 
Àn
;

314 *
°r
, 
À·
[24] = {0};

316 
	`˛ór_s¸ìn
();

318 
ôem_num
 = 
‰ame
->item_num;

320 
i
, 
y
;

321 
i
 = 0; i < 
ôem_num
; i++) {

322 
row
 = 
‰ame
->
ôems
[
i
].
pos
.row;

323 
cﬁ
 = 
‰ame
->
ôems
[
i
].
pos
.col;

324 
°r
 = 
‰ame
->
ôems
[
i
].
tôÀ
;

326 
Àn
 = 
	`°æí
(
°r
);

327 
Àn
 =Üen / 2;

329 i‡(
Àn
 > (13 - 
cﬁ
)) {

330 
Àn
 = (13 - 
cﬁ
) * 2;

332 
y
 = 0;

333 
y
 < 
Àn
) {

335 i‡((
uch¨
)
°r
[
y
] > 127) {

336 i‡((
y
 + 2Ë> 
Àn
)

339 
À·
[
y
] = 
°r
[y];

340 
y
++;

341 
À·
[
y
] = 
°r
[y];

342 
y
++;

348 
À·
[
y
] = 
°r
[y];

349 
y
++;

352 
	`lcm_¥ötf
(
row
, 
cﬁ
, 
À·
);

354 
	`mem£t
(
À·
, 0, 24);

355 
	`mem˝y
(
À·
, 
°r
 + 
y
, 
	`°æí
(str) - y);

356 
	`lcm_¥ötf
(
row
 + 1, 1, 
À·
);

358 
	`lcm_¥ötf
(
row
, 
cﬁ
, 
°r
);

362  
SUCCESS
;

363 
	}
}

370 
	$show_cuºít_ui
(
id
)

372 
row
 = 0;

373 
cﬁ
 = 0;

375 
ôem_num
, 
Àn
;

376 *
°r
, 
À·
[24 + 1] = {0};

378 
‰ame
 *
èrgë
 = 
	`gë_èrgë_‰ame
(
id
);

379 i‡(
èrgë
 =
NULL
)

380  -
EUI_BAD_UI_ID
;

382 
	`˛ór_s¸ìn
();

384 
ôem_num
 = 
	`gë_ôem_num
(
id
);

386 
i
, 
y
;

387 
i
 = 0; i < 
ôem_num
; i++) {

388 
row
 = 
	`gë_row
(
id
, 
i
);

389 
cﬁ
 = 
	`gë_cﬁ
(
id
, 
i
);

390 
°r
 = 
	`gë_tôÀ
(
id
, 
i
);

392 
Àn
 = 
	`°æí
(
°r
);

394 i‡(
Àn
 > (13 - 
cﬁ
) * 2) {

395 
Àn
 = (13 - 
cﬁ
) * 2;

397 
y
 = 0;

398 
y
 < 
Àn
) {

400 i‡((
uch¨
)
°r
[
y
] > 127) {

401 i‡((
y
 + 2Ë> 
Àn
)

404 
À·
[
y
] = 
°r
[y];

405 
y
++;

406 
À·
[
y
] = 
°r
[y];

407 
y
++;

413 
À·
[
y
] = 
°r
[y];

414 
y
++;

417 
	`lcm_¥ötf
(
row
, 
cﬁ
, 
À·
);

419 
	`mem£t
(
À·
, 0, 24 + 1);

420 
	`mem˝y
(
À·
, 
°r
 + 
y
, 
	`°æí
(str) - y);

422 
	`lcm_¥ötf
(
row
 + 1, 1, 
À·
);

424 
	`lcm_¥ötf
(
row
, 
cﬁ
, 
°r
);

428 
	`£t_cur_‰ame_id
(
id
);

430  
SUCCESS
;

431 
	}
}

439 
	$show_°r
(
row
, 
cﬁ
, *
°r
)

441 
	`lcm_¥ötf
(
row
, 
cﬁ
, 
CHAR_BLANK
);

442 
	`lcm_¥ötf
(
row
, 
cﬁ
, 
°r
);

444  
SUCCESS
;

445 
	}
}

458 
	$show_°r_dmy_cur
(
row
, 
cﬁ
, *
°r
)

460 
dmy_°r
[48] = {0};

462 
	`¢¥ötf
(
dmy_°r
, 48, "%s__", 
°r
);

464  
	`show_°r
(
row
, 
cﬁ
, 
dmy_°r
);

465 
	}
}

467 
	$di•œy_°r
(
row
, 
cﬁ
, *
f‹m©
, ...)

469 
°r
[50] = {0};

470 
va_li°
 
¨g_±r
;

472 
	`va_°¨t
(
¨g_±r
, 
f‹m©
);

473 
	`v•rötf
(
°r
, 
f‹m©
, 
¨g_±r
);

474 
	`va_íd
(
¨g_±r
);

476 
	`lcm_¥ötf
(
row
, 
cﬁ
, 
°r
);

478  
SUCCESS
;

479 
	}
}

481 
	$di•œy_öfo
(*
msg
)

483 
sim∂e_‰ame
 
‰ame
;

485 
	`mem£t
(&
‰ame
, 0, (frame));

487 
‰ame
.
ôem_num
 = 1;

488 
‰ame
.
ôems
[0].
pos
.
row
 = 1;

489 
‰ame
.
ôems
[0].
pos
.
cﬁ
 = 1;

490 
	`°r˝y
(
‰ame
.
ôems
[0].
tôÀ
, 
msg
);

492 
	`show_sim∂e_‰ame
(&
‰ame
);

493 
	`¶ìp
(1);

495  
SUCCESS
;

496 
	}
}

498 
	$di•œy_w¨n
(*
msg
)

500 
	`di•œy_öfo
(
msg
);

502 
	`˛ór_ˇche
();

503 
	`gë_keycode
();

505  
SUCCESS
;

506 
	}
}

508 
	$di•œy_îr_msg
(
îr
)

510 
msg
[48] = {0};

512 
	`•rötf
(
msg
, "ÈîôËØØ‰ª£Á†ÅÔºö%d", 
îr
);

513 
	`di•œy_öfo
(
msg
);

515 
	`˛ór_ˇche
();

516 
	`gë_keycode
();

518  
SUCCESS
;

519 
	}
}

527 
	$£t_curs‹_⁄
(
row
, 
cﬁ
)

529 
ªt
;

532 
ªt
 = 
	`lcm_£t_curs‹
(
row
, 
cﬁ
, 
ON
, ON);

533 i‡(
ªt
 < 0)

534 
	`di•œy_îr_msg
(
ªt
);

536  
ªt
;

537 
	}
}

545 
	$£t_curs‹_off
(
row
, 
cﬁ
)

547 
ªt
;

550 
ªt
 = 
	`lcm_£t_curs‹
(
row
, 
cﬁ
, 
OFF
, OFF);

551 i‡(
ªt
 < 0)

552 
	`di•œy_îr_msg
(
ªt
);

554  
ªt
;

555 
	}
}

561 
	$highlight_⁄
(
row
)

563  
	`lcm_ªv_löe
(
row
);

564 
	}
}

570 
	$highlight_off
(
row
)

572  
	`lcm_ªv_löe
(
row
);

573 
	}
}

578 
	$SAY_YES
(Ë{ 
POSITIVE
;
	}
}

579 
	$SAY_NO
(Ë{ 
NEGATIVE
;
	}
}

585 
	$que°i⁄_u£r
(*
tôÀ
)

587 
key
, 
ime_°©e
;

590 
pos
 = 1, 
chio˚
 = 1;

591 
ACTION
 
h™dÀ
;

593 
	`£t_que°ti⁄_tôÀ
(
tôÀ
);

594 
	`show_cuºít_ui
(7);

596 
	`lcm_¥ötf
(3, 3, "*");

598 
ime_°©e
 = 
	`gë_ime_°©us
();

599 
	`£t_ime_°©us
(
INPUT_FUNC
);

601 
	`˛ór_ˇche
();

603 
key
 = 
	`gë_keycode
();

604 
key
) {

605 
ENTER
:

606 
h™dÀ
 = 
	`gë_√xt_a˘i⁄
(7, 
pos
);

607 
chio˚
 = 
	`h™dÀ
();

608 
h™dÀd
;

611 
RIGHT
:

612 i‡(
pos
 == 1) {

613 
	`lcm_¥ötf
(3, 3, " ");

614 
	`lcm_¥ötf
(3, 7, "*");

615 
pos
 = 2;

619 
LEFT
:

620 i‡(
pos
 == 2) {

621 
	`lcm_¥ötf
(3, 7, " ");

622 
	`lcm_¥ötf
(3, 3, "*");

623 
pos
 = 1;

632 
h™dÀd
:

633 
	`£t_ime_°©us
(
ime_°©e
);

634  
chio˚
;

635 
	}
}

642 
	$log_ö
()

644 
ªt
;

646 
u£∫ame
[
USER_NAME_LEN
 + 1];

647 
∑ssw‹d
[
USER_PASSWD_LEN
 + 1];

649 
	`mem£t
(
u£∫ame
, 0, 
USER_NAME_LEN
 + 1);

650 
	`mem£t
(
∑ssw‹d
, 0, 
USER_PASSWD_LEN
 + 1);

652 
sim∂e_‰ame
 
‰ame
;

653 
	`mem£t
(&
‰ame
, 0, (frame));

654 
	`mem£t
(&
logö_u£r
, 0, (login_user));

656 
‰ame
.
ôem_num
 = 3;

657 
‰ame
.
ôems
[0].
pos
.
row
 = 1;

658 
‰ame
.
ôems
[0].
pos
.
cﬁ
 = 5;

659 
	`¢¥ötf
(
‰ame
.
ôems
[0].
tôÀ
, 
MAX_TITLE_LEN
, "%s", "Áôª ÈôÜ");

661 
‰ame
.
ôems
[1].
pos
.
row
 = 2;

662 
‰ame
.
ôems
[1].
pos
.
cﬁ
 = 1;

663 
	`¢¥ötf
(
‰ame
.
ôems
[1].
tôÀ
, 
MAX_TITLE_LEN
, "%s", "Áî®Êà∑ÂêçÔºö");

665 
‰ame
.
ôems
[2].
pos
.
row
 = 4;

666 
‰ame
.
ôems
[2].
pos
.
cﬁ
 = 1;

667 
	`¢¥ötf
(
‰ame
.
ôems
[2].
tôÀ
, 
MAX_TITLE_LEN
, "%s", "ÂØÜ Á†ÅÔºö");

670 
	`show_sim∂e_‰ame
(&
‰ame
);

672 
	`gë_°rög
(2, 5, 
u£∫ame
Ë!
SUCCESS
);

673 
	`gë_∑sswd
(4, 5, 
∑ssw‹d
Ë!
SUCCESS
);

675 
	`èx_fûe_föd_u£r
(
u£∫ame
, &
logö_u£r
);

676 
ªt
 = 
	`°rcﬁl
(
∑ssw‹d
, 
logö_u£r
.
∑sswd
);

677 i‡(
ªt
 != 0) {

678 
	`di•œy_w¨n
("Áî®Êà∑ÂêçÊàñÂØÜÁ†ÅÈîôËØØ!");

680 
	`mem£t
(
u£∫ame
, 0, 
USER_NAME_LEN
 + 1);

681 
	`mem£t
(
∑ssw‹d
, 0, 
USER_PASSWD_LEN
 + 1);

683 } i‡(
ªt
 == 0) {

688 
	`show_cuºít_ui
(0);

689  
SUCCESS
;

690 
	}
}

692 
	$log_out
()

694 
	`di•œy_öfo
("Ê≠£Âú®Ê≥®ÈîÄ...");

696 
	`u¶ìp
(10000);

697 
	`sync
();

698 
	`mem£t
(&
logö_u£r
, 0, (login_user));

699 
	`mem£t
(&
g_ui_°ack
, 0, (g_ui_stack));

701 
g_cur_‰ame_id
 = 0;

702 
g_cur_ôem_id
 = 0;

703 
g_logout_Êag
 = 
NEGATIVE
;

704 
g_shutdown_Êag
 = 
NEGATIVE
;

706  
SUCCESS
;

707 
	}
}

709 
	$shutdown
()

711 
ªt
;

713 
	`di•œy_öfo
("Ê≠£Âú®ÂÖ≥Êú∫...");

715 
	`u¶ìp
(100000);

716 
	`sync
();

718 
ªt
 = 
	`sy°em
("shutdown");

719 i‡(
ªt
 < 0)

720  
FAIL
;

722  
SUCCESS
;

723 
	}
}

730 
	$ui_gë_keycode
(*
key
)

732 
keycode
, 
ime_°©e
;

734 
ime_°©e
 = 
	`gë_ime_°©us
();

735 
	`£t_ime_°©us
(
INPUT_LOW_CASE
);

737 
	`˛ór_ˇche
();

739 
keycode
 = 
	`gë_keycode
();

740 i‡(!(
keycode
 >'1' && keycodê<'6'Ë&& keycodê!
BACK
 && keycode != 'z')

746 i‡(
keycode
 =
BACK
)

747 *
key
 = 
BACK
;

748 i‡(
keycode
 == 'z')

749 *
key
 = 
HANG
;

751 *
key
 = 
keycode
 - '0';

753 
	`£t_ime_°©us
(
ime_°©e
);

755  
SUCCESS
;

756 
	}
}

763 
	$ui_h™dÀ_keycode
(
key
)

765 
cur_id
, 
ôem_num
;

766 
√xt_id
, 
∑ª¡_id
;

768 
ACTION
 
h™dÀr
;

770 
cur_id
 = 
	`gë_cur_‰ame_id
();

772 i‡(
key
 =
BACK
) {

773 
∑ª¡_id
 = 
	`gë_∑ª¡_id
(
cur_id
);

774 i‡(
cur_id
 =
∑ª¡_id
)

775  
SUCCESS
;

777 
	`p›_ui_°©ck
();

779 
	`£t_cur_‰ame_id
(
∑ª¡_id
);

780 
	`show_cuºít_ui
(
∑ª¡_id
);

782  
SUCCESS
;

785 i‡(
key
 =
HANG
) {

786 
	`cmd_ªsume_å™ß˘
();

788 
	`£t_cur_‰ame_id
(
cur_id
);

789 
	`show_cuºít_ui
(
cur_id
);

791  
SUCCESS
;

794 
ôem_num
 = 
	`gë_ôem_num
(
cur_id
);

796 i‡(
key
 > (
ôem_num
 - 1))

797  
FAIL
;

799 
√xt_id
 = 
	`gë_√xt_id
(
cur_id
, 
key
);

800 
h™dÀr
 = 
	`gë_√xt_a˘i⁄
(
cur_id
, 
key
);

802 i‡(
h™dÀr
 =
NULL
) {

803 
	`push_ui_°©ck
(
cur_id
);

805 
	`£t_cur_‰ame_id
(
√xt_id
);

806 
	`show_cuºít_ui
(
√xt_id
);

808  
SUCCESS
;

810 
	`h™dÀr
();

812 
	`push_ui_°©ck
(
cur_id
);

814 i‡(
√xt_id
 =
CLEAN_UI
) {

818 
	`˛ór_s¸ìn
();

820 
	`£t_cur_‰ame_id
(
√xt_id
);

821 
	`show_cuºít_ui
(
√xt_id
);

824  
SUCCESS
;

826 
	}
}

	@/usr/include/assert.h

22 #ifdef 
_ASSERT_H


24 #unde‡
_ASSERT_H


25 #unde‡
as£π


26 #unde‡
__ASSERT_VOID_CAST


28 #ifdef 
__USE_GNU


29 #unde‡
as£π_≥º‹


34 
	#_ASSERT_H
 1

	)

35 
	~<„©uªs.h
>

37 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,95)

38 
	#__ASSERT_VOID_CAST
 
°©ic_ˇ°
<>

	)

40 
	#__ASSERT_VOID_CAST
 ()

	)

48 #ifdef 
NDEBUG


50 
	#as£π
(
ex¥
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

58 #ifdef 
__USE_GNU


59 
	#as£π_≥º‹
(
î∫um
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

64 #i‚de‡
_ASSERT_H_DECLS


65 
	#_ASSERT_H_DECLS


	)

66 
__BEGIN_DECLS


69 
	$__as£π_Áû
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
,

70 
__löe
, c⁄° *
__fun˘i⁄
)

71 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

74 
	$__as£π_≥º‹_Áû
 (
__î∫um
, c⁄° *
__fûe
,

75 
__löe
, c⁄° *
__fun˘i⁄
)

76 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

81 
	$__as£π
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
, 
__löe
)

82 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

85 
__END_DECLS


88 
	#as£π
(
ex¥
) \

89 ((
ex¥
) \

90 ? 
	`__ASSERT_VOID_CAST
 (0) \

91 : 
	`__as£π_Áû
 (
	`__STRING
(
ex¥
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

93 #ifdef 
__USE_GNU


94 
	#as£π_≥º‹
(
î∫um
) \

95 (!(
î∫um
) \

96 ? 
	`__ASSERT_VOID_CAST
 (0) \

97 : 
	`__as£π_≥º‹_Áû
 ((
î∫um
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

105 #i‡
deföed
 
__˝lu•lus
 ? 
	`__GNUC_PREREQ
 (2, 6) : __GNUC_PREREQ (2, 4)

106 
	#__ASSERT_FUNCTION
 
__PRETTY_FUNCTION__


	)

108 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

109 
	#__ASSERT_FUNCTION
 
__func__


	)

111 
	#__ASSERT_FUNCTION
 ((c⁄° *Ë0)

	)

118 #i‡
deföed
 
__USE_ISOC11
 && !deföed 
__˝lu•lus


120 #unde‡
°©ic_as£π


121 
	#°©ic_as£π
 
_Sètic_as£π


	)

	@/usr/include/ctype.h

22 #i‚def 
_CTYPE_H


23 
	#_CTYPE_H
 1

	)

25 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 
	g__BEGIN_DECLS


30 #i‚de‡
_ISbô


39 
	~<ídün.h
>

40 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


41 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

43 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

48 
	m_ISuµî
 = 
_ISbô
 (0),

49 
	m_ISlowî
 = 
_ISbô
 (1),

50 
	m_ISÆpha
 = 
_ISbô
 (2),

51 
	m_ISdigô
 = 
_ISbô
 (3),

52 
	m_ISxdigô
 = 
_ISbô
 (4),

53 
	m_IS•a˚
 = 
_ISbô
 (5),

54 
	m_IS¥öt
 = 
_ISbô
 (6),

55 
	m_ISgøph
 = 
_ISbô
 (7),

56 
	m_ISbœnk
 = 
_ISbô
 (8),

57 
	m_IS˙ål
 = 
_ISbô
 (9),

58 
	m_ISpun˘
 = 
_ISbô
 (10),

59 
	m_ISÆnum
 = 
_ISbô
 (11)

79 c⁄° **
	$__˘y≥_b_loc
 ()

80 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

81 c⁄° 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

82 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

83 c⁄° 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

84 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

87 #i‚de‡
__˝lu•lus


88 
	#__is˘y≥
(
c
, 
ty≥
) \

89 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

90 #ñi‡
deföed
 
__USE_EXTERN_INLINES


91 
	#__is˘y≥_f
(
ty≥
) \

92 
__exã∫_ölöe
 \

93 
is
##
	`ty≥
 (
__c
Ë
__THROW
 \

95  (*
	`__˘y≥_b_loc
 ())[(Ë(
__c
)] & (Ë
_IS
##
ty≥
; \

96 
	}

	)
}

99 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

100 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

102 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

104 
__BEGIN_NAMESPACE_STD


110 
__ex˘y≥
 (
iß um
);

111 
__ex˘y≥
 (
ißÕha
);

112 
__ex˘y≥
 (
is˙ål
);

113 
__ex˘y≥
 (
isdigô
);

114 
__ex˘y≥
 (
i¶owî
);

115 
__ex˘y≥
 (
isgøph
);

116 
__ex˘y≥
 (
i•röt
);

117 
__ex˘y≥
 (
i•un˘
);

118 
__ex˘y≥
 (
is•a˚
);

119 
__ex˘y≥
 (
isuµî
);

120 
__ex˘y≥
 (
isxdigô
);

124 
	$tﬁowî
 (
__c
Ë
__THROW
;

127 
	$touµî
 (
__c
Ë
__THROW
;

129 
__END_NAMESPACE_STD


133 #ifdef 
__USE_ISOC99


134 
__BEGIN_NAMESPACE_C99


136 
	`__ex˘y≥
 (
isbœnk
);

138 
__END_NAMESPACE_C99


141 #ifde‡
__USE_GNU


143 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

146 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


150 
	$ißscii
 (
__c
Ë
__THROW
;

154 
	$tﬂscii
 (
__c
Ë
__THROW
;

158 
	`__ex˘y≥
 (
_touµî
);

159 
	`__ex˘y≥
 (
_tﬁowî
);

163 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

164 (
__exãnsi⁄__
 \

165 ({ 
__ªs
; \

166 i‡( (
c
) > 1) \

168 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

170 
__c
 = (
c
); \

171 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

174 
__ªs
 = 
f
 
¨gs
; \

177 
__ªs
 = (
a
)[(Ë(
c
)]; \

178 
__ªs
; 
	}
}))

	)

180 #i‡!
deföed
 
__NO_CTYPE


181 #ifde‡
__is˘y≥_f


182 
	$__is˘y≥_f
 (
Ænum
)

183 
	$__is˘y≥_f
 (
Æpha
)

184 
	$__is˘y≥_f
 (
˙ål
)

185 
	$__is˘y≥_f
 (
digô
)

186 
	$__is˘y≥_f
 (
lowî
)

187 
	$__is˘y≥_f
 (
gøph
)

188 
	$__is˘y≥_f
 (
¥öt
)

189 
	$__is˘y≥_f
 (
pun˘
)

190 
	$__is˘y≥_f
 (
•a˚
)

191 
	$__is˘y≥_f
 (
uµî
)

192 
	$__is˘y≥_f
 (
xdigô
)

193 #ifde‡
__USE_ISOC99


194 
	$__is˘y≥_f
 (
bœnk
)

196 #ñi‡
deföed
 
__is˘y≥


197 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

198 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

199 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

200 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

201 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

202 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

203 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

204 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

205 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

206 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

207 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

208 #ifde‡
__USE_ISOC99


209 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

213 #ifde‡
__USE_EXTERN_INLINES


214 
__exã∫_ölöe
 

215 
	`__NTH
 (
	$tﬁowî
 (
__c
))

217  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

218 
	}
}

220 
__exã∫_ölöe
 

221 
__NTH
 (
	$touµî
 (
__c
))

223  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

224 
	}
}

227 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


228 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

229 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

232 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


233 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

234 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

236 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

237 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

243 #ifde‡
__USE_XOPEN2K8


257 
	~<xloˇÀ.h
>

261 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

262 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

264 
	#__ex˘y≥_l
(
«me
) \

265 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

271 
__ex˘y≥_l
 (
iß um_l
);

272 
__ex˘y≥_l
 (
ißÕha_l
);

273 
__ex˘y≥_l
 (
is˙ål_l
);

274 
__ex˘y≥_l
 (
isdigô_l
);

275 
__ex˘y≥_l
 (
i¶owî_l
);

276 
__ex˘y≥_l
 (
isgøph_l
);

277 
__ex˘y≥_l
 (
i•röt_l
);

278 
__ex˘y≥_l
 (
i•un˘_l
);

279 
__ex˘y≥_l
 (
is•a˚_l
);

280 
__ex˘y≥_l
 (
isuµî_l
);

281 
__ex˘y≥_l
 (
isxdigô_l
);

283 
__ex˘y≥_l
 (
isbœnk_l
);

287 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

288 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

291 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

292 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

294 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


295 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

296 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

297 
	#__touµî_l
(
c
, 
loˇÀ
) \

298 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

299 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

300 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

304 #i‚de‡
__NO_CTYPE


305 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

306 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

307 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

308 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

309 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

310 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

311 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

312 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

313 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

314 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

315 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

317 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

319 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


320 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

321 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

324 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

325 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

326 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

327 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

328 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

329 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

330 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

331 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

332 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

333 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

334 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

336 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

338 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


339 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

340 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

347 
__END_DECLS


	@/usr/include/errno.h

22 #i‚def 
_ERRNO_H


26 #i‚def 
__√ed_Em©h


27 
	#_ERRNO_H
 1

	)

28 
	~<„©uªs.h
>

31 
	g__BEGIN_DECLS


35 
	~<bôs/î∫o.h
>

36 #unde‡
__√ed_Em©h


38 #ifdef 
_ERRNO_H


45 #i‚def 
î∫o


46 
î∫o
;

49 #ifde‡
__USE_GNU


54 *
¥ogøm_övoˇti⁄_«me
, *
¥ogøm_övoˇti⁄_sh‹t_«me
;

58 
	g__END_DECLS


66 #i‡
deföed
 
__USE_GNU
 || deföed 
__√ed_îr‹_t


67 #i‚de‡
__îr‹_t_deföed


68 
	tîr‹_t
;

69 
	#__îr‹_t_deföed
 1

	)

71 #unde‡
__√ed_îr‹_t


	@/usr/include/error.h

19 #i‚de‡
_ERROR_H


20 
	#_ERROR_H
 1

	)

22 
	~<„©uªs.h
>

25 
__BEGIN_DECLS


31 
	$îr‹
 (
__°©us
, 
__î∫um
, c⁄° *
__f‹m©
, ...)

32 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

34 
	$îr‹_©_löe
 (
__°©us
, 
__î∫um
, c⁄° *
__‚ame
,

35 
__löío
, c⁄° *
__f‹m©
, ...)

36 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 5, 6)));

41 (*
îr‹_¥öt_¥og«me
) ();

44 
îr‹_mesßge_cou¡
;

48 
îr‹_⁄e_≥r_löe
;

51 #i‡
deföed
 
__exã∫_Æways_ölöe
 && deföed 
__va_¨g_∑ck


52 
	~<bôs/îr‹.h
>

55 
__END_DECLS


	@/usr/include/fcntl.h

22 #i‚def 
_FCNTL_H


23 
	#_FCNTL_H
 1

	)

25 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


31 
	~<bôs/ty≥s.h
>

35 
	~<bôs/f˙é.h
>

40 #i‚de‡
__mode_t_deföed


41 
__mode_t
 
	tmode_t
;

42 
	#__mode_t_deföed


	)

45 #i‚de‡
__off_t_deföed


46 #i‚de‡
__USE_FILE_OFFSET64


47 
__off_t
 
	toff_t
;

49 
__off64_t
 
	toff_t
;

51 
	#__off_t_deföed


	)

54 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


55 
__off64_t
 
	toff64_t
;

56 
	#__off64_t_deföed


	)

59 #i‚de‡
__pid_t_deföed


60 
__pid_t
 
	tpid_t
;

61 
	#__pid_t_deföed


	)

65 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


66 
	#__√ed_time•ec


	)

67 
	~<time.h
>

68 
	~<bôs/°©.h
>

70 
	#S_IFMT
 
__S_IFMT


	)

71 
	#S_IFDIR
 
__S_IFDIR


	)

72 
	#S_IFCHR
 
__S_IFCHR


	)

73 
	#S_IFBLK
 
__S_IFBLK


	)

74 
	#S_IFREG
 
__S_IFREG


	)

75 #ifde‡
__S_IFIFO


76 
	#S_IFIFO
 
__S_IFIFO


	)

78 #ifde‡
__S_IFLNK


79 
	#S_IFLNK
 
__S_IFLNK


	)

81 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
Ë&& deföed 
__S_IFSOCK


82 
	#S_IFSOCK
 
__S_IFSOCK


	)

87 
	#S_ISUID
 
__S_ISUID


	)

88 
	#S_ISGID
 
__S_ISGID


	)

90 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


92 
	#S_ISVTX
 
__S_ISVTX


	)

95 
	#S_IRUSR
 
__S_IREAD


	)

96 
	#S_IWUSR
 
__S_IWRITE


	)

97 
	#S_IXUSR
 
__S_IEXEC


	)

99 
	#S_IRWXU
 (
__S_IREAD
|
__S_IWRITE
|
__S_IEXEC
)

	)

101 
	#S_IRGRP
 (
S_IRUSR
 >> 3Ë

	)

102 
	#S_IWGRP
 (
S_IWUSR
 >> 3Ë

	)

103 
	#S_IXGRP
 (
S_IXUSR
 >> 3Ë

	)

105 
	#S_IRWXG
 (
S_IRWXU
 >> 3)

	)

107 
	#S_IROTH
 (
S_IRGRP
 >> 3Ë

	)

108 
	#S_IWOTH
 (
S_IWGRP
 >> 3Ë

	)

109 
	#S_IXOTH
 (
S_IXGRP
 >> 3Ë

	)

111 
	#S_IRWXO
 (
S_IRWXG
 >> 3)

	)

114 #ifdef 
__USE_MISC


115 #i‚de‡
R_OK


118 
	#R_OK
 4

	)

119 
	#W_OK
 2

	)

120 
	#X_OK
 1

	)

121 
	#F_OK
 0

	)

126 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


127 
	#SEEK_SET
 0

	)

128 
	#SEEK_CUR
 1

	)

129 
	#SEEK_END
 2

	)

137 
f˙é
 (
__fd
, 
__cmd
, ...);

145 #i‚de‡
__USE_FILE_OFFSET64


146 
	$›í
 (c⁄° *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

148 #ifde‡
__REDIRECT


149 
	`__REDIRECT
 (
›í
, (c⁄° *
__fûe
, 
__oÊag
, ...), 
›í64
)

150 
	`__n⁄nuŒ
 ((1));

152 
	#›í
 
›í64


	)

155 #ifde‡
__USE_LARGEFILE64


156 
	$›í64
 (c⁄° *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

159 #ifde‡
__USE_ATFILE


169 #i‚de‡
__USE_FILE_OFFSET64


170 
	$›í©
 (
__fd
, c⁄° *
__fûe
, 
__oÊag
, ...)

171 
	`__n⁄nuŒ
 ((2));

173 #ifde‡
__REDIRECT


174 
	`__REDIRECT
 (
›í©
, (
__fd
, c⁄° *
__fûe
, 
__oÊag
,

175 ...), 
›í©64
Ë
	`__n⁄nuŒ
 ((2));

177 
	#›í©
 
›í©64


	)

180 #ifde‡
__USE_LARGEFILE64


181 
	$›í©64
 (
__fd
, c⁄° *
__fûe
, 
__oÊag
, ...)

182 
	`__n⁄nuŒ
 ((2));

191 #i‚de‡
__USE_FILE_OFFSET64


192 
	$¸ót
 (c⁄° *
__fûe
, 
mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

194 #ifde‡
__REDIRECT


195 
	`__REDIRECT
 (
¸ót
, (c⁄° *
__fûe
, 
mode_t
 
__mode
),

196 
¸ót64
Ë
	`__n⁄nuŒ
 ((1));

198 
	#¸ót
 
¸ót64


	)

201 #ifde‡
__USE_LARGEFILE64


202 
	$¸ót64
 (c⁄° *
__fûe
, 
mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

205 #i‡!
deföed
 
F_LOCK
 && (deföed 
__USE_MISC
 || (deföed 
__USE_XOPEN_EXTENDED
 \

206 && !
deföed
 
__USE_POSIX
))

215 
	#F_ULOCK
 0

	)

216 
	#F_LOCK
 1

	)

217 
	#F_TLOCK
 2

	)

218 
	#F_TEST
 3

	)

220 #i‚de‡
__USE_FILE_OFFSET64


221 
	`lockf
 (
__fd
, 
__cmd
, 
off_t
 
__Àn
);

223 #ifde‡
__REDIRECT


224 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
), 
lockf64
);

226 
	#lockf
 
lockf64


	)

229 #ifde‡
__USE_LARGEFILE64


230 
	`lockf64
 (
__fd
, 
__cmd
, 
off64_t
 
__Àn
);

234 #ifde‡
__USE_XOPEN2K


237 #i‚de‡
__USE_FILE_OFFSET64


238 
	$posix_Ádvi£
 (
__fd
, 
off_t
 
__off£t
, off_à
__Àn
,

239 
__advi£
Ë
__THROW
;

241 #ifde‡
__REDIRECT_NTH


242 
	`__REDIRECT_NTH
 (
posix_Ádvi£
, (
__fd
, 
__off64_t
 
__off£t
,

243 
__off64_t
 
__Àn
, 
__advi£
),

244 
posix_Ádvi£64
);

246 
	#posix_Ádvi£
 
posix_Ádvi£64


	)

249 #ifde‡
__USE_LARGEFILE64


250 
	$posix_Ádvi£64
 (
__fd
, 
off64_t
 
__off£t
, off64_à
__Àn
,

251 
__advi£
Ë
__THROW
;

259 #i‚de‡
__USE_FILE_OFFSET64


260 
	`posix_ÁŒoˇã
 (
__fd
, 
off_t
 
__off£t
, off_à
__Àn
);

262 #ifde‡
__REDIRECT


263 
	`__REDIRECT
 (
posix_ÁŒoˇã
, (
__fd
, 
__off64_t
 
__off£t
,

264 
__off64_t
 
__Àn
),

265 
posix_ÁŒoˇã64
);

267 
	#posix_ÁŒoˇã
 
posix_ÁŒoˇã64


	)

270 #ifde‡
__USE_LARGEFILE64


271 
	`posix_ÁŒoˇã64
 (
__fd
, 
off64_t
 
__off£t
, off64_à
__Àn
);

277 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄
 \

278 && 
deföed
 
__va_¨g_∑ck_Àn


279 
	~<bôs/f˙é2.h
>

282 
__END_DECLS


	@/usr/include/linux/rtc.h

11 #i‚de‡
_LINUX_RTC_H_


12 
	#_LINUX_RTC_H_


	)

20 
	sπc_time
 {

21 
	mtm_£c
;

22 
	mtm_mö
;

23 
	mtm_hour
;

24 
	mtm_mday
;

25 
	mtm_m⁄
;

26 
	mtm_yór
;

27 
	mtm_wday
;

28 
	mtm_yday
;

29 
	mtm_isd°
;

36 
	sπc_wkÆrm
 {

37 
	míabÀd
;

38 
	m≥ndög
;

39 
πc_time
 
	mtime
;

55 
	sπc_∂l_öfo
 {

56 
	m∂l_˘æ
;

57 
	m∂l_vÆue
;

58 
	m∂l_max
;

59 
	m∂l_mö
;

60 
	m∂l_posmu…
;

61 
	m∂l_√gmu…
;

62 
	m∂l_˛ock
;

70 
	#RTC_AIE_ON
 
	`_IO
('p', 0x01Ë

	)

71 
	#RTC_AIE_OFF
 
	`_IO
('p', 0x02Ë

	)

72 
	#RTC_UIE_ON
 
	`_IO
('p', 0x03Ë

	)

73 
	#RTC_UIE_OFF
 
	`_IO
('p', 0x04Ë

	)

74 
	#RTC_PIE_ON
 
	`_IO
('p', 0x05Ë

	)

75 
	#RTC_PIE_OFF
 
	`_IO
('p', 0x06Ë

	)

76 
	#RTC_WIE_ON
 
	`_IO
('p', 0x0fË

	)

77 
	#RTC_WIE_OFF
 
	`_IO
('p', 0x10Ë

	)

79 
	#RTC_ALM_SET
 
	`_IOW
('p', 0x07, 
πc_time
Ë

	)

80 
	#RTC_ALM_READ
 
	`_IOR
('p', 0x08, 
πc_time
Ë

	)

81 
	#RTC_RD_TIME
 
	`_IOR
('p', 0x09, 
πc_time
Ë

	)

82 
	#RTC_SET_TIME
 
	`_IOW
('p', 0x0a, 
πc_time
Ë

	)

83 
	#RTC_IRQP_READ
 
	`_IOR
('p', 0x0b, Ë

	)

84 
	#RTC_IRQP_SET
 
	`_IOW
('p', 0x0c, Ë

	)

85 
	#RTC_EPOCH_READ
 
	`_IOR
('p', 0x0d, Ë

	)

86 
	#RTC_EPOCH_SET
 
	`_IOW
('p', 0x0e, Ë

	)

88 
	#RTC_WKALM_SET
 
	`_IOW
('p', 0x0f, 
πc_wkÆrm
)

	)

89 
	#RTC_WKALM_RD
 
	`_IOR
('p', 0x10, 
πc_wkÆrm
)

	)

91 
	#RTC_PLL_GET
 
	`_IOR
('p', 0x11, 
πc_∂l_öfo
Ë

	)

92 
	#RTC_PLL_SET
 
	`_IOW
('p', 0x12, 
πc_∂l_öfo
Ë

	)

94 
	#RTC_VL_READ
 
	`_IOR
('p', 0x13, Ë

	)

95 
	#RTC_VL_CLR
 
	`_IO
('p', 0x14Ë

	)

98 
	#RTC_IRQF
 0x80

	)

99 
	#RTC_PF
 0x40

	)

100 
	#RTC_AF
 0x20

	)

101 
	#RTC_UF
 0x10

	)

104 
	#RTC_MAX_FREQ
 8192

	)

	@/usr/include/locale.h

22 #i‚def 
_LOCALE_H


23 
	#_LOCALE_H
 1

	)

25 
	~<„©uªs.h
>

27 
	#__√ed_NULL


	)

28 
	~<°ddef.h
>

29 
	~<bôs/loˇÀ.h
>

31 
	g__BEGIN_DECLS


35 
	#LC_CTYPE
 
__LC_CTYPE


	)

36 
	#LC_NUMERIC
 
__LC_NUMERIC


	)

37 
	#LC_TIME
 
__LC_TIME


	)

38 
	#LC_COLLATE
 
__LC_COLLATE


	)

39 
	#LC_MONETARY
 
__LC_MONETARY


	)

40 
	#LC_MESSAGES
 
__LC_MESSAGES


	)

41 
	#LC_ALL
 
__LC_ALL


	)

42 
	#LC_PAPER
 
__LC_PAPER


	)

43 
	#LC_NAME
 
__LC_NAME


	)

44 
	#LC_ADDRESS
 
__LC_ADDRESS


	)

45 
	#LC_TELEPHONE
 
__LC_TELEPHONE


	)

46 
	#LC_MEASUREMENT
 
__LC_MEASUREMENT


	)

47 
	#LC_IDENTIFICATION
 
__LC_IDENTIFICATION


	)

50 
__BEGIN_NAMESPACE_STD


53 
	slc⁄v


57 *
	mdecimÆ_poöt
;

58 *
	mthoußnds_£p
;

64 *
	mgroupög
;

70 *
	möt_cuº_symbﬁ
;

71 *
	mcuºícy_symbﬁ
;

72 *
	mm⁄_decimÆ_poöt
;

73 *
	mm⁄_thoußnds_£p
;

74 *
	mm⁄_groupög
;

75 *
	mposôive_sign
;

76 *
	m√g©ive_sign
;

77 
	möt_‰ac_digôs
;

78 
	m‰ac_digôs
;

80 
	mp_cs_¥e˚des
;

82 
	mp_£p_by_•a˚
;

84 
	mn_cs_¥e˚des
;

86 
	mn_£p_by_•a˚
;

93 
	mp_sign_po¢
;

94 
	mn_sign_po¢
;

95 #ifde‡
__USE_ISOC99


97 
	möt_p_cs_¥e˚des
;

99 
	möt_p_£p_by_•a˚
;

101 
	möt_n_cs_¥e˚des
;

103 
	möt_n_£p_by_•a˚
;

110 
	möt_p_sign_po¢
;

111 
	möt_n_sign_po¢
;

113 
	m__öt_p_cs_¥e˚des
;

114 
	m__öt_p_£p_by_•a˚
;

115 
	m__öt_n_cs_¥e˚des
;

116 
	m__öt_n_£p_by_•a˚
;

117 
	m__öt_p_sign_po¢
;

118 
	m__öt_n_sign_po¢
;

124 *
	$£éoˇÀ
 (
__ˇãg‹y
, c⁄° *
__loˇÀ
Ë
__THROW
;

127 
lc⁄v
 *
	$loˇÀc⁄v
 (Ë
__THROW
;

129 
__END_NAMESPACE_STD


132 #ifdef 
__USE_XOPEN2K8


145 
	~<xloˇÀ.h
>

151 
__loˇÀ_t
 
	$√wloˇÀ
 (
__ˇãg‹y_mask
, c⁄° *
__loˇÀ
,

152 
__loˇÀ_t
 
__ba£
Ë
__THROW
;

158 
	#LC_CTYPE_MASK
 (1 << 
__LC_CTYPE
)

	)

159 
	#LC_NUMERIC_MASK
 (1 << 
__LC_NUMERIC
)

	)

160 
	#LC_TIME_MASK
 (1 << 
__LC_TIME
)

	)

161 
	#LC_COLLATE_MASK
 (1 << 
__LC_COLLATE
)

	)

162 
	#LC_MONETARY_MASK
 (1 << 
__LC_MONETARY
)

	)

163 
	#LC_MESSAGES_MASK
 (1 << 
__LC_MESSAGES
)

	)

164 
	#LC_PAPER_MASK
 (1 << 
__LC_PAPER
)

	)

165 
	#LC_NAME_MASK
 (1 << 
__LC_NAME
)

	)

166 
	#LC_ADDRESS_MASK
 (1 << 
__LC_ADDRESS
)

	)

167 
	#LC_TELEPHONE_MASK
 (1 << 
__LC_TELEPHONE
)

	)

168 
	#LC_MEASUREMENT_MASK
 (1 << 
__LC_MEASUREMENT
)

	)

169 
	#LC_IDENTIFICATION_MASK
 (1 << 
__LC_IDENTIFICATION
)

	)

170 
	#LC_ALL_MASK
 (
LC_CTYPE_MASK
 \

171 | 
LC_NUMERIC_MASK
 \

172 | 
LC_TIME_MASK
 \

173 | 
LC_COLLATE_MASK
 \

174 | 
LC_MONETARY_MASK
 \

175 | 
LC_MESSAGES_MASK
 \

176 | 
LC_PAPER_MASK
 \

177 | 
LC_NAME_MASK
 \

178 | 
LC_ADDRESS_MASK
 \

179 | 
LC_TELEPHONE_MASK
 \

180 | 
LC_MEASUREMENT_MASK
 \

181 | 
LC_IDENTIFICATION_MASK
 \

182 )

	)

186 
__loˇÀ_t
 
	$du∂oˇÀ
 (
__loˇÀ_t
 
__d©a£t
Ë
__THROW
;

190 
	$‰ìloˇÀ
 (
__loˇÀ_t
 
__d©a£t
Ë
__THROW
;

197 
__loˇÀ_t
 
	$u£loˇÀ
 (
__loˇÀ_t
 
__d©a£t
Ë
__THROW
;

201 
	#LC_GLOBAL_LOCALE
 ((
__loˇÀ_t
Ë-1L)

	)

205 
__END_DECLS


	@/usr/include/math.h

23 #i‚def 
_MATH_H


24 
	#_MATH_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


32 
	~<bôs/huge_vÆ.h
>

33 #ifde‡
__USE_ISOC99


34 
	~<bôs/huge_vÆf.h
>

35 
	~<bôs/huge_vÆl.h
>

38 
	~<bôs/öf.h
>

41 
	~<bôs/«n.h
>

45 
	~<bôs/m©hdef.h
>

52 
	#__MATHCALL
(
fun˘i⁄
,
suffix
, 
¨gs
) \

53 
	`__MATHDECL
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
)

	)

54 
	#__MATHDECL
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

55 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
); \

56 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
)

	)

57 
	#__MATHCALLX
(
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

58 
	`__MATHDECLX
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
)

	)

59 
	#__MATHDECLX
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

60 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
); \

61 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
)

	)

62 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

63 
ty≥
 
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
Ë
¨gs
 
__THROW


	)

65 
	#_MdoubÀ_
 

	)

66 
	#__MATH_PRECNAME
(
«me
,
r
Ë
	`__CONCAT
“ame,r)

	)

67 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_STD


	)

68 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_STD


	)

69 
	~<bôs/m©hˇŒs.h
>

70 #unde‡
_MdoubÀ_


71 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


72 #unde‡
_MdoubÀ_END_NAMESPACE


73 #unde‡
__MATH_PRECNAME


75 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


81 #i‚de‡
_MÊﬂt_


82 
	#_MÊﬂt_
 

	)

84 
	#_MdoubÀ_
 
_MÊﬂt_


	)

85 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f
##
	)
r

86 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_C99


	)

87 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_C99


	)

88 
	~<bôs/m©hˇŒs.h
>

89 #unde‡
_MdoubÀ_


90 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


91 #unde‡
_MdoubÀ_END_NAMESPACE


92 #unde‡
__MATH_PRECNAME


94 #i‡!(
deföed
 
__NO_LONG_DOUBLE_MATH
 && deföed 
_LIBC
) \

95 || 
deföed
 
__LDBL_COMPAT


96 #ifde‡
__LDBL_COMPAT


98 #ifde‡
__USE_ISOC99


99 
	$__∆dbl_√xâow¨df
 (
__x
, 
__y
)

100 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

101 #ifde‡
__REDIRECT_NTH


102 
	`__REDIRECT_NTH
 (
√xâow¨df
, (
__x
, 
__y
),

103 
__∆dbl_√xâow¨df
)

104 
	`__©åibuã__
 ((
__c⁄°__
));

105 
	`__REDIRECT_NTH
 (
√xâow¨d
, (
__x
, 
__y
),

106 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

107 
	`__REDIRECT_NTH
 (
√xâow¨dl
,

108 (
__x
, 
__y
),

109 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

113 #unde‡
__MATHDECL_1


114 
	#__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
Æüs
) \

115 
ty≥
 
	`__REDIRECT_NTH
(
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
), \

116 
¨gs
, 
Æüs
)

	)

117 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

118 
	`__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
	`__CONCAT
(fun˘i⁄,suffix))

	)

124 #i‚de‡
_Ml⁄g_doubÀ_


125 
	#_Ml⁄g_doubÀ_
 

	)

127 
	#_MdoubÀ_
 
_Ml⁄g_doubÀ_


	)

128 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
l
##
	)
r

129 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_C99


	)

130 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_C99


	)

131 
	#__MATH_DECLARE_LDOUBLE
 1

	)

132 
	~<bôs/m©hˇŒs.h
>

133 #unde‡
_MdoubÀ_


134 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


135 #unde‡
_MdoubÀ_END_NAMESPACE


136 #unde‡
__MATH_PRECNAME


141 #unde‡
__MATHDECL_1


142 #unde‡
__MATHDECL


143 #unde‡
__MATHCALL


146 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


148 
signgam
;

153 #ifde‡
__USE_ISOC99


191 
FP_NAN
 =

192 
	#FP_NAN
 0

	)

193 
FP_NAN
,

194 
FP_INFINITE
 =

195 
	#FP_INFINITE
 1

	)

196 
FP_INFINITE
,

197 
FP_ZERO
 =

198 
	#FP_ZERO
 2

	)

199 
FP_ZERO
,

200 
FP_SUBNORMAL
 =

201 
	#FP_SUBNORMAL
 3

	)

202 
FP_SUBNORMAL
,

203 
FP_NORMAL
 =

204 
	#FP_NORMAL
 4

	)

205 
FP_NORMAL


209 #ifde‡
__NO_LONG_DOUBLE_MATH


210 
	#Â˛assify
(
x
) \

211 ( (
x
Ë= (Ë? 
	`__Â˛assifyf
 (xË: 
	`__Â˛assify
 (x))

	)

213 
	#Â˛assify
(
x
) \

214 ( (
x
) ==  () \

215 ? 
	`__Â˛assifyf
 (
x
) \

216 :  (
x
) ==  () \

217 ? 
	`__Â˛assify
 (
x
Ë: 
	`__Â˛assifyl
 (x))

	)

221 #ifde‡
__NO_LONG_DOUBLE_MATH


222 
	#signbô
(
x
) \

223 ( (
x
Ë= (Ë? 
	`__signbôf
 (xË: 
	`__signbô
 (x))

	)

225 
	#signbô
(
x
) \

226 ( (
x
) ==  () \

227 ? 
	`__signbôf
 (
x
) \

228 :  (
x
) ==  () \

229 ? 
	`__signbô
 (
x
Ë: 
	`__signbôl
 (x))

	)

233 #ifde‡
__NO_LONG_DOUBLE_MATH


234 
	#isföôe
(
x
) \

235 ( (
x
Ë= (Ë? 
	`__föôef
 (xË: 
	`__föôe
 (x))

	)

237 
	#isföôe
(
x
) \

238 ( (
x
) ==  () \

239 ? 
	`__föôef
 (
x
) \

240 :  (
x
) ==  () \

241 ? 
	`__föôe
 (
x
Ë: 
	`__föôñ
 (x))

	)

245 
	#i¢‹mÆ
(
x
Ë(
	`Â˛assify
 (xË=
FP_NORMAL
)

	)

249 #ifde‡
__NO_LONG_DOUBLE_MATH


250 
	#i¢™
(
x
) \

251 ( (
x
Ë= (Ë? 
	`__i¢™f
 (xË: 
	`__i¢™
 (x))

	)

253 
	#i¢™
(
x
) \

254 ( (
x
) ==  () \

255 ? 
	`__i¢™f
 (
x
) \

256 :  (
x
) ==  () \

257 ? 
	`__i¢™
 (
x
Ë: 
	`__i¢™l
 (x))

	)

261 #ifde‡
__NO_LONG_DOUBLE_MATH


262 
	#isöf
(
x
) \

263 ( (
x
Ë= (Ë? 
	`__isöff
 (xË: 
	`__isöf
 (x))

	)

265 
	#isöf
(
x
) \

266 ( (
x
) ==  () \

267 ? 
	`__isöff
 (
x
) \

268 :  (
x
) ==  () \

269 ? 
	`__isöf
 (
x
Ë: 
	`__isöÊ
 (x))

	)

273 
	#MATH_ERRNO
 1

	)

274 
	#MATH_ERREXCEPT
 2

	)

279 #i‚de‡
__FAST_MATH__


280 
	#m©h_îrh™dlög
 (
MATH_ERRNO
 | 
MATH_ERREXCEPT
)

	)

285 #ifde‡
__USE_GNU


287 #ifde‡
__NO_LONG_DOUBLE_MATH


288 
	#issig«lög
(
x
) \

289 ( (
x
Ë= (Ë? 
	`__issig«lögf
 (xË: 
	`__issig«lög
 (x))

	)

291 
	#issig«lög
(
x
) \

292 ( (
x
) ==  () \

293 ? 
	`__issig«lögf
 (
x
) \

294 :  (
x
) ==  () \

295 ? 
	`__issig«lög
 (
x
Ë: 
	`__issig«lögl
 (x))

	)

299 #ifdef 
__USE_MISC


303 
_IEEE_
 = -1,

304 
_SVID_
,

305 
_XOPEN_
,

306 
_POSIX_
,

307 
_ISOC_


308 } 
	t_LIB_VERSION_TYPE
;

313 
_LIB_VERSION_TYPE
 
_LIB_VERSION
;

317 #ifde‡
__USE_SVID


323 #ifde‡
__˝lu•lus


324 
__ex˚±i⁄


326 
ex˚±i⁄


329 
ty≥
;

330 *
«me
;

331 
¨g1
;

332 
¨g2
;

333 
ªtvÆ
;

334 
	}
};

336 #ifde‡
__˝lu•lus


337 
	$m©hîr
 (
__ex˚±i⁄
 *
__exc
Ë
	`throw
 ();

339 
	`m©hîr
 (
ex˚±i⁄
 *
__exc
);

342 
	#X_TLOSS
 1.41484755040568800000e+16

	)

345 
	#DOMAIN
 1

	)

346 
	#SING
 2

	)

347 
	#OVERFLOW
 3

	)

348 
	#UNDERFLOW
 4

	)

349 
	#TLOSS
 5

	)

350 
	#PLOSS
 6

	)

353 
	#HUGE
 3.40282347e+38F

	)

357 #ifde‡
__USE_XOPEN


359 
	#MAXFLOAT
 3.40282347e+38F

	)

366 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


367 
	#M_E
 2.7182818284590452354

	)

368 
	#M_LOG2E
 1.4426950408889634074

	)

369 
	#M_LOG10E
 0.43429448190325182765

	)

370 
	#M_LN2
 0.69314718055994530942

	)

371 
	#M_LN10
 2.30258509299404568402

	)

372 
	#M_PI
 3.14159265358979323846

	)

373 
	#M_PI_2
 1.57079632679489661923

	)

374 
	#M_PI_4
 0.78539816339744830962

	)

375 
	#M_1_PI
 0.31830988618379067154

	)

376 
	#M_2_PI
 0.63661977236758134308

	)

377 
	#M_2_SQRTPI
 1.12837916709551257390

	)

378 
	#M_SQRT2
 1.41421356237309504880

	)

379 
	#M_SQRT1_2
 0.70710678118654752440

	)

385 #ifde‡
__USE_GNU


386 
	#M_El
 2.718281828459045235360287471352662498L

	)

387 
	#M_LOG2El
 1.442695040888963407359924681001892137L

	)

388 
	#M_LOG10El
 0.434294481903251827651128918916605082L

	)

389 
	#M_LN2l
 0.693147180559945309417232121458176568L

	)

390 
	#M_LN10l
 2.302585092994045684017991454684364208L

	)

391 
	#M_PIl
 3.141592653589793238462643383279502884L

	)

392 
	#M_PI_2l
 1.570796326794896619231321691639751442L

	)

393 
	#M_PI_4l
 0.785398163397448309615660845819875721L

	)

394 
	#M_1_PIl
 0.318309886183790671537767526745028724L

	)

395 
	#M_2_PIl
 0.636619772367581343075535053490057448L

	)

396 
	#M_2_SQRTPIl
 1.128379167095512573896158903121545172L

	)

397 
	#M_SQRT2l
 1.414213562373095048801688724209698079L

	)

398 
	#M_SQRT1_2l
 0.707106781186547524400844362104849039L

	)

405 #i‡
deföed
 
__STRICT_ANSI__
 && !deföed 
__NO_MATH_INLINES


406 
	#__NO_MATH_INLINES
 1

	)

409 #i‡
deföed
 
__USE_ISOC99
 && 
	`__GNUC_PREREQ
(2,97)

416 
	#isgª©î
(
x
, 
y
Ë
	`__buûtö_isgª©î
(x, y)

	)

417 
	#isgª©îequÆ
(
x
, 
y
Ë
	`__buûtö_isgª©îequÆ
(x, y)

	)

418 
	#i¶ess
(
x
, 
y
Ë
	`__buûtö_i¶ess
(x, y)

	)

419 
	#i¶es£quÆ
(
x
, 
y
Ë
	`__buûtö_i¶es£quÆ
(x, y)

	)

420 
	#i¶essgª©î
(
x
, 
y
Ë
	`__buûtö_i¶essgª©î
(x, y)

	)

421 
	#isun‹dîed
(
u
, 
v
Ë
	`__buûtö_isun‹dîed
(u, v)

	)

425 #ifde‡
__USE_EXTERN_INLINES


426 
	~<bôs/m©hölöe.h
>

431 #i‡
deföed
 
__FINITE_MATH_ONLY__
 && __FINITE_MATH_ONLY__ > 0

432 
	~<bôs/m©h-föôe.h
>

435 #ifde‡
__USE_ISOC99


439 #i‚de‡
isgª©î


440 
	#isgª©î
(
x
, 
y
) \

441 (
__exãnsi⁄__
 \

442 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

443 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x > __y; 
	}
}))

	)

447 #i‚de‡
isgª©îequÆ


448 
	#isgª©îequÆ
(
x
, 
y
) \

449 (
__exãnsi⁄__
 \

450 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

451 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x >__y; }))

	)

455 #i‚de‡
i¶ess


456 
	#i¶ess
(
x
, 
y
) \

457 (
__exãnsi⁄__
 \

458 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

459 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x < __y; }))

	)

463 #i‚de‡
i¶es£quÆ


464 
	#i¶es£quÆ
(
x
, 
y
) \

465 (
__exãnsi⁄__
 \

466 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

467 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x <__y; }))

	)

471 #i‚de‡
i¶essgª©î


472 
	#i¶essgª©î
(
x
, 
y
) \

473 (
__exãnsi⁄__
 \

474 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

475 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& (__x < __y || __y < __x); }))

	)

479 #i‚de‡
isun‹dîed


480 
	#isun‹dîed
(
u
, 
v
) \

481 (
__exãnsi⁄__
 \

482 ({ 
	`__ty≥of__
(
u
Ë
__u
 = (u); __ty≥of__(
v
Ë
__v
 = (v); \

483 
	`Â˛assify
 (
__u
Ë=
FP_NAN
 || fp˛assify (
__v
Ë=FP_NAN; }))

	)

488 
	g__END_DECLS


	@/usr/include/pthread.h

18 #i‚de‡
_PTHREAD_H


19 
	#_PTHREAD_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<ídün.h
>

23 
	~<sched.h
>

24 
	~<time.h
>

26 
	~<bôs/±hªadty≥s.h
>

27 
	~<bôs/£tjmp.h
>

28 
	~<bôs/w‹dsize.h
>

34 
	mPTHREAD_CREATE_JOINABLE
,

35 
	#PTHREAD_CREATE_JOINABLE
 
PTHREAD_CREATE_JOINABLE


	)

36 
	mPTHREAD_CREATE_DETACHED


37 
	#PTHREAD_CREATE_DETACHED
 
PTHREAD_CREATE_DETACHED


	)

44 
	mPTHREAD_MUTEX_TIMED_NP
,

45 
	mPTHREAD_MUTEX_RECURSIVE_NP
,

46 
	mPTHREAD_MUTEX_ERRORCHECK_NP
,

47 
	mPTHREAD_MUTEX_ADAPTIVE_NP


48 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


50 
	mPTHREAD_MUTEX_NORMAL
 = 
PTHREAD_MUTEX_TIMED_NP
,

51 
	mPTHREAD_MUTEX_RECURSIVE
 = 
PTHREAD_MUTEX_RECURSIVE_NP
,

52 
	mPTHREAD_MUTEX_ERRORCHECK
 = 
PTHREAD_MUTEX_ERRORCHECK_NP
,

53 
	mPTHREAD_MUTEX_DEFAULT
 = 
PTHREAD_MUTEX_NORMAL


55 #ifde‡
__USE_GNU


57 , 
	mPTHREAD_MUTEX_FAST_NP
 = 
PTHREAD_MUTEX_TIMED_NP


62 #ifde‡
__USE_XOPEN2K


66 
	mPTHREAD_MUTEX_STALLED
,

67 
	mPTHREAD_MUTEX_STALLED_NP
 = 
PTHREAD_MUTEX_STALLED
,

68 
	mPTHREAD_MUTEX_ROBUST
,

69 
	mPTHREAD_MUTEX_ROBUST_NP
 = 
PTHREAD_MUTEX_ROBUST


74 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


78 
	mPTHREAD_PRIO_NONE
,

79 
	mPTHREAD_PRIO_INHERIT
,

80 
	mPTHREAD_PRIO_PROTECT


86 #i‡
__PTHREAD_MUTEX_HAVE_ELISION
 == 1

87 
	#__PTHREAD_SPINS
 0, 0

	)

88 #ñi‡
__PTHREAD_MUTEX_HAVE_ELISION
 == 2

89 
	#__PTHREAD_SPINS
 { 0, 0 }

	)

91 
	#__PTHREAD_SPINS
 0

	)

94 #ifde‡
__PTHREAD_MUTEX_HAVE_PREV


95 
	#PTHREAD_MUTEX_INITIALIZER
 \

96 { { 0, 0, 0, 0, 0, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

97 #ifde‡
__USE_GNU


98 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

99 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

100 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

101 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

102 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

103 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

104 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

105 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

109 
	#PTHREAD_MUTEX_INITIALIZER
 \

110 { { 0, 0, 0, 0, 0, { 
__PTHREAD_SPINS
 } } }

	)

111 #ifde‡
__USE_GNU


112 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

113 { { 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 
__PTHREAD_SPINS
 } } }

	)

114 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

115 { { 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 
__PTHREAD_SPINS
 } } }

	)

116 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

117 { { 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 
__PTHREAD_SPINS
 } } }

	)

124 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


127 
	mPTHREAD_RWLOCK_PREFER_READER_NP
,

128 
	mPTHREAD_RWLOCK_PREFER_WRITER_NP
,

129 
	mPTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,

130 
	mPTHREAD_RWLOCK_DEFAULT_NP
 = 
PTHREAD_RWLOCK_PREFER_READER_NP


136 #i‚de‡
__PTHREAD_RWLOCK_INT_FLAGS_SHARED


137 #i‡
__WORDSIZE
 == 64

138 
	#__PTHREAD_RWLOCK_INT_FLAGS_SHARED
 1

	)

143 
	#PTHREAD_RWLOCK_INITIALIZER
 \

144 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

	)

145 #ifde‡
__USE_GNU


146 #ifde‡
__PTHREAD_RWLOCK_INT_FLAGS_SHARED


147 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

149 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
 } }

	)

151 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


152 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

153 { { 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
, \

154 0, 0, 0, 0 } }

	)

156 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

157 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,\

158 0 } }

	)

168 
	mPTHREAD_INHERIT_SCHED
,

169 
	#PTHREAD_INHERIT_SCHED
 
PTHREAD_INHERIT_SCHED


	)

170 
	mPTHREAD_EXPLICIT_SCHED


171 
	#PTHREAD_EXPLICIT_SCHED
 
PTHREAD_EXPLICIT_SCHED


	)

178 
	mPTHREAD_SCOPE_SYSTEM
,

179 
	#PTHREAD_SCOPE_SYSTEM
 
PTHREAD_SCOPE_SYSTEM


	)

180 
	mPTHREAD_SCOPE_PROCESS


181 
	#PTHREAD_SCOPE_PROCESS
 
PTHREAD_SCOPE_PROCESS


	)

188 
	mPTHREAD_PROCESS_PRIVATE
,

189 
	#PTHREAD_PROCESS_PRIVATE
 
PTHREAD_PROCESS_PRIVATE


	)

190 
	mPTHREAD_PROCESS_SHARED


191 
	#PTHREAD_PROCESS_SHARED
 
PTHREAD_PROCESS_SHARED


	)

197 
	#PTHREAD_COND_INITIALIZER
 { { 0, 0, 0, 0, 0, (*Ë0, 0, 0 } }

	)

201 
	s_±hªad_˛ónup_buf„r


203 (*
	m__routöe
) (*);

204 *
	m__¨g
;

205 
	m__ˇn˚…y≥
;

206 
_±hªad_˛ónup_buf„r
 *
	m__¥ev
;

212 
	mPTHREAD_CANCEL_ENABLE
,

213 
	#PTHREAD_CANCEL_ENABLE
 
PTHREAD_CANCEL_ENABLE


	)

214 
	mPTHREAD_CANCEL_DISABLE


215 
	#PTHREAD_CANCEL_DISABLE
 
PTHREAD_CANCEL_DISABLE


	)

219 
	mPTHREAD_CANCEL_DEFERRED
,

220 
	#PTHREAD_CANCEL_DEFERRED
 
PTHREAD_CANCEL_DEFERRED


	)

221 
	mPTHREAD_CANCEL_ASYNCHRONOUS


222 
	#PTHREAD_CANCEL_ASYNCHRONOUS
 
PTHREAD_CANCEL_ASYNCHRONOUS


	)

224 
	#PTHREAD_CANCELED
 ((*Ë-1)

	)

228 
	#PTHREAD_ONCE_INIT
 0

	)

231 #ifde‡
__USE_XOPEN2K


235 
	#PTHREAD_BARRIER_SERIAL_THREAD
 -1

	)

239 
__BEGIN_DECLS


244 
±hªad_¸óã
 (
±hªad_t
 *
__ª°ri˘
 
__√wthªad
,

245 c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

246 *(*
__°¨t_routöe
) (*),

247 *
__ª°ri˘
 
__¨g
Ë
__THROWNL
 
__n⁄nuŒ
 ((1, 3));

253 
	$±hªad_exô
 (*
__ªtvÆ
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

261 
	`±hªad_joö
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
);

263 #ifde‡
__USE_GNU


266 
	$±hªad_åyjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
Ë
__THROW
;

274 
	`±hªad_timedjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
,

275 c⁄° 
time•ec
 *
__ab°ime
);

282 
	$±hªad_dëach
 (
±hªad_t
 
__th
Ë
__THROW
;

286 
±hªad_t
 
	$±hªad_£lf
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

289 
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
)

290 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

298 
	$±hªad_©å_öô
 (
±hªad_©å_t
 *
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

301 
	$±hªad_©å_de°roy
 (
±hªad_©å_t
 *
__©å
)

302 
__THROW
 
	`__n⁄nuŒ
 ((1));

305 
	$±hªad_©å_gëdëach°©e
 (c⁄° 
±hªad_©å_t
 *
__©å
,

306 *
__dëach°©e
)

307 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

310 
	$±hªad_©å_£tdëach°©e
 (
±hªad_©å_t
 *
__©å
,

311 
__dëach°©e
)

312 
__THROW
 
	`__n⁄nuŒ
 ((1));

316 
	$±hªad_©å_gëgu¨dsize
 (c⁄° 
±hªad_©å_t
 *
__©å
,

317 
size_t
 *
__gu¨dsize
)

318 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

321 
	$±hªad_©å_£tgu¨dsize
 (
±hªad_©å_t
 *
__©å
,

322 
size_t
 
__gu¨dsize
)

323 
__THROW
 
	`__n⁄nuŒ
 ((1));

327 
	$±hªad_©å_gësched∑øm
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

328 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

329 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

332 
	$±hªad_©å_£tsched∑øm
 (
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

333 c⁄° 
sched_∑øm
 *
__ª°ri˘


334 
__∑øm
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

337 
	$±hªad_©å_gëschedpﬁicy
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


338 
__©å
, *
__ª°ri˘
 
__pﬁicy
)

339 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

342 
	$±hªad_©å_£tschedpﬁicy
 (
±hªad_©å_t
 *
__©å
, 
__pﬁicy
)

343 
__THROW
 
	`__n⁄nuŒ
 ((1));

346 
	$±hªad_©å_gëöhîôsched
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


347 
__©å
, *
__ª°ri˘
 
__öhîô
)

348 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

351 
	$±hªad_©å_£töhîôsched
 (
±hªad_©å_t
 *
__©å
,

352 
__öhîô
)

353 
__THROW
 
	`__n⁄nuŒ
 ((1));

357 
	$±hªad_©å_gësc›e
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

358 *
__ª°ri˘
 
__sc›e
)

359 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

362 
	$±hªad_©å_£tsc›e
 (
±hªad_©å_t
 *
__©å
, 
__sc›e
)

363 
__THROW
 
	`__n⁄nuŒ
 ((1));

366 
	$±hªad_©å_gë°ackaddr
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


367 
__©å
, **
__ª°ri˘
 
__°ackaddr
)

368 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__©åibuã_dïªˇãd__
;

374 
	$±hªad_©å_£t°ackaddr
 (
±hªad_©å_t
 *
__©å
,

375 *
__°ackaddr
)

376 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
;

379 
	$±hªad_©å_gë°acksize
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


380 
__©å
, 
size_t
 *
__ª°ri˘
 
__°acksize
)

381 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

386 
	$±hªad_©å_£t°acksize
 (
±hªad_©å_t
 *
__©å
,

387 
size_t
 
__°acksize
)

388 
__THROW
 
	`__n⁄nuŒ
 ((1));

390 #ifde‡
__USE_XOPEN2K


392 
	$±hªad_©å_gë°ack
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

393 **
__ª°ri˘
 
__°ackaddr
,

394 
size_t
 *
__ª°ri˘
 
__°acksize
)

395 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

400 
	$±hªad_©å_£t°ack
 (
±hªad_©å_t
 *
__©å
, *
__°ackaddr
,

401 
size_t
 
__°acksize
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

404 #ifde‡
__USE_GNU


407 
	$±hªad_©å_£èfföôy_≈
 (
±hªad_©å_t
 *
__©å
,

408 
size_t
 
__˝u£tsize
,

409 c⁄° 
˝u_£t_t
 *
__˝u£t
)

410 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

414 
	$±hªad_©å_gëafföôy_≈
 (c⁄° 
±hªad_©å_t
 *
__©å
,

415 
size_t
 
__˝u£tsize
,

416 
˝u_£t_t
 *
__˝u£t
)

417 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

420 
	$±hªad_gë©å_deÁu…_≈
 (
±hªad_©å_t
 *
__©å
)

421 
__THROW
 
	`__n⁄nuŒ
 ((1));

425 
	$±hªad_£èâr_deÁu…_≈
 (c⁄° 
±hªad_©å_t
 *
__©å
)

426 
__THROW
 
	`__n⁄nuŒ
 ((1));

431 
	$±hªad_gë©å_≈
 (
±hªad_t
 
__th
, 
±hªad_©å_t
 *
__©å
)

432 
__THROW
 
	`__n⁄nuŒ
 ((2));

440 
	$±hªad_£tsched∑øm
 (
±hªad_t
 
__èrgë_thªad
, 
__pﬁicy
,

441 c⁄° 
sched_∑øm
 *
__∑øm
)

442 
__THROW
 
	`__n⁄nuŒ
 ((3));

445 
	$±hªad_gësched∑øm
 (
±hªad_t
 
__èrgë_thªad
,

446 *
__ª°ri˘
 
__pﬁicy
,

447 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

448 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

451 
	$±hªad_£tsched¥io
 (
±hªad_t
 
__èrgë_thªad
, 
__¥io
)

452 
__THROW
;

455 #ifde‡
__USE_GNU


457 
	$±hªad_gë«me_≈
 (
±hªad_t
 
__èrgë_thªad
, *
__buf
,

458 
size_t
 
__buÊí
)

459 
__THROW
 
	`__n⁄nuŒ
 ((2));

462 
	$±hªad_£äame_≈
 (
±hªad_t
 
__èrgë_thªad
, c⁄° *
__«me
)

463 
__THROW
 
	`__n⁄nuŒ
 ((2));

467 #ifde‡
__USE_UNIX98


469 
	$±hªad_gëc⁄cuºícy
 (Ë
__THROW
;

472 
	$±hªad_£tc⁄cuºícy
 (
__Àvñ
Ë
__THROW
;

475 #ifde‡
__USE_GNU


480 
	$±hªad_yõld
 (Ë
__THROW
;

485 
	$±hªad_£èfföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

486 c⁄° 
˝u_£t_t
 *
__˝u£t
)

487 
__THROW
 
	`__n⁄nuŒ
 ((3));

490 
	$±hªad_gëafföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

491 
˝u_£t_t
 *
__˝u£t
)

492 
__THROW
 
	`__n⁄nuŒ
 ((3));

505 
	`±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

506 (*
__öô_routöe
Ë()Ë
	`__n⁄nuŒ
 ((1, 2));

517 
	`±hªad_£tˇn˚l°©e
 (
__°©e
, *
__ﬁd°©e
);

521 
	`±hªad_£tˇn˚…y≥
 (
__ty≥
, *
__ﬁdty≥
);

524 
	`±hªad_ˇn˚l
 (
±hªad_t
 
__th
);

529 
	`±hªad_ã°ˇn˚l
 ();

538 
__jmp_buf
 
__ˇn˚l_jmp_buf
;

539 
__mask_was_ßved
;

540 } 
__ˇn˚l_jmp_buf
[1];

541 *
__∑d
[4];

542 } 
	t__±hªad_unwöd_buf_t
 
	t__©åibuã__
 ((
	t__Æig√d__
));

545 #i‚de‡
__˛ónup_f˘_©åibuã


546 
	#__˛ónup_f˘_©åibuã


	)

551 
	s__±hªad_˛ónup_‰ame


553 (*
__ˇn˚l_routöe
) (*);

554 *
__ˇn˚l_¨g
;

555 
__do_ô
;

556 
__ˇn˚l_ty≥
;

559 #i‡
deföed
 
__GNUC__
 && deföed 
__EXCEPTIONS


560 #ifde‡
__˝lu•lus


562 ˛as†
	c__±hªad_˛ónup_˛ass


564 (*
__ˇn˚l_routöe
) (*);

565 *
__ˇn˚l_¨g
;

566 
__do_ô
;

567 
__ˇn˚l_ty≥
;

569 
public
:

570 
	`__±hªad_˛ónup_˛ass
 ((*
__f˘
Ë(*), *
__¨g
)

571 : 
	`__ˇn˚l_routöe
 (
__f˘
), 
	`__ˇn˚l_¨g
 (
__¨g
), 
	$__do_ô
 (1) { }

572 ~
	$__±hªad_˛ónup_˛ass
 (Ë{ i‡(
__do_ô
Ë
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); 
	}
}

573 
	$__£tdoô
 (
__√wvÆ
Ë{ 
__do_ô
 = __√wvÆ; 
	}
}

574 
	$__de„r
 (Ë{ 
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
,

575 &
__ˇn˚l_ty≥
); 
	}
}

576 
	$__ª°‹e
 (Ëc⁄° { 
	`±hªad_£tˇn˚…y≥
 (
__ˇn˚l_ty≥
, 0); 
	}
}

586 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

588 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
)

	)

592 
	#±hªad_˛ónup_p›
(
execuã
) \

593 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

594 } 0)

	)

596 #ifde‡
__USE_GNU


600 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

602 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
); \

603 
__˛‰ame
.
	`__de„r
 ()

	)

608 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

609 
__˛‰ame
.
	`__ª°‹e
 (); \

610 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

611 } 0)

	)

618 
__exã∫_ölöe
 

619 
	$__±hªad_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
__‰ame
)

621 i‡(
__‰ame
->
__do_ô
)

622 
__‰ame
->
	`__ˇn˚l_routöe
 (__‰ame->
__ˇn˚l_¨g
);

623 
	}
}

632 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

634 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

635 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

636 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

637 .
__do_ô
 = 1 };

	)

641 
	#±hªad_˛ónup_p›
(
execuã
) \

642 
__˛‰ame
.
__do_ô
 = (
execuã
); \

643 } 0)

	)

645 #ifde‡
__USE_GNU


649 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

651 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

652 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

653 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

654 .
__do_ô
 = 1 }; \

655 (Ë
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
, \

656 &
__˛‰ame
.
__ˇn˚l_ty≥
)

	)

661 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

662 (Ë
	`±hªad_£tˇn˚…y≥
 (
__˛‰ame
.
__ˇn˚l_ty≥
, 
NULL
); \

663 
__˛‰ame
.
__do_ô
 = (
execuã
); \

664 } 0)

	)

675 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

677 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

678 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

679 *
__ˇn˚l_¨g
 = (
¨g
); \

680 
__nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

681 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

682 i‡(
	`__glibc_u∆ikñy
 (
__nŸ_fú°_ˇŒ
)) \

684 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

685 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

689 
	`__±hªad_ªgi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

690 dÿ{

	)

691 
__±hªad_ªgi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

692 
__˛ónup_f˘_©åibuã
;

696 
	#±hªad_˛ónup_p›
(
execuã
) \

699 
	`__±hªad_uƒegi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

700 i‡(
execuã
) \

701 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

702 } 0)

	)

703 
	$__±hªad_uƒegi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

704 
__˛ónup_f˘_©åibuã
;

706 #ifde‡
__USE_GNU


710 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

712 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

713 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

714 *
__ˇn˚l_¨g
 = (
¨g
); \

715 
__nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

716 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

717 i‡(
	`__glibc_u∆ikñy
 (
__nŸ_fú°_ˇŒ
)) \

719 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

720 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

724 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (&
__ˇn˚l_buf
); \

725 dÿ{

	)

726 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (
__±hªad_unwöd_buf_t
 *
__buf
)

727 
__˛ónup_f˘_©åibuã
;

732 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

735 
	`__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (&
__ˇn˚l_buf
); \

736 i‡(
execuã
) \

737 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

738 
	}
} 0)

	)

739 
	$__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (
__±hªad_unwöd_buf_t
 *
__buf
)

740 
__˛ónup_f˘_©åibuã
;

744 
	$__±hªad_unwöd_√xt
 (
__±hªad_unwöd_buf_t
 *
__buf
)

745 
__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

746 #i‚de‡
SHARED


747 
	`__©åibuã__
 ((
__wók__
))

753 
__jmp_buf_èg
;

754 
	$__sig£tjmp
 (
__jmp_buf_èg
 *
__ív
, 
__ßvemask
Ë
__THROWNL
;

760 
	$±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

761 c⁄° 
±hªad_muãx©å_t
 *
__muãx©å
)

762 
__THROW
 
	`__n⁄nuŒ
 ((1));

765 
	$±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
)

766 
__THROW
 
	`__n⁄nuŒ
 ((1));

769 
	$±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
)

770 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

773 
	$±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
)

774 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

776 #ifde‡
__USE_XOPEN2K


778 
	$±hªad_muãx_timedlock
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

779 c⁄° 
time•ec
 *
__ª°ri˘


780 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

784 
	$±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
)

785 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

789 
	$±hªad_muãx_gë¥io˚ûög
 (c⁄° 
±hªad_muãx_t
 *

790 
__ª°ri˘
 
__muãx
,

791 *
__ª°ri˘
 
__¥io˚ûög
)

792 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

796 
	$±hªad_muãx_£çrio˚ûög
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

797 
__¥io˚ûög
,

798 *
__ª°ri˘
 
__ﬁd_˚ûög
)

799 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

802 #ifde‡
__USE_XOPEN2K8


804 
	$±hªad_muãx_c⁄si°ít
 (
±hªad_muãx_t
 *
__muãx
)

805 
__THROW
 
	`__n⁄nuŒ
 ((1));

806 #ifde‡
__USE_GNU


807 
	$±hªad_muãx_c⁄si°ít_≈
 (
±hªad_muãx_t
 *
__muãx
)

808 
__THROW
 
	`__n⁄nuŒ
 ((1));

817 
	$±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
)

818 
__THROW
 
	`__n⁄nuŒ
 ((1));

821 
	$±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
)

822 
__THROW
 
	`__n⁄nuŒ
 ((1));

825 
	$±hªad_muãx©å_gëpsh¨ed
 (c⁄° 
±hªad_muãx©å_t
 *

826 
__ª°ri˘
 
__©å
,

827 *
__ª°ri˘
 
__psh¨ed
)

828 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

831 
	$±hªad_muãx©å_£çsh¨ed
 (
±hªad_muãx©å_t
 *
__©å
,

832 
__psh¨ed
)

833 
__THROW
 
	`__n⁄nuŒ
 ((1));

835 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


837 
	$±hªad_muãx©å_gëty≥
 (c⁄° 
±hªad_muãx©å_t
 *
__ª°ri˘


838 
__©å
, *
__ª°ri˘
 
__köd
)

839 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

844 
	$±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
, 
__köd
)

845 
__THROW
 
	`__n⁄nuŒ
 ((1));

849 
	$±hªad_muãx©å_gë¥Ÿocﬁ
 (c⁄° 
±hªad_muãx©å_t
 *

850 
__ª°ri˘
 
__©å
,

851 *
__ª°ri˘
 
__¥Ÿocﬁ
)

852 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

856 
	$±hªad_muãx©å_£çrŸocﬁ
 (
±hªad_muãx©å_t
 *
__©å
,

857 
__¥Ÿocﬁ
)

858 
__THROW
 
	`__n⁄nuŒ
 ((1));

861 
	$±hªad_muãx©å_gë¥io˚ûög
 (c⁄° 
±hªad_muãx©å_t
 *

862 
__ª°ri˘
 
__©å
,

863 *
__ª°ri˘
 
__¥io˚ûög
)

864 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

867 
	$±hªad_muãx©å_£çrio˚ûög
 (
±hªad_muãx©å_t
 *
__©å
,

868 
__¥io˚ûög
)

869 
__THROW
 
	`__n⁄nuŒ
 ((1));

871 #ifde‡
__USE_XOPEN2K


873 
	$±hªad_muãx©å_gërobu°
 (c⁄° 
±hªad_muãx©å_t
 *
__©å
,

874 *
__robu°√ss
)

875 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

876 #ifde‡
__USE_GNU


877 
	$±hªad_muãx©å_gërobu°_≈
 (c⁄° 
±hªad_muãx©å_t
 *
__©å
,

878 *
__robu°√ss
)

879 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

883 
	$±hªad_muãx©å_£åobu°
 (
±hªad_muãx©å_t
 *
__©å
,

884 
__robu°√ss
)

885 
__THROW
 
	`__n⁄nuŒ
 ((1));

886 #ifde‡
__USE_GNU


887 
	$±hªad_muãx©å_£åobu°_≈
 (
±hªad_muãx©å_t
 *
__©å
,

888 
__robu°√ss
)

889 
__THROW
 
	`__n⁄nuŒ
 ((1));

894 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


899 
	$±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

900 c⁄° 
±hªad_rwlock©å_t
 *
__ª°ri˘


901 
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

904 
	$±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
)

905 
__THROW
 
	`__n⁄nuŒ
 ((1));

908 
	$±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

909 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

912 
	$±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

913 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

915 #ifde‡
__USE_XOPEN2K


917 
	$±hªad_rwlock_timedrdlock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

918 c⁄° 
time•ec
 *
__ª°ri˘


919 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

923 
	$±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
)

924 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

927 
	$±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
)

928 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

930 #ifde‡
__USE_XOPEN2K


932 
	$±hªad_rwlock_timedwæock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

933 c⁄° 
time•ec
 *
__ª°ri˘


934 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

938 
	$±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
)

939 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

945 
	$±hªad_rwlock©å_öô
 (
±hªad_rwlock©å_t
 *
__©å
)

946 
__THROW
 
	`__n⁄nuŒ
 ((1));

949 
	$±hªad_rwlock©å_de°roy
 (
±hªad_rwlock©å_t
 *
__©å
)

950 
__THROW
 
	`__n⁄nuŒ
 ((1));

953 
	$±hªad_rwlock©å_gëpsh¨ed
 (c⁄° 
±hªad_rwlock©å_t
 *

954 
__ª°ri˘
 
__©å
,

955 *
__ª°ri˘
 
__psh¨ed
)

956 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

959 
	$±hªad_rwlock©å_£çsh¨ed
 (
±hªad_rwlock©å_t
 *
__©å
,

960 
__psh¨ed
)

961 
__THROW
 
	`__n⁄nuŒ
 ((1));

964 
	$±hªad_rwlock©å_gëköd_≈
 (c⁄° 
±hªad_rwlock©å_t
 *

965 
__ª°ri˘
 
__©å
,

966 *
__ª°ri˘
 
__¥ef
)

967 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

970 
	$±hªad_rwlock©å_£tköd_≈
 (
±hªad_rwlock©å_t
 *
__©å
,

971 
__¥ef
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

979 
	$±hªad_c⁄d_öô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

980 c⁄° 
±hªad_c⁄d©å_t
 *
__ª°ri˘
 
__c⁄d_©å
)

981 
__THROW
 
	`__n⁄nuŒ
 ((1));

984 
	$±hªad_c⁄d_de°roy
 (
±hªad_c⁄d_t
 *
__c⁄d
)

985 
__THROW
 
	`__n⁄nuŒ
 ((1));

988 
	$±hªad_c⁄d_sig«l
 (
±hªad_c⁄d_t
 *
__c⁄d
)

989 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

992 
	$±hªad_c⁄d_brﬂdˇ°
 (
±hªad_c⁄d_t
 *
__c⁄d
)

993 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1000 
	$±hªad_c⁄d_waô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

1001 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
)

1002 
	`__n⁄nuŒ
 ((1, 2));

1011 
	$±hªad_c⁄d_timedwaô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

1012 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

1013 c⁄° 
time•ec
 *
__ª°ri˘
 
__ab°ime
)

1014 
	`__n⁄nuŒ
 ((1, 2, 3));

1019 
	$±hªad_c⁄d©å_öô
 (
±hªad_c⁄d©å_t
 *
__©å
)

1020 
__THROW
 
	`__n⁄nuŒ
 ((1));

1023 
	$±hªad_c⁄d©å_de°roy
 (
±hªad_c⁄d©å_t
 *
__©å
)

1024 
__THROW
 
	`__n⁄nuŒ
 ((1));

1027 
	$±hªad_c⁄d©å_gëpsh¨ed
 (c⁄° 
±hªad_c⁄d©å_t
 *

1028 
__ª°ri˘
 
__©å
,

1029 *
__ª°ri˘
 
__psh¨ed
)

1030 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1033 
	$±hªad_c⁄d©å_£çsh¨ed
 (
±hªad_c⁄d©å_t
 *
__©å
,

1034 
__psh¨ed
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1036 #ifde‡
__USE_XOPEN2K


1038 
	$±hªad_c⁄d©å_gë˛ock
 (c⁄° 
±hªad_c⁄d©å_t
 *

1039 
__ª°ri˘
 
__©å
,

1040 
__˛ockid_t
 *
__ª°ri˘
 
__˛ock_id
)

1041 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1044 
	$±hªad_c⁄d©å_£t˛ock
 (
±hªad_c⁄d©å_t
 *
__©å
,

1045 
__˛ockid_t
 
__˛ock_id
)

1046 
__THROW
 
	`__n⁄nuŒ
 ((1));

1050 #ifde‡
__USE_XOPEN2K


1055 
	$±hªad_•ö_öô
 (
±hªad_•ölock_t
 *
__lock
, 
__psh¨ed
)

1056 
__THROW
 
	`__n⁄nuŒ
 ((1));

1059 
	$±hªad_•ö_de°roy
 (
±hªad_•ölock_t
 *
__lock
)

1060 
__THROW
 
	`__n⁄nuŒ
 ((1));

1063 
	$±hªad_•ö_lock
 (
±hªad_•ölock_t
 *
__lock
)

1064 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1067 
	$±hªad_•ö_åylock
 (
±hªad_•ölock_t
 *
__lock
)

1068 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1071 
	$±hªad_•ö_u∆ock
 (
±hªad_•ölock_t
 *
__lock
)

1072 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1079 
	$±hªad_b¨rõr_öô
 (
±hªad_b¨rõr_t
 *
__ª°ri˘
 
__b¨rõr
,

1080 c⁄° 
±hªad_b¨rõøâr_t
 *
__ª°ri˘


1081 
__©å
, 
__cou¡
)

1082 
__THROW
 
	`__n⁄nuŒ
 ((1));

1085 
	$±hªad_b¨rõr_de°roy
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1086 
__THROW
 
	`__n⁄nuŒ
 ((1));

1089 
	$±hªad_b¨rõr_waô
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1090 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1094 
	$±hªad_b¨rõøâr_öô
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1095 
__THROW
 
	`__n⁄nuŒ
 ((1));

1098 
	$±hªad_b¨rõøâr_de°roy
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1099 
__THROW
 
	`__n⁄nuŒ
 ((1));

1102 
	$±hªad_b¨rõøâr_gëpsh¨ed
 (c⁄° 
±hªad_b¨rõøâr_t
 *

1103 
__ª°ri˘
 
__©å
,

1104 *
__ª°ri˘
 
__psh¨ed
)

1105 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1108 
	$±hªad_b¨rõøâr_£çsh¨ed
 (
±hªad_b¨rõøâr_t
 *
__©å
,

1109 
__psh¨ed
)

1110 
__THROW
 
	`__n⁄nuŒ
 ((1));

1122 
	`±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

1123 (*
__de°r_fun˘i⁄
) (*))

1124 
__THROW
 
	`__n⁄nuŒ
 ((1));

1127 
	$±hªad_key_dñëe
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1130 *
	$±hªad_gë•ecific
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1133 
	$±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

1134 c⁄° *
__poöãr
Ë
__THROW
 ;

1137 #ifde‡
__USE_XOPEN2K


1139 
	$±hªad_gë˝u˛ockid
 (
±hªad_t
 
__thªad_id
,

1140 
__˛ockid_t
 *
__˛ock_id
)

1141 
__THROW
 
	`__n⁄nuŒ
 ((2));

1156 
	`±hªad_©f‹k
 ((*
__¥ï¨e
) (),

1157 (*
__∑ª¡
) (),

1158 (*
__chûd
Ë()Ë
__THROW
;

1161 #ifde‡
__USE_EXTERN_INLINES


1163 
__exã∫_ölöe
 

1164 
	`__NTH
 (
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
))

1166  
__thªad1
 =
__thªad2
;

1167 
	}
}

1170 
	g__END_DECLS


	@/usr/include/semaphore.h

18 #i‚de‡
_SEMAPHORE_H


19 
	#_SEMAPHORE_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<sys/ty≥s.h
>

23 #ifde‡
__USE_XOPEN2K


24 
	#__√ed_time•ec


	)

25 
	~<time.h
>

29 
	~<bôs/£m≠h‹e.h
>

32 
__BEGIN_DECLS


36 
	$£m_öô
 (
£m_t
 *
__£m
, 
__psh¨ed
, 
__vÆue
)

37 
__THROW
;

39 
	$£m_de°roy
 (
£m_t
 *
__£m
Ë
__THROW
;

42 
£m_t
 *
	$£m_›í
 (c⁄° *
__«me
, 
__oÊag
, ...Ë
__THROW
;

45 
	$£m_˛o£
 (
£m_t
 *
__£m
Ë
__THROW
;

48 
	$£m_u∆ök
 (c⁄° *
__«me
Ë
__THROW
;

54 
	`£m_waô
 (
£m_t
 *
__£m
);

56 #ifde‡
__USE_XOPEN2K


61 
	`£m_timedwaô
 (
£m_t
 *
__ª°ri˘
 
__£m
,

62 c⁄° 
time•ec
 *
__ª°ri˘
 
__ab°ime
);

66 
	$£m_åywaô
 (
£m_t
 *
__£m
Ë
__THROWNL
;

69 
	$£m_po°
 (
£m_t
 *
__£m
Ë
__THROWNL
;

72 
	$£m_gëvÆue
 (
£m_t
 *
__ª°ri˘
 
__£m
, *__ª°ri˘ 
__svÆ
)

73 
__THROW
;

76 
__END_DECLS


	@/usr/include/signal.h

22 #i‚def 
_SIGNAL_H


24 #i‡!
deföed
 
__√ed_sig_©omic_t
 && !deföed 
__√ed_sig£t_t


25 
	#_SIGNAL_H


	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


32 
	~<bôs/sig£t.h
>

36 #i‡
deföed
 
__√ed_sig_©omic_t
 || deföed 
_SIGNAL_H


37 #i‚de‡
__sig_©omic_t_deföed


38 
	#__sig_©omic_t_deföed


	)

39 
__BEGIN_NAMESPACE_STD


40 
__sig_©omic_t
 
	tsig_©omic_t
;

41 
	g__END_NAMESPACE_STD


43 #unde‡
__√ed_sig_©omic_t


46 #i‡
deföed
 
__√ed_sig£t_t
 || (deföed 
_SIGNAL_H
 && deföed 
__USE_POSIX
)

47 #i‚de‡
__sig£t_t_deföed


48 
	#__sig£t_t_deföed


	)

49 
__sig£t_t
 
	tsig£t_t
;

51 #unde‡
__√ed_sig£t_t


54 #ifde‡
_SIGNAL_H


56 
	~<bôs/ty≥s.h
>

57 
	~<bôs/signum.h
>

59 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


60 #i‚de‡
__pid_t_deföed


61 
__pid_t
 
	tpid_t
;

62 
	#__pid_t_deföed


	)

64 #ifde‡
__USE_XOPEN


66 #i‚de‡
__uid_t_deföed


67 
__uid_t
 
	tuid_t
;

68 
	#__uid_t_deföed


	)

72 #ifde‡
__USE_POSIX199309


74 
	#__√ed_time•ec


	)

75 
	~<time.h
>

78 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_XOPEN_EXTENDED


80 
	~<bôs/sigöfo.h
>

85 (*
	t__sigh™dÀr_t
) ();

90 
__sigh™dÀr_t
 
	$__sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

91 
__THROW
;

92 #ifde‡
__USE_GNU


93 
__sigh™dÀr_t
 
	$sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

94 
__THROW
;

100 
__BEGIN_NAMESPACE_STD


101 #ifde‡
__USE_BSD


102 
__sigh™dÀr_t
 
	$sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

103 
__THROW
;

106 #ifde‡
__REDIRECT_NTH


107 
__sigh™dÀr_t
 
	`__REDIRECT_NTH
 (
sig«l
,

108 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
),

109 
__sysv_sig«l
);

111 
	#sig«l
 
__sysv_sig«l


	)

114 
__END_NAMESPACE_STD


116 #ifde‡
__USE_XOPEN


119 
__sigh™dÀr_t
 
	$bsd_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

120 
__THROW
;

126 #ifde‡
__USE_POSIX


127 
	$kûl
 (
__pid_t
 
__pid
, 
__sig
Ë
__THROW
;

130 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


134 
	$kûÕg
 (
__pid_t
 
__pgΩ
, 
__sig
Ë
__THROW
;

137 
__BEGIN_NAMESPACE_STD


139 
	$øi£
 (
__sig
Ë
__THROW
;

140 
__END_NAMESPACE_STD


142 #ifde‡
__USE_SVID


144 
__sigh™dÀr_t
 
	$ssig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

145 
__THROW
;

146 
	$gsig«l
 (
__sig
Ë
__THROW
;

149 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN2K


151 
	`psig«l
 (
__sig
, c⁄° *
__s
);

154 #ifde‡
__USE_XOPEN2K


156 
	`psigöfo
 (c⁄° 
sigöfo_t
 *
__pöfo
, c⁄° *
__s
);

167 
	`__sig∑u£
 (
__sig_‹_mask
, 
__is_sig
);

169 #ifde‡
__USE_XOPEN


170 #ifde‡
__GNUC__


171 
	$sig∑u£
 (
__sig
Ë
	`__asm__
 ("__xpg_sigpause");

174 
	#sig∑u£
(
sig
Ë
	`__sig∑u£
 ((sig), 1)

	)

179 #ifde‡
__USE_BSD


186 
	#sigmask
(
sig
Ë
	`__sigmask
(sig)

	)

189 
	$sigblock
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

192 
	$sig£tmask
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

195 
	$siggëmask
 (Ë
__THROW
 
__©åibuã_dïªˇãd__
;

199 #ifde‡
__USE_MISC


200 
	#NSIG
 
_NSIG


	)

203 #ifde‡
__USE_GNU


204 
__sigh™dÀr_t
 
	tsigh™dÀr_t
;

208 #ifde‡
__USE_BSD


209 
__sigh™dÀr_t
 
	tsig_t
;

212 #ifde‡
__USE_POSIX


215 
	$sigem±y£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

218 
	$sigfûl£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

221 
	$sigadd£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

224 
	$sigdñ£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

227 
	$sigismembî
 (c⁄° 
sig£t_t
 *
__£t
, 
__signo
)

228 
__THROW
 
	`__n⁄nuŒ
 ((1));

230 #ifde‡
__USE_GNU


232 
	$sigi£m±y£t
 (c⁄° 
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

235 
	$sig™d£t
 (
sig£t_t
 *
__£t
, c⁄° sig£t_à*
__À·
,

236 c⁄° 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

239 
	$sig‹£t
 (
sig£t_t
 *
__£t
, c⁄° sig£t_à*
__À·
,

240 c⁄° 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

245 
	~<bôs/siga˘i⁄.h
>

248 
	$sig¥ocmask
 (
__how
, c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
,

249 
sig£t_t
 *
__ª°ri˘
 
__o£t
Ë
__THROW
;

256 
	$sigsu•íd
 (c⁄° 
sig£t_t
 *
__£t
Ë
	`__n⁄nuŒ
 ((1));

259 
	$siga˘i⁄
 (
__sig
, c⁄° 
siga˘i⁄
 *
__ª°ri˘
 
__a˘
,

260 
siga˘i⁄
 *
__ª°ri˘
 
__ﬂ˘
Ë
__THROW
;

263 
	$sig≥ndög
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

270 
	$sigwaô
 (c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
, *__ª°ri˘ 
__sig
)

271 
	`__n⁄nuŒ
 ((1, 2));

273 #ifde‡
__USE_POSIX199309


278 
	$sigwaôöfo
 (c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
,

279 
sigöfo_t
 *
__ª°ri˘
 
__öfo
Ë
	`__n⁄nuŒ
 ((1));

286 
	$sigtimedwaô
 (c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
,

287 
sigöfo_t
 *
__ª°ri˘
 
__öfo
,

288 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
)

289 
	`__n⁄nuŒ
 ((1));

293 
	$sigqueue
 (
__pid_t
 
__pid
, 
__sig
, c⁄° 
sigvÆ
 
__vÆ
)

294 
__THROW
;

299 #ifde‡
__USE_BSD


303 c⁄° *c⁄° 
_sys_sigli°
[
_NSIG
];

304 c⁄° *c⁄° 
sys_sigli°
[
_NSIG
];

307 
	ssigvec


309 
__sigh™dÀr_t
 
sv_h™dÀr
;

310 
sv_mask
;

312 
sv_Êags
;

313 
	#sv_⁄°ack
 
sv_Êags


	)

317 
	#SV_ONSTACK
 (1 << 0)

	)

318 
	#SV_INTERRUPT
 (1 << 1)

	)

319 
	#SV_RESETHAND
 (1 << 2)

	)

327 
	$sigvec
 (
__sig
, c⁄° 
sigvec
 *
__vec
,

328 
sigvec
 *
__ovec
Ë
__THROW
;

332 
	~<bôs/sigc⁄ãxt.h
>

335 
	$sigªtu∫
 (
sigc⁄ãxt
 *
__s˝
Ë
__THROW
;

340 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


341 
	#__√ed_size_t


	)

342 
	~<°ddef.h
>

347 
	$sigöãºu±
 (
__sig
, 
__öãºu±
Ë
__THROW
;

349 
	~<bôs/sig°ack.h
>

350 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


352 
	~<sys/uc⁄ãxt.h
>

358 
	$sig°ack
 (
sig°ack
 *
__ss
, sig°ack *
__oss
)

359 
__THROW
 
__©åibuã_dïªˇãd__
;

363 
	$sigÆt°ack
 (c⁄° 
sigÆt°ack
 *
__ª°ri˘
 
__ss
,

364 
sigÆt°ack
 *
__ª°ri˘
 
__oss
Ë
__THROW
;

368 #ifde‡
__USE_XOPEN_EXTENDED


372 
	$sighﬁd
 (
__sig
Ë
__THROW
;

375 
	$sigªl£
 (
__sig
Ë
__THROW
;

378 
	$sigign‹e
 (
__sig
Ë
__THROW
;

381 
__sigh™dÀr_t
 
	$sig£t
 (
__sig
, 
__sigh™dÀr_t
 
__di•
Ë
__THROW
;

384 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


387 
	~<bôs/±hªadty≥s.h
>

388 
	~<bôs/sigthªad.h
>

395 
	$__libc_cuºít_sigπmö
 (Ë
__THROW
;

397 
	$__libc_cuºít_sigπmax
 (Ë
__THROW
;

401 
__END_DECLS


	@/usr/include/stdio.h

23 #i‚de‡
_STDIO_H


25 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


26 
	#_STDIO_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	~<bôs/ty≥s.h
>

36 
	#__√ed_FILE


	)

37 
	#__√ed___FILE


	)

41 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


44 
	g_IO_FILE
;

46 
__BEGIN_NAMESPACE_STD


48 
_IO_FILE
 
	tFILE
;

49 
	g__END_NAMESPACE_STD


50 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_SVID
 || deföed 
__USE_POSIX
 \

51 || 
deföed
 
	g__USE_BSD
 || deföed 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

52 || 
deföed
 
__USE_POSIX2


53 
	$__USING_NAMESPACE_STD
(
FILE
)

56 
	#__FILE_deföed
 1

	)

58 #unde‡
__√ed_FILE


61 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


64 
_IO_FILE
 
	t__FILE
;

66 
	#____FILE_deföed
 1

	)

68 #unde‡
__√ed___FILE


71 #ifdef 
_STDIO_H


72 
	#_STDIO_USES_IOSTREAM


	)

74 
	~<libio.h
>

76 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


77 #ifde‡
__GNUC__


78 #i‚de‡
_VA_LIST_DEFINED


79 
_G_va_li°
 
	tva_li°
;

80 
	#_VA_LIST_DEFINED


	)

83 
	~<°d¨g.h
>

87 #ifde‡
__USE_XOPEN2K8


88 #i‚de‡
__off_t_deföed


89 #i‚de‡
__USE_FILE_OFFSET64


90 
__off_t
 
	toff_t
;

92 
__off64_t
 
	toff_t
;

94 
	#__off_t_deföed


	)

96 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


97 
__off64_t
 
	toff64_t
;

98 
	#__off64_t_deföed


	)

101 #i‚de‡
__ssize_t_deföed


102 
__ssize_t
 
	tssize_t
;

103 
	#__ssize_t_deföed


	)

108 
__BEGIN_NAMESPACE_STD


109 #i‚de‡
__USE_FILE_OFFSET64


110 
_G_Âos_t
 
	tÂos_t
;

112 
_G_Âos64_t
 
	tÂos_t
;

114 
__END_NAMESPACE_STD


115 #ifde‡
__USE_LARGEFILE64


116 
_G_Âos64_t
 
	tÂos64_t
;

120 
	#_IOFBF
 0

	)

121 
	#_IOLBF
 1

	)

122 
	#_IONBF
 2

	)

126 #i‚de‡
BUFSIZ


127 
	#BUFSIZ
 
_IO_BUFSIZ


	)

133 #i‚de‡
EOF


134 
	#EOF
 (-1)

	)

140 
	#SEEK_SET
 0

	)

141 
	#SEEK_CUR
 1

	)

142 
	#SEEK_END
 2

	)

143 #ifde‡
__USE_GNU


144 
	#SEEK_DATA
 3

	)

145 
	#SEEK_HOLE
 4

	)

149 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


151 
	#P_tmpdú
 "/tmp"

	)

164 
	~<bôs/°dio_lim.h
>

168 
_IO_FILE
 *
°dö
;

169 
_IO_FILE
 *
°dout
;

170 
_IO_FILE
 *
°dîr
;

172 
	#°dö
 
°dö


	)

173 
	#°dout
 
°dout


	)

174 
	#°dîr
 
°dîr


	)

176 
__BEGIN_NAMESPACE_STD


178 
	$ªmove
 (c⁄° *
__fûíame
Ë
__THROW
;

180 
	$ª«me
 (c⁄° *
__ﬁd
, c⁄° *
__√w
Ë
__THROW
;

181 
__END_NAMESPACE_STD


183 #ifde‡
__USE_ATFILE


185 
	$ª«mót
 (
__ﬁdfd
, c⁄° *
__ﬁd
, 
__√wfd
,

186 c⁄° *
__√w
Ë
__THROW
;

189 
__BEGIN_NAMESPACE_STD


194 #i‚de‡
__USE_FILE_OFFSET64


195 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

197 #ifde‡
__REDIRECT


198 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

200 
	#tmpfûe
 
tmpfûe64


	)

204 #ifde‡
__USE_LARGEFILE64


205 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

209 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

210 
__END_NAMESPACE_STD


212 #ifde‡
__USE_MISC


215 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

219 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


227 *
	$ãm≤am
 (c⁄° *
__dú
, c⁄° *
__pfx
)

228 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

232 
__BEGIN_NAMESPACE_STD


237 
	`f˛o£
 (
FILE
 *
__°ªam
);

242 
	`fÊush
 (
FILE
 *
__°ªam
);

243 
__END_NAMESPACE_STD


245 #ifde‡
__USE_MISC


252 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

255 #ifde‡
__USE_GNU


262 
	`f˛o£Æl
 ();

266 
__BEGIN_NAMESPACE_STD


267 #i‚de‡
__USE_FILE_OFFSET64


272 
FILE
 *
	$f›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

273 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

278 
FILE
 *
	$‰e›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

279 c⁄° *
__ª°ri˘
 
__modes
,

280 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

282 #ifde‡
__REDIRECT


283 
FILE
 *
	`__REDIRECT
 (
f›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

284 c⁄° *
__ª°ri˘
 
__modes
), 
f›í64
)

285 
__wur
;

286 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

287 c⁄° *
__ª°ri˘
 
__modes
,

288 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

289 
__wur
;

291 
	#f›í
 
f›í64


	)

292 
	#‰e›í
 
‰e›í64


	)

295 
__END_NAMESPACE_STD


296 #ifde‡
__USE_LARGEFILE64


297 
FILE
 *
	$f›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

298 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

299 
FILE
 *
	$‰e›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

300 c⁄° *
__ª°ri˘
 
__modes
,

301 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

304 #ifdef 
__USE_POSIX


306 
FILE
 *
	$fd›í
 (
__fd
, c⁄° *
__modes
Ë
__THROW
 
__wur
;

309 #ifdef 
__USE_GNU


312 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

313 c⁄° *
__ª°ri˘
 
__modes
,

314 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

317 #ifde‡
__USE_XOPEN2K8


319 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, c⁄° *
__modes
)

320 
__THROW
 
__wur
;

325 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

329 
__BEGIN_NAMESPACE_STD


332 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

336 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

337 
__modes
, 
size_t
 
__n
Ë
__THROW
;

338 
__END_NAMESPACE_STD


340 #ifdef 
__USE_BSD


343 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

344 
size_t
 
__size
Ë
__THROW
;

347 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

351 
__BEGIN_NAMESPACE_STD


356 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

357 c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

362 
	`¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

364 
	$•rötf
 (*
__ª°ri˘
 
__s
,

365 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROWNL
;

371 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

372 
_G_va_li°
 
__¨g
);

377 
	`v¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

379 
	$v•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

380 
_G_va_li°
 
__¨g
Ë
__THROWNL
;

381 
__END_NAMESPACE_STD


383 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


384 
__BEGIN_NAMESPACE_C99


386 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

387 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

388 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

390 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

391 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

392 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

393 
__END_NAMESPACE_C99


396 #ifde‡
__USE_GNU


399 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__f
,

400 
_G_va_li°
 
__¨g
)

401 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

402 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

403 c⁄° *
__ª°ri˘
 
__fmt
, ...)

404 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

405 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

406 c⁄° *
__ª°ri˘
 
__fmt
, ...)

407 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

410 #ifde‡
__USE_XOPEN2K8


412 
	$vd¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
,

413 
_G_va_li°
 
__¨g
)

414 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

415 
	$d¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, ...)

416 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

420 
__BEGIN_NAMESPACE_STD


425 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

426 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

431 
	$sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

433 
	$ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

434 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

436 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

437 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

438 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

439 #ifde‡
__REDIRECT


443 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

444 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

445 
__isoc99_fsˇnf
Ë
__wur
;

446 
	`__REDIRECT
 (
sˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

447 
__isoc99_sˇnf
Ë
__wur
;

448 
	`__REDIRECT_NTH
 (
ssˇnf
, (c⁄° *
__ª°ri˘
 
__s
,

449 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

450 
__isoc99_ssˇnf
);

452 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

453 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

454 
	$__isoc99_sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

455 
	$__isoc99_ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

456 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

457 
	#fsˇnf
 
__isoc99_fsˇnf


	)

458 
	#sˇnf
 
__isoc99_sˇnf


	)

459 
	#ssˇnf
 
__isoc99_ssˇnf


	)

463 
__END_NAMESPACE_STD


465 #ifdef 
__USE_ISOC99


466 
__BEGIN_NAMESPACE_C99


471 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

472 
_G_va_li°
 
__¨g
)

473 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

479 
	$vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

480 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

483 
	$vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

484 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

485 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

487 #i‡!
deföed
 
__USE_GNU
 \

488 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

489 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

490 #ifde‡
__REDIRECT


494 
	`__REDIRECT
 (
vfsˇnf
,

495 (
FILE
 *
__ª°ri˘
 
__s
,

496 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

497 
__isoc99_vfsˇnf
)

498 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

499 
	`__REDIRECT
 (
vsˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
,

500 
_G_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

501 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

502 
	`__REDIRECT_NTH
 (
vssˇnf
,

503 (c⁄° *
__ª°ri˘
 
__s
,

504 c⁄° *
__ª°ri˘
 
__f‹m©
,

505 
_G_va_li°
 
__¨g
), 
__isoc99_vssˇnf
)

506 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

508 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

509 c⁄° *
__ª°ri˘
 
__f‹m©
,

510 
_G_va_li°
 
__¨g
Ë
__wur
;

511 
	$__isoc99_vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
,

512 
_G_va_li°
 
__¨g
Ë
__wur
;

513 
	$__isoc99_vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

514 c⁄° *
__ª°ri˘
 
__f‹m©
,

515 
_G_va_li°
 
__¨g
Ë
__THROW
;

516 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

517 
	#vsˇnf
 
__isoc99_vsˇnf


	)

518 
	#vssˇnf
 
__isoc99_vssˇnf


	)

522 
__END_NAMESPACE_C99


526 
__BEGIN_NAMESPACE_STD


531 
	`fgëc
 (
FILE
 *
__°ªam
);

532 
	`gëc
 (
FILE
 *
__°ªam
);

538 
	`gëch¨
 ();

539 
__END_NAMESPACE_STD


543 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

545 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


550 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

551 
	`gëch¨_u∆ocked
 ();

554 #ifde‡
__USE_MISC


561 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

565 
__BEGIN_NAMESPACE_STD


573 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

574 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

580 
	`putch¨
 (
__c
);

581 
__END_NAMESPACE_STD


585 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

587 #ifde‡
__USE_MISC


594 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

597 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


602 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

603 
	`putch¨_u∆ocked
 (
__c
);

607 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 \

608 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

610 
	`gëw
 (
FILE
 *
__°ªam
);

613 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

617 
__BEGIN_NAMESPACE_STD


622 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

623 
__wur
;

625 #i‡!
deföed
 
__USE_ISOC11
 \

626 || (
deföed
 
__˝lu•lus
 && __cplusplus <= 201103L)

638 *
	$gës
 (*
__s
Ë
__wur
 
__©åibuã_dïªˇãd__
;

640 
__END_NAMESPACE_STD


642 #ifde‡
__USE_GNU


649 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

650 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

654 #ifdef 
__USE_XOPEN2K8


665 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

666 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

667 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

668 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

669 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

670 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

678 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

679 
size_t
 *
__ª°ri˘
 
__n
,

680 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

684 
__BEGIN_NAMESPACE_STD


689 
	`Âuts
 (c⁄° *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

695 
	`puts
 (c⁄° *
__s
);

702 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

709 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

710 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

715 
size_t
 
	`fwrôe
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

716 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
);

717 
__END_NAMESPACE_STD


719 #ifde‡
__USE_GNU


726 
	`Âuts_u∆ocked
 (c⁄° *
__ª°ri˘
 
__s
,

727 
FILE
 *
__ª°ri˘
 
__°ªam
);

730 #ifde‡
__USE_MISC


737 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

738 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

739 
size_t
 
	`fwrôe_u∆ocked
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

740 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

744 
__BEGIN_NAMESPACE_STD


749 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

754 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

759 
	`ªwöd
 (
FILE
 *
__°ªam
);

760 
__END_NAMESPACE_STD


767 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


768 #i‚de‡
__USE_FILE_OFFSET64


773 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

778 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

780 #ifde‡
__REDIRECT


781 
	`__REDIRECT
 (
f£eko
,

782 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

783 
f£eko64
);

784 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

786 
	#f£eko
 
f£eko64


	)

787 
	#·ñlo
 
·ñlo64


	)

792 
__BEGIN_NAMESPACE_STD


793 #i‚de‡
__USE_FILE_OFFSET64


798 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

803 
	`f£ços
 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
);

805 #ifde‡
__REDIRECT


806 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

807 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

808 
	`__REDIRECT
 (
f£ços
,

809 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
), 
f£ços64
);

811 
	#fgëpos
 
fgëpos64


	)

812 
	#f£ços
 
f£ços64


	)

815 
__END_NAMESPACE_STD


817 #ifde‡
__USE_LARGEFILE64


818 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

819 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

820 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

821 
	`f£ços64
 (
FILE
 *
__°ªam
, c⁄° 
Âos64_t
 *
__pos
);

824 
__BEGIN_NAMESPACE_STD


826 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

828 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

830 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

831 
__END_NAMESPACE_STD


833 #ifde‡
__USE_MISC


835 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

836 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

837 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

841 
__BEGIN_NAMESPACE_STD


846 
	`≥º‹
 (c⁄° *
__s
);

847 
__END_NAMESPACE_STD


853 
	~<bôs/sys_îæi°.h
>

856 #ifdef 
__USE_POSIX


858 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

861 #ifde‡
__USE_MISC


863 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

867 #i‡(
deföed
 
__USE_POSIX2
 || deföed 
__USE_SVID
 || deföed 
__USE_BSD
 || \

868 
deföed
 
__USE_MISC
)

873 
FILE
 *
	$p›í
 (c⁄° *
__comm™d
, c⁄° *
__modes
Ë
__wur
;

879 
	`p˛o£
 (
FILE
 *
__°ªam
);

883 #ifdef 
__USE_POSIX


885 *
	$˘îmid
 (*
__s
Ë
__THROW
;

889 #ifde‡
__USE_XOPEN


891 *
	`cu£rid
 (*
__s
);

895 #ifdef 
__USE_GNU


896 
ob°ack
;

899 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

900 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

901 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

902 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

903 c⁄° *
__ª°ri˘
 
__f‹m©
,

904 
_G_va_li°
 
__¨gs
)

905 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

909 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


913 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

917 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

920 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

923 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


927 
	#__√ed_gë›t


	)

928 
	~<gë›t.h
>

933 #ifde‡
__USE_EXTERN_INLINES


934 
	~<bôs/°dio.h
>

936 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


937 
	~<bôs/°dio2.h
>

939 #ifde‡
__LDBL_COMPAT


940 
	~<bôs/°dio-ldbl.h
>

943 
__END_DECLS


	@/usr/include/stdlib.h

22 #i‚def 
_STDLIB_H


24 
	~<„©uªs.h
>

27 
	#__√ed_size_t


	)

28 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


29 
	#__√ed_wch¨_t


	)

30 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

34 
	g__BEGIN_DECLS


36 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


37 
	#_STDLIB_H
 1

	)

39 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
Ë&& !deföed 
_SYS_WAIT_H


41 
	~<bôs/waôÊags.h
>

42 
	~<bôs/waô°©us.h
>

44 #ifde‡
__USE_BSD


49 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


50 
	#__WAIT_INT
(
°©us
) \

51 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

52 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

54 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

62 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


63 
	#__WAIT_STATUS
 *

	)

64 
	#__WAIT_STATUS_DEFN
 *

	)

69 
waô
 *
	m__u±r
;

70 *
	m__ùå
;

71 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

72 
	#__WAIT_STATUS_DEFN
 *

	)

77 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

78 
	#__WAIT_STATUS
 *

	)

79 
	#__WAIT_STATUS_DEFN
 *

	)

84 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (
	`__WAIT_INT
 (°©us))

	)

85 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (
	`__WAIT_INT
 (°©us))

	)

86 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (
	`__WAIT_INT
 (°©us))

	)

87 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (
	`__WAIT_INT
 (°©us))

	)

88 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (
	`__WAIT_INT
 (°©us))

	)

89 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (
	`__WAIT_INT
 (°©us))

	)

90 #ifde‡
__WIFCONTINUED


91 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (
	`__WAIT_INT
 (°©us))

	)

95 
__BEGIN_NAMESPACE_STD


99 
	mquŸ
;

100 
	mªm
;

101 } 
	tdiv_t
;

104 #i‚de‡
__ldiv_t_deföed


107 
	mquŸ
;

108 
	mªm
;

109 } 
	tldiv_t
;

110 
	#__ldiv_t_deföed
 1

	)

112 
	g__END_NAMESPACE_STD


114 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


115 
__BEGIN_NAMESPACE_C99


117 
__exãnsi⁄__
 struct

119 
	mquŸ
;

120 
	mªm
;

121 } 
	tŒdiv_t
;

122 
	#__Œdiv_t_deföed
 1

	)

123 
	g__END_NAMESPACE_C99


128 
	#RAND_MAX
 2147483647

	)

133 
	#EXIT_FAILURE
 1

	)

134 
	#EXIT_SUCCESS
 0

	)

138 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

139 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

142 
__BEGIN_NAMESPACE_STD


144 
	$©of
 (c⁄° *
__≈å
)

145 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

147 
	$©oi
 (c⁄° *
__≈å
)

148 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

150 
	$©ﬁ
 (c⁄° *
__≈å
)

151 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

152 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_MISC


155 
__BEGIN_NAMESPACE_C99


157 
__exãnsi⁄__
 
	$©ﬁl
 (c⁄° *
__≈å
)

158 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

159 
__END_NAMESPACE_C99


162 
__BEGIN_NAMESPACE_STD


164 
	$°πod
 (c⁄° *
__ª°ri˘
 
__≈å
,

165 **
__ª°ri˘
 
__íd±r
)

166 
__THROW
 
	`__n⁄nuŒ
 ((1));

167 
__END_NAMESPACE_STD


169 #ifdef 
__USE_ISOC99


170 
__BEGIN_NAMESPACE_C99


172 
	$°πof
 (c⁄° *
__ª°ri˘
 
__≈å
,

173 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

175 
	$°πﬁd
 (c⁄° *
__ª°ri˘
 
__≈å
,

176 **
__ª°ri˘
 
__íd±r
)

177 
__THROW
 
	`__n⁄nuŒ
 ((1));

178 
__END_NAMESPACE_C99


181 
__BEGIN_NAMESPACE_STD


183 
	$°πﬁ
 (c⁄° *
__ª°ri˘
 
__≈å
,

184 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

185 
__THROW
 
	`__n⁄nuŒ
 ((1));

187 
	$°πoul
 (c⁄° *
__ª°ri˘
 
__≈å
,

188 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

189 
__THROW
 
	`__n⁄nuŒ
 ((1));

190 
__END_NAMESPACE_STD


192 #ifde‡
__USE_BSD


194 
__exãnsi⁄__


195 
	$°πoq
 (c⁄° *
__ª°ri˘
 
__≈å
,

196 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

197 
__THROW
 
	`__n⁄nuŒ
 ((1));

199 
__exãnsi⁄__


200 
	$°πouq
 (c⁄° *
__ª°ri˘
 
__≈å
,

201 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

202 
__THROW
 
	`__n⁄nuŒ
 ((1));

205 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_MISC


206 
__BEGIN_NAMESPACE_C99


208 
__exãnsi⁄__


209 
	$°πﬁl
 (c⁄° *
__ª°ri˘
 
__≈å
,

210 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

211 
__THROW
 
	`__n⁄nuŒ
 ((1));

213 
__exãnsi⁄__


214 
	$°πouŒ
 (c⁄° *
__ª°ri˘
 
__≈å
,

215 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

216 
__THROW
 
	`__n⁄nuŒ
 ((1));

217 
__END_NAMESPACE_C99


221 #ifde‡
__USE_GNU


235 
	~<xloˇÀ.h
>

239 
	$°πﬁ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

240 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

241 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

243 
	$°πoul_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

244 **
__ª°ri˘
 
__íd±r
,

245 
__ba£
, 
__loˇÀ_t
 
__loc
)

246 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

248 
__exãnsi⁄__


249 
	$°πﬁl_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

250 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

251 
__loˇÀ_t
 
__loc
)

252 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

254 
__exãnsi⁄__


255 
	$°πouŒ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

256 **
__ª°ri˘
 
__íd±r
,

257 
__ba£
, 
__loˇÀ_t
 
__loc
)

258 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

260 
	$°πod_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

261 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

262 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

264 
	$°πof_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

265 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

266 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

268 
	$°πﬁd_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

269 **
__ª°ri˘
 
__íd±r
,

270 
__loˇÀ_t
 
__loc
)

271 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

275 #ifde‡
__USE_EXTERN_INLINES


276 
__BEGIN_NAMESPACE_STD


277 
__exã∫_ölöe
 

278 
	`__NTH
 (
	$©oi
 (c⁄° *
__≈å
))

280  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

281 
	}
}

282 
__exã∫_ölöe
 

283 
__NTH
 (
	$©ﬁ
 (c⁄° *
__≈å
))

285  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

286 
	}
}

287 
	g__END_NAMESPACE_STD


289 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


290 
__BEGIN_NAMESPACE_C99


291 
__exãnsi⁄__
 
__exã∫_ölöe
 

292 
__NTH
 (
	$©ﬁl
 (c⁄° *
__≈å
))

294  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

295 
	}
}

296 
	g__END_NAMESPACE_C99


301 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


305 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

308 
	$a64l
 (c⁄° *
__s
)

309 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

313 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_BSD


314 
	~<sys/ty≥s.h
>

321 
	$øndom
 (Ë
__THROW
;

324 
	$§™dom
 (
__£ed
Ë
__THROW
;

330 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

331 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

335 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

338 #ifde‡
__USE_MISC


343 
	søndom_d©a


345 
öt32_t
 *
Âå
;

346 
öt32_t
 *
Ωå
;

347 
öt32_t
 *
°©e
;

348 
ønd_ty≥
;

349 
ønd_deg
;

350 
ønd_£p
;

351 
öt32_t
 *
íd_±r
;

354 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

355 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

357 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

358 
__THROW
 
	`__n⁄nuŒ
 ((2));

360 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

361 
size_t
 
__°©ñí
,

362 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

363 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

365 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

366 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

367 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

372 
__BEGIN_NAMESPACE_STD


374 
	$ønd
 (Ë
__THROW
;

376 
	$§™d
 (
__£ed
Ë
__THROW
;

377 
__END_NAMESPACE_STD


379 #ifde‡
__USE_POSIX


381 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

385 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


389 
	$dønd48
 (Ë
__THROW
;

390 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

393 
	$Ã™d48
 (Ë
__THROW
;

394 
	$ƒ™d48
 (
__xsubi
[3])

395 
__THROW
 
	`__n⁄nuŒ
 ((1));

398 
	$mønd48
 (Ë
__THROW
;

399 
	$jønd48
 (
__xsubi
[3])

400 
__THROW
 
	`__n⁄nuŒ
 ((1));

403 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

404 *
	$£ed48
 (
__£ed16v
[3])

405 
__THROW
 
	`__n⁄nuŒ
 ((1));

406 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

408 #ifde‡
__USE_MISC


412 
	sdønd48_d©a


414 
__x
[3];

415 
__ﬁd_x
[3];

416 
__c
;

417 
__öô
;

418 
__exãnsi⁄__
 
__a
;

423 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

424 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

425 
	$î™d48_r
 (
__xsubi
[3],

426 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

427 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

430 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

431 *
__ª°ri˘
 
__ªsu…
)

432 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

433 
	$ƒ™d48_r
 (
__xsubi
[3],

434 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

435 *
__ª°ri˘
 
__ªsu…
)

436 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

439 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

440 *
__ª°ri˘
 
__ªsu…
)

441 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

442 
	$jønd48_r
 (
__xsubi
[3],

443 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

444 *
__ª°ri˘
 
__ªsu…
)

445 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

448 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

449 
__THROW
 
	`__n⁄nuŒ
 ((2));

451 
	$£ed48_r
 (
__£ed16v
[3],

452 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

454 
	$lc⁄g48_r
 (
__∑øm
[7],

455 
dønd48_d©a
 *
__buf„r
)

456 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

462 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


463 
	#__mÆloc_™d_ˇŒoc_deföed


	)

464 
__BEGIN_NAMESPACE_STD


466 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

468 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

469 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

470 
__END_NAMESPACE_STD


473 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


474 
__BEGIN_NAMESPACE_STD


480 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

481 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

483 
	$‰ì
 (*
__±r
Ë
__THROW
;

484 
__END_NAMESPACE_STD


486 #ifdef 
__USE_MISC


488 
	$c‰ì
 (*
__±r
Ë
__THROW
;

491 #i‡
deföed
 
__USE_GNU
 || deföed 
__USE_BSD
 || deföed 
__USE_MISC


492 
	~<Æloˇ.h
>

495 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

496 || 
deföed
 
__USE_BSD


498 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

501 #ifde‡
__USE_XOPEN2K


503 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

504 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

507 #ifde‡
__USE_ISOC11


509 *
	$Æig√d_Æloc
 (
size_t
 
__Æignmít
, size_à
__size
)

510 
__THROW
 
__©åibuã_mÆloc__
 
	`__©åibuã_Æloc_size__
 ((2)Ë
__wur
;

513 
__BEGIN_NAMESPACE_STD


515 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

519 
	`©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

521 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


523 #ifde‡
__˝lu•lus


524 "C++" 
	`©_quick_exô
 ((*
__func
) ())

525 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

527 
	`©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

530 
__END_NAMESPACE_STD


532 #ifdef 
__USE_MISC


535 
	`⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

536 
__THROW
 
	`__n⁄nuŒ
 ((1));

539 
__BEGIN_NAMESPACE_STD


543 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

545 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


549 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

551 
__END_NAMESPACE_STD


553 #ifde‡
__USE_ISOC99


554 
__BEGIN_NAMESPACE_C99


557 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

558 
__END_NAMESPACE_C99


562 
__BEGIN_NAMESPACE_STD


564 *
	$gëív
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

565 
__END_NAMESPACE_STD


567 #ifde‡
__USE_GNU


570 *
	$£cuª_gëív
 (c⁄° *
__«me
)

571 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

574 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


578 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

581 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


584 
	$£ãnv
 (c⁄° *
__«me
, c⁄° *
__vÆue
, 
__ª∂a˚
)

585 
__THROW
 
	`__n⁄nuŒ
 ((2));

588 
	$un£ãnv
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

591 #ifdef 
__USE_MISC


595 
	$˛óªnv
 (Ë
__THROW
;

599 #i‡
deföed
 
__USE_MISC
 \

600 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
)

606 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

609 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 \

610 || 
deföed
 
__USE_XOPEN2K8


619 #i‚de‡
__USE_FILE_OFFSET64


620 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

622 #ifde‡
__REDIRECT


623 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

624 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

626 
	#mk°emp
 
mk°emp64


	)

629 #ifde‡
__USE_LARGEFILE64


630 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

634 #ifde‡
__USE_MISC


641 #i‚de‡
__USE_FILE_OFFSET64


642 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

644 #ifde‡
__REDIRECT


645 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

646 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

648 
	#mk°emps
 
mk°emps64


	)

651 #ifde‡
__USE_LARGEFILE64


652 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

653 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

657 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K8


663 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

666 #ifde‡
__USE_GNU


673 #i‚de‡
__USE_FILE_OFFSET64


674 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

676 #ifde‡
__REDIRECT


677 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

678 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

680 
	#mko°emp
 
mko°emp64


	)

683 #ifde‡
__USE_LARGEFILE64


684 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

693 #i‚de‡
__USE_FILE_OFFSET64


694 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

695 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

697 #ifde‡
__REDIRECT


698 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

699 
__Êags
), 
mko°emps64
)

700 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

702 
	#mko°emps
 
mko°emps64


	)

705 #ifde‡
__USE_LARGEFILE64


706 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

707 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

712 
__BEGIN_NAMESPACE_STD


717 
	$sy°em
 (c⁄° *
__comm™d
Ë
__wur
;

718 
__END_NAMESPACE_STD


721 #ifdef 
__USE_GNU


724 *
	$ˇn⁄iˇlize_fûe_«me
 (c⁄° *
__«me
)

725 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

728 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


734 *
	$ªÆ∑th
 (c⁄° *
__ª°ri˘
 
__«me
,

735 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

740 #i‚de‡
__COMPAR_FN_T


741 
	#__COMPAR_FN_T


	)

742 (*
	t__com∑r_‚_t
) (const *, const *);

744 #ifdef 
__USE_GNU


745 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

748 #ifde‡
__USE_GNU


749 (*
	t__com∑r_d_‚_t
) (const *, const *, *);

752 
__BEGIN_NAMESPACE_STD


755 *
	$b£¨ch
 (c⁄° *
__key
, c⁄° *
__ba£
,

756 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

757 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

759 #ifde‡
__USE_EXTERN_INLINES


760 
	~<bôs/°dlib-b£¨ch.h
>

765 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

766 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

767 #ifde‡
__USE_GNU


768 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

769 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

770 
	`__n⁄nuŒ
 ((1, 4));

775 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

776 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

777 
__END_NAMESPACE_STD


779 #ifde‡
__USE_ISOC99


780 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

781 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

785 
__BEGIN_NAMESPACE_STD


789 
div_t
 
	$div
 (
__numî
, 
__díom
)

790 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

791 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

792 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

793 
__END_NAMESPACE_STD


795 #ifde‡
__USE_ISOC99


796 
__BEGIN_NAMESPACE_C99


797 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

798 
__díom
)

799 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

800 
__END_NAMESPACE_C99


804 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

805 || 
deföed
 
__USE_SVID


812 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

813 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

818 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

819 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

824 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

825 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

828 #ifde‡
__USE_MISC


830 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

831 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

832 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

833 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

834 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

835 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

836 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

837 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

842 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

843 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

844 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

845 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

846 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

847 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

849 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

850 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

851 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

852 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

853 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

854 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

855 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

856 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

860 
__BEGIN_NAMESPACE_STD


863 
	$mbÀn
 (c⁄° *
__s
, 
size_t
 
__n
Ë
__THROW
;

866 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

867 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

870 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
;

874 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

875 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

877 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

878 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

879 
__THROW
;

880 
__END_NAMESPACE_STD


883 #ifde‡
__USE_SVID


888 
	$Ωm©ch
 (c⁄° *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

892 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


899 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

900 *c⁄° *
__ª°ri˘
 
__tokís
,

901 **
__ª°ri˘
 
__vÆuï
)

902 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

906 #ifde‡
__USE_XOPEN


908 
	$£tkey
 (c⁄° *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

914 #ifde‡
__USE_XOPEN2KXSI


916 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

919 #ifde‡
__USE_XOPEN


924 
	$gø¡±
 (
__fd
Ë
__THROW
;

928 
	$u∆ock±
 (
__fd
Ë
__THROW
;

933 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

936 #ifde‡
__USE_GNU


940 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

941 
__THROW
 
	`__n⁄nuŒ
 ((2));

944 
	`gë±
 ();

947 #ifde‡
__USE_BSD


951 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

952 
__THROW
 
	`__n⁄nuŒ
 ((1));

955 
	~<bôs/°dlib-Êﬂt.h
>

958 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


959 
	~<bôs/°dlib.h
>

961 #ifde‡
__LDBL_COMPAT


962 
	~<bôs/°dlib-ldbl.h
>

966 #unde‡
__√ed_mÆloc_™d_ˇŒoc


968 
__END_DECLS


	@/usr/include/string.h

22 #i‚def 
_STRING_H


23 
	#_STRING_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


30 
	#__√ed_size_t


	)

31 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

39 #i‡
deföed
 
__˝lu•lus
 && (__˝lu•lu†>199711L || 
__GNUC_PREREQ
 (4, 4))

40 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

44 
__BEGIN_NAMESPACE_STD


46 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

47 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

50 *
	$memmove
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

51 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

52 
__END_NAMESPACE_STD


57 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN


58 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

59 
__c
, 
size_t
 
__n
)

60 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

64 
__BEGIN_NAMESPACE_STD


66 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

69 
	$memcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

70 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

73 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


76 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

77 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

78 c⁄° *
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

79 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

81 #ifde‡
__OPTIMIZE__


82 
__exã∫_Æways_ölöe
 *

83 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


85  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

88 
__exã∫_Æways_ölöe
 const *

89 
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


91  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

94 
	}
}

96 *
	$memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

97 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

99 
__END_NAMESPACE_STD


101 #ifde‡
__USE_GNU


104 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


105 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

106 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

107 "C++" c⁄° *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

108 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

110 *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

111 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

115 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


116 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

117 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

118 "C++" c⁄° *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

119 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

121 *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

122 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

127 
__BEGIN_NAMESPACE_STD


129 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

130 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

132 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

133 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

134 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

137 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

138 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

140 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

141 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

144 
	$°rcmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

145 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

147 
	$°∫cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

148 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

151 
	$°rcﬁl
 (c⁄° *
__s1
, c⁄° *
__s2
)

152 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

154 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

155 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

156 
__THROW
 
	`__n⁄nuŒ
 ((2));

157 
__END_NAMESPACE_STD


159 #ifde‡
__USE_XOPEN2K8


163 
	~<xloˇÀ.h
>

166 
	$°rcﬁl_l
 (c⁄° *
__s1
, c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

167 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

169 
size_t
 
	$°rx‰m_l
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
,

170 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

173 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 \

174 || 
deföed
 
__USE_XOPEN2K8


176 *
	$°rdup
 (c⁄° *
__s
)

177 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

183 #i‡
deföed
 
__USE_XOPEN2K8


184 *
	$°∫dup
 (c⁄° *
__°rög
, 
size_t
 
__n
)

185 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

188 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


190 
	#°rdu∑
(
s
) \

191 (
__exãnsi⁄__
 \

193 c⁄° *
__ﬁd
 = (
s
); \

194 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

195 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

196 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

197 
	}
}))

	)

200 
	#°∫du∑
(
s
, 
n
) \

201 (
__exãnsi⁄__
 \

203 c⁄° *
__ﬁd
 = (
s
); \

204 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

205 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

206 
__√w
[
__Àn
] = '\0'; \

207 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

208 }))

	)

211 
	g__BEGIN_NAMESPACE_STD


213 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


216 *
°rchr
 (*
__s
, 
__c
)

217 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

218 c⁄° *
°rchr
 (c⁄° *
__s
, 
__c
)

219 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

221 #ifde‡
__OPTIMIZE__


222 
__exã∫_Æways_ölöe
 *

223 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


225  
__buûtö_°rchr
 (
__s
, 
__c
);

228 
__exã∫_Æways_ölöe
 const *

229 
°rchr
 (c⁄° *
__s
, 
__c
Ë
	g__THROW


231  
__buûtö_°rchr
 (
__s
, 
__c
);

236 *
	$°rchr
 (c⁄° *
__s
, 
__c
)

237 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

240 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


243 *
	`°ºchr
 (*
__s
, 
__c
)

244 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

245 c⁄° *
	`°ºchr
 (c⁄° *
__s
, 
__c
)

246 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

248 #ifde‡
__OPTIMIZE__


249 
__exã∫_Æways_ölöe
 *

250 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


252  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

255 
__exã∫_Æways_ölöe
 const *

256 
	`°ºchr
 (c⁄° *
__s
, 
__c
Ë
__THROW


258  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

261 
	}
}

263 *
	$°ºchr
 (c⁄° *
__s
, 
__c
)

264 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

266 
__END_NAMESPACE_STD


268 #ifde‡
__USE_GNU


271 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


272 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

273 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

274 "C++" c⁄° *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

275 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

277 *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

278 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

282 
__BEGIN_NAMESPACE_STD


285 
size_t
 
	$°rc•n
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

286 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

289 
size_t
 
	$°r•n
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

290 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

292 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


295 *
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
)

296 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

297 c⁄° *
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

298 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

300 #ifde‡
__OPTIMIZE__


301 
__exã∫_Æways_ölöe
 *

302 
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
Ë
__THROW


304  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

307 
__exã∫_Æways_ölöe
 const *

308 
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
Ë
__THROW


310  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

313 
	}
}

315 *
	$°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

316 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

319 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


322 *
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

323 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

324 c⁄° *
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

325 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

327 #ifde‡
__OPTIMIZE__


328 
__exã∫_Æways_ölöe
 *

329 
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


331  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

334 
__exã∫_Æways_ölöe
 const *

335 
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


337  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

340 
	}
}

342 *
	$°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

343 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

348 *
	$°πok
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
)

349 
__THROW
 
	`__n⁄nuŒ
 ((2));

350 
__END_NAMESPACE_STD


354 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

355 c⁄° *
__ª°ri˘
 
__dñim
,

356 **
__ª°ri˘
 
__ßve_±r
)

357 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

358 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


359 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
,

360 **
__ª°ri˘
 
__ßve_±r
)

361 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

364 #ifde‡
__USE_GNU


366 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


367 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

368 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

369 "C++" c⁄° *
	$°rˇ£°r
 (c⁄° *
__hay°ack
,

370 c⁄° *
__√edÀ
)

371 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

373 *
	$°rˇ£°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

374 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

378 #ifde‡
__USE_GNU


382 *
	$memmem
 (c⁄° *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

383 c⁄° *
__√edÀ
, 
size_t
 
__√edÀÀn
)

384 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

388 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

389 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

390 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

391 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

392 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

393 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

397 
__BEGIN_NAMESPACE_STD


399 
size_t
 
	$°æí
 (c⁄° *
__s
)

400 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

401 
__END_NAMESPACE_STD


403 #ifdef 
__USE_XOPEN2K8


406 
size_t
 
	$°∫Àn
 (c⁄° *
__°rög
, 
size_t
 
__maxÀn
)

407 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

411 
__BEGIN_NAMESPACE_STD


413 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

414 
__END_NAMESPACE_STD


415 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_MISC


423 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


426 #ifde‡
__REDIRECT_NTH


427 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

428 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

429 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

431 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

432 
__THROW
 
	`__n⁄nuŒ
 ((2));

433 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

438 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

439 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

443 #ifde‡
__USE_XOPEN2K8


445 *
	$°ªº‹_l
 (
__î∫um
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

451 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

453 #ifde‡
__USE_BSD


455 
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__n
)

456 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

459 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

462 
	$bcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

463 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

466 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


469 *
	`ödex
 (*
__s
, 
__c
)

470 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

471 c⁄° *
	`ödex
 (c⁄° *
__s
, 
__c
)

472 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

474 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


475 
__exã∫_Æways_ölöe
 *

476 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


478  
	`__buûtö_ödex
 (
__s
, 
__c
);

481 
__exã∫_Æways_ölöe
 const *

482 
	`ödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


484  
	`__buûtö_ödex
 (
__s
, 
__c
);

487 
	}
}

489 *
	$ödex
 (c⁄° *
__s
, 
__c
)

490 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

494 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


497 *
	`rödex
 (*
__s
, 
__c
)

498 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

499 c⁄° *
	`rödex
 (c⁄° *
__s
, 
__c
)

500 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

502 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


503 
__exã∫_Æways_ölöe
 *

504 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


506  
	`__buûtö_rödex
 (
__s
, 
__c
);

509 
__exã∫_Æways_ölöe
 const *

510 
	`rödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


512  
	`__buûtö_rödex
 (
__s
, 
__c
);

515 
	}
}

517 *
	$rödex
 (c⁄° *
__s
, 
__c
)

518 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

523 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

527 #ifdef 
__USE_GNU


528 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

529 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

530 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

534 
	$°rˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

535 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

538 
	$°∫ˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

539 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

542 #ifdef 
__USE_GNU


545 
	$°rˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

546 
__loˇÀ_t
 
__loc
)

547 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

549 
	$°∫ˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

550 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

551 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

554 #ifdef 
__USE_BSD


557 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

558 c⁄° *
__ª°ri˘
 
__dñim
)

559 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

562 #ifdef 
__USE_XOPEN2K8


564 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

567 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

568 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

569 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

570 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

574 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

575 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

576 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

577 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

578 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

579 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

582 #ifdef 
__USE_GNU


584 
	$°rvîscmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

585 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

588 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

591 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

593 #i‚de‡
ba£«me


598 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


599 "C++" *
	$ba£«me
 (*
__fûíame
)

600 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

601 "C++" c⁄° *
	$ba£«me
 (c⁄° *
__fûíame
)

602 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

604 *
	$ba£«me
 (c⁄° *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

610 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

611 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

612 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


632 
	~<bôs/°rög.h
>

635 
	~<bôs/°rög2.h
>

638 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


640 
	~<bôs/°rög3.h
>

644 
__END_DECLS


	@/usr/include/termios.h

22 #i‚def 
_TERMIOS_H


23 
	#_TERMIOS_H
 1

	)

25 
	~<„©uªs.h
>

26 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


28 
	~<bôs/ty≥s.h
>

29 #i‚de‡
__pid_t_deföed


30 
__pid_t
 
	tpid_t
;

31 
	#__pid_t_deföed


	)

35 
	g__BEGIN_DECLS


39 
	~<bôs/ãrmios.h
>

41 #ifde‡
__USE_BSD


44 
	#CCEQ
(
vÆ
, 
c
Ë((cË=(vÆË&& (vÆË!
_POSIX_VDISABLE
)

	)

48 
•ìd_t
 
	$cfgëo•ìd
 (c⁄° 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

51 
•ìd_t
 
	$cfgëi•ìd
 (c⁄° 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

54 
	$cf£to•ìd
 (
ãrmios
 *
__ãrmios_p
, 
•ìd_t
 
__•ìd
Ë
__THROW
;

57 
	$cf£ti•ìd
 (
ãrmios
 *
__ãrmios_p
, 
•ìd_t
 
__•ìd
Ë
__THROW
;

59 #ifdef 
__USE_BSD


61 
	$cf£t•ìd
 (
ãrmios
 *
__ãrmios_p
, 
•ìd_t
 
__•ìd
Ë
__THROW
;

66 
	$tcgë©å
 (
__fd
, 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

70 
	$tc£èâr
 (
__fd
, 
__›ti⁄Æ_a˘i⁄s
,

71 c⁄° 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

74 #ifdef 
__USE_BSD


76 
	$cfmakîaw
 (
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

80 
	$tc£ndbªak
 (
__fd
, 
__duøti⁄
Ë
__THROW
;

86 
	`tcdøö
 (
__fd
);

90 
	$tcÊush
 (
__fd
, 
__queue_£À˘‹
Ë
__THROW
;

94 
	$tcÊow
 (
__fd
, 
__a˘i⁄
Ë
__THROW
;

97 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


99 
__pid_t
 
	$tcgësid
 (
__fd
Ë
__THROW
;

103 #ifde‡
__USE_BSD


104 
	~<sys/âydeÁu…s.h
>

107 
__END_DECLS


	@/usr/include/time.h

22 #i‚def 
_TIME_H


24 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

25 ! 
deföed
 
	g__√ed_time•ec
)

26 
	#_TIME_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


33 #ifdef 
_TIME_H


35 
	#__√ed_size_t


	)

36 
	#__√ed_NULL


	)

37 
	~<°ddef.h
>

41 
	~<bôs/time.h
>

44 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


45 #i‚de‡
CLK_TCK


46 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

52 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

53 
	#__˛ock_t_deföed
 1

	)

55 
	~<bôs/ty≥s.h
>

57 
__BEGIN_NAMESPACE_STD


59 
__˛ock_t
 
	t˛ock_t
;

60 
	g__END_NAMESPACE_STD


61 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


62 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

66 #unde‡
__√ed_˛ock_t


68 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

69 
	#__time_t_deföed
 1

	)

71 
	~<bôs/ty≥s.h
>

73 
__BEGIN_NAMESPACE_STD


75 
__time_t
 
	ttime_t
;

76 
__END_NAMESPACE_STD


77 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC
 || deföed 
__USE_SVID


78 
	$__USING_NAMESPACE_STD
(
time_t
)

82 #unde‡
__√ed_time_t


84 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

85 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

86 
	#__˛ockid_t_deföed
 1

	)

88 
	~<bôs/ty≥s.h
>

91 
__˛ockid_t
 
	t˛ockid_t
;

94 #unde‡
__˛ockid_time_t


96 #i‡!
deföed
 
__timî_t_deföed
 && \

97 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

98 
	#__timî_t_deföed
 1

	)

100 
	~<bôs/ty≥s.h
>

103 
__timî_t
 
	ttimî_t
;

106 #unde‡
__√ed_timî_t


109 #i‡(!
deföed
 
__time•ec_deföed
 \

110 && ((
deföed
 
_TIME_H
 \

111 && (
deföed
 
__USE_POSIX199309
 || deföed 
__USE_MISC
 \

112 || 
deföed
 
__USE_ISOC11
)) \

113 || 
deföed
 
__√ed_time•ec
))

114 
	#__time•ec_deföed
 1

	)

116 
	~<bôs/ty≥s.h
>

120 
	stime•ec


122 
__time_t
 
tv_£c
;

123 
__sysˇŒ_¶⁄g_t
 
tv_n£c
;

127 #unde‡
__√ed_time•ec


130 #ifdef 
_TIME_H


131 
__BEGIN_NAMESPACE_STD


133 
	stm


135 
tm_£c
;

136 
tm_mö
;

137 
tm_hour
;

138 
tm_mday
;

139 
tm_m⁄
;

140 
tm_yór
;

141 
tm_wday
;

142 
tm_yday
;

143 
tm_isd°
;

145 #ifdef 
__USE_BSD


146 
tm_gmtoff
;

147 c⁄° *
tm_z⁄e
;

149 
__tm_gmtoff
;

150 c⁄° *
__tm_z⁄e
;

153 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


155 
	$__USING_NAMESPACE_STD
(
tm
)

159 #ifde‡
__USE_POSIX199309


161 
	sôimî•ec


163 
time•ec
 
ô_öãrvÆ
;

164 
time•ec
 
ô_vÆue
;

168 
sigevít
;

172 #ifde‡
__USE_XOPEN2K


173 #i‚de‡
__pid_t_deföed


174 
__pid_t
 
	tpid_t
;

175 
	#__pid_t_deföed


	)

180 #ifde‡
__USE_ISOC11


182 
	#TIME_UTC
 1

	)

186 
__BEGIN_NAMESPACE_STD


189 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

192 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

195 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

196 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

199 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

205 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

206 c⁄° *
__ª°ri˘
 
__f‹m©
,

207 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

208 
__END_NAMESPACE_STD


210 #ifde‡
__USE_XOPEN


213 *
	$°Ωtime
 (c⁄° *
__ª°ri˘
 
__s
,

214 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

215 
__THROW
;

218 #ifde‡
__USE_XOPEN2K8


221 
	~<xloˇÀ.h
>

223 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

224 c⁄° *
__ª°ri˘
 
__f‹m©
,

225 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

226 
__loˇÀ_t
 
__loc
Ë
__THROW
;

229 #ifde‡
__USE_GNU


230 *
	$°Ωtime_l
 (c⁄° *
__ª°ri˘
 
__s
,

231 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

232 
__loˇÀ_t
 
__loc
Ë
__THROW
;

236 
__BEGIN_NAMESPACE_STD


239 
tm
 *
	$gmtime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

243 
tm
 *
	$loˇ…ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

244 
__END_NAMESPACE_STD


246 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


249 
tm
 *
	$gmtime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

250 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

254 
tm
 *
	$loˇ…ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

255 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

258 
__BEGIN_NAMESPACE_STD


261 *
	$as˘ime
 (c⁄° 
tm
 *
__ç
Ë
__THROW
;

264 *
	$˘ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

265 
__END_NAMESPACE_STD


267 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


272 *
	$as˘ime_r
 (c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

273 *
__ª°ri˘
 
__buf
Ë
__THROW
;

276 *
	$˘ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

277 *
__ª°ri˘
 
__buf
Ë
__THROW
;

282 *
__tz«me
[2];

283 
__daylight
;

284 
__timez⁄e
;

287 #ifdef 
__USE_POSIX


289 *
tz«me
[2];

293 
	$tz£t
 (Ë
__THROW
;

296 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


297 
daylight
;

298 
timez⁄e
;

301 #ifde‡
__USE_SVID


304 
	$°ime
 (c⁄° 
time_t
 *
__whí
Ë
__THROW
;

310 
	#__i¶óp
(
yór
) \

311 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

314 #ifde‡
__USE_MISC


319 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

322 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

325 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

329 #ifde‡
__USE_POSIX199309


334 
	`«no¶ìp
 (c⁄° 
time•ec
 *
__ªque°ed_time
,

335 
time•ec
 *
__ªmaöög
);

339 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

342 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

345 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, c⁄° 
time•ec
 *
__ç
)

346 
__THROW
;

348 #ifde‡
__USE_XOPEN2K


353 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

354 c⁄° 
time•ec
 *
__ªq
,

355 
time•ec
 *
__ªm
);

358 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

363 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

364 
sigevít
 *
__ª°ri˘
 
__evp
,

365 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

368 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

371 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

372 c⁄° 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

373 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

376 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

377 
__THROW
;

380 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

384 #ifde‡
__USE_ISOC11


386 
	$time•ec_gë
 (
time•ec
 *
__ts
, 
__ba£
)

387 
__THROW
 
	`__n⁄nuŒ
 ((1));

391 #ifde‡
__USE_XOPEN_EXTENDED


403 
gëd©e_îr
;

412 
tm
 *
	`gëd©e
 (c⁄° *
__°rög
);

415 #ifde‡
__USE_GNU


426 
	`gëd©e_r
 (c⁄° *
__ª°ri˘
 
__°rög
,

427 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

430 
__END_DECLS


	@/usr/include/unistd.h

22 #i‚def 
_UNISTD_H


23 
	#_UNISTD_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


32 #ifde‡
__USE_XOPEN2K8


34 
	#_POSIX_VERSION
 200809L

	)

35 #ñi‡
deföed
 
__USE_XOPEN2K


37 
	#_POSIX_VERSION
 200112L

	)

38 #ñi‡
deföed
 
__USE_POSIX199506


40 
	#_POSIX_VERSION
 199506L

	)

41 #ñi‡
deföed
 
__USE_POSIX199309


43 
	#_POSIX_VERSION
 199309L

	)

46 
	#_POSIX_VERSION
 199009L

	)

52 #ifde‡
__USE_XOPEN2K8


53 
	#__POSIX2_THIS_VERSION
 200809L

	)

55 #ñi‡
deföed
 
__USE_XOPEN2K


57 
	#__POSIX2_THIS_VERSION
 200112L

	)

58 #ñi‡
deföed
 
__USE_POSIX199506


60 
	#__POSIX2_THIS_VERSION
 199506L

	)

63 
	#__POSIX2_THIS_VERSION
 199209L

	)

67 
	#_POSIX2_VERSION
 
__POSIX2_THIS_VERSION


	)

71 
	#_POSIX2_C_BIND
 
__POSIX2_THIS_VERSION


	)

75 
	#_POSIX2_C_DEV
 
__POSIX2_THIS_VERSION


	)

79 
	#_POSIX2_SW_DEV
 
__POSIX2_THIS_VERSION


	)

83 
	#_POSIX2_LOCALEDEF
 
__POSIX2_THIS_VERSION


	)

86 #ifde‡
__USE_XOPEN2K8


87 
	#_XOPEN_VERSION
 700

	)

88 #ñi‡
deföed
 
__USE_XOPEN2K


89 
	#_XOPEN_VERSION
 600

	)

90 #ñi‡
deföed
 
__USE_UNIX98


91 
	#_XOPEN_VERSION
 500

	)

93 
	#_XOPEN_VERSION
 4

	)

97 
	#_XOPEN_XCU_VERSION
 4

	)

100 
	#_XOPEN_XPG2
 1

	)

101 
	#_XOPEN_XPG3
 1

	)

102 
	#_XOPEN_XPG4
 1

	)

105 
	#_XOPEN_UNIX
 1

	)

108 
	#_XOPEN_CRYPT
 1

	)

112 
	#_XOPEN_ENH_I18N
 1

	)

115 
	#_XOPEN_LEGACY
 1

	)

202 
	~<bôs/posix_›t.h
>

205 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


206 
	~<bôs/ívú⁄míts.h
>

210 
	#STDIN_FILENO
 0

	)

211 
	#STDOUT_FILENO
 1

	)

212 
	#STDERR_FILENO
 2

	)

217 
	~<bôs/ty≥s.h
>

219 #i‚def 
__ssize_t_deföed


220 
__ssize_t
 
	tssize_t
;

221 
	#__ssize_t_deföed


	)

224 
	#__√ed_size_t


	)

225 
	#__√ed_NULL


	)

226 
	~<°ddef.h
>

228 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


231 #i‚de‡
__gid_t_deföed


232 
__gid_t
 
	tgid_t
;

233 
	#__gid_t_deföed


	)

236 #i‚de‡
__uid_t_deföed


237 
__uid_t
 
	tuid_t
;

238 
	#__uid_t_deföed


	)

241 #i‚de‡
__off_t_deföed


242 #i‚de‡
__USE_FILE_OFFSET64


243 
__off_t
 
	toff_t
;

245 
__off64_t
 
	toff_t
;

247 
	#__off_t_deföed


	)

249 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


250 
__off64_t
 
	toff64_t
;

251 
	#__off64_t_deföed


	)

254 #i‚de‡
__u£c⁄ds_t_deföed


255 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

256 
	#__u£c⁄ds_t_deföed


	)

259 #i‚de‡
__pid_t_deföed


260 
__pid_t
 
	tpid_t
;

261 
	#__pid_t_deföed


	)

265 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


266 #i‚de‡
__öçå_t_deföed


267 
__öçå_t
 
	töçå_t
;

268 
	#__öçå_t_deföed


	)

272 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


273 #i‚de‡
__sockÀn_t_deföed


274 
__sockÀn_t
 
	tsockÀn_t
;

275 
	#__sockÀn_t_deföed


	)

281 
	#R_OK
 4

	)

282 
	#W_OK
 2

	)

283 
	#X_OK
 1

	)

284 
	#F_OK
 0

	)

287 
	$ac˚ss
 (c⁄° *
__«me
, 
__ty≥
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

289 #ifde‡
__USE_GNU


292 
	$euidac˚ss
 (c⁄° *
__«me
, 
__ty≥
)

293 
__THROW
 
	`__n⁄nuŒ
 ((1));

296 
	$óc˚ss
 (c⁄° *
__«me
, 
__ty≥
)

297 
__THROW
 
	`__n⁄nuŒ
 ((1));

300 #ifde‡
__USE_ATFILE


304 
	$Ác˚sßt
 (
__fd
, c⁄° *
__fûe
, 
__ty≥
, 
__Êag
)

305 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

310 #i‚def 
_STDIO_H


311 
	#SEEK_SET
 0

	)

312 
	#SEEK_CUR
 1

	)

313 
	#SEEK_END
 2

	)

314 #ifde‡
__USE_GNU


315 
	#SEEK_DATA
 3

	)

316 
	#SEEK_HOLE
 4

	)

320 #i‡
deföed
 
__USE_BSD
 && !deföed 
L_SET


322 
	#L_SET
 
SEEK_SET


	)

323 
	#L_INCR
 
SEEK_CUR


	)

324 
	#L_XTND
 
SEEK_END


	)

333 #i‚de‡
__USE_FILE_OFFSET64


334 
__off_t
 
	$l£ek
 (
__fd
, 
__off_t
 
__off£t
, 
__whí˚
Ë
__THROW
;

336 #ifde‡
__REDIRECT_NTH


337 
__off64_t
 
	`__REDIRECT_NTH
 (
l£ek
,

338 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
),

339 
l£ek64
);

341 
	#l£ek
 
l£ek64


	)

344 #ifde‡
__USE_LARGEFILE64


345 
__off64_t
 
	$l£ek64
 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
)

346 
__THROW
;

353 
	`˛o£
 (
__fd
);

360 
ssize_t
 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
Ë
__wur
;

366 
ssize_t
 
	$wrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
Ë
__wur
;

368 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


369 #i‚de‡
__USE_FILE_OFFSET64


376 
ssize_t
 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

377 
__off_t
 
__off£t
Ë
__wur
;

384 
ssize_t
 
	$pwrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

385 
__off_t
 
__off£t
Ë
__wur
;

387 #ifde‡
__REDIRECT


388 
ssize_t
 
	`__REDIRECT
 (
¥ód
, (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

389 
__off64_t
 
__off£t
),

390 
¥ód64
Ë
__wur
;

391 
ssize_t
 
	`__REDIRECT
 (
pwrôe
, (
__fd
, c⁄° *
__buf
,

392 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
),

393 
pwrôe64
Ë
__wur
;

395 
	#¥ód
 
¥ód64


	)

396 
	#pwrôe
 
pwrôe64


	)

400 #ifde‡
__USE_LARGEFILE64


404 
ssize_t
 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

405 
__off64_t
 
__off£t
Ë
__wur
;

408 
ssize_t
 
	$pwrôe64
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

409 
__off64_t
 
__off£t
Ë
__wur
;

417 
	$pùe
 (
__pùedes
[2]Ë
__THROW
 
__wur
;

419 #ifde‡
__USE_GNU


422 
	$pùe2
 (
__pùedes
[2], 
__Êags
Ë
__THROW
 
__wur
;

432 
	$Æ¨m
 (
__£c⁄ds
Ë
__THROW
;

444 
	`¶ìp
 (
__£c⁄ds
);

446 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

447 || 
deföed
 
__USE_BSD


452 
__u£c⁄ds_t
 
	$uÆ¨m
 (
__u£c⁄ds_t
 
__vÆue
, __u£c⁄ds_à
__öãrvÆ
)

453 
__THROW
;

460 
	`u¶ìp
 (
__u£c⁄ds_t
 
__u£c⁄ds
);

469 
	`∑u£
 ();

473 
	$chown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

474 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

476 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


478 
	$fchown
 (
__fd
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
Ë
__THROW
 
__wur
;

483 
	$lchown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

484 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

488 #ifde‡
__USE_ATFILE


491 
	$fchow«t
 (
__fd
, c⁄° *
__fûe
, 
__uid_t
 
__ow√r
,

492 
__gid_t
 
__group
, 
__Êag
)

493 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

497 
	$chdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

499 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


501 
	$fchdú
 (
__fd
Ë
__THROW
 
__wur
;

511 *
	$gëcwd
 (*
__buf
, 
size_t
 
__size
Ë
__THROW
 
__wur
;

513 #ifdef 
__USE_GNU


517 *
	$gë_cuºít_dú_«me
 (Ë
__THROW
;

520 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

521 || 
deföed
 
__USE_BSD


525 *
	$gëwd
 (*
__buf
)

526 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
;

531 
	$dup
 (
__fd
Ë
__THROW
 
__wur
;

534 
	$dup2
 (
__fd
, 
__fd2
Ë
__THROW
;

536 #ifde‡
__USE_GNU


539 
	$dup3
 (
__fd
, 
__fd2
, 
__Êags
Ë
__THROW
;

543 **
__ívú⁄
;

544 #ifde‡
__USE_GNU


545 **
ívú⁄
;

551 
	$execve
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[],

552 *c⁄° 
__ívp
[]Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

554 #ifde‡
__USE_XOPEN2K8


557 
	$„xecve
 (
__fd
, *c⁄° 
__¨gv
[], *c⁄° 
__ívp
[])

558 
__THROW
 
	`__n⁄nuŒ
 ((2));

563 
	$execv
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[])

564 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

568 
	$exe˛e
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

569 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

573 
	$exe˛
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

574 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

578 
	$execvp
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[])

579 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

584 
	$exe˛p
 (c⁄° *
__fûe
, c⁄° *
__¨g
, ...)

585 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

587 #ifde‡
__USE_GNU


590 
	$execv≥
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[],

591 *c⁄° 
__ívp
[])

592 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

596 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


598 
	$ni˚
 (
__öc
Ë
__THROW
 
__wur
;

603 
	$_exô
 (
__°©us
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

609 
	~<bôs/c⁄‚ame.h
>

612 
	$∑thc⁄f
 (c⁄° *
__∑th
, 
__«me
)

613 
__THROW
 
	`__n⁄nuŒ
 ((1));

616 
	$Â©hc⁄f
 (
__fd
, 
__«me
Ë
__THROW
;

619 
	$sysc⁄f
 (
__«me
Ë
__THROW
;

621 #ifdef 
__USE_POSIX2


623 
size_t
 
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

628 
__pid_t
 
	$gëpid
 (Ë
__THROW
;

631 
__pid_t
 
	$gëµid
 (Ë
__THROW
;

634 
__pid_t
 
	$gëpgΩ
 (Ë
__THROW
;

637 
__pid_t
 
	$__gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

638 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


639 
__pid_t
 
	$gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

646 
	$£çgid
 (
__pid_t
 
__pid
, __pid_à
__pgid
Ë
__THROW
;

648 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


660 
	$£çgΩ
 (Ë
__THROW
;

667 
__pid_t
 
	$£tsid
 (Ë
__THROW
;

669 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


671 
__pid_t
 
	$gësid
 (
__pid_t
 
__pid
Ë
__THROW
;

675 
__uid_t
 
	$gëuid
 (Ë
__THROW
;

678 
__uid_t
 
	$gëeuid
 (Ë
__THROW
;

681 
__gid_t
 
	$gëgid
 (Ë
__THROW
;

684 
__gid_t
 
	$gëegid
 (Ë
__THROW
;

689 
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]Ë
__THROW
 
__wur
;

691 #ifdef 
__USE_GNU


693 
	$group_membî
 (
__gid_t
 
__gid
Ë
__THROW
;

700 
	$£tuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

702 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


705 
	$£åeuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
Ë
__THROW
 
__wur
;

708 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


710 
	$£ãuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

717 
	$£tgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

719 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


722 
	$£åegid
 (
__gid_t
 
__rgid
, __gid_à
__egid
Ë
__THROW
 
__wur
;

725 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


727 
	$£ãgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

730 #ifde‡
__USE_GNU


733 
	$gëªsuid
 (
__uid_t
 *
__ruid
, __uid_à*
__euid
, __uid_à*
__suid
)

734 
__THROW
;

738 
	$gëªsgid
 (
__gid_t
 *
__rgid
, __gid_à*
__egid
, __gid_à*
__sgid
)

739 
__THROW
;

743 
	$£åesuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
, __uid_à
__suid
)

744 
__THROW
 
__wur
;

748 
	$£åesgid
 (
__gid_t
 
__rgid
, __gid_à
__egid
, __gid_à
__sgid
)

749 
__THROW
 
__wur
;

756 
__pid_t
 
	$f‹k
 (Ë
__THROWNL
;

758 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

759 || 
deföed
 
__USE_BSD


764 
__pid_t
 
	$vf‹k
 (Ë
__THROW
;

770 *
	$ây«me
 (
__fd
Ë
__THROW
;

774 
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

775 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

779 
	$ißây
 (
__fd
Ë
__THROW
;

781 #i‡
deföed
 
__USE_BSD
 \

782 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_UNIX98
)

785 
	$ây¶Ÿ
 (Ë
__THROW
;

790 
	$lök
 (c⁄° *
__‰om
, c⁄° *
__to
)

791 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

793 #ifde‡
__USE_ATFILE


796 
	$lök©
 (
__‰omfd
, c⁄° *
__‰om
, 
__tofd
,

797 c⁄° *
__to
, 
__Êags
)

798 
__THROW
 
	`__n⁄nuŒ
 ((2, 4)Ë
__wur
;

801 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


803 
	$symlök
 (c⁄° *
__‰om
, c⁄° *
__to
)

804 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

809 
ssize_t
 
	$ªadlök
 (c⁄° *
__ª°ri˘
 
__∑th
,

810 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

811 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

814 #ifde‡
__USE_ATFILE


816 
	$symlök©
 (c⁄° *
__‰om
, 
__tofd
,

817 c⁄° *
__to
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

820 
ssize_t
 
	$ªadlök©
 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

821 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

822 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

826 
	$u∆ök
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

828 #ifde‡
__USE_ATFILE


830 
	$u∆ök©
 (
__fd
, c⁄° *
__«me
, 
__Êag
)

831 
__THROW
 
	`__n⁄nuŒ
 ((2));

835 
	$rmdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

839 
__pid_t
 
	$tcgëpgΩ
 (
__fd
Ë
__THROW
;

842 
	$tc£çgΩ
 (
__fd
, 
__pid_t
 
__pgΩ_id
Ë
__THROW
;

849 *
	`gëlogö
 ();

850 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


857 
	$gëlogö_r
 (*
__«me
, 
size_t
 
__«me_Àn
Ë
	`__n⁄nuŒ
 ((1));

860 #ifdef 
__USE_BSD


862 
	$£éogö
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

866 #ifdef 
__USE_POSIX2


870 
	#__√ed_gë›t


	)

871 
	~<gë›t.h
>

875 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


879 
	$gëho°«me
 (*
__«me
, 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

883 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

886 
	$£tho°«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

887 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

891 
	$£tho°id
 (
__id
Ë
__THROW
 
__wur
;

897 
	$gëdomaö«me
 (*
__«me
, 
size_t
 
__Àn
)

898 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

899 
	$£tdomaö«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

900 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

906 
	$vh™gup
 (Ë
__THROW
;

909 
	$ªvoke
 (c⁄° *
__fûe
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

917 
	$¥ofû
 (*
__ßm∂e_buf„r
, 
size_t
 
__size
,

918 
size_t
 
__off£t
, 
__sˇÀ
)

919 
__THROW
 
	`__n⁄nuŒ
 ((1));

925 
	$ac˘
 (c⁄° *
__«me
Ë
__THROW
;

929 *
	$gëu£rshñl
 (Ë
__THROW
;

930 
	$ídu£rshñl
 (Ë
__THROW
;

931 
	$£tu£rshñl
 (Ë
__THROW
;

937 
	$d´m⁄
 (
__nochdú
, 
__no˛o£
Ë
__THROW
 
__wur
;

941 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

944 
	$chroŸ
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

948 *
	$gë∑ss
 (c⁄° *
__¥om±
Ë
	`__n⁄nuŒ
 ((1));

956 
	`fsync
 (
__fd
);

959 #ifde‡
__USE_GNU


962 
	$syncfs
 (
__fd
Ë
__THROW
;

966 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


969 
	`gëho°id
 ();

972 
	$sync
 (Ë
__THROW
;

975 #i‡
deföed
 
__USE_BSD
 || !deföed 
__USE_XOPEN2K


978 
	$gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

983 
	$gëdèbÀsize
 (Ë
__THROW
;

989 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


992 #i‚de‡
__USE_FILE_OFFSET64


993 
	$åunˇã
 (c⁄° *
__fûe
, 
__off_t
 
__Àngth
)

994 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

996 #ifde‡
__REDIRECT_NTH


997 
	`__REDIRECT_NTH
 (
åunˇã
,

998 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
),

999 
åunˇã64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1001 
	#åunˇã
 
åunˇã64


	)

1004 #ifde‡
__USE_LARGEFILE64


1005 
	$åunˇã64
 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
)

1006 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1011 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_POSIX199309
 \

1012 || 
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


1015 #i‚de‡
__USE_FILE_OFFSET64


1016 
	$·runˇã
 (
__fd
, 
__off_t
 
__Àngth
Ë
__THROW
 
__wur
;

1018 #ifde‡
__REDIRECT_NTH


1019 
	`__REDIRECT_NTH
 (
·runˇã
, (
__fd
, 
__off64_t
 
__Àngth
),

1020 
·runˇã64
Ë
__wur
;

1022 
	#·runˇã
 
·runˇã64


	)

1025 #ifde‡
__USE_LARGEFILE64


1026 
	$·runˇã64
 (
__fd
, 
__off64_t
 
__Àngth
Ë
__THROW
 
__wur
;

1032 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

1033 || 
deföed
 
__USE_MISC


1037 
	$brk
 (*
__addr
Ë
__THROW
 
__wur
;

1043 *
	$sbrk
 (
öçå_t
 
__dñè
Ë
__THROW
;

1047 #ifde‡
__USE_MISC


1058 
	$sysˇŒ
 (
__sy¢o
, ...Ë
__THROW
;

1063 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
Ë&& !deföed 
F_LOCK


1075 
	#F_ULOCK
 0

	)

1076 
	#F_LOCK
 1

	)

1077 
	#F_TLOCK
 2

	)

1078 
	#F_TEST
 3

	)

1080 #i‚de‡
__USE_FILE_OFFSET64


1081 
	$lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
Ë
__wur
;

1083 #ifde‡
__REDIRECT


1084 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
),

1085 
lockf64
Ë
__wur
;

1087 
	#lockf
 
lockf64


	)

1090 #ifde‡
__USE_LARGEFILE64


1091 
	$lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
Ë
__wur
;

1096 #ifde‡
__USE_GNU


1101 
	#TEMP_FAILURE_RETRY
(
ex¥essi⁄
) \

1102 (
__exãnsi⁄__
 \

1103 ({ 
__ªsu…
; \

1104 dÿ
__ªsu…
 = (Ë(
ex¥essi⁄
); \

1105 
__ªsu…
 =-1L && 
î∫o
 =
EINTR
); \

1106 
__ªsu…
; 
	}
}))

	)

1109 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


1112 
fd©async
 (
__fûdes
);

1118 #ifdef 
__USE_XOPEN


1120 *
	$¸y±
 (c⁄° *
__key
, c⁄° *
__ß…
)

1121 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1125 
	$í¸y±
 (*
__glibc_block
, 
__edÊag
)

1126 
__THROW
 
	`__n⁄nuŒ
 ((1));

1133 
	$swab
 (c⁄° *
__ª°ri˘
 
__‰om
, *__ª°ri˘ 
__to
,

1134 
ssize_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1140 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K


1142 *
	$˘îmid
 (*
__s
Ë
__THROW
;

1147 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


1148 
	~<bôs/uni°d.h
>

1151 
__END_DECLS


	@/usr/include/alloca.h

18 #i‚def 
_ALLOCA_H


19 
	#_ALLOCA_H
 1

	)

21 
	~<„©uªs.h
>

23 
	#__√ed_size_t


	)

24 
	~<°ddef.h
>

26 
	g__BEGIN_DECLS


29 #unde‡
Æloˇ


32 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

34 #ifdef 
__GNUC__


35 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

38 
__END_DECLS


	@/usr/include/endian.h

18 #i‚def 
_ENDIAN_H


19 
	#_ENDIAN_H
 1

	)

21 
	~<„©uªs.h
>

31 
	#__LITTLE_ENDIAN
 1234

	)

32 
	#__BIG_ENDIAN
 4321

	)

33 
	#__PDP_ENDIAN
 3412

	)

36 
	~<bôs/ídün.h
>

40 #i‚de‡
__FLOAT_WORD_ORDER


41 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

44 #ifdef 
__USE_BSD


45 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

46 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

47 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

48 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

51 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


52 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

53 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


54 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

58 #i‡
deföed
 
__USE_BSD
 && !deföed 
__ASSEMBLER__


60 
	~<bôs/byãsw≠.h
>

62 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


63 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

64 
	#htﬁe16
(
x
Ë(x)

	)

65 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

66 
	#À16toh
(
x
Ë(x)

	)

68 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

69 
	#htﬁe32
(
x
Ë(x)

	)

70 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

71 
	#À32toh
(
x
Ë(x)

	)

73 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

74 
	#htﬁe64
(
x
Ë(x)

	)

75 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

76 
	#À64toh
(
x
Ë(x)

	)

79 
	#htobe16
(
x
Ë(x)

	)

80 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

81 
	#be16toh
(
x
Ë(x)

	)

82 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

84 
	#htobe32
(
x
Ë(x)

	)

85 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

86 
	#be32toh
(
x
Ë(x)

	)

87 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

89 
	#htobe64
(
x
Ë(x)

	)

90 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

91 
	#be64toh
(
x
Ë(x)

	)

92 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/features.h

18 #i‚def 
_FEATURES_H


19 
	#_FEATURES_H
 1

	)

101 #unde‡
__USE_ISOC11


102 #unde‡
__USE_ISOC99


103 #unde‡
__USE_ISOC95


104 #unde‡
__USE_ISOCXX11


105 #unde‡
__USE_POSIX


106 #unde‡
__USE_POSIX2


107 #unde‡
__USE_POSIX199309


108 #unde‡
__USE_POSIX199506


109 #unde‡
__USE_XOPEN


110 #unde‡
__USE_XOPEN_EXTENDED


111 #unde‡
__USE_UNIX98


112 #unde‡
__USE_XOPEN2K


113 #unde‡
__USE_XOPEN2KXSI


114 #unde‡
__USE_XOPEN2K8


115 #unde‡
__USE_XOPEN2K8XSI


116 #unde‡
__USE_LARGEFILE


117 #unde‡
__USE_LARGEFILE64


118 #unde‡
__USE_FILE_OFFSET64


119 #unde‡
__USE_BSD


120 #unde‡
__USE_SVID


121 #unde‡
__USE_MISC


122 #unde‡
__USE_ATFILE


123 #unde‡
__USE_GNU


124 #unde‡
__USE_REENTRANT


125 #unde‡
__USE_FORTIFY_LEVEL


126 #unde‡
__KERNEL_STRICT_NAMES


130 #i‚de‡
_LOOSE_KERNEL_NAMES


131 
	#__KERNEL_STRICT_NAMES


	)

141 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


142 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

143 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

145 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

150 #ifde‡
_GNU_SOURCE


151 #unde‡
_ISOC95_SOURCE


152 
	#_ISOC95_SOURCE
 1

	)

153 #unde‡
_ISOC99_SOURCE


154 
	#_ISOC99_SOURCE
 1

	)

155 #unde‡
_ISOC11_SOURCE


156 
	#_ISOC11_SOURCE
 1

	)

157 #unde‡
_POSIX_SOURCE


158 
	#_POSIX_SOURCE
 1

	)

159 #unde‡
_POSIX_C_SOURCE


160 
	#_POSIX_C_SOURCE
 200809L

	)

161 #unde‡
_XOPEN_SOURCE


162 
	#_XOPEN_SOURCE
 700

	)

163 #unde‡
_XOPEN_SOURCE_EXTENDED


164 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

165 #unde‡
_LARGEFILE64_SOURCE


166 
	#_LARGEFILE64_SOURCE
 1

	)

167 #unde‡
_DEFAULT_SOURCE


168 
	#_DEFAULT_SOURCE
 1

	)

169 #unde‡
_BSD_SOURCE


170 
	#_BSD_SOURCE
 1

	)

171 #unde‡
_SVID_SOURCE


172 
	#_SVID_SOURCE
 1

	)

173 #unde‡
_ATFILE_SOURCE


174 
	#_ATFILE_SOURCE
 1

	)

179 #i‡(
deföed
 
_DEFAULT_SOURCE
 \

180 || (!
deföed
 
	g__STRICT_ANSI__
 \

181 && !
deföed
 
	g_ISOC99_SOURCE
 \

182 && !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 \

183 && !
deföed
 
	g_XOPEN_SOURCE
 \

184 && !
deföed
 
	g_BSD_SOURCE
 && !deföed 
	g_SVID_SOURCE
))

185 #unde‡
_DEFAULT_SOURCE


186 
	#_DEFAULT_SOURCE
 1

	)

187 #unde‡
_BSD_SOURCE


188 
	#_BSD_SOURCE
 1

	)

189 #unde‡
_SVID_SOURCE


190 
	#_SVID_SOURCE
 1

	)

194 #i‡(
deföed
 
_ISOC11_SOURCE
 \

195 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 201112L))

196 
	#__USE_ISOC11
 1

	)

200 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

201 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

202 
	#__USE_ISOC99
 1

	)

206 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

207 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

208 
	#__USE_ISOC95
 1

	)

215 #i‡((
deföed
 
__˝lu•lus
 && __cplusplus >= 201103L) \

216 || 
deföed
 
__GXX_EXPERIMENTAL_CXX0X__
)

217 
	#__USE_ISOCXX11
 1

	)

223 #ifde‡
_DEFAULT_SOURCE


224 #i‡!
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE


225 
	#__USE_POSIX_IMPLICITLY
 1

	)

227 #unde‡
_POSIX_SOURCE


228 
	#_POSIX_SOURCE
 1

	)

229 #unde‡
_POSIX_C_SOURCE


230 
	#_POSIX_C_SOURCE
 200809L

	)

232 #i‡((!
deföed
 
__STRICT_ANSI__
 || (
_XOPEN_SOURCE
 - 0) >= 500) && \

233 !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

234 
	#_POSIX_SOURCE
 1

	)

235 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

236 
	#_POSIX_C_SOURCE
 2

	)

237 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

238 
	#_POSIX_C_SOURCE
 199506L

	)

239 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

240 
	#_POSIX_C_SOURCE
 200112L

	)

242 
	#_POSIX_C_SOURCE
 200809L

	)

244 
	#__USE_POSIX_IMPLICITLY
 1

	)

247 #i‡
deföed
 
_POSIX_SOURCE
 || 
_POSIX_C_SOURCE
 >1 || deföed 
_XOPEN_SOURCE


248 
	#__USE_POSIX
 1

	)

251 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


252 
	#__USE_POSIX2
 1

	)

255 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199309L

256 
	#__USE_POSIX199309
 1

	)

259 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199506L

260 
	#__USE_POSIX199506
 1

	)

263 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200112L

264 
	#__USE_XOPEN2K
 1

	)

265 #unde‡
__USE_ISOC95


266 
	#__USE_ISOC95
 1

	)

267 #unde‡
__USE_ISOC99


268 
	#__USE_ISOC99
 1

	)

271 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200809L

272 
	#__USE_XOPEN2K8
 1

	)

273 #unde‡
_ATFILE_SOURCE


274 
	#_ATFILE_SOURCE
 1

	)

277 #ifdef 
_XOPEN_SOURCE


278 
	#__USE_XOPEN
 1

	)

279 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

280 
	#__USE_XOPEN_EXTENDED
 1

	)

281 
	#__USE_UNIX98
 1

	)

282 #unde‡
_LARGEFILE_SOURCE


283 
	#_LARGEFILE_SOURCE
 1

	)

284 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

285 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

286 
	#__USE_XOPEN2K8
 1

	)

287 
	#__USE_XOPEN2K8XSI
 1

	)

289 
	#__USE_XOPEN2K
 1

	)

290 
	#__USE_XOPEN2KXSI
 1

	)

291 #unde‡
__USE_ISOC95


292 
	#__USE_ISOC95
 1

	)

293 #unde‡
__USE_ISOC99


294 
	#__USE_ISOC99
 1

	)

297 #ifde‡
_XOPEN_SOURCE_EXTENDED


298 
	#__USE_XOPEN_EXTENDED
 1

	)

303 #ifde‡
_LARGEFILE_SOURCE


304 
	#__USE_LARGEFILE
 1

	)

307 #ifde‡
_LARGEFILE64_SOURCE


308 
	#__USE_LARGEFILE64
 1

	)

311 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

312 
	#__USE_FILE_OFFSET64
 1

	)

315 #i‡
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE


316 
	#__USE_MISC
 1

	)

319 #ifdef 
_BSD_SOURCE


320 
	#__USE_BSD
 1

	)

323 #ifdef 
_SVID_SOURCE


324 
	#__USE_SVID
 1

	)

327 #ifdef 
_ATFILE_SOURCE


328 
	#__USE_ATFILE
 1

	)

331 #ifdef 
_GNU_SOURCE


332 
	#__USE_GNU
 1

	)

335 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


336 
	#__USE_REENTRANT
 1

	)

339 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

340 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

341 #i‡
_FORTIFY_SOURCE
 > 1

342 
	#__USE_FORTIFY_LEVEL
 2

	)

344 
	#__USE_FORTIFY_LEVEL
 1

	)

347 
	#__USE_FORTIFY_LEVEL
 0

	)

352 
	~<°dc-¥edef.h
>

360 #unde‡
__GNU_LIBRARY__


361 
	#__GNU_LIBRARY__
 6

	)

365 
	#__GLIBC__
 2

	)

366 
	#__GLIBC_MINOR__
 19

	)

368 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

369 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

372 #i‚de‡
__ASSEMBLER__


373 #i‚de‡
_SYS_CDEFS_H


374 
	~<sys/cdefs.h
>

379 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


380 
	#__USE_LARGEFILE
 1

	)

381 
	#__USE_LARGEFILE64
 1

	)

387 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

388 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

389 && 
deföed
 
	g__exã∫_ölöe


390 
	#__USE_EXTERN_INLINES
 1

	)

398 
	~<gnu/°ubs.h
>

	@/usr/include/getopt.h

19 #i‚de‡
_GETOPT_H


21 #i‚de‡
__√ed_gë›t


22 
	#_GETOPT_H
 1

	)

32 #i‡!
deföed
 
__GNU_LIBRARY__


33 
	~<˘y≥.h
>

36 #i‚de‡
__THROW


37 #i‚de‡
__GNUC_PREREQ


38 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

40 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

41 
	#__THROW
 
	`throw
 ()

	)

43 
	#__THROW


	)

47 #ifdef 
__˝lu•lus


57 *
›èrg
;

71 
›töd
;

76 
›ãº
;

80 
›t›t
;

82 #i‚de‡
__√ed_gë›t


104 
	s›ti⁄


106 c⁄° *
	g«me
;

109 
	ghas_¨g
;

110 *
	gÊag
;

111 
	gvÆ
;

116 
	#no_¨gumít
 0

	)

117 
	#ªquúed_¨gumít
 1

	)

118 
	#›ti⁄Æ_¨gumít
 2

	)

146 #ifde‡
__GNU_LIBRARY__


150 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

151 
__THROW
;

153 #i‡
deföed
 
__√ed_gë›t
 && deföed 
__USE_POSIX2
 \

154 && !
deföed
 
	g__USE_POSIX_IMPLICITLY
 && !deföed 
	g__USE_GNU


158 #ifde‡
__REDIRECT


159 
__REDIRECT_NTH
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

160 c⁄° *
__sh‹t›ts
),

161 
__posix_gë›t
);

163 
__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

164 c⁄° *
__sh‹t›ts
Ë
__THROW
;

165 
	#gë›t
 
__posix_gë›t


	)

169 
gë›t
 ();

172 #i‚de‡
__√ed_gë›t


173 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

174 c⁄° *
__sh‹t›ts
,

175 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

176 
__THROW
;

177 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

178 c⁄° *
__sh‹t›ts
,

179 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

180 
__THROW
;

184 #ifdef 
__˝lu•lus


189 #unde‡
__√ed_gë›t


	@/usr/include/libio.h

28 #i‚de‡
_IO_STDIO_H


29 
	#_IO_STDIO_H


	)

31 
	~<_G_c⁄fig.h
>

33 
	#_IO_Âos_t
 
_G_Âos_t


	)

34 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

35 
	#_IO_size_t
 
size_t


	)

36 
	#_IO_ssize_t
 
__ssize_t


	)

37 
	#_IO_off_t
 
__off_t


	)

38 
	#_IO_off64_t
 
__off64_t


	)

39 
	#_IO_pid_t
 
__pid_t


	)

40 
	#_IO_uid_t
 
__uid_t


	)

41 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

42 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

43 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

44 
	#_IO_va_li°
 
_G_va_li°


	)

45 
	#_IO_wöt_t
 
wöt_t


	)

48 
	#__√ed___va_li°


	)

49 
	~<°d¨g.h
>

50 #ifde‡
__GNUC_VA_LIST


51 #unde‡
_IO_va_li°


52 
	#_IO_va_li°
 
__gnuc_va_li°


	)

55 #i‚de‡
__P


56 
	~<sys/cdefs.h
>

59 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

61 #i‚de‡
EOF


62 
	#EOF
 (-1)

	)

64 #i‚de‡
NULL


65 #i‡
deföed
 
__GNUG__
 && \

66 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

67 
	#NULL
 (
__nuŒ
)

	)

69 #i‡!
deföed
(
__˝lu•lus
)

70 
	#NULL
 ((*)0)

	)

72 
	#NULL
 (0)

	)

77 
	#_IOS_INPUT
 1

	)

78 
	#_IOS_OUTPUT
 2

	)

79 
	#_IOS_ATEND
 4

	)

80 
	#_IOS_APPEND
 8

	)

81 
	#_IOS_TRUNC
 16

	)

82 
	#_IOS_NOCREATE
 32

	)

83 
	#_IOS_NOREPLACE
 64

	)

84 
	#_IOS_BIN
 128

	)

92 
	#_IO_MAGIC
 0xFBAD0000

	)

93 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

94 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

95 
	#_IO_USER_BUF
 1

	)

96 
	#_IO_UNBUFFERED
 2

	)

97 
	#_IO_NO_READS
 4

	)

98 
	#_IO_NO_WRITES
 8

	)

99 
	#_IO_EOF_SEEN
 0x10

	)

100 
	#_IO_ERR_SEEN
 0x20

	)

101 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

102 
	#_IO_LINKED
 0x80

	)

103 
	#_IO_IN_BACKUP
 0x100

	)

104 
	#_IO_LINE_BUF
 0x200

	)

105 
	#_IO_TIED_PUT_GET
 0x400

	)

106 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

107 
	#_IO_IS_APPENDING
 0x1000

	)

108 
	#_IO_IS_FILEBUF
 0x2000

	)

109 
	#_IO_BAD_SEEN
 0x4000

	)

110 
	#_IO_USER_LOCK
 0x8000

	)

112 
	#_IO_FLAGS2_MMAP
 1

	)

113 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

114 #ifde‡
_LIBC


115 
	#_IO_FLAGS2_FORTIFY
 4

	)

117 
	#_IO_FLAGS2_USER_WBUF
 8

	)

118 #ifde‡
_LIBC


119 
	#_IO_FLAGS2_SCANF_STD
 16

	)

120 
	#_IO_FLAGS2_NOCLOSE
 32

	)

121 
	#_IO_FLAGS2_CLOEXEC
 64

	)

125 
	#_IO_SKIPWS
 01

	)

126 
	#_IO_LEFT
 02

	)

127 
	#_IO_RIGHT
 04

	)

128 
	#_IO_INTERNAL
 010

	)

129 
	#_IO_DEC
 020

	)

130 
	#_IO_OCT
 040

	)

131 
	#_IO_HEX
 0100

	)

132 
	#_IO_SHOWBASE
 0200

	)

133 
	#_IO_SHOWPOINT
 0400

	)

134 
	#_IO_UPPERCASE
 01000

	)

135 
	#_IO_SHOWPOS
 02000

	)

136 
	#_IO_SCIENTIFIC
 04000

	)

137 
	#_IO_FIXED
 010000

	)

138 
	#_IO_UNITBUF
 020000

	)

139 
	#_IO_STDIO
 040000

	)

140 
	#_IO_DONT_CLOSE
 0100000

	)

141 
	#_IO_BOOLALPHA
 0200000

	)

144 
_IO_jump_t
; 
	g_IO_FILE
;

147 #ifde‡
_IO_MTSAFE_IO


148 #i‡
deföed
 
__GLIBC__
 && __GLIBC__ >= 2

149 
	~<bôs/°dio-lock.h
>

154 
	t_IO_lock_t
;

160 
	s_IO_m¨kî
 {

161 
_IO_m¨kî
 *
	m_√xt
;

162 
_IO_FILE
 *
	m_sbuf
;

166 
	m_pos
;

168 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

169 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

170 
	mpublic
:

171 
°ªamm¨kî
(
°ªambuf
 *
sb
);

172 ~
°ªamm¨kî
();

173 
ßvög
(Ë{  
	m_•os
 == -2; }

174 
dñè
(
°ªamm¨kî
&);

175 
dñè
();

180 
	e__codecvt_ªsu…


182 
	m__codecvt_ok
,

183 
	m__codecvt_∑πül
,

184 
	m__codecvt_îr‹
,

185 
	m__codecvt_noc⁄v


188 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


191 
	s_IO_codecvt


193 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

194 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

195 
	m__mb°©e_t
 *,

196 c⁄° 
	mwch¨_t
 *,

197 c⁄° 
	mwch¨_t
 *,

198 c⁄° 
	mwch¨_t
 **, *,

200 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

201 
	m__mb°©e_t
 *, *,

203 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

204 
	m__mb°©e_t
 *,

206 c⁄° **, 
	mwch¨_t
 *,

207 
	mwch¨_t
 *, wchar_t **);

208 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

209 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

210 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

211 c⁄° *, c⁄° *, 
	m_IO_size_t
);

212 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

214 
_IO_ic⁄v_t
 
	m__cd_ö
;

215 
_IO_ic⁄v_t
 
	m__cd_out
;

219 
	s_IO_wide_d©a


221 
wch¨_t
 *
	m_IO_ªad_±r
;

222 
wch¨_t
 *
	m_IO_ªad_íd
;

223 
wch¨_t
 *
	m_IO_ªad_ba£
;

224 
wch¨_t
 *
	m_IO_wrôe_ba£
;

225 
wch¨_t
 *
	m_IO_wrôe_±r
;

226 
wch¨_t
 *
	m_IO_wrôe_íd
;

227 
wch¨_t
 *
	m_IO_buf_ba£
;

228 
wch¨_t
 *
	m_IO_buf_íd
;

230 
wch¨_t
 *
	m_IO_ßve_ba£
;

231 
wch¨_t
 *
	m_IO_backup_ba£
;

233 
wch¨_t
 *
	m_IO_ßve_íd
;

235 
__mb°©e_t
 
	m_IO_°©e
;

236 
__mb°©e_t
 
	m_IO_œ°_°©e
;

237 
_IO_codecvt
 
	m_codecvt
;

239 
wch¨_t
 
	m_sh‹tbuf
[1];

241 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

245 
	s_IO_FILE
 {

246 
	m_Êags
;

247 
	#_IO_fûe_Êags
 
_Êags


	)

251 * 
	m_IO_ªad_±r
;

252 * 
	m_IO_ªad_íd
;

253 * 
	m_IO_ªad_ba£
;

254 * 
	m_IO_wrôe_ba£
;

255 * 
	m_IO_wrôe_±r
;

256 * 
	m_IO_wrôe_íd
;

257 * 
	m_IO_buf_ba£
;

258 * 
	m_IO_buf_íd
;

260 *
	m_IO_ßve_ba£
;

261 *
	m_IO_backup_ba£
;

262 *
	m_IO_ßve_íd
;

264 
_IO_m¨kî
 *
	m_m¨kîs
;

266 
_IO_FILE
 *
	m_chaö
;

268 
	m_fûío
;

270 
	m_blksize
;

272 
	m_Êags2
;

274 
_IO_off_t
 
	m_ﬁd_off£t
;

276 
	#__HAVE_COLUMN


	)

278 
	m_cur_cﬁumn
;

279 sig√d 
	m_vèbÀ_off£t
;

280 
	m_sh‹tbuf
[1];

284 
_IO_lock_t
 *
	m_lock
;

285 #ifde‡
_IO_USE_OLD_IO_FILE


288 
	s_IO_FILE_com∂ëe


290 
_IO_FILE
 
	m_fûe
;

292 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

293 
_IO_off64_t
 
	m_off£t
;

294 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


296 
_IO_codecvt
 *
	m_codecvt
;

297 
_IO_wide_d©a
 *
	m_wide_d©a
;

298 
_IO_FILE
 *
	m_‰ìªs_li°
;

299 *
	m_‰ìªs_buf
;

300 
size_t
 
	m_‰ìªs_size
;

302 *
	m__∑d1
;

303 *
	m__∑d2
;

304 *
	m__∑d3
;

305 *
	m__∑d4
;

306 
size_t
 
	m__∑d5
;

308 
	m_mode
;

310 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

314 #i‚de‡
__˝lu•lus


315 
_IO_FILE
 
	t_IO_FILE
;

318 
	g_IO_FILE_∂us
;

320 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

321 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

322 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

323 #i‚de‡
_LIBC


324 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

325 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

326 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

328 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

329 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

330 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

338 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

346 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, c⁄° *
	t__buf
,

347 
	tsize_t
 
	t__n
);

355 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

358 
	t__io_˛o£_‚
 (*
	t__cookõ
);

361 #ifde‡
_GNU_SOURCE


363 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

364 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

365 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

366 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

371 
__io_ªad_‚
 *
	mªad
;

372 
__io_wrôe_‚
 *
	mwrôe
;

373 
__io_£ek_‚
 *
	m£ek
;

374 
__io_˛o£_‚
 *
	m˛o£
;

375 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

376 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

378 
	g_IO_cookõ_fûe
;

381 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

382 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

386 #ifde‡
__˝lu•lus


390 
__undîÊow
 (
_IO_FILE
 *);

391 
__uÊow
 (
_IO_FILE
 *);

392 
__ovîÊow
 (
_IO_FILE
 *, );

393 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


394 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

395 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

396 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

399 #i‡ 
__GNUC__
 >= 3

400 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

402 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

405 
	#_IO_gëc_u∆ocked
(
_Â
) \

406 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

407 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

408 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

409 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

410 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

411 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

412 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

413 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

414 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

415 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

417 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


418 
	#_IO_gëwc_u∆ocked
(
_Â
) \

419 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

420 || ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 \

421 >(
_Â
)->
_wide_d©a
->
_IO_ªad_íd
), 0) \

422 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

423 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

424 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

425 || ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

426 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
), 0) \

427 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

428 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

431 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

432 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

434 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

435 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

436 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

437 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

439 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

442 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

443 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

445 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

446 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

447 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

449 #ifde‡
_IO_MTSAFE_IO


450 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

451 
	#_IO_Êockfûe
(
_Â
) \

452 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

453 
	#_IO_fu∆ockfûe
(
_Â
) \

454 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

456 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

457 
	#_IO_Êockfûe
(
_Â
Ë

	)

458 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

459 
	#_IO_·rylockfûe
(
_Â
Ë

	)

460 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

461 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

464 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

465 
_IO_va_li°
, *
__ª°ri˘
);

466 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

467 
_IO_va_li°
);

468 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

469 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

471 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

472 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

474 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

476 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


477 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

478 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

479 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

480 #i‡
__GNUC__
 >= 2

483 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


484 
	~<shlib-com∑t.h
>

485 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

486 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

487 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

488 c⁄° 
_IO_°dö_u£d
;

489 
wók_exã∫
 (
_IO_°dö_u£d
);

492 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


493 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

497 
	#_IO_fwide
(
__Â
, 
__mode
) \

498 ({ 
__ªsu…
 = (
__mode
); \

499 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

501 i‡((
__Â
)->
_mode
 == 0) \

503 (
__Â
)->
_mode
 = -1; \

504 
__ªsu…
 = (
__Â
)->
_mode
; \

506 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

507 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

509 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

510 
__ªsu…
; })

	)

513 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

514 
_IO_va_li°
, *
__ª°ri˘
);

515 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

516 
_IO_va_li°
);

517 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

518 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

521 #ifde‡
__LDBL_COMPAT


522 
	~<bôs/libio-ldbl.h
>

525 #ifde‡
__˝lu•lus


	@/usr/include/sched.h

19 #i‚def 
_SCHED_H


20 
	#_SCHED_H
 1

	)

22 
	~<„©uªs.h
>

25 
	~<bôs/ty≥s.h
>

27 
	#__√ed_size_t


	)

28 
	~<°ddef.h
>

30 
	#__√ed_time_t


	)

31 
	#__√ed_time•ec


	)

32 
	~<time.h
>

34 #i‚de‡
__pid_t_deföed


35 
__pid_t
 
	tpid_t
;

36 
	#__pid_t_deföed


	)

41 
	~<bôs/sched.h
>

43 
	#sched_¥i‹ôy
 
__sched_¥i‹ôy


	)

46 
__BEGIN_DECLS


49 
	$sched_£ç¨am
 (
__pid_t
 
__pid
, c⁄° 
sched_∑øm
 *
__∑øm
)

50 
__THROW
;

53 
	$sched_gë∑øm
 (
__pid_t
 
__pid
, 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

56 
	$sched_£tscheduÀr
 (
__pid_t
 
__pid
, 
__pﬁicy
,

57 c⁄° 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

60 
	$sched_gëscheduÀr
 (
__pid_t
 
__pid
Ë
__THROW
;

63 
	$sched_yõld
 (Ë
__THROW
;

66 
	$sched_gë_¥i‹ôy_max
 (
__Æg‹ôhm
Ë
__THROW
;

69 
	$sched_gë_¥i‹ôy_mö
 (
__Æg‹ôhm
Ë
__THROW
;

72 
	$sched_º_gë_öãrvÆ
 (
__pid_t
 
__pid
, 
time•ec
 *
__t
Ë
__THROW
;

75 #ifde‡
__USE_GNU


77 
	#CPU_SETSIZE
 
__CPU_SETSIZE


	)

78 
	#CPU_SET
(
˝u
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

79 
	#CPU_CLR
(
˝u
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

80 
	#CPU_ISSET
(
˝u
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (˝u,  (
˝u_£t_t
), \

81 
˝u£ç
)

	)

82 
	#CPU_ZERO
(
˝u£ç
Ë
	`__CPU_ZERO_S
 ( (
˝u_£t_t
), cpu£ç)

	)

83 
	#CPU_COUNT
(
˝u£ç
Ë
	`__CPU_COUNT_S
 ( (
˝u_£t_t
), cpu£ç)

	)

85 
	#CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u, sësize, cpu£ç)

	)

86 
	#CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u, sësize, cpu£ç)

	)

87 
	#CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (cpu, setsize, \

88 
˝u£ç
)

	)

89 
	#CPU_ZERO_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_ZERO_S
 (£tsize, cpu£ç)

	)

90 
	#CPU_COUNT_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_COUNT_S
 (£tsize, cpu£ç)

	)

92 
	#CPU_EQUAL
(
˝u£ç1
, 
˝u£ç2
) \

93 
	`__CPU_EQUAL_S
 ( (
˝u_£t_t
), 
˝u£ç1
, 
˝u£ç2
)

	)

94 
	#CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

95 
	`__CPU_EQUAL_S
 (
£tsize
, 
˝u£ç1
, 
˝u£ç2
)

	)

97 
	#CPU_AND
(
de°£t
, 
§c£t1
, 
§c£t2
) \

98 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

99 
	#CPU_OR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

100 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

101 
	#CPU_XOR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

102 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

103 
	#CPU_AND_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

104 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

105 
	#CPU_OR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

106 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

107 
	#CPU_XOR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

108 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

110 
	#CPU_ALLOC_SIZE
(
cou¡
Ë
	`__CPU_ALLOC_SIZE
 (cou¡)

	)

111 
	#CPU_ALLOC
(
cou¡
Ë
	`__CPU_ALLOC
 (cou¡)

	)

112 
	#CPU_FREE
(
˝u£t
Ë
	`__CPU_FREE
 (˝u£t)

	)

116 
	$sched_£èfföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

117 c⁄° 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

120 
	$sched_gëafföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

121 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

124 
__END_DECLS


	@/usr/include/xlocale.h

20 #i‚de‡
_XLOCALE_H


21 
	#_XLOCALE_H
 1

	)

27 
	s__loˇÀ_°ru˘


30 
__loˇÀ_d©a
 *
	m__loˇÀs
[13];

33 c⁄° *
	m__˘y≥_b
;

34 c⁄° *
	m__˘y≥_tﬁowî
;

35 c⁄° *
	m__˘y≥_touµî
;

38 c⁄° *
	m__«mes
[13];

39 } *
	t__loˇÀ_t
;

42 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


12 
	#__√ed_wch¨_t


	)

14 
	#__√ed_NULL


	)

15 
	~<°ddef.h
>

16 
	#__√ed_mb°©e_t


	)

17 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


18 
	#__√ed_wöt_t


	)

20 
	~<wch¨.h
>

23 
__off_t
 
	m__pos
;

24 
__mb°©e_t
 
	m__°©e
;

25 } 
	t_G_Âos_t
;

28 
__off64_t
 
	m__pos
;

29 
__mb°©e_t
 
	m__°©e
;

30 } 
	t_G_Âos64_t
;

31 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


32 
	~<gc⁄v.h
>

35 
__gc⁄v_öfo
 
	m__cd
;

38 
__gc⁄v_öfo
 
	m__cd
;

39 
__gc⁄v_°ï_d©a
 
	m__d©a
;

40 } 
	m__comböed
;

41 } 
	t_G_ic⁄v_t
;

46 
	#_G_va_li°
 
__gnuc_va_li°


	)

48 
	#_G_HAVE_MMAP
 1

	)

49 
	#_G_HAVE_MREMAP
 1

	)

51 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

54 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

56 
	#_G_BUFSIZ
 8192

	)

	@/usr/include/stdc-predef.h

18 #i‚def 
_STDC_PREDEF_H


19 
	#_STDC_PREDEF_H
 1

	)

36 #ifde‡
__GCC_IEC_559


37 #i‡
__GCC_IEC_559
 > 0

38 
	#__STDC_IEC_559__
 1

	)

41 
	#__STDC_IEC_559__
 1

	)

44 #ifde‡
__GCC_IEC_559_COMPLEX


45 #i‡
__GCC_IEC_559_COMPLEX
 > 0

46 
	#__STDC_IEC_559_COMPLEX__
 1

	)

49 
	#__STDC_IEC_559_COMPLEX__
 1

	)

54 
	#__STDC_ISO_10646__
 201103L

	)

57 
	#__STDC_NO_THREADS__
 1

	)

	@/usr/include/gconv.h

22 #i‚de‡
_GCONV_H


23 
	#_GCONV_H
 1

	)

25 
	~<„©uªs.h
>

26 
	#__√ed_mb°©e_t


	)

27 
	#__√ed_wöt_t


	)

28 
	~<wch¨.h
>

29 
	#__√ed_size_t


	)

30 
	#__√ed_wch¨_t


	)

31 
	~<°ddef.h
>

34 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

39 
	m__GCONV_OK
 = 0,

40 
	m__GCONV_NOCONV
,

41 
	m__GCONV_NODB
,

42 
	m__GCONV_NOMEM
,

44 
	m__GCONV_EMPTY_INPUT
,

45 
	m__GCONV_FULL_OUTPUT
,

46 
	m__GCONV_ILLEGAL_INPUT
,

47 
	m__GCONV_INCOMPLETE_INPUT
,

49 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

50 
	m__GCONV_INTERNAL_ERROR


57 
	m__GCONV_IS_LAST
 = 0x0001,

58 
	m__GCONV_IGNORE_ERRORS
 = 0x0002,

59 
	m__GCONV_SWAP
 = 0x0004

64 
	g__gc⁄v_°ï
;

65 
	g__gc⁄v_°ï_d©a
;

66 
	g__gc⁄v_lﬂded_obje˘
;

67 
	g__gc⁄v_å™s_d©a
;

71 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

73 **, 
	tsize_t
 *, , );

76 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

79 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

80 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

84 (*
	t__gc⁄v_å™s_f˘
Ë(
	t__gc⁄v_°ï
 *,

85 
	t__gc⁄v_°ï_d©a
 *, *,

89 
	tsize_t
 *);

92 (*
	t__gc⁄v_å™s_c⁄ãxt_f˘
) (*, const *,

97 (*
	t__gc⁄v_å™s_quîy_f˘
) (const *, const ***,

98 
	tsize_t
 *);

101 (*
	t__gc⁄v_å™s_öô_f˘
) (**, const *);

102 (*
	t__gc⁄v_å™s_íd_f˘
) (*);

104 
	s__gc⁄v_å™s_d©a


107 
__gc⁄v_å™s_f˘
 
__å™s_f˘
;

108 
__gc⁄v_å™s_c⁄ãxt_f˘
 
__å™s_c⁄ãxt_f˘
;

109 
__gc⁄v_å™s_íd_f˘
 
__å™s_íd_f˘
;

110 *
__d©a
;

111 
__gc⁄v_å™s_d©a
 *
__√xt
;

116 
	s__gc⁄v_°ï


118 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

119 c⁄° *
__mod«me
;

121 
__cou¡î
;

123 *
__‰om_«me
;

124 *
__to_«me
;

126 
__gc⁄v_f˘
 
__f˘
;

127 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

128 
__gc⁄v_öô_f˘
 
__öô_f˘
;

129 
__gc⁄v_íd_f˘
 
__íd_f˘
;

133 
__mö_√eded_‰om
;

134 
__max_√eded_‰om
;

135 
__mö_√eded_to
;

136 
__max_√eded_to
;

139 
__°©eful
;

141 *
__d©a
;

146 
	s__gc⁄v_°ï_d©a


148 *
__outbuf
;

149 *
__outbu„nd
;

153 
__Êags
;

157 
__övoˇti⁄_cou¡î
;

161 
__öã∫Æ_u£
;

163 
__mb°©e_t
 *
__°©ï
;

164 
__mb°©e_t
 
__°©e
;

168 
__gc⁄v_å™s_d©a
 *
__å™s
;

173 
	s__gc⁄v_öfo


175 
size_t
 
__n°ïs
;

176 
__gc⁄v_°ï
 *
__°ïs
;

177 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

178 } *
	t__gc⁄v_t
;

	@/usr/include/wchar.h

23 #i‚de‡
_WCHAR_H


25 #i‡!
deföed
 
__√ed_mb°©e_t
 && !deföed 
__√ed_wöt_t


26 
	#_WCHAR_H
 1

	)

27 
	~<„©uªs.h
>

30 #ifde‡
_WCHAR_H


32 
	#__√ed___FILE


	)

33 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


34 
	#__√ed_FILE


	)

36 
	~<°dio.h
>

38 
	#__√ed___va_li°


	)

39 
	~<°d¨g.h
>

41 
	~<bôs/wch¨.h
>

44 
	#__√ed_size_t


	)

45 
	#__√ed_wch¨_t


	)

46 
	#__√ed_NULL


	)

48 #i‡
deföed
 
_WCHAR_H
 || deföed 
__√ed_wöt_t
 || !deföed 
__WINT_TYPE__


49 #unde‡
__√ed_wöt_t


50 
	#__√ed_wöt_t


	)

51 
	~<°ddef.h
>

55 #i‚de‡
_WINT_T


60 
	#_WINT_T


	)

61 
	twöt_t
;

65 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

66 && 
deföed
 
__WINT_TYPE__


67 
__BEGIN_NAMESPACE_STD


68 
__WINT_TYPE__
 
	twöt_t
;

69 
	g__END_NAMESPACE_STD


74 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

75 
	#__CORRECT_ISO_CPP_WCHAR_H_PROTO


	)

79 #i‡(
deföed
 
_WCHAR_H
 || deföed 
__√ed_mb°©e_t
Ë&& !deföed 
____mb°©e_t_deföed


80 
	#____mb°©e_t_deföed
 1

	)

84 
	m__cou¡
;

87 #ifde‡
__WINT_TYPE__


88 
__WINT_TYPE__
 
	m__wch
;

90 
wöt_t
 
	m__wch
;

92 
	m__wchb
[4];

93 } 
	m__vÆue
;

94 } 
	t__mb°©e_t
;

96 #unde‡
__√ed_mb°©e_t


101 #ifde‡
_WCHAR_H


103 #i‚de‡
__mb°©e_t_deföed


104 
__BEGIN_NAMESPACE_C99


106 
__mb°©e_t
 
	tmb°©e_t
;

107 
	g__END_NAMESPACE_C99


108 
	#__mb°©e_t_deföed
 1

	)

111 #ifde‡
__USE_GNU


112 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

115 #i‚de‡
WCHAR_MIN


117 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

118 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

121 #i‚de‡
WEOF


122 
	#WEOF
 (0xffffffffu)

	)

127 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


128 
	~<w˘y≥.h
>

132 
__BEGIN_DECLS


134 
__BEGIN_NAMESPACE_STD


137 
tm
;

138 
__END_NAMESPACE_STD


142 
	$__USING_NAMESPACE_STD
(
tm
)

145 
__BEGIN_NAMESPACE_STD


147 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

150 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

151 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

152 
__THROW
;

155 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

156 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

158 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

159 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

160 
__THROW
;

163 
	$wcscmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
)

164 
__THROW
 
__©åibuã_puª__
;

166 
	$wc¢cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

167 
__THROW
 
__©åibuã_puª__
;

168 
__END_NAMESPACE_STD


170 #ifde‡
__USE_XOPEN2K8


172 
	$wcsˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

175 
	$wc¢ˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

176 
size_t
 
__n
Ë
__THROW
;

180 
	~<xloˇÀ.h
>

182 
	$wcsˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

183 
__loˇÀ_t
 
__loc
Ë
__THROW
;

185 
	$wc¢ˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

186 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

189 
__BEGIN_NAMESPACE_STD


192 
	$wcscﬁl
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

196 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

197 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

198 
__END_NAMESPACE_STD


200 #ifde‡
__USE_XOPEN2K8


206 
	$wcscﬁl_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

207 
__loˇÀ_t
 
__loc
Ë
__THROW
;

212 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

213 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

216 
wch¨_t
 *
	$wcsdup
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

219 
__BEGIN_NAMESPACE_STD


221 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


222 "C++" 
wch¨_t
 *
	$wcschr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

223 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

224 "C++" c⁄° 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

225 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

227 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

228 
__THROW
 
__©åibuã_puª__
;

231 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


232 "C++" 
wch¨_t
 *
	$wc§chr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

233 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

234 "C++" c⁄° 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

235 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

237 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

238 
__THROW
 
__©åibuã_puª__
;

240 
__END_NAMESPACE_STD


242 #ifde‡
__USE_GNU


245 
wch¨_t
 *
	$wcsch∫ul
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__wc
)

246 
__THROW
 
__©åibuã_puª__
;

249 
__BEGIN_NAMESPACE_STD


252 
size_t
 
	$wcsc•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ªje˘
)

253 
__THROW
 
__©åibuã_puª__
;

256 
size_t
 
	$wcs•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

257 
__THROW
 
__©åibuã_puª__
;

259 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


260 "C++" 
wch¨_t
 *
	$wc•brk
 (
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

261 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

262 "C++" c⁄° 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
,

263 c⁄° 
wch¨_t
 *
__ac˚±
)

264 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

266 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

267 
__THROW
 
__©åibuã_puª__
;

270 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


271 "C++" 
wch¨_t
 *
	$wcs°r
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

272 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

273 "C++" c⁄° 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
,

274 c⁄° 
wch¨_t
 *
__√edÀ
)

275 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

277 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

278 
__THROW
 
__©åibuã_puª__
;

282 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

283 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

284 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

287 
size_t
 
	$wc¶í
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

288 
__END_NAMESPACE_STD


290 #ifde‡
__USE_XOPEN


292 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


293 "C++" 
wch¨_t
 *
	$wcswcs
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

294 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

295 "C++" c⁄° 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
,

296 c⁄° 
wch¨_t
 *
__√edÀ
)

297 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

299 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

300 
__THROW
 
__©åibuã_puª__
;

304 #ifde‡
__USE_XOPEN2K8


306 
size_t
 
	$wc¢Àn
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

307 
__THROW
 
__©åibuã_puª__
;

311 
__BEGIN_NAMESPACE_STD


313 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


314 "C++" 
wch¨_t
 *
	$wmemchr
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

315 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

316 "C++" c⁄° 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
,

317 
size_t
 
__n
)

318 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

320 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

321 
__THROW
 
__©åibuã_puª__
;

325 
	$wmemcmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

326 
__THROW
 
__©åibuã_puª__
;

329 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

330 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

334 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

335 
__THROW
;

338 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

339 
__END_NAMESPACE_STD


341 #ifde‡
__USE_GNU


344 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

345 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

346 
__THROW
;

350 
__BEGIN_NAMESPACE_STD


353 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

357 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

361 
	$mbsöô
 (c⁄° 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

365 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

366 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

367 
mb°©e_t
 *
__ª°ri˘
 
__p
Ë
__THROW
;

370 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

371 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

374 
size_t
 
	$__mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

375 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

376 
size_t
 
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

377 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

378 
__END_NAMESPACE_STD


380 #ifde‡
__USE_EXTERN_INLINES


386 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

387 
__exã∫_ölöe
 
wöt_t


388 
	`__NTH
 (
	$btowc
 (
__c
))

389 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

390 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

392 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

393 
__exã∫_ölöe
 

394 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

395 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

396 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

398 
__exã∫_ölöe
 
size_t


399 
__NTH
 (
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

400 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

401 {  (
__ps
 !
NULL


402 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

405 
__BEGIN_NAMESPACE_STD


408 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

409 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

410 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

414 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

415 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

416 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

417 
__END_NAMESPACE_STD


420 #ifdef 
__USE_XOPEN2K8


423 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

424 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

425 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

429 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

430 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

431 
size_t
 
__nwc
, size_à
__Àn
,

432 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

437 #ifde‡
__USE_XOPEN


439 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

443 
	$wcswidth
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

447 
__BEGIN_NAMESPACE_STD


450 
	$wc°od
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

451 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

452 
__END_NAMESPACE_STD


454 #ifde‡
__USE_ISOC99


455 
__BEGIN_NAMESPACE_C99


457 
	$wc°of
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

458 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

459 
	$wc°ﬁd
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

460 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

461 
__END_NAMESPACE_C99


465 
__BEGIN_NAMESPACE_STD


468 
	$wc°ﬁ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

469 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

473 
	$wc°oul
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

474 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

475 
__THROW
;

476 
__END_NAMESPACE_STD


478 #ifde‡
__USE_ISOC99


479 
__BEGIN_NAMESPACE_C99


482 
__exãnsi⁄__


483 
	$wc°ﬁl
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

484 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

485 
__THROW
;

489 
__exãnsi⁄__


490 
	$wc°ouŒ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

491 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

492 
__ba£
Ë
__THROW
;

493 
__END_NAMESPACE_C99


496 #ifde‡
__USE_GNU


499 
__exãnsi⁄__


500 
	$wc°oq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

501 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

502 
__THROW
;

506 
__exãnsi⁄__


507 
	$wc°ouq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

508 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

509 
__ba£
Ë
__THROW
;

512 #ifde‡
__USE_GNU


526 
	~<xloˇÀ.h
>

530 
	$wc°ﬁ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

531 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

532 
__loˇÀ_t
 
__loc
Ë
__THROW
;

534 
	$wc°oul_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

535 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

536 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

538 
__exãnsi⁄__


539 
	$wc°ﬁl_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

540 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

541 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

543 
__exãnsi⁄__


544 
	$wc°ouŒ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

545 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

546 
__ba£
, 
__loˇÀ_t
 
__loc
)

547 
__THROW
;

549 
	$wc°od_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

550 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

551 
__THROW
;

553 
	$wc°of_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

554 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

555 
__THROW
;

557 
	$wc°ﬁd_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

558 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

559 
__loˇÀ_t
 
__loc
Ë
__THROW
;

563 #ifde‡
__USE_XOPEN2K8


566 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

567 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

571 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

572 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

573 
__THROW
;

580 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

583 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


584 
__BEGIN_NAMESPACE_STD


587 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

594 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

595 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

601 
	`w¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

604 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

605 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

606 
__THROW
 ;

612 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

613 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

614 
__gnuc_va_li°
 
__¨g
)

620 
	`vw¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

621 
__gnuc_va_li°
 
__¨g
)

625 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

626 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

627 
__gnuc_va_li°
 
__¨g
)

628 
__THROW
 ;

635 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

636 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

642 
	`wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

645 
	$swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

646 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

647 
__THROW
 ;

649 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

650 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

651 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

652 #ifde‡
__REDIRECT


656 
	`__REDIRECT
 (
fwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__°ªam
,

657 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

658 
__isoc99_fwsˇnf
)

660 
	`__REDIRECT
 (
wsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

661 
__isoc99_wsˇnf
)

663 
	`__REDIRECT_NTH
 (
swsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

664 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

665 ...), 
__isoc99_swsˇnf
)

668 
	`__isoc99_fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

669 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

670 
	`__isoc99_wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

671 
	$__isoc99_swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

672 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

673 
__THROW
;

674 
	#fwsˇnf
 
__isoc99_fwsˇnf


	)

675 
	#wsˇnf
 
__isoc99_wsˇnf


	)

676 
	#swsˇnf
 
__isoc99_swsˇnf


	)

680 
__END_NAMESPACE_STD


683 #ifde‡
__USE_ISOC99


684 
__BEGIN_NAMESPACE_C99


689 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

690 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

691 
__gnuc_va_li°
 
__¨g
)

697 
	`vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

698 
__gnuc_va_li°
 
__¨g
)

701 
	$vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

702 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

703 
__gnuc_va_li°
 
__¨g
)

704 
__THROW
 ;

706 #i‡!
deföed
 
__USE_GNU
 \

707 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

708 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

709 #ifde‡
__REDIRECT


710 
	`__REDIRECT
 (
vfwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__s
,

711 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

712 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vfwsˇnf
)

714 
	`__REDIRECT
 (
vwsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

715 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vwsˇnf
)

717 
	`__REDIRECT_NTH
 (
vswsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

718 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

719 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vswsˇnf
)

722 
	`__isoc99_vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

723 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

724 
__gnuc_va_li°
 
__¨g
);

725 
	`__isoc99_vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

726 
__gnuc_va_li°
 
__¨g
);

727 
	$__isoc99_vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

728 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

729 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

730 
	#vfwsˇnf
 
__isoc99_vfwsˇnf


	)

731 
	#vwsˇnf
 
__isoc99_vwsˇnf


	)

732 
	#vswsˇnf
 
__isoc99_vswsˇnf


	)

736 
__END_NAMESPACE_C99


740 
__BEGIN_NAMESPACE_STD


745 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

746 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

752 
wöt_t
 
	`gëwch¨
 ();

759 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

760 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

766 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

774 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

775 
__FILE
 *
__ª°ri˘
 
__°ªam
);

781 
	`Âutws
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

782 
__FILE
 *
__ª°ri˘
 
__°ªam
);

789 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

790 
__END_NAMESPACE_STD


793 #ifde‡
__USE_GNU


801 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

802 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

810 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

818 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

827 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

828 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

837 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

838 
__FILE
 *
__ª°ri˘
 
__°ªam
);

846 
	`Âutws_u∆ocked
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

847 
__FILE
 *
__ª°ri˘
 
__°ªam
);

851 
__BEGIN_NAMESPACE_C99


855 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

856 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

857 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

858 
__END_NAMESPACE_C99


860 #ifde‡
__USE_GNU


861 
	~<xloˇÀ.h
>

865 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

866 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

867 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

868 
__loˇÀ_t
 
__loc
Ë
__THROW
;

877 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


878 
	#__√ed_iswxxx


	)

879 
	~<w˘y≥.h
>

883 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


884 
	~<bôs/wch¨2.h
>

887 #ifde‡
__LDBL_COMPAT


888 
	~<bôs/wch¨-ldbl.h
>

891 
__END_DECLS


899 #unde‡
__√ed_mb°©e_t


900 #unde‡
__√ed_wöt_t


	@/usr/include/wctype.h

23 #i‚de‡
_WCTYPE_H


25 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 #i‚de‡
__√ed_iswxxx


29 
	#_WCTYPE_H
 1

	)

32 
	#__√ed_wöt_t


	)

33 
	~<wch¨.h
>

37 #i‚de‡
WEOF


38 
	#WEOF
 (0xffffffffu)

	)

41 #unde‡
__√ed_iswxxx


46 #i‚de‡
__iswxxx_deföed


47 
	#__iswxxx_deföed
 1

	)

49 
__BEGIN_NAMESPACE_C99


52 
	tw˘y≥_t
;

53 
	g__END_NAMESPACE_C99


55 #i‚de‡
_ISwbô


60 
	~<ídün.h
>

61 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


62 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

64 
	#_ISwbô
(
bô
) \

65 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

66 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

67 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

68 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

73 
	m__ISwuµî
 = 0,

74 
	m__ISwlowî
 = 1,

75 
	m__ISwÆpha
 = 2,

76 
	m__ISwdigô
 = 3,

77 
	m__ISwxdigô
 = 4,

78 
	m__ISw•a˚
 = 5,

79 
	m__ISw¥öt
 = 6,

80 
	m__ISwgøph
 = 7,

81 
	m__ISwbœnk
 = 8,

82 
	m__ISw˙ål
 = 9,

83 
	m__ISwpun˘
 = 10,

84 
	m__ISwÆnum
 = 11,

86 
	m_ISwuµî
 = 
_ISwbô
 (
__ISwuµî
),

87 
	m_ISwlowî
 = 
_ISwbô
 (
__ISwlowî
),

88 
	m_ISwÆpha
 = 
_ISwbô
 (
__ISwÆpha
),

89 
	m_ISwdigô
 = 
_ISwbô
 (
__ISwdigô
),

90 
	m_ISwxdigô
 = 
_ISwbô
 (
__ISwxdigô
),

91 
	m_ISw•a˚
 = 
_ISwbô
 (
__ISw•a˚
),

92 
	m_ISw¥öt
 = 
_ISwbô
 (
__ISw¥öt
),

93 
	m_ISwgøph
 = 
_ISwbô
 (
__ISwgøph
),

94 
	m_ISwbœnk
 = 
_ISwbô
 (
__ISwbœnk
),

95 
	m_ISw˙ål
 = 
_ISwbô
 (
__ISw˙ål
),

96 
	m_ISwpun˘
 = 
_ISwbô
 (
__ISwpun˘
),

97 
	m_ISwÆnum
 = 
_ISwbô
 (
__ISwÆnum
)

102 
__BEGIN_DECLS


104 
__BEGIN_NAMESPACE_C99


111 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

117 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

120 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

124 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

128 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

133 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

136 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

141 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

146 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

151 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

156 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

161 #ifde‡
__USE_ISOC99


162 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

171 
w˘y≥_t
 
	$w˘y≥
 (c⁄° *
__¥›îty
Ë
__THROW
;

175 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

176 
__END_NAMESPACE_C99


183 
__BEGIN_NAMESPACE_C99


186 c⁄° 
	t__öt32_t
 *
	tw˘øns_t
;

187 
__END_NAMESPACE_C99


188 #ifde‡
__USE_GNU


189 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

192 
__BEGIN_NAMESPACE_C99


194 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

197 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

198 
__END_NAMESPACE_C99


200 
__END_DECLS


207 #ifde‡
_WCTYPE_H


213 
__BEGIN_DECLS


215 
__BEGIN_NAMESPACE_C99


218 
w˘øns_t
 
	$w˘øns
 (c⁄° *
__¥›îty
Ë
__THROW
;

221 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

222 
__END_NAMESPACE_C99


224 #ifde‡
__USE_XOPEN2K8


226 
	~<xloˇÀ.h
>

230 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

236 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

239 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

243 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

247 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

252 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

255 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

260 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

265 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

270 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

275 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

280 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

284 
w˘y≥_t
 
	$w˘y≥_l
 (c⁄° *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

285 
__THROW
;

289 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

290 
__THROW
;

298 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

301 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

305 
w˘øns_t
 
	$w˘øns_l
 (c⁄° *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

306 
__THROW
;

309 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

310 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

314 
__END_DECLS


	@
1
.
1
/usr/include
57
1157
command/cmd_comm_manage.c
command/cmd_fiscal_manage.c
command/cmd_invoice_manage.c
command/cmd_invoice_ops.c
command/cmd_other_ops.c
command/cmd_system_manage.c
fiscal/tax_card_base.c
fiscal/tax_file_op.c
fiscal/tax_system.c
input/input.c
input/keyboard.c
input/py_dict.h
input/py_engin.c
misc/common.c
misc/error.c
misc/file_core.c
misc/plu.c
misc/power.c
misc/real_time.c
misc/uart.c
print/print-core.c
print/print-flat.c
print/print-flat.h
print/print-roll.c
start_main.c
ui/lcm_api.c
ui/lcm_api.h
ui/ui_api.c
/usr/include/assert.h
/usr/include/ctype.h
/usr/include/errno.h
/usr/include/error.h
/usr/include/fcntl.h
/usr/include/linux/rtc.h
/usr/include/locale.h
/usr/include/math.h
/usr/include/pthread.h
/usr/include/semaphore.h
/usr/include/signal.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/termios.h
/usr/include/time.h
/usr/include/unistd.h
/usr/include/alloca.h
/usr/include/endian.h
/usr/include/features.h
/usr/include/getopt.h
/usr/include/libio.h
/usr/include/sched.h
/usr/include/xlocale.h
/usr/include/_G_config.h
/usr/include/stdc-predef.h
/usr/include/gconv.h
/usr/include/wchar.h
/usr/include/wctype.h
